{"version":3,"file":"index.cjs","sources":["../../../../node_modules/preact/dist/preact.mjs","../../../../node_modules/preact/hooks/dist/hooks.mjs","../../src/components/internal/SecuredFields/lib/constants.ts","../../src/utils/getProp.ts","../../src/core/Errors/constants.ts","../../src/components/internal/SecuredFields/SFP/SFPUtils.ts","../../src/components/internal/SecuredFields/lib/CSF/AbstractCSF.ts","../../src/utils/commonUtils.ts","../../src/components/internal/SecuredFields/lib/utilities/logger.ts","../../src/components/internal/SecuredFields/lib/CSF/extensions/handleConfig.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/getCardGroupTypes.ts","../../src/components/internal/SecuredFields/lib/CSF/extensions/configureCallbacks.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/callbackUtils.ts","../../src/utils/hasOwnProperty.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/processErrors.ts","../../src/components/internal/SecuredFields/lib/CSF/extensions/handleValidation.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/iframes/postMessageToIframe.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/iframes/getIframeContentWin.ts","../../src/components/internal/SecuredFields/lib/CSF/extensions/handleEncryption.ts","../../src/components/internal/SecuredFields/lib/utilities/dom.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/cardType.ts","../../src/utils/listenerUtils.ts","../../src/components/internal/SecuredFields/lib/utilities/commonUtils.ts","../../src/components/internal/SecuredFields/lib/securedField/AbstractSecuredField.ts","../../src/core/Errors/utils.ts","../../src/components/internal/SecuredFields/lib/utilities/addContextTranslations.ts","../../src/components/internal/SecuredFields/lib/securedField/utils/processAriaConfig.ts","../../src/components/internal/SecuredFields/lib/securedField/SecuredField.ts","../../src/components/internal/SecuredFields/lib/securedField/utils/processPlaceholders.ts","../../src/components/internal/SecuredFields/lib/securedField/utils/createIframe.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/iframes/postMessageValidation.ts","../../src/core/Errors/AdyenCheckoutError.ts","../../src/components/internal/SecuredFields/lib/CSF/extensions/createSecuredFields.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/userAgent.ts","../../src/components/internal/SecuredFields/lib/CSF/extensions/handleIOSTouchEvents.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/tabbing/utils.ts","../../src/components/internal/SecuredFields/lib/CSF/extensions/handleTab.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/tabbing/tabScenarioACH.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/tabbing/tabScenarioGiftCard.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/tabbing/tabScenarioKCP.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/tabbing/tabScenarioCreditCard.ts","../../src/components/internal/SecuredFields/lib/CSF/extensions/handleBrandFromBinLookup.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/setFocusOnFrame.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/postMessageToAllIframes.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/processBrand.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/processAutoComplete.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/handleFocus.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/handleIframeConfigFeedback.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/isConfigured.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/validateForm.ts","../../src/components/internal/SecuredFields/lib/CSF/partials/handleBinValue.ts","../../src/components/internal/SecuredFields/lib/CSF/utils/destroySecuredFields.ts","../../src/components/internal/SecuredFields/lib/CSF/CSF.ts","../../src/components/internal/SecuredFields/lib/CSF/initCSF.ts","../../src/components/internal/SecuredFields/utils.ts","../../src/utils/textUtils.ts","../../src/components/internal/SecuredFields/SFP/SecuredFieldsProviderHandlers.ts","../../src/components/internal/SecuredFields/SFP/SecuredFieldsProvider.ts","../../src/components/internal/SecuredFields/SFP/defaultProps.ts","../../src/components/Card/components/CardInput/types.ts","../../src/components/Card/components/CardInput/defaultProps.ts","../../src/components/internal/SocialSecurityNumberBrazil/utils.ts","../../src/components/internal/SocialSecurityNumberBrazil/constants.ts","../../src/components/internal/SocialSecurityNumberBrazil/validate.ts","../../src/utils/validator-utils.ts","../../src/components/Card/components/CardInput/validate.ts","../../src/components/internal/SecuredFields/binLookup/extensions.ts","../../src/components/internal/SecuredFields/binLookup/createCardVariantSwitcher.ts","../../src/utils/Validator/ValidationRuleResult.ts","../../src/utils/Validator/Validator.ts","../../src/utils/useForm/reducer.ts","../../src/utils/useForm/useForm.ts","../../src/components/Card/components/CardInput/layouts.ts","../../src/components/internal/Address/constants.ts","../../src/components/Card/components/CardInput/utils.ts","../../src/components/internal/Address/Specifications.ts","../../../../node_modules/classnames/index.js","../../src/components/internal/Spinner/Spinner.tsx","../../src/components/internal/LoadingWrapper/LoadingWrapper.tsx","../../src/components/Card/components/CardInput/components/CVCHint.tsx","../../src/core/Context/CoreProvider.tsx","../../src/core/Context/useImage.ts","../../src/components/internal/Icon/Icon.tsx","../../src/utils/idGenerator.ts","../../src/components/internal/Icon/constants.ts","../../src/components/internal/FormFields/Field/Field.tsx","../../src/components/Card/components/CardInput/components/DataSfSpan.tsx","../../src/components/Card/components/CardInput/components/FieldLabelAlternative.tsx","../../src/components/Card/components/CardInput/components/CVC.tsx","../../src/components/internal/FormFields/InputBase.tsx","../../src/components/internal/FormFields/InputText.tsx","../../src/components/Card/components/CardInput/components/StoredCardFields.tsx","../../src/components/internal/FormFields/Fieldset/Fieldset.tsx","../../src/components/internal/FormFields/RadioGroup/RadioGroup.tsx","../../src/components/internal/Img/Img.tsx","../../src/components/internal/FormFields/Select/components/SelectButton.tsx","../../src/components/internal/FormFields/Select/components/SelectListItem.tsx","../../src/components/internal/FormFields/Select/components/SelectList.tsx","../../src/utils/uuid.ts","../../src/components/internal/FormFields/Select/constants.ts","../../src/components/internal/FormFields/utils.ts","../../src/components/internal/FormFields/Select/Select.tsx","../../src/components/Card/components/CardInput/components/Installments/Installments.tsx","../../src/utils/isValidURL.ts","../../src/language/utils.ts","../../src/components/internal/DisclaimerMessage/DisclaimerMessage.tsx","../../src/components/Card/components/CardInput/components/StoredCardFieldsWrapper.tsx","../../src/components/Card/components/CardInput/components/BrandIcon.tsx","../../src/components/Card/components/CardInput/components/DualBrandingIcon/DualBrandingIcon.tsx","../../src/components/Card/components/CardInput/components/CardNumber.tsx","../../src/components/Card/components/CardInput/components/ExpirationDate.tsx","../../src/components/Card/components/CardInput/components/AvailableBrands/AvailableBrands.tsx","../../src/components/Card/components/CardInput/components/CardFields.tsx","../../src/components/internal/FormFields/InputTelephone.tsx","../../src/components/Card/components/CardInput/components/KCPAuthentication.tsx","../../src/components/internal/SocialSecurityNumberBrazil/SocialSecurityNumberBrazil.tsx","../../src/components/internal/FormFields/Checkbox/Checkbox.tsx","../../src/components/internal/StoreDetails/StoreDetails.tsx","../../src/components/internal/Address/components/ReadOnlyAddress.tsx","../../src/components/internal/Address/validate.formats.ts","../../src/components/internal/Address/validate.ts","../../src/core/config.ts","../../src/core/Services/http.ts","../../src/core/Services/get-dataset.ts","../../src/components/internal/Address/components/StateField.tsx","../../src/components/internal/Address/components/CountryField.tsx","../../src/components/internal/Address/components/FieldContainer.tsx","../../src/utils/debounce.ts","../../src/components/internal/Address/components/AddressSearch.tsx","../../src/components/internal/Address/Address.tsx","../../src/components/Card/components/CardInput/components/CardHolderName.tsx","../../src/components/Card/components/CardInput/components/CardFieldsWrapper.tsx","../../src/components/Card/components/CardInput/handlers.ts","../../src/utils/arrayUtils.ts","../../src/components/internal/FormInstruction/FormInstruction.tsx","../../src/core/Errors/SRPanelContext.ts","../../src/core/Errors/useSRPanelContext.ts","../../src/utils/hookUtils.ts","../../src/components/Card/components/CardInput/useSRPanelForCardInputErrors.ts","../../src/components/Card/components/CardInput/CardInput.tsx","../../src/utils/browserInfo.ts","../../src/components/internal/SecuredFields/binLookup/triggerBinLookUp.ts","../../src/components/internal/ClickToPay/services/sdks/SrciError.ts","../../src/utils/Script.ts","../../src/components/internal/ClickToPay/services/sdks/AbstractSrcInitiator.ts","../../src/components/internal/ClickToPay/services/sdks/VisaSdk.ts","../../src/components/internal/ClickToPay/services/sdks/MastercardSdk.ts","../../src/utils/promise-util.ts","../../src/components/internal/ClickToPay/services/sdks/SrcSdkLoader.ts","../../src/components/internal/ClickToPay/services/sdks/config.ts","../../src/components/internal/ClickToPay/services/sdks/utils.ts","../../src/components/internal/ClickToPay/models/ShopperCard.ts","../../src/components/internal/ClickToPay/services/utils.ts","../../src/components/internal/ClickToPay/errors/TimeoutError.ts","../../src/components/internal/ClickToPay/services/execute-with-timeout.ts","../../src/components/internal/ClickToPay/services/ClickToPayService.ts","../../src/components/internal/ClickToPay/services/create-clicktopay-service.ts","../../src/components/internal/ClickToPay/context/ClickToPayContext.ts","../../src/components/internal/ClickToPay/context/ClickToPayProvider.tsx","../../src/components/internal/ClickToPay/context/useClickToPayContext.ts","../../src/components/internal/Button/Button.tsx","../../src/components/internal/ClickToPay/components/CtPOneTimePassword/CtPOneTimePasswordInput/validate.ts","../../src/components/internal/ClickToPay/components/CtPOneTimePassword/CtPOneTimePasswordInput/CtPResendOtpLink.tsx","../../src/components/internal/ClickToPay/components/CtPOneTimePassword/CtPOneTimePasswordInput/CtPOneTimePasswordInput.tsx","../../src/components/internal/ClickToPay/components/CtPBrand/CtPBrand.tsx","../../src/components/internal/Modal/useModal.ts","../../src/components/internal/Modal/useTrapFocus.ts","../../src/components/internal/Modal/Modal.tsx","../../src/components/internal/ClickToPay/components/CtPInfo/CtPInfoModal/CtPInfoModal.tsx","../../src/components/internal/ClickToPay/components/CtPInfo/CtPInfo.tsx","../../src/components/internal/ClickToPay/components/CtPSection/CtPLogoutLink.tsx","../../src/components/internal/ClickToPay/components/CtPSection/CtPSection.tsx","../../src/components/internal/ClickToPay/components/CtPOneTimePassword/CtPSaveCookiesCheckbox/CtPSaveCookiesCheckbox.tsx","../../src/utils/isScreenSmall.ts","../../src/components/internal/ClickToPay/components/CtPOneTimePassword/CtPOneTimePassword.tsx","../../src/components/internal/ClickToPay/components/CtPCards/CtPSingleCard/CtPSingleCard.tsx","../../src/components/internal/PayButton/utils.ts","../../src/components/internal/PayButton/components/SecondaryButtonLabel.tsx","../../src/components/internal/PayButton/PayButton.tsx","../../src/utils/isMobile.ts","../../src/components/internal/ClickToPay/components/CtPCards/CtPCardsList/CtPCardsList.tsx","../../src/components/internal/IFrame/Iframe.tsx","../../src/components/internal/ClickToPay/components/CtPCards/CtPCards.tsx","../../src/components/internal/ClickToPay/components/CtPLoader/CtPLoader.tsx","../../src/components/internal/ClickToPay/components/CtPLogin/validate.ts","../../src/components/internal/FormFields/InputEmail.tsx","../../src/components/internal/ClickToPay/components/CtPLogin/CtPLoginInput.tsx","../../src/components/internal/ClickToPay/components/CtPLogin/CtPLogin.tsx","../../src/components/internal/ClickToPay/ClickToPayComponent.tsx","../../src/components/internal/ContentSeparator/ContentSeparator.tsx","../../src/components/Card/components/ClickToPayHolder.tsx","../../src/components/Card/components/ClickToPayWrapper.tsx","../../src/core/Errors/SRPanelProvider.tsx","../../src/components/tx-variants.ts","../../src/core/Analytics/constants.ts","../../src/components/internal/BaseElement/BaseElement.ts","../../src/components/internal/UIElement/utils.ts","../../src/core/Errors/CancelError.ts","../../src/components/internal/UIElement/UIElement.tsx","../../src/components/Card/Card.tsx","../../src/components/Card/Bancontact.ts","../../src/components/CustomCard/CustomCardInput/CustomCardInput.tsx","../../src/components/CustomCard/CustomCard.tsx","../../src/components/ThreeDS2/components/Form/ThreeDS2Form.tsx","../../src/utils/get-process-message-handler.ts","../../src/components/ThreeDS2/constants.ts","../../src/utils/getOrigin.ts","../../src/utils/base64.ts","../../src/components/ThreeDS2/components/utils.ts","../../src/utils/promiseTimeout.ts","../../src/components/ThreeDS2/components/Challenge/DoChallenge3DS2.tsx","../../src/components/ThreeDS2/components/Challenge/PrepareChallenge3DS2.tsx","../../src/components/ThreeDS2/ThreeDS2Challenge.tsx","../../src/components/ThreeDS2/components/DeviceFingerprint/DoFingerprint3DS2.tsx","../../src/components/ThreeDS2/components/DeviceFingerprint/PrepareFingerprint3DS2.tsx","../../src/core/Services/sessions/constants.ts","../../src/components/ThreeDS2/callSubmit3DS2Fingerprint.ts","../../src/components/ThreeDS2/ThreeDS2DeviceFingerprint.tsx","../../src/components/Ach/components/AchInput/components/AchSFInput.tsx","../../src/components/Ach/components/AchInput/components/AchSecuredFields.tsx","../../src/components/Ach/components/AchInput/defaultProps.ts","../../src/components/Ach/components/AchInput/defaultStyles.ts","../../src/components/Ach/components/AchInput/AchInput.tsx","../../src/components/internal/RedirectButton/RedirectButton.tsx","../../src/components/Ach/Ach.tsx","../../src/components/internal/FormFields/ConsentCheckbox/ConsentCheckbox.tsx","../../src/utils/Formatters/formatters.ts","../../src/utils/regex.ts","../../src/components/internal/FormFields/InputDate/utils.ts","../../src/utils/Validator/defaultRules.ts","../../src/components/BacsDD/components/validate.ts","../../src/utils/getErrorMessage.ts","../../src/components/BacsDD/components/BacsInput.tsx","../../src/utils/clipboard.ts","../../src/components/internal/Voucher/Voucher.tsx","../../src/components/internal/Voucher/utils.ts","../../src/components/BacsDD/components/BacsResult.tsx","../../src/components/BacsDD/BacsDD.tsx","../../src/components/internal/IbanInput/specifications.ts","../../src/components/internal/IbanInput/utils.ts","../../src/components/internal/IbanInput/validate.ts","../../src/components/internal/IbanInput/IbanInput.tsx","../../src/components/Sepa/Sepa.tsx","../../src/components/internal/CompanyDetails/ReadOnlyCompanyDetails.tsx","../../src/components/internal/CompanyDetails/validate.ts","../../src/components/internal/CompanyDetails/utils.ts","../../src/components/internal/CompanyDetails/CompanyDetails.tsx","../../src/components/internal/PersonalDetails/ReadOnlyPersonalDetails.tsx","../../src/components/internal/PersonalDetails/validate.ts","../../src/components/internal/PersonalDetails/utils.ts","../../src/components/internal/FormFields/InputDate/InputDate.tsx","../../src/components/internal/PersonalDetails/PersonalDetails.tsx","../../src/components/internal/Address/utils.ts","../../src/components/internal/OpenInvoice/utils.ts","../../src/utils/setFocus.ts","../../src/components/internal/OpenInvoice/OpenInvoice.tsx","../../src/components/internal/OpenInvoice/useSRPanelForOpenInvoiceErrors.ts","../../src/components/helpers/OpenInvoiceContainer/OpenInvoiceContainer.tsx","../../src/components/Affirm/config.ts","../../src/components/Affirm/Affirm.tsx","../../src/components/internal/ConsentCheckboxLabel/ConsentCheckboxLabel.tsx","../../src/components/AfterPay/config.ts","../../src/utils/getConsentUrl.ts","../../src/components/AfterPay/AfterPay.tsx","../../src/components/AfterPay/AfterPayB2B.tsx","../../src/components/Atome/config.ts","../../src/components/Atome/Atome.tsx","../../src/components/FacilyPay/config.ts","../../src/components/FacilyPay/FacilyPay3x.ts","../../src/components/FacilyPay/FacilyPay4x.ts","../../src/components/FacilyPay/FacilyPay6x.ts","../../src/components/FacilyPay/FacilyPay10x.ts","../../src/components/FacilyPay/FacilyPay12x.ts","../../src/components/RatePay/config.ts","../../src/components/RatePay/RatePay.ts","../../src/components/RatePay/RatePayDirectDebit.ts","../../src/components/Riverty/config.ts","../../src/components/Riverty/Riverty.tsx","../../src/components/AmazonPay/config.ts","../../src/utils/constants/currency-decimals.ts","../../src/utils/constants/currency-minor-units.ts","../../src/utils/amount-util.ts","../../src/components/AmazonPay/utils.ts","../../src/components/AmazonPay/services.ts","../../src/components/AmazonPay/components/AmazonPayButton.tsx","../../src/components/AmazonPay/components/ChangePaymentDetailsButton.tsx","../../src/components/AmazonPay/components/OrderButton.tsx","../../src/components/AmazonPay/components/SignOutButton.tsx","../../src/components/AmazonPay/components/AmazonPayComponent.tsx","../../src/components/AmazonPay/defaultProps.ts","../../src/components/AmazonPay/AmazonPay.tsx","../../src/components/ApplePay/components/ApplePayButton.tsx","../../src/components/ApplePay/ApplePayService.ts","../../src/components/ApplePay/payment-request.ts","../../src/components/ApplePay/utils.ts","../../src/components/ApplePay/ApplePay.tsx","../../src/components/ApplePay/defaultProps.ts","../../src/components/CashAppPay/services/types.ts","../../src/components/CashAppPay/components/CashAppComponent.tsx","../../src/components/CashAppPay/services/CashAppService.ts","../../src/components/CashAppPay/services/CashAppSdkLoader.ts","../../src/components/CashAppPay/services/config.ts","../../src/components/CashAppPay/CashAppPay.tsx","../../src/components/CashAppPay/defaultProps.ts","../../src/components/ClickToPay/ClickToPay.tsx","../../src/components/GooglePay/config.ts","../../src/components/GooglePay/requests.ts","../../src/components/GooglePay/utils.ts","../../src/components/GooglePay/GooglePayService.ts","../../src/components/GooglePay/components/GooglePayButton.tsx","../../src/components/GooglePay/defaultProps.ts","../../src/components/GooglePay/GooglePay.tsx","../../src/components/PayPal/config.ts","../../src/components/PayPal/utils/get-paypal-styles.ts","../../src/components/PayPal/components/PaypalButtons.tsx","../../src/components/PayPal/utils/get-paypal-settings.ts","../../src/components/PayPal/utils/get-paypal-locale.ts","../../src/components/PayPal/components/PaypalComponent.tsx","../../src/components/PayPal/utils/get-paypal-url.ts","../../src/components/PayPal/defaultProps.ts","../../src/components/PayPal/constants.ts","../../src/components/PayPal/utils/format-paypal-order-contact-to-adyen-format.ts","../../src/components/PayPal/Paypal.tsx","../../src/components/Boleto/components/BoletoInput/validate.ts","../../src/components/Boleto/components/BoletoInput/utils.ts","../../src/components/internal/SendCopyToEmail/SendCopyToEmail.tsx","../../src/components/internal/SocialSecurityNumberBrazil/BrazilPersonalDetail.tsx","../../src/components/Boleto/components/BoletoInput/BoletoInput.tsx","../../src/components/Boleto/components/BoletoVoucherResult/BoletoVoucherResult.tsx","../../src/components/Boleto/Boleto.tsx","../../src/components/Doku/components/DokuInput/DokuInput.tsx","../../src/components/Doku/components/DokuVoucherResult/DokuVoucherResult.tsx","../../src/components/Doku/Doku.tsx","../../src/components/Oxxo/components/OxxoVoucherResult/OxxoVoucherResult.tsx","../../src/components/Oxxo/Oxxo.tsx","../../src/components/internal/IssuerList/IssuerButtonGroup/IssuerButton.tsx","../../src/components/internal/IssuerList/IssuerButtonGroup/IssuerButtonGroup.tsx","../../src/components/internal/IssuerList/IssuerList.tsx","../../src/utils/get-issuer-image.ts","../../src/components/helpers/IssuerListContainer/IssuerListContainer.tsx","../../src/components/BillDesk/BillDeskOnline.ts","../../src/components/BillDesk/BillDeskWallet.ts","../../src/components/Dotpay/index.ts","../../src/components/EPS/index.ts","../../src/components/MolPayEBanking/MolPayEBankingMY.ts","../../src/components/MolPayEBanking/MolPayEBankingTH.ts","../../src/components/MolPayEBanking/MolPayEBankingVN.ts","../../src/components/OnlineBankingCZ/index.ts","../../src/components/OnlineBankingIN/index.ts","../../src/components/OnlineBankingPL/OnlineBankingPL.tsx","../../src/components/OnlineBankingSK/index.ts","../../src/components/OnlineBankingFI/OnlineBankingFI.tsx","../../src/components/PayByBank/PayByBank.tsx","../../src/components/PayU/PayuCashcard.tsx","../../src/components/PayU/PayuNetBanking.tsx","../../src/components/WalletIN/index.ts","../../src/components/Dragonpay/components/DragonpayInput/DragonpayInput.tsx","../../src/components/Dragonpay/components/DragonpayVoucherResult/DragonpayVoucherResult.tsx","../../src/components/Dragonpay/Dragonpay.tsx","../../src/components/Econtext/validate.ts","../../src/components/Econtext/components/EcontextInput/EcontextInput.tsx","../../src/components/Econtext/components/EcontextVoucherResult/EcontextVoucherResult.tsx","../../src/components/Econtext/Econtext.tsx","../../src/utils/detectInIframeInSameOrigin.ts","../../src/components/Redirect/components/RedirectShopper/RedirectShopper.tsx","../../src/components/Redirect/Redirect.tsx","../../src/components/Giropay/Giropay.tsx","../../src/components/Multibanco/components/MultibancoVoucherResult/MultibancoVoucherResult.tsx","../../src/components/Multibanco/Multibanco.tsx","../../src/components/Twint/Twint.tsx","../../src/components/Vipps/Vipps.ts","../../src/components/Trustly/Trustly.tsx","../../src/components/PayByBankUS/PayByBankUS.tsx","../../src/components/Klarna/constants.ts","../../src/components/Klarna/components/KlarnaWidget/KlarnaWidget.tsx","../../src/components/Klarna/components/KlarnaContainer/KlarnaContainer.tsx","../../src/components/Klarna/KlarnaPayments.tsx","../../src/components/internal/Countdown/utils.ts","../../src/components/internal/Countdown/CountdownA11yReporter.ts","../../src/components/internal/Countdown/useCountdownA11yReporter.ts","../../src/components/internal/Countdown/index.tsx","../../src/core/Services/payment-status.ts","../../src/core/ProcessResponse/process-response.ts","../../src/core/Errors/useA11yReporter.ts","../../src/components/internal/QRLoader/QRLoader.tsx","../../src/utils/useAutoFocus.ts","../../src/components/helpers/QRLoaderContainer/QRLoaderContainer.tsx","../../src/components/BcmcMobile/BcmcMobile.ts","../../src/components/BcmcMobile/config.ts","../../src/components/Pix/PixInput/validate.ts","../../src/components/Pix/PixInput/utils.ts","../../src/components/Pix/PixInput/PixInput.tsx","../../src/components/Pix/Pix.tsx","../../src/components/Swish/Swish.ts","../../src/components/WeChat/WeChat.ts","../../src/components/WeChat/config.ts","../../src/components/PromptPay/PromptPay.ts","../../src/components/PromptPay/config.ts","../../src/components/PayNow/config.ts","../../src/components/internal/Timeline/TimelineWrapper.tsx","../../src/components/internal/Timeline/Timeline.tsx","../../src/utils/useIsMobile.ts","../../src/components/PayNow/components/PayNowIntroduction.tsx","../../src/components/PayNow/components/PayNowInstructions.tsx","../../src/components/PayNow/PayNow.ts","../../src/components/DuitNow/DuitNow.ts","../../src/components/DuitNow/config.ts","../../src/components/PayMe/components/PayMeInstructions.tsx","../../src/components/PayMe/components/PayMeIntroduction.tsx","../../src/components/PayMe/PayMe.ts","../../src/components/Blik/components/BlikInput.tsx","../../src/components/internal/Await/Await.tsx","../../src/components/Blik/config.ts","../../src/components/Blik/Blik.tsx","../../src/components/internal/PhoneInput/validate.ts","../../src/components/internal/PhoneInput/PhoneInput.tsx","../../src/components/MBWay/components/MBWayInput/MBWayInput.tsx","../../src/components/internal/PhoneInput/usePhonePrefixes.ts","../../src/components/MBWay/components/MBWayAwait/config.ts","../../src/components/MBWay/MBWay.tsx","../../src/components/UPI/components/VpaInput/validate.ts","../../src/components/UPI/components/VpaInput/VpaInput.tsx","../../src/components/UPI/components/UPIComponent/constants.ts","../../src/components/internal/SegmentedControl/SegmentedControl.tsx","../../src/components/Dropin/components/PaymentMethod/PaymentMethodIcon.tsx","../../src/components/internal/ExpandButton/ExpandButton.tsx","../../src/components/UPI/components/UPIIntentAppList/UPIIntentAppItem/UPIIntentAppItem.tsx","../../src/components/UPI/components/UPIIntentAppList/UPIIntentAppList.tsx","../../src/components/UPI/components/UPIComponent/UPIComponent.tsx","../../src/components/UPI/components/UPIComponent/useUpiSegmentedControlOptions.ts","../../src/components/UPI/UPI.tsx","../../src/components/ANCV/validate.ts","../../src/components/ANCV/components/ANCVInput.tsx","../../src/components/ANCV/components/ANCVAwait/config.ts","../../src/components/ANCV/ANCV.tsx","../../src/components/internal/Alert/Alert.tsx","../../src/components/Giftcard/components/GiftcardResult.tsx","../../src/components/Giftcard/components/GiftcardNumberField.tsx","../../src/components/Giftcard/components/GiftcardPinField.tsx","../../src/components/Giftcard/components/GiftcardComponent.tsx","../../src/components/Giftcard/components/GiftcardFields.tsx","../../src/components/Giftcard/Giftcard.tsx","../../src/components/MealVoucherFR/components/MealVoucherExpiryField.tsx","../../src/components/MealVoucherFR/components/MealVoucherFields.tsx","../../src/components/MealVoucherFR/MealVoucherFR.tsx","../../src/components/Address/Address.tsx","../../src/components/BankTransfer/components/BankTransferResult/BankTransferResult.tsx","../../src/components/BankTransfer/components/BankTransferInput/BankTransferInput.tsx","../../src/components/BankTransfer/BankTransfer.tsx","../../src/components/Donation/components/CampaignInfo.tsx","../../src/components/Donation/components/CampaignContent.tsx","../../src/components/internal/ButtonGroup/ButtonGroup.tsx","../../src/components/Donation/components/utils.ts","../../src/components/Donation/components/FixedAmounts.tsx","../../src/components/Donation/components/Roundup.tsx","../../src/components/Donation/components/DonationComponent.tsx","../../src/components/Donation/Donation.tsx","../../src/components/Dropin/defaultProps.ts","../../src/components/Dropin/components/PaymentMethod/OrderPaymentMethods.tsx","../../src/components/Dropin/components/PaymentMethod/InstantPaymentMethods.tsx","../../src/components/Dropin/components/PaymentMethod/useBrandLogoConfiguration.ts","../../src/components/Dropin/components/PaymentMethod/PaymentMethodDetails.tsx","../../src/components/Dropin/components/PaymentMethod/DisableOneClickConfirmation.tsx","../../src/components/Dropin/components/PaymentMethod/PaymentMethodBrands/PaymentMethodBrands.tsx","../../src/components/Dropin/components/PaymentMethod/PaymentMethodName.tsx","../../src/components/Dropin/components/PaymentMethod/PaymentMethodItem/PaymentMethodItem.tsx","../../src/components/Dropin/components/PaymentMethod/PaymentMethodsContainer.tsx","../../src/components/Dropin/components/PaymentMethod/PaymentMethodList.tsx","../../src/components/Dropin/components/status/index.ts","../../src/components/Dropin/components/status/Success.tsx","../../src/components/Dropin/components/status/Error.tsx","../../src/components/Dropin/components/DropinComponent.tsx","../../src/core/Services/order-status.ts","../../src/components/Dropin/elements/filters.ts","../../src/components/components-name-map.ts","../../src/components/Dropin/elements/createElements.ts","../../src/components/Dropin/elements/getComponentConfiguration.ts","../../src/components/Dropin/elements/createStoredElements.ts","../../src/components/Dropin/elements/createInstantPaymentElements.ts","../../src/components/Dropin/Dropin.tsx","../../src/components/Dropin/elements/splitPaymentMethods.ts","../../src/components/Dropin/components/utils.ts","../../src/components/PersonalDetails/PersonalDetails.tsx","../../src/language/Language.ts","../../src/core/RiskModule/constants.ts","../../src/core/RiskModule/components/DeviceFingerprint/GetDeviceFingerprint.tsx","../../src/core/RiskModule/components/DeviceFingerprint/DeviceFingerprint.tsx","../../src/core/RiskModule/components/DeviceFingerprint/utils.ts","../../src/core/RiskModule/RiskModule.tsx","../../src/core/ProcessResponse/PaymentMethods/filters.ts","../../src/core/ProcessResponse/PaymentMethods/utils.ts","../../src/core/ProcessResponse/PaymentMethods/PaymentMethods.ts","../../src/core/ProcessResponse/PaymentAction/actionTypes.ts","../../src/utils/Storage.ts","../../src/core/Services/analytics/collect-id.ts","../../src/core/Analytics/EventsQueue.ts","../../src/core/Analytics/utils.ts","../../src/core/Analytics/analyticsPreProcessor.ts","../../src/core/Analytics/Analytics.ts","../../src/core/Services/sessions/make-payment.ts","../../src/core/Services/sessions/submit-details.ts","../../src/core/Services/sessions/setup-session.ts","../../src/core/Services/sessions/check-balance.ts","../../src/core/CheckoutSession/utils.ts","../../src/core/CheckoutSession/CheckoutSession.ts","../../src/core/Services/sessions/create-order.ts","../../src/core/Services/sessions/cancel-order.ts","../../src/core/Context/Resources.ts","../../src/core/Errors/SRMessages.tsx","../../src/core/Errors/SRPanel.tsx","../../src/core/core.registry.ts","../../src/core/core.defaultProps.ts","../../src/core/Environment/constants.ts","../../src/core/Environment/Environment.ts","../../src/core/core.ts","../../src/core/Services/get-translations.ts","../../src/language/constants.ts","../../src/core/ProcessResponse/PaymentAction/PaymentAction.ts","../../src/core/utils.ts","../../src/core/AdyenCheckout.ts"],"sourcesContent":["var n,l,u,t,i,o,r,f,e,c,s,a,h={},p=[],v=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,y=Array.isArray;function d(n,l){for(var u in l)n[u]=l[u];return n}function w(n){var l=n.parentNode;l&&l.removeChild(n)}function _(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return g(l,f,i,o,null)}function g(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u:r,__i:-1,__u:0};return null==r&&null!=l.vnode&&l.vnode(f),f}function m(){return{current:null}}function k(n){return n.children}function b(n,l){this.props=n,this.context=l}function x(n,l){if(null==l)return n.__?x(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?x(n):null}function C(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return C(n)}}function M(n){(!n.__d&&(n.__d=!0)&&i.push(n)&&!P.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(P)}function P(){var n,u,t,o,r,e,c,s;for(i.sort(f);n=i.shift();)n.__d&&(u=i.length,o=void 0,e=(r=(t=n).__v).__e,c=[],s=[],t.__P&&((o=d({},r)).__v=r.__v+1,l.vnode&&l.vnode(o),O(t.__P,o,r,t.__n,t.__P.namespaceURI,32&r.__u?[e]:null,c,null==e?x(r):e,!!(32&r.__u),s),o.__v=r.__v,o.__.__k[o.__i]=o,j(c,o,s),o.__e!=e&&C(o)),i.length>u&&i.sort(f));P.__r=0}function S(n,l,u,t,i,o,r,f,e,c,s){var a,v,y,d,w,_=t&&t.__k||p,g=l.length;for(u.__d=e,$(u,l,_),e=u.__d,a=0;a<g;a++)null!=(y=u.__k[a])&&\"boolean\"!=typeof y&&\"function\"!=typeof y&&(v=-1===y.__i?h:_[y.__i]||h,y.__i=a,O(n,y,v,i,o,r,f,e,c,s),d=y.__e,y.ref&&v.ref!=y.ref&&(v.ref&&N(v.ref,null,y),s.push(y.ref,y.__c||d,y)),null==w&&null!=d&&(w=d),65536&y.__u||v.__k===y.__k?(e&&\"string\"==typeof y.type&&!n.contains(e)&&(e=x(v)),e=I(y,e,n)):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=w}function $(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)r=t+a,null!=(i=n.__k[t]=null==(i=l[t])||\"boolean\"==typeof i||\"function\"==typeof i?null:\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?g(null,i,null,null,null):y(i)?g(k,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?g(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i)?(i.__=n,i.__b=n.__b+1,f=L(i,u,r,s),i.__i=f,o=null,-1!==f&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f==r-1?a=f-r:f==r+1?a++:f>r?s>e-r?a+=f-r:a--:f<r&&a++,f!==t+a&&(i.__u|=65536))):(o=u[r])&&null==o.key&&o.__e&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=x(o)),V(o,o,!1),u[r]=null,s--);if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=x(o)),V(o,o))}function I(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=I(t[i],l,u));return l}n.__e!=l&&(u.insertBefore(n.__e,l||null),l=n.__e);do{l=l&&l.nextSibling}while(null!=l&&8===l.nodeType);return l}function H(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(y(n)?n.some(function(n){H(n,l)}):l.push(n)),l}function L(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type&&0==(131072&e.__u))return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++}}return-1}function T(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||v.test(l)?u:u+\"px\"}function A(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||T(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||T(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/i,\"$1\")),l=l.toLowerCase()in n||\"onFocusOut\"===l||\"onFocusIn\"===l?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=e,n.addEventListener(l,o?s:c,o)):n.removeEventListener(l,o?s:c,o);else{if(\"http://www.w3.org/2000/svg\"==i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!=l&&\"height\"!=l&&\"href\"!=l&&\"list\"!=l&&\"form\"!=l&&\"tabIndex\"!=l&&\"download\"!=l&&\"rowSpan\"!=l&&\"colSpan\"!=l&&\"role\"!=l&&\"popover\"!=l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,\"popover\"==l&&1==u?\"\":u))}}function F(n){return function(u){if(this.l){var t=this.l[u.type+n];if(null==u.t)u.t=e++;else if(u.t<t.u)return;return t(l.event?l.event(u):u)}}}function O(n,u,t,i,o,r,f,e,c,s){var a,h,p,v,w,_,g,m,x,C,M,P,$,I,H,L,T=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l.__b)&&a(u);n:if(\"function\"==typeof T)try{if(m=u.props,x=\"prototype\"in T&&T.prototype.render,C=(a=T.contextType)&&i[a.__c],M=a?C?C.props.value:a.__:i,t.__c?g=(h=u.__c=t.__c).__=h.__E:(x?u.__c=h=new T(m,M):(u.__c=h=new b(m,M),h.constructor=T,h.render=q),C&&C.sub(h),h.props=m,h.state||(h.state={}),h.context=M,h.__n=i,p=h.__d=!0,h.__h=[],h._sb=[]),x&&null==h.__s&&(h.__s=h.state),x&&null!=T.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=d({},h.__s)),d(h.__s,T.getDerivedStateFromProps(m,h.__s))),v=h.props,w=h.state,h.__v=u,p)x&&null==T.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),x&&null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(x&&null==T.getDerivedStateFromProps&&m!==v&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(m,M),!h.__e&&(null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(m,h.__s,M)||u.__v===t.__v)){for(u.__v!==t.__v&&(h.props=m,h.state=h.__s,h.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.forEach(function(n){n&&(n.__=u)}),P=0;P<h._sb.length;P++)h.__h.push(h._sb[P]);h._sb=[],h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(m,h.__s,M),x&&null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(v,w,_)})}if(h.context=M,h.props=m,h.__P=n,h.__e=!1,$=l.__r,I=0,x){for(h.state=h.__s,h.__d=!1,$&&$(u),a=h.render(h.props,h.state,h.context),H=0;H<h._sb.length;H++)h.__h.push(h._sb[H]);h._sb=[]}else do{h.__d=!1,$&&$(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++I<25);h.state=h.__s,null!=h.getChildContext&&(i=d(d({},i),h.getChildContext())),x&&!p&&null!=h.getSnapshotBeforeUpdate&&(_=h.getSnapshotBeforeUpdate(v,w)),S(n,y(L=null!=a&&a.type===k&&null==a.key?a.props.children:a)?L:[L],u,t,i,o,r,f,e,c,s),h.base=u.__e,u.__u&=-161,h.__h.length&&f.push(h),g&&(h.__E=h.__=null)}catch(n){u.__v=null,c||null!=r?(u.__e=e,u.__u|=c?160:32,r[r.indexOf(e)]=null):(u.__e=t.__e,u.__k=t.__k),l.__e(n,u,t)}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=z(t.__e,u,t,i,o,r,f,c,s);(a=l.diffed)&&a(u)}function j(n,u,t){u.__d=void 0;for(var i=0;i<t.length;i++)N(t[i],t[++i],t[++i]);l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function z(l,u,t,i,o,r,f,e,c){var s,a,p,v,d,_,g,m=t.props,k=u.props,b=u.type;if(\"svg\"===b?o=\"http://www.w3.org/2000/svg\":\"math\"===b?o=\"http://www.w3.org/1998/Math/MathML\":o||(o=\"http://www.w3.org/1999/xhtml\"),null!=r)for(s=0;s<r.length;s++)if((d=r[s])&&\"setAttribute\"in d==!!b&&(b?d.localName===b:3===d.nodeType)){l=d,r[s]=null;break}if(null==l){if(null===b)return document.createTextNode(k);l=document.createElementNS(o,b,k.is&&k),r=null,e=!1}if(null===b)m===k||e&&l.data===k||(l.data=k);else{if(r=r&&n.call(l.childNodes),m=t.props||h,!e&&null!=r)for(m={},s=0;s<l.attributes.length;s++)m[(d=l.attributes[s]).name]=d.value;for(s in m)if(d=m[s],\"children\"==s);else if(\"dangerouslySetInnerHTML\"==s)p=d;else if(\"key\"!==s&&!(s in k)){if(\"value\"==s&&\"defaultValue\"in k||\"checked\"==s&&\"defaultChecked\"in k)continue;A(l,s,null,d,o)}for(s in k)d=k[s],\"children\"==s?v=d:\"dangerouslySetInnerHTML\"==s?a=d:\"value\"==s?_=d:\"checked\"==s?g=d:\"key\"===s||e&&\"function\"!=typeof d||m[s]===d||A(l,s,d,m[s],o);if(a)e||p&&(a.__html===p.__html||a.__html===l.innerHTML)||(l.innerHTML=a.__html),u.__k=[];else if(p&&(l.innerHTML=\"\"),S(l,y(v)?v:[v],u,t,i,\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":o,r,f,r?r[0]:t.__k&&x(t,0),e,c),null!=r)for(s=r.length;s--;)null!=r[s]&&w(r[s]);e||(s=\"value\",void 0!==_&&(_!==l[s]||\"progress\"===b&&!_||\"option\"===b&&_!==m[s])&&A(l,s,_,m[s],o),s=\"checked\",void 0!==g&&g!==l[s]&&A(l,s,g,m[s],o))}return l}function N(n,u,t){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,t)}}function V(n,u,t){var i,o;if(l.unmount&&l.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||N(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(n){l.__e(n,u)}i.base=i.__P=null}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&V(i[o],u,t||\"function\"!=typeof n.type);t||null==n.__e||w(n.__e),n.__c=n.__=n.__e=n.__d=void 0}function q(n,l,u){return this.constructor(n,u)}function B(u,t,i){var o,r,f,e;l.__&&l.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],O(t,u=(!o&&i||t).__k=_(k,null,[u]),r||h,h,t.namespaceURI,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),j(f,u,e)}function D(n,l){B(n,l,D)}function E(l,u,t){var i,o,r,f,e=d({},l.props);for(r in l.type&&l.type.defaultProps&&(f=l.type.defaultProps),u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:e[r]=void 0===u[r]&&void 0!==f?f[r]:u[r];return arguments.length>2&&(e.children=arguments.length>3?n.call(arguments,2):t),g(l.type,e,i||l.key,o||l.ref,null)}function G(n,l){var u={__c:l=\"__cC\"+a++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,t;return this.getChildContext||(u=[],(t={})[l]=this,this.getChildContext=function(){return t},this.componentWillUnmount=function(){u=null},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,M(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u&&u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=p.slice,l={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l}throw n}},u=0,t=function(n){return null!=n&&null==n.constructor},b.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=d({},this.state),\"function\"==typeof n&&(n=n(d({},u),this.props)),n&&d(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),M(this))},b.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),M(this))},b.prototype.render=k,i=[],r=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f=function(n,l){return n.__v.__b-l.__v.__b},P.__r=0,e=0,c=F(!1),s=F(!0),a=0;export{b as Component,k as Fragment,E as cloneElement,G as createContext,_ as createElement,m as createRef,_ as h,D as hydrate,t as isValidElement,l as options,B as render,H as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=n,e=c.__b,a=c.__r,v=c.diffed,l=c.__c,m=c.unmount,s=c.__;function d(n,t){c.__h&&c.__h(r,n,o||t),o=0;var u=r.__H||(r.__H={__:[],__h:[]});return n>=u.__.length&&u.__.push({}),u.__[n]}function h(n){return o=1,p(D,n)}function p(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):D(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return!!n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u}e&&e.call(this,n,t,r)},r.shouldComponentUpdate=f}return o.__N||o.__}function y(n,u){var i=d(t++,3);!c.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__H.__h.push(i))}function _(n,u){var i=d(t++,4);!c.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__h.push(i))}function A(n){return o=5,T(function(){return{current:n}},[])}function F(n,t,r){o=6,_(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function T(n,r){var u=d(t++,7);return C(u.__H,r)&&(u.__=n(),u.__H=r,u.__h=n),u.__}function q(n,t){return o=8,T(function(){return n},t)}function x(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function P(n,t){c.useDebugValue&&c.useDebugValue(t?t(n):n)}function b(n){var u=d(t++,10),i=h();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function g(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function j(){for(var n;n=f.shift();)if(n.__P&&n.__H)try{n.__H.__h.forEach(z),n.__H.__h.forEach(B),n.__H.__h=[]}catch(t){n.__H.__h=[],c.__e(t,n.__v)}}c.__b=function(n){r=null,e&&e(n)},c.__=function(n,t){n&&t.__k&&t.__k.__m&&(n.__m=t.__k.__m),s&&s(n,t)},c.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.i=n.__N=void 0})):(i.__h.forEach(z),i.__h.forEach(B),i.__h=[],t=0)),u=r},c.diffed=function(n){v&&v(n);var t=n.__c;t&&t.__H&&(t.__H.__h.length&&(1!==f.push(t)&&i===c.requestAnimationFrame||((i=c.requestAnimationFrame)||w)(j)),t.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.i=void 0})),u=r=null},c.__c=function(n,t){t.some(function(n){try{n.__h.forEach(z),n.__h=n.__h.filter(function(n){return!n.__||B(n)})}catch(r){t.some(function(n){n.__h&&(n.__h=[])}),t=[],c.__e(r,n.__v)}}),l&&l(n,t)},c.unmount=function(n){m&&m(n);var t,r=n.__c;r&&r.__H&&(r.__H.__.forEach(function(n){try{z(n)}catch(n){t=n}}),r.__H=void 0,t&&c.__e(t,r.__v))};var k=\"function\"==typeof requestAnimationFrame;function w(n){var t,r=function(){clearTimeout(u),k&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);k&&(t=requestAnimationFrame(r))}function z(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function B(n){var t=r;n.__c=n.__(),r=t}function C(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function D(n,t){return\"function\"==typeof t?t(n):t}export{q as useCallback,x as useContext,P as useDebugValue,y as useEffect,b as useErrorBoundary,g as useId,F as useImperativeHandle,_ as useLayoutEffect,T as useMemo,p as useReducer,A as useRef,h as useState};\n//# sourceMappingURL=hooks.module.js.map\n","import { CVCPolicyType, DatePolicyType } from './types';\n\nexport const ENCRYPTED = 'encrypted';\n\nexport const ENCRYPTED_CARD_NUMBER = 'encryptedCardNumber';\nexport const ENCRYPTED_EXPIRY_DATE = 'encryptedExpiryDate';\nexport const ENCRYPTED_EXPIRY_MONTH = 'encryptedExpiryMonth';\nexport const ENCRYPTED_EXPIRY_YEAR = 'encryptedExpiryYear';\nexport const ENCRYPTED_SECURITY_CODE = 'encryptedSecurityCode';\nexport const ENCRYPTED_PWD_FIELD = 'encryptedPassword';\nexport const ENCRYPTED_PIN_FIELD = 'encryptedPin';\nexport const ENCRYPTED_BANK_ACCNT_NUMBER_FIELD = 'encryptedBankAccountNumber';\nexport const ENCRYPTED_BANK_LOCATION_FIELD = 'encryptedBankLocationId';\n\nexport const ENCRYPTED_SECURITY_CODE_3_DIGITS = 'encryptedSecurityCode3digits';\nexport const ENCRYPTED_SECURITY_CODE_4_DIGITS = 'encryptedSecurityCode4digits';\n\nexport const GIFT_CARD = 'giftcard';\n\nexport const SF_VERSION = '5.5.0';\n\nexport const DEFAULT_CARD_GROUP_TYPES = ['amex', 'mc', 'visa'];\n\nexport const NON_CREDIT_CARD_TYPE_SECURED_FIELDS = ['ach', GIFT_CARD]; // Maybe, sometime in the future will include 'sepa' & 'sepadirectdebit'\n\n// Credit card (CardInput) related securedFields (based on the data-cse attribute)\nexport const CREDIT_CARD_SF_FIELDS = [\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR,\n    ENCRYPTED_SECURITY_CODE,\n    ENCRYPTED_PWD_FIELD\n    // ENCRYPTED_PIN_FIELD,// probably redundant - it was an alt. name for KCP's encryptedPassword. But maybe has a role to play if we ever encrypt ibans.\n];\n\nexport const OTHER_SF_FIELDS = [ENCRYPTED_BANK_ACCNT_NUMBER_FIELD, ENCRYPTED_BANK_LOCATION_FIELD]; // ACH fields\n\n/** A list of all the data-cse attributes that relate to securedFields (as found in card, giftcard or ach) */\nexport const ALL_SECURED_FIELDS = CREDIT_CARD_SF_FIELDS.concat(OTHER_SF_FIELDS);\n\n// Card components created as: checkout.create({BRAND}) e.g. checkout.create('bcmc')\n// - which are dedicated to a single, core, brand e.g. 'bcmc' BUT which can in effect handle multiple brands e.g. \"bcmc\", \"maestro\", \"visa\"\nexport const DEDICATED_CARD_COMPONENTS = ['bcmc'];\n\nexport const REQUIRED = 'required';\nexport const OPTIONAL = 'optional';\nexport const HIDDEN = 'hidden';\n\nexport const CVC_POLICY_REQUIRED: CVCPolicyType = REQUIRED;\nexport const CVC_POLICY_OPTIONAL: CVCPolicyType = OPTIONAL;\nexport const CVC_POLICY_HIDDEN: CVCPolicyType = HIDDEN;\n\nexport const DATE_POLICY_REQUIRED: DatePolicyType = REQUIRED;\nexport const DATE_POLICY_OPTIONAL: DatePolicyType = OPTIONAL;\nexport const DATE_POLICY_HIDDEN: DatePolicyType = HIDDEN;\n\nexport const DATA_ENCRYPTED_FIELD_ATTR = 'data-cse';\nexport const DATA_INFO = 'data-info';\nexport const DATA_UID = 'data-uid';\n\nexport const BRAND_ICON_UI_EXCLUSION_LIST = ['accel', 'pulse', 'star', 'nyce'];\n\nexport const BRAND_READABLE_NAME_MAP = {\n    visa: 'VISA',\n    mc: 'MasterCard',\n    amex: 'American Express',\n    discover: 'Discover',\n    cup: 'China Union Pay',\n    jcb: 'JCB',\n    diners: 'Diners Club',\n    maestro: 'Maestro',\n    bcmc: 'Bancontact card',\n    bijcard: 'de Bijenkorf Card'\n};\n\nexport const SF_FIELDS_MAP = {\n    [ENCRYPTED_CARD_NUMBER]: 'cardNumber', // ph\n    [ENCRYPTED_EXPIRY_DATE]: 'expiryDate', // ph\n    [ENCRYPTED_SECURITY_CODE]: 'securityCode',\n    [ENCRYPTED_EXPIRY_MONTH]: 'expiryMonth', // ph\n    [ENCRYPTED_EXPIRY_YEAR]: 'expiryYear', // ph\n    //\n    [ENCRYPTED_PWD_FIELD]: 'password',\n    [ENCRYPTED_BANK_ACCNT_NUMBER_FIELD]: 'bankAccountNumber',\n    [ENCRYPTED_BANK_LOCATION_FIELD]: 'bankLocationId',\n    //\n    [ENCRYPTED_SECURITY_CODE_3_DIGITS]: 'securityCodeThreeDigits', // ph\n    [ENCRYPTED_SECURITY_CODE_4_DIGITS]: 'securityCodeFourDigits' // ph\n};\n\n/** time within which we expect to receive a \"configured\" message from a securedField iframe, once it has registered as having loaded */\nexport const SF_CONFIG_TIMEOUT = 6000;\n","/**\n * returns the indicated property of an object, if it exists.\n *\n * @param object - The object to query\n * @param path - The property name or path to the property\n * @returns The value at `obj[p]`.\n\n * @example\n * ```\n *   getProp({x: 100}, 'x'); //=> 100\n *   getProp({}, 'x'); //=> undefined\n * ```\n */\nconst getProp = (object: any, path: string): any => {\n    const splitPath = path.split('.');\n    const reducer = (xs, x) => (xs && xs[x] ? xs[x] : undefined);\n\n    return splitPath.reduce(reducer, object);\n};\n\nexport default getProp;\n","import {\n    ENCRYPTED_BANK_ACCNT_NUMBER_FIELD,\n    ENCRYPTED_BANK_LOCATION_FIELD,\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR,\n    ENCRYPTED_PWD_FIELD,\n    ENCRYPTED_SECURITY_CODE\n} from '../../components/internal/SecuredFields/lib/constants';\n\nexport const ARIA_ERROR_SUFFIX = '-ariaError';\nexport const ARIA_CONTEXT_SUFFIX = '-ariaContext';\n\nexport const ERROR_ACTION_FOCUS_FIELD = 'focusField';\nexport const ERROR_ACTION_BLUR_SCENARIO = 'notValidating:blurScenario';\nexport const ERROR_FIELD_REQUIRED = 'field.error.required';\nexport const ERROR_FIELD_INVALID = 'field.error.invalid';\n\nexport const ERROR_INVALID_FORMAT_EXPECTS = 'invalid.format.expects';\nexport const CREDITCARD_HOLDER_NAME_INVALID = 'creditCard.holderName.invalid';\nexport const CREDITCARD_TAX_NUMBER_INVALID = 'creditCard.taxNumber.invalid';\nexport const BOLETO_SOCIAL_SECURITY_NUMBER_INVALID = 'boleto.socialSecurityNumber.invalid';\n\nexport enum ErrorCodePrefixes {\n    CC_NUM = 'cc.num',\n    CC_DAT = 'cc.dat',\n    CC_MTH = 'cc.mth',\n    CC_YR = 'cc.yr',\n    CC_CVC = 'cc.cvc',\n    KCP_PWD = 'kcp.pwd',\n    ACH_NUM = 'ach.num',\n    ACH_LOC = 'ach.loc'\n}\n\n/**\n * For SecuredFields\n * Human readable error strings mapped to the codes, used as keys, in the translations files\n */\nexport enum SF_ErrorCodes {\n    ERROR_MSG_INCOMPLETE_FIELD = 'err.gen.9100',\n    ERROR_MSG_INVALID_FIELD = 'err.gen.9101',\n\n    ERROR_MSG_LUHN_CHECK_FAILED = `${ErrorCodePrefixes.CC_NUM}.902`,\n    ERROR_MSG_EMPTY_PAN = `${ErrorCodePrefixes.CC_NUM}.900`,\n    ERROR_MSG_UNSUPPORTED_CARD_ENTERED = `${ErrorCodePrefixes.CC_NUM}.903`,\n    ERROR_MSG_INCORRECTLY_FILLED_PAN = `${ErrorCodePrefixes.CC_NUM}.901`, // 'Enter the complete card number'\n\n    ERROR_MSG_CARD_TOO_OLD = `${ErrorCodePrefixes.CC_DAT}.912`,\n    ERROR_MSG_CARD_TOO_FAR_IN_FUTURE = `${ErrorCodePrefixes.CC_DAT}.913`,\n    ERROR_MSG_CARD_EXPIRES_TOO_SOON = `${ErrorCodePrefixes.CC_DAT}.914`,\n    ERROR_MSG_EMPTY_DATE = `${ErrorCodePrefixes.CC_DAT}.910`,\n    ERROR_MSG_INCORRECTLY_FILLED__DATE = `${ErrorCodePrefixes.CC_DAT}.911`,\n\n    ERROR_MSG_EMPTY_YEAR = `${ErrorCodePrefixes.CC_YR}.917`,\n    ERROR_MSG_INCORRECTLY_FILLED_YEAR = `${ErrorCodePrefixes.CC_YR}.918`,\n\n    // ERROR_MSG_INCORRECTLY_FILLED_MONTH= `cc.mth.916`,\n    ERROR_MSG_EMPTY_MONTH = `${ErrorCodePrefixes.CC_MTH}.915`,\n\n    ERROR_MSG_EMPTY_CVC = `${ErrorCodePrefixes.CC_CVC}.920`,\n    ERROR_MSG_INCORRECTLY_FILLED_CVC = `${ErrorCodePrefixes.CC_CVC}.921`,\n\n    ERROR_MSG_EMPTY_KCP_PWD = `${ErrorCodePrefixes.KCP_PWD}.940`,\n    ERROR_MSG_INCORRECTLY_FILLED_KCP_PWD = `${ErrorCodePrefixes.KCP_PWD}.941`,\n\n    ERROR_MSG_EMPTY_ACH_ACCOUNT_NUMBER = `${ErrorCodePrefixes.ACH_NUM}.945`,\n    ERROR_MSG_INCORRECTLY_FILLED_ACH_ACCOUNT_NUMBER = `${ErrorCodePrefixes.ACH_NUM}.946`,\n\n    ERROR_MSG_EMPTY_ACH_BANK_LOCATION_ID = `${ErrorCodePrefixes.ACH_LOC}.947`,\n    ERROR_MSG_INCORRECTLY_FILLED_ACH_BANK_LOCATION_ID = `${ErrorCodePrefixes.ACH_LOC}.948`\n}\n\nexport const EMPTY_FIELD_ERROR_MESSAGES = {\n    [ENCRYPTED_CARD_NUMBER]: SF_ErrorCodes.ERROR_MSG_EMPTY_PAN,\n    [ENCRYPTED_EXPIRY_DATE]: SF_ErrorCodes.ERROR_MSG_EMPTY_DATE,\n    [ENCRYPTED_EXPIRY_MONTH]: SF_ErrorCodes.ERROR_MSG_EMPTY_MONTH,\n    [ENCRYPTED_EXPIRY_YEAR]: SF_ErrorCodes.ERROR_MSG_EMPTY_YEAR,\n    [ENCRYPTED_SECURITY_CODE]: SF_ErrorCodes.ERROR_MSG_EMPTY_CVC,\n    [ENCRYPTED_PWD_FIELD]: SF_ErrorCodes.ERROR_MSG_EMPTY_KCP_PWD,\n    [ENCRYPTED_BANK_ACCNT_NUMBER_FIELD]: SF_ErrorCodes.ERROR_MSG_EMPTY_ACH_ACCOUNT_NUMBER,\n    [ENCRYPTED_BANK_LOCATION_FIELD]: SF_ErrorCodes.ERROR_MSG_EMPTY_ACH_BANK_LOCATION_ID\n};\n","// ROUTINES USED IN SecuredFieldsProvider.componentDidMount TO DETECT & MAP FIELD NAMES ///////////\nimport {\n    CVC_POLICY_HIDDEN,\n    CVC_POLICY_OPTIONAL,\n    DATE_POLICY_HIDDEN,\n    DATE_POLICY_OPTIONAL,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR,\n    ENCRYPTED_SECURITY_CODE\n} from '../lib/constants';\nimport getProp from '../../../../utils/getProp';\nimport { EMPTY_FIELD_ERROR_MESSAGES } from '../../../../core/Errors/constants';\n\n/**\n * Make an array of encrypted field names based on the value of the 'data-cse' attribute of elements in the rootNode\n */\nexport const getFields = rootNode => {\n    if (rootNode) {\n        return Array.prototype.slice.call(rootNode.querySelectorAll('[data-cse*=\"encrypted\"]')).map(f => f.getAttribute('data-cse'));\n    }\n    return [];\n};\n\n/**\n * If, visually, we're dealing with a single date field (expiryDate) we still need separate entries\n * for expiryMonth & expiryYear - since that is how the values will be delivered from securedFields\n */\nexport const validFieldsReducer = (acc, cur) => {\n    if (cur === ENCRYPTED_EXPIRY_DATE) {\n        acc[ENCRYPTED_EXPIRY_MONTH] = false;\n        acc[ENCRYPTED_EXPIRY_YEAR] = false;\n    } else {\n        acc[cur] = false;\n    }\n\n    return acc;\n};\n// -- end ROUTINES USED IN SecuredFieldsProvider.componentDidMount --------------------------------\n\n// ROUTINES USED IN SecuredFieldsProvider.showValidation TO GENERATE ERRORS ///////////\n/**\n *  If, visually, we're dealing with a single date field (expiryDate) remap the separate entries we have\n *  for the valid states of expiryMonth & expiryYear back to the single key we use to an store an error\n *  i.e `\"encryptedExpiryMonth\" & \"encryptedExpiryYear\" => \"encryptedExpiryDate\"`\n */\nconst mapDateFields = (field, numDateFields) => {\n    const isDateField = field === ENCRYPTED_EXPIRY_MONTH || field === ENCRYPTED_EXPIRY_YEAR;\n    return numDateFields === 1 && isDateField ? ENCRYPTED_EXPIRY_DATE : field;\n};\n\n/**\n * Skip generating an error for an optional field, unless it is already in error\n */\nconst skipOptionalFields = (field, state, fieldNames) => {\n    // console.log('\\n### utils::skipOptionalField3:: examining field=', field);\n    const { isFieldOfType, fieldIsValid } = fieldNames.reduce(\n        (acc, fieldName) => {\n            if (!acc.isFieldOfType) {\n                // console.log('### utils:: fieldName:: ', fieldName, 'match=', field === fieldName);\n                acc.isFieldOfType = field === fieldName;\n                acc.fieldIsValid = !state.errors[fieldName];\n            }\n            return acc;\n        },\n        { isFieldOfType: false, fieldIsValid: false }\n    );\n\n    const policyType = field === ENCRYPTED_SECURITY_CODE ? 'cvcPolicy' : 'expiryDatePolicy';\n\n    const policyOptional = policyType === 'cvcPolicy' ? CVC_POLICY_OPTIONAL : DATE_POLICY_OPTIONAL;\n    const policyHidden = policyType === 'cvcPolicy' ? CVC_POLICY_HIDDEN : DATE_POLICY_HIDDEN;\n\n    // if policy != required\n    return (state[policyType] === policyOptional || state[policyType] === policyHidden) && fieldIsValid && isFieldOfType ? null : field;\n};\n\nexport const getErrorReducer = (numDateFields, state) => (acc, field) => {\n    // We're only interested in the non-valid fields from the state.valid object...\n    let val =\n        state.valid[field] !== true\n            ? mapDateFields(field, numDateFields) // Map the keys we use for the valid state to the key(s) we use for the error state\n            : null;\n\n    // Skip error generation for optional/hidden CVC & Date unless the fields are already in error\n    val = skipOptionalFields(val, state, [ENCRYPTED_SECURITY_CODE, ENCRYPTED_EXPIRY_DATE, ENCRYPTED_EXPIRY_MONTH, ENCRYPTED_EXPIRY_YEAR]);\n\n    // console.log('### utils:::: ############# val=', val);\n\n    if (val && !acc.includes(val)) acc.push(val);\n\n    return acc;\n};\n\n/**\n * Create an object suitable for sending to our handleOnError function\n */\nexport const getErrorObject = (fieldType, rootNode, state) => {\n    // Get existing error OR field is empty in which case get field specific msg OR use default\n    const error = getProp(state, `errors.${fieldType}`) || EMPTY_FIELD_ERROR_MESSAGES[fieldType];\n    return {\n        rootNode,\n        fieldType,\n        error,\n        type: 'card'\n    };\n};\n// -- end ROUTINES USED IN SecuredFieldsProvider.showValidation -----------------------\n","import { CSFSetupObject, CSFConfigObject, CSFCallbacksConfig, CSFStateObject } from './types';\nimport { SFFeedbackObj, SendBrandObject, SendExpiryDateObject, CVCPolicyType, DatePolicyType, SFFieldType } from '../types';\nimport { createSecuredFields } from './extensions/createSecuredFields';\nimport processBrand from './partials/processBrand';\nimport handleBrandFromBinLookup from './extensions/handleBrandFromBinLookup';\n\nabstract class AbstractCSF {\n    // Set in CSF\n    protected callbacks: CSFCallbacksConfig;\n    protected config: CSFConfigObject;\n    protected props: CSFSetupObject;\n    protected state: CSFStateObject;\n    protected validateForm: () => void;\n    protected handleBrandFromBinLookup: typeof handleBrandFromBinLookup;\n    protected callbacksHandler: (callbacksObj: object) => void;\n    protected configHandler: (props: CSFSetupObject) => void;\n    protected createCardSecuredFields: (securedFields: HTMLElement[], cvcPolicy: CVCPolicyType, expiryDatePolicy: DatePolicyType) => Promise<any>;\n    protected createNonCardSecuredFields: (securedFields: HTMLElement[]) => Promise<any>;\n    protected createSecuredFields: typeof createSecuredFields;\n    protected destroySecuredFields: () => void;\n    protected handleIOSTouchEvents: () => void;\n    protected destroyTouchendListener: () => void;\n    protected destroyTouchstartListener: () => void;\n    protected handleBinValue: (pFeedbackObj: SFFeedbackObj) => void;\n    protected handleEncryption: (pFeedbackObj: SFFeedbackObj) => void;\n    protected handleFocus: (pFeedbackObj: SFFeedbackObj) => void;\n    protected handleIframeConfigFeedback: (pFeedbackObj) => boolean;\n    protected handleValidation: (pFeedbackObj: SFFeedbackObj) => void;\n    protected handleSFShiftTab: (fieldType: string) => void;\n    protected handleShiftTab: (fieldType: string) => void;\n    protected isConfigured: () => void;\n    protected postMessageToAllIframes: (pDataObj: object) => void;\n    protected processAutoComplete: (pFeedbackObj: SFFeedbackObj) => void;\n    protected processBrand: typeof processBrand;\n    protected sendBrandToCardSF: (brandObj: SendBrandObject) => void;\n    protected sendExpiryDatePolicyToSF: (dateObj: SendExpiryDateObject) => void;\n    protected setFocusOnFrame: (pFieldType: SFFieldType, doLog?: boolean) => void;\n    protected setupSecuredField: (pItem: HTMLElement) => void;\n    protected touchendListener: (e: Event) => void;\n    protected touchstartListener: () => void;\n    protected hasGenuineTouchEvents: boolean;\n    // Set in createSecuredFields\n    protected encryptedAttrName: string;\n    protected hasRedundantCVCField: boolean;\n    protected isSingleBrandedCard: boolean;\n    protected securityCode: string;\n    // --\n    protected constructor(setupObj: CSFSetupObject) {\n        this.props = setupObj;\n        this.state = {} as any as CSFStateObject;\n\n        // Initialise storage objects\n        this.config = {} as any as CSFConfigObject; // {} as ConfigObject fails in linting\n        this.callbacks = {} as any as CSFCallbacksConfig;\n    }\n}\nexport default AbstractCSF;\n","/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n * @internal\n */\nconst objToString = Object.prototype.toString;\n\n/**\n * Checks if `prop` is classified as an `Array` primitive or object.\n * @internal\n * @param prop - The value to check.\n * @returns Returns `true` if `prop` is correctly classified, else `false`.\n * @example\n * ```\n * isArray([1, 2, 3]);\n * // => true\n *\n * isArray(1);\n * // => false\n * ```\n */\nexport function isArray(prop) {\n    return typeof prop === 'object' && prop !== null && Object.prototype.toString.call(prop) === '[object Array]';\n}\n\n/**\n * The function existy is meant to define the existence of something.\n * Using the loose inequality operator (!=), it is possible to distinguish between null, undefined, and everything else.\n * @internal\n * @param x -\n * @returns\n */\nexport function existy(x) {\n    return x != null;\n}\n\n/**\n * Used to determine if something should be considered a synonym for true\n * NOTE: The number zero is considered “truthy” by design as is '' & `{}`.\n * If you wish to retain the behavior where 0 is a synonym for false, then do not use truthy where you might expect 0\n * So - returns true if something is not false, undefined or null\n * @internal\n * @param x -\n * @returns\n */\nexport function truthy(x) {\n    return x !== false && existy(x);\n}\n\n/**\n * Checks if `value` is object-like.\n * (FROM lodash.3.10.1)\n * @internal\n * @param value - The value to check.\n * @returns Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n    return !!value && typeof value === 'object';\n}\n\n/**\n * @internal\n * Checks if `value` is classified as a `Number` primitive or object.\n * NOTE: `Infinity`, `-Infinity`, and `NaN` are classified as numbers\n * (FROM lodash.3.10.1)\n * @param value - The value to check.\n * @returns Returns `true` if `value` is correctly classified, else `false`.\n * @example\n * ```\n * isNumber(8.4);\n * // => true\n *\n * isNumber(NaN);\n * // => true\n *\n * isNumber('8.4');\n * // => false\n * ```\n */\nfunction isNumber(value) {\n    const numberTag = '[object Number]';\n    return typeof value === 'number' || (isObjectLike(value) && objToString.call(value) === numberTag);\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n * (FROM lodash.3.10.1)\n * @internal\n * @param value - The value to check.\n * @returns Returns `true` if `value` is correctly classified, else `false`.\n * @example\n * ```\n * isString('abc');\n * // => true\n *\n * isString(1);\n * // => false\n * ```\n */\nfunction isString(value) {\n    const stringTag = '[object String]';\n    return typeof value === 'string' || (isObjectLike(value) && objToString.call(value) === stringTag);\n}\n\n/**\n * Returns true if x is:\n * null, undefined, false, 0, NaN, empty object or array, empty string\n * @param x -\n * @example\n * ```\n * falsy(0) // => true\n * falsy('') // => true\n * falsy({}) // => true\n * falsy([]) // => true\n * falsy(false) // => true\n * falsy(NaN) // => true\n * falsy(null) // => true\n * falsy(undefined) // => true\n *\n * falsy(1) // => false\n * falsy('d') // => false\n * falsy({type:\"kin\"}) // => false\n * falsy([6]) // => false\n * falsy(true) // => false\n * ```\n */\nexport function falsy(x) {\n    // Is null, undefined or false\n    if (!truthy(x)) {\n        return true;\n    }\n\n    // = 0 || NaN\n    if (isNumber(x)) {\n        if (x === 0 || Number.isNaN(x)) {\n            return true;\n        }\n    }\n\n    // empty array or string\n    if ((isArray(x) || isString(x)) && x.length === 0) {\n        return true;\n    }\n\n    // empty object\n    if (isObjectLike(x) && Object.keys(x).length === 0) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Inverse of falsy - returns true if x is NOT null, undefined, false, 0, NaN, empty object or array, empty string\n * @param x -\n */\nexport function notFalsy(x) {\n    return !falsy(x);\n}\n\n/**\n * 'Destructures' properties from object - returns a new object only containing those properties that were asked for (including if those properties\n * have values that are falsy: null, undefined, false, '').\n *\n * @param args - property names to select: can be either 'regular' arguments (comma separated list) or an array\n * @returns - an object with a function 'from' that accepts a single argument - the object from which to choose properties.\n * This function returns a new object - a copy of the original but only including the desired properties\n *\n * @example const strippedObj = pick('cardType', 'securityCode').from(cardObject);\n * @example const strippedObj = pick(['cardType', 'securityCode']).from(cardObject);\n */\nexport function pick(...args) {\n    const myArgs = isArray(args[0]) ? args[0] : args;\n    return {\n        from: obj => {\n            return myArgs.map(k => (k in obj ? { [k]: obj[k] } : {})).reduce((res, o) => ({ ...res, ...o }), {});\n        }\n    };\n}\n\n/**\n *'Destructures' properties from object, returning a new object containing all the original objects properties except those that were specifically rejected\n *\n * @param args - property names to reject: can be either 'regular' arguments (comma separated list) or an array\n * @returns - an object with a function 'from' that accepts a single argument - the object from which to reject properties.\n * This function returns a new object - a copy of the original but excluding the selected properties\n *\n * @example const strippedObj = reject('permittedLengths', 'pattern', 'startingRules').from(cardObject);\n * @example const strippedObj = reject(['permittedLengths', 'pattern', 'startingRules']).from(cardObject);\n */\nexport function reject(...args) {\n    const myArgs = isArray(args[0]) ? args[0] : args;\n    return {\n        from: obj => {\n            const vkeys = Object.keys(obj).filter(k => !myArgs.includes(k));\n            return pick(...vkeys).from(obj);\n        }\n    };\n}\n","/**\n * @internal\n * Utility class for logging messages/errors\n * Usage:\n * logger.log('Log message, always visible');\n *\n * For debug only messages:\n * window._b$dl && logger.log('Log message only visible on dev env');\n *\n * Or just use a conditional:\n * ```\n * if (window._b$dl) {\n *     logger.log('Log message only visible on dev env');\n * }\n * ```\n */\n\n/**\n * @internal\n * Logs errors\n * NOTE: changed to 'let' from 'const' for the purpose of running unit tests\n */\n// eslint-disable-next-line prefer-const\nexport let error = typeof window !== 'undefined' && window.console && window.console.error && window.console.error.bind(window.console);\n\n/**\n * @internal\n * Logs info\n */\nexport const info = typeof window !== 'undefined' && window.console && window.console.info && window.console.info.bind(window.console);\n\n/**\n * @internal\n * Logs\n * NOTE: changed to 'let' from 'const' for the purpose of running unit tests\n */\n\nexport let log = typeof window !== 'undefined' && window.console && window.console.log && window.console.log.bind(window.console); // eslint-disable-line\n\n/**\n * @internal\n * Logs warnings\n * NOTE: changed to 'let' from 'const' for the purpose of running unit tests\n */\n\nexport let warn = typeof window !== 'undefined' && window.console && window.console.warn && window.console.warn.bind(window.console); // eslint-disable-line\n","import { getCardGroupTypes } from '../utils/getCardGroupTypes';\nimport { NON_CREDIT_CARD_TYPE_SECURED_FIELDS, SF_VERSION } from '../../constants';\nimport * as logger from '../../utilities/logger';\nimport { CSFSetupObject } from '../types';\n\n/**\n * Parses this.props to set 'config' type vars on this (CSFComp)\n * - properties that just need to be set once, at startup, and then don't change\n *\n * See interface CSFConfigObject in types.ts\n */\nexport function handleConfig(props: CSFSetupObject): void {\n    // --\n    this.config.cardGroupTypes = getCardGroupTypes(props.cardGroupTypes);\n\n    if (process.env.NODE_ENV === 'development' && window._b$dl) {\n        logger.log('### StoreCls::init:: this.config.cardGroupTypes=', this.config.cardGroupTypes);\n    }\n\n    const loadingContext: string = props.loadingContext;\n\n    if (!loadingContext) {\n        logger.warn('WARNING Config :: no loadingContext has been specified!');\n        return;\n    }\n\n    // Ensure passed loadingContext has trailing slash\n    const lastChar = str => str.charAt(str.length - 1);\n    this.config.loadingContext = lastChar(loadingContext) === '/' ? loadingContext : `${loadingContext}/`;\n\n    // Is this for the regular creditCard or for another use-case for securedFields e.g. 'ach' or 'giftcard'\n    this.config.isCreditCardType = NON_CREDIT_CARD_TYPE_SECURED_FIELDS.includes(props.type) === false;\n\n    // Configuration object for individual txVariants - contains styling object values for securedFields inputs\n    this.config.iframeUIConfig = props.iframeUIConfig ?? {};\n\n    // By default CSF is allowed to automatically shift focus from the date to CVC fields - user of CSF must explicitly 'opt-out' to prevent this happening\n    this.config.autoFocus = !(props.autoFocus === false || props.autoFocus === 'false');\n\n    // By default CSF will NOT perform a console.warn when receiving postMessages with origin or numKey mismatches - user of CSF must explicitly 'opt-in' to get this\n    this.config.showWarnings = props.showWarnings === true || props.showWarnings === 'true';\n\n    // By default CSF will strip the trailing separator character from valid credit card numbers - user of CSF must explicitly 'opt-out' to prevent this happening\n    this.config.trimTrailingSeparator = !(props.trimTrailingSeparator === false || props.trimTrailingSeparator === 'false');\n\n    // By default CSF is allowed to add a fix for iOS to force the keypad to retract - user of CSF must explicitly 'opt-out' to prevent this happening\n    this.config.keypadFix = !(props.keypadFix === false || props.keypadFix === 'false');\n\n    // To set the type on the iframe input fields to 'tel' c.f. the default 'text' (with inputmode='numeric')\n    this.config.legacyInputMode = props.legacyInputMode || null;\n\n    // To configure the minimum expiry date to a merchant defined value - this means the card has to be valid until at least this date\n    this.config.minimumExpiryDate = props.minimumExpiryDate || null;\n\n    this.config.sfLogAtStart = window._b$dl === true;\n\n    let sfBundleType: string = this.config.isCreditCardType ? 'card' : props.type;\n    if (sfBundleType.indexOf('sepa') > -1) sfBundleType = 'iban';\n\n    // Add a hash of the origin to ensure urls are different across domains\n    const d = btoa(window.location.origin);\n\n    /**\n     * Unless we are forcing the use of the compat version via card config\n     * - detect Edge vn \\<= 18 & IE11 - who don't support TextEncoder; and use this as an indicator to load a different, compatible, version of SF\n     */\n    const needsJWECompatVersion = props.forceCompat ? true : !(typeof window.TextEncoder === 'function');\n\n    const bundleType = `${sfBundleType}${needsJWECompatVersion ? 'Compat' : ''}`; // e.g. 'card' or 'cardCompat'\n\n    this.config.iframeSrc = `${this.config.loadingContext}securedfields/${props.clientKey}/${SF_VERSION}/securedFields.html?type=${bundleType}&d=${d}`;\n\n    // TODO###### FOR QUICK LOCAL TESTING of sf\n    if (process.env.NODE_ENV === 'development' && process.env.__SF_ENV__ !== 'build') {\n        this.config.iframeSrc = `${process.env.__SF_ENV__}securedFields.${SF_VERSION}.html?type=${sfBundleType}`;\n    }\n    // TODO######\n}\n","import { isArray } from '../../../../../../utils/commonUtils';\nimport { DEFAULT_CARD_GROUP_TYPES } from '../../constants';\n\nexport const getCardGroupTypes = (cardGroupTypes?): string[] =>\n    isArray(cardGroupTypes) && cardGroupTypes.length ? cardGroupTypes : DEFAULT_CARD_GROUP_TYPES;\n","import { CSFCallbacksConfig } from '../types';\n\nconst noop = () => {};\n\nexport function configureCallbacks(callbacksObj: CSFCallbacksConfig = {} as any as CSFCallbacksConfig): void {\n    // --\n    this.callbacks.onLoad = callbacksObj.onLoad ? callbacksObj.onLoad : noop;\n\n    this.callbacks.onConfigSuccess = callbacksObj.onConfigSuccess ? callbacksObj.onConfigSuccess : noop;\n\n    this.callbacks.onFieldValid = callbacksObj.onFieldValid ? callbacksObj.onFieldValid : noop;\n\n    this.callbacks.onAllValid = callbacksObj.onAllValid ? callbacksObj.onAllValid : noop;\n\n    this.callbacks.onBrand = callbacksObj.onBrand ? callbacksObj.onBrand : noop;\n\n    this.callbacks.onError = callbacksObj.onError ? callbacksObj.onError : noop;\n\n    this.callbacks.onFocus = callbacksObj.onFocus ? callbacksObj.onFocus : noop;\n\n    this.callbacks.onBinValue = callbacksObj.onBinValue ? callbacksObj.onBinValue : noop;\n\n    this.callbacks.onAutoComplete = callbacksObj.onAutoComplete ? callbacksObj.onAutoComplete : noop;\n\n    this.callbacks.onAdditionalSFConfig = callbacksObj.onAdditionalSFConfig ? callbacksObj.onAdditionalSFConfig : noop;\n\n    this.callbacks.onAdditionalSFRemoved = callbacksObj.onAdditionalSFRemoved ? callbacksObj.onAdditionalSFRemoved : noop;\n\n    this.callbacks.onTouchstartIOS = callbacksObj.onTouchstartIOS ? callbacksObj.onTouchstartIOS : noop;\n\n    this.callbacks.onKeyPressed = callbacksObj.onKeyPressed ? callbacksObj.onKeyPressed : noop;\n}\n","import { ENCRYPTED_EXPIRY_DATE } from '../../constants';\nimport { CardFieldValidData, EncryptionObj } from '../../types';\n\ninterface CallbackObjectProps {\n    fieldType: string;\n    encryptedFieldName: string;\n    uuid: string;\n    isValid: boolean;\n    txVariant: string;\n    rootNode: HTMLElement;\n}\n\nconst makeCallbackObj = ({ fieldType, encryptedFieldName, uuid, isValid, txVariant, rootNode }: CallbackObjectProps): CardFieldValidData => ({\n    fieldType, // encryptedCardNumber, encryptedSecurityCode, encryptedExpiryDate\n    encryptedFieldName, // encryptedCardNumber, encryptedSecurityCode, encryptedExpiryMonth, encryptedExpiryYear\n    uid: uuid, // card-encrypted-encryptedCardNumber, card-encrypted-encryptedSecurityCode, card-encrypted-month, card-encrypted-year, card-encrypted-encryptedExpiryMonth, card-encrypted-encryptedExpiryYear\n    valid: isValid,\n    type: txVariant,\n    rootNode // A ref to the 'form' element holding the securedFields\n});\n\nexport const makeCallbackObjectsValidation = ({ fieldType, txVariant, rootNode }): CardFieldValidData[] => {\n    // - create callback objects to report the changed valid state of the field\n    const isExpiryDateField: boolean = fieldType === ENCRYPTED_EXPIRY_DATE;\n\n    const callbackObjectsArr: CardFieldValidData[] = [];\n\n    const sepExpiryDateNames: string[] = ['encryptedExpiryMonth', 'encryptedExpiryYear'];\n\n    let i: number;\n    let uuid: string;\n    let encryptedType: string;\n    let encryptedFieldName: string;\n\n    // For expiryDate field we need to remove 2 DOM elements & create 2 objects (relating to month & year)\n    // - for everything else we just need to remove 1 element & create 1 callback object\n    const totalFields: number = isExpiryDateField ? 2 : 1;\n\n    for (i = 0; i < totalFields; i += 1) {\n        encryptedType = isExpiryDateField ? sepExpiryDateNames[i] : fieldType; // encryptedCardNumber, encryptedSecurityCode, encryptedExpiryMonth, encryptedExpiryYear\n\n        uuid = `${txVariant}-encrypted-${encryptedType}`; // card-encrypted-encryptedCardNumber, card-encrypted-encryptedSecurityCode, card-encrypted-encryptedExpiryMonth, card-encrypted-encryptedExpiryYear\n\n        encryptedFieldName = isExpiryDateField ? encryptedType : fieldType; // encryptedCardNumber, encryptedSecurityCode, encryptedExpiryMonth, encryptedExpiryYear\n\n        // Create objects to broadcast valid state\n        // const callbackObj: CardFieldValidData = makeCallbackObj(pFieldType, encryptedFieldName, uuid, false, pTxVariant, pRootNode, null);\n        const callbackObj: CardFieldValidData = makeCallbackObj({\n            fieldType,\n            encryptedFieldName,\n            uuid,\n            isValid: false,\n            txVariant,\n            rootNode\n        } as CallbackObjectProps);\n\n        callbackObjectsArr.push(callbackObj);\n    }\n\n    return callbackObjectsArr;\n};\n\nexport const makeCallbackObjectsEncryption = ({ fieldType, txVariant, rootNode, encryptedObjArr }): CardFieldValidData[] => {\n    let i: number;\n    let uuid: string;\n    let encryptedObj: EncryptionObj;\n    let encryptedFieldName: string;\n    let encryptedBlob: string;\n\n    const callbackObjectsArr: CardFieldValidData[] = [];\n\n    for (i = 0; i < encryptedObjArr.length; i += 1) {\n        encryptedObj = encryptedObjArr[i];\n        encryptedFieldName = encryptedObj.encryptedFieldName;\n        uuid = `${txVariant}-encrypted-${encryptedFieldName}`;\n        encryptedBlob = encryptedObj.blob;\n\n        // Create objects to broadcast valid state\n        // const callbackObj: CardFieldValidData = makeCallbackObj(fieldType, encryptedFieldName, uuid, true, txVariant, rootNode, code);\n        const callbackObj: CardFieldValidData = makeCallbackObj({\n            fieldType,\n            encryptedFieldName,\n            uuid,\n            isValid: true,\n            txVariant,\n            rootNode\n        } as CallbackObjectProps);\n        callbackObj.blob = encryptedBlob;\n\n        callbackObjectsArr.push(callbackObj);\n    }\n\n    return callbackObjectsArr;\n};\n","export function hasOwnProperty(obj = {}, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import { CardErrorData, SFFeedbackObj } from '../../types';\nimport SecuredField from '../../securedField/SecuredField';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\n\ntype RtnType_callbackFn = (obj: CardErrorData) => void;\n\nexport const processErrors = (\n    pFeedbackObj: SFFeedbackObj,\n    securedField: SecuredField,\n    type: string,\n    rootNode: HTMLElement,\n    callbackFn: RtnType_callbackFn\n): CardErrorData => {\n    if (!hasOwnProperty(pFeedbackObj, 'error')) return null;\n\n    const fieldType: string = pFeedbackObj.fieldType;\n\n    const field: SecuredField = securedField;\n\n    // Initialise error callback object\n    const dataObj: CardErrorData = { rootNode, fieldType, error: null, type: null };\n\n    const isError: boolean = pFeedbackObj.error !== '';\n\n    // Error is empty string && field is not already in error: do nothing - don't need to propagate this non-error if the field wasn't already in error\n    // This situation arises when we encrypt a field and trigger an \"error clearing\" event i.e. deleting a character\n    // It also arises when an unsupportedCard (re. binLookup) is entered and the shopper continues to interact with the field (adding or deleting digits)\n    if (!isError && !field.hasError) {\n        return null;\n    }\n\n    // Add props to error callback object\n    dataObj.error = isError ? pFeedbackObj.error : '';\n    dataObj.type = type;\n\n    // Set error state & type on securedField instance\n    field.hasError = isError;\n    field.errorType = dataObj.error;\n\n    callbackFn(dataObj);\n\n    return dataObj;\n};\n","import { makeCallbackObjectsValidation } from '../utils/callbackUtils';\nimport { processErrors } from '../utils/processErrors';\nimport { existy } from '../../../../../../utils/commonUtils';\nimport { ENCRYPTED_SECURITY_CODE, ENCRYPTED_CARD_NUMBER } from '../../constants';\nimport { SFFeedbackObj, CardFieldValidData } from '../../types';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\n\nexport function handleValidation(pFeedbackObj: SFFeedbackObj): void {\n    // --\n    let callbackObjectsArr: CardFieldValidData[];\n    const fieldType: string = pFeedbackObj.fieldType;\n    const isGenericCard: boolean = this.state.type === 'card';\n\n    /**\n     * CHECK IF CVC IS OPTIONAL\n     */\n    // Brand information (from setting the CC number) now contains information about\n    // whether cvc is optional for that brand e.g. maestro\n    // If it is optional, and we're dealing with the generic card type,\n    // (re)set the property that indicates this (in the CVC SecuredField instance)\n    if (\n        isGenericCard &&\n        hasOwnProperty(pFeedbackObj, 'cvcPolicy') &&\n        existy(pFeedbackObj.cvcPolicy) &&\n        hasOwnProperty(this.state.securedFields, ENCRYPTED_SECURITY_CODE)\n    ) {\n        this.state.securedFields[ENCRYPTED_SECURITY_CODE].cvcPolicy = pFeedbackObj.cvcPolicy;\n    }\n\n    /**\n     * PROCESS & BROADCAST ERRORS (OR LACK OF)\n     */\n    processErrors(pFeedbackObj, this.state.securedFields[fieldType], this.state.type, this.props.rootNode, this.callbacks.onError);\n\n    /**\n     * REMOVE ANY EXISTING ENCRYPTED ELEMENT & CHECK VALIDITY OF THE FORM AS A WHOLE\n     */\n    // If the field was previously encrypted...\n    if (this.state.securedFields[fieldType].isEncrypted) {\n        // callbackObjectsArr will be an array containing 1 or 2 objects that need to be broadcast\n        callbackObjectsArr = makeCallbackObjectsValidation({ fieldType, txVariant: this.state.type, rootNode: this.props.rootNode });\n\n        // Add the endDigits to the object we send to the onFieldValid callback\n        // NOTE: in this case (validation) this will be an empty string\n        if (fieldType === ENCRYPTED_CARD_NUMBER) {\n            callbackObjectsArr[0].endDigits = '';\n        }\n\n        for (let i = 0, len = callbackObjectsArr.length; i < len; i += 1) {\n            // ...BROADCAST VALID STATE OF INDIVIDUAL INPUTS\n            this.callbacks.onFieldValid(callbackObjectsArr[i]);\n        }\n\n        // Remove the field's encrypted state\n        this.state.securedFields[fieldType].isEncrypted = false;\n    }\n\n    /**\n     * STORE & BROADCAST VALID STATE OF THE FORM AS A WHOLE\n     */\n    this.validateForm();\n\n    /**\n     * PROCESS & BROADCAST CARD BRANDS\n     */\n    if (hasOwnProperty(pFeedbackObj, 'brand')) {\n        this.processBrand(pFeedbackObj);\n    }\n}\n","const postMessageToIframe = (pDataObj: object, pIframeObj: Window, pLoadingContext: string): void => {\n    // Check that an iframe object exists for this fieldType... in some cases the iframe might not exist\n    // e.g. bcmc which has no cvc field so e.g. a call to setFocus on the cvc field is not possible\n    if (pIframeObj) {\n        const dataObjStr: string = JSON.stringify(pDataObj);\n        pIframeObj.postMessage(dataObjStr, pLoadingContext);\n    }\n};\n\nexport default postMessageToIframe;\n","import { CSFStateObject } from '../../types';\n\n/**\n * Retrieves the iframe, stored by field type, & returns it's contentWindow\n */\nexport default function getIframeContentWin(csfState: CSFStateObject, fieldType: string): Window {\n    return csfState.securedFields[fieldType]?.iframeContentWindow || null;\n}\n","import { makeCallbackObjectsEncryption } from '../utils/callbackUtils';\nimport {\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR,\n    ENCRYPTED_SECURITY_CODE,\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_EXPIRY_DATE\n} from '../../constants';\nimport { processErrors } from '../utils/processErrors';\nimport { truthy } from '../../../../../../utils/commonUtils';\nimport { SFFeedbackObj, CardFieldValidData, EncryptionObj } from '../../types';\nimport postMessageToIframe from '../utils/iframes/postMessageToIframe';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\nimport getIframeContentWin from '../utils/iframes/getIframeContentWin';\n\nexport function handleEncryption(pFeedbackObj: SFFeedbackObj): void {\n    // EXTRACT VARS\n    const fieldType: string = pFeedbackObj.fieldType;\n\n    // SET FOCUS ON OTHER INPUT - If user has just typed a correct expiryDate - set focus on the cvc field OR typed a correct expiryMonth - focus on year field\n    if (this.config.autoFocus) {\n        // pFeedbackObj.type === 'year' when the encryption is happening on an expiryDate field c.f. a separate year field (when it equals ENCRYPTED_EXPIRY_YEAR)\n        if (pFeedbackObj.type === 'year' || fieldType === ENCRYPTED_EXPIRY_YEAR) {\n            this.setFocusOnFrame(ENCRYPTED_SECURITY_CODE);\n        }\n        if (fieldType === ENCRYPTED_EXPIRY_MONTH) {\n            this.setFocusOnFrame(ENCRYPTED_EXPIRY_YEAR);\n        }\n    }\n    //--\n\n    let i: number;\n    let len: number;\n\n    const encryptedObjArr: EncryptionObj[] = pFeedbackObj[fieldType];\n\n    // Set boolean saying this securedField is in an encryptedState\n    this.state.securedFields[fieldType].isEncrypted = true;\n\n    // REMOVE ANY ERRORS ON FIELD e.g. was a full number that failed the luhnCheck, then we corrected the number and now it passes\n    processErrors(\n        { error: '', fieldType } as any as SFFeedbackObj,\n        this.state.securedFields[fieldType],\n        this.state.type,\n        this.props.rootNode,\n        this.callbacks.onError\n    );\n\n    // MAKE ENCRYPTION OBJECTS FOR EACH OF THE INDIVIDUAL INPUTS\n    // N.B. when considering \"individual inputs\" we are concerned with the 4 fields that the checkoutAPI expects to receive for a credit card payment:\n    // encryptedCardNumber, encryptedSecurityCode, encryptedExpiryMonth, encryptedExpiryYear\n    const callbackObjectsArr: CardFieldValidData[] = makeCallbackObjectsEncryption({\n        fieldType,\n        txVariant: this.state.type,\n        rootNode: this.props.rootNode,\n        encryptedObjArr\n    });\n\n    // For standalone month field\n    if (fieldType === ENCRYPTED_EXPIRY_MONTH) {\n        if (hasOwnProperty(this.state.securedFields, ENCRYPTED_EXPIRY_YEAR)) {\n            const dataObj: object = {\n                txVariant: this.state.type,\n                code: pFeedbackObj.code,\n                blob: encryptedObjArr[0].blob,\n                fieldType: ENCRYPTED_EXPIRY_YEAR,\n                numKey: this.state.securedFields[ENCRYPTED_EXPIRY_YEAR].numKey\n            };\n            postMessageToIframe(dataObj, getIframeContentWin(this.state, ENCRYPTED_EXPIRY_YEAR), this.config.loadingContext);\n        }\n    }\n\n    // For number field - add the endDigits to the encryption object\n    if (fieldType === ENCRYPTED_CARD_NUMBER && truthy(pFeedbackObj.endDigits)) {\n        callbackObjectsArr[0].endDigits = pFeedbackObj.endDigits;\n    }\n\n    // For number field - add the 8 digit issuerBin to the encryption object\n    if (fieldType === ENCRYPTED_CARD_NUMBER && truthy(pFeedbackObj.issuerBin)) {\n        callbackObjectsArr[0].issuerBin = +pFeedbackObj.issuerBin;\n    }\n\n    // Add expiryDate to \"encryptedExpiryYear\" field. It will only be present if the correct config has been sent to SF\n    if (fieldType === ENCRYPTED_EXPIRY_DATE && truthy(pFeedbackObj.expiryDate)) {\n        callbackObjectsArr[1].expiryDate = pFeedbackObj.expiryDate;\n    }\n\n    // BROADCAST VALID STATE OF INDIVIDUAL INPUTS - passing the encryption objects\n    for (i = 0, len = callbackObjectsArr.length; i < len; i += 1) {\n        this.callbacks.onFieldValid(callbackObjectsArr[i]);\n    }\n    //--------------------------------------------\n\n    // STORE & BROADCAST VALID STATE OF THE FORM AS A WHOLE ///////\n    this.validateForm();\n}\n","const select = (root, selector) => {\n    let array = [];\n\n    if (root) {\n        // Convert NodeList to array\n        if (typeof root.querySelectorAll === 'function') {\n            array = [].slice.call(root.querySelectorAll(selector));\n        }\n    }\n\n    return array;\n};\n\nconst selectOne = (root, selector) => {\n    if (!root) {\n        return undefined;\n    }\n\n    return root.querySelector(selector);\n};\n\nconst getAttribute = (node, attribute) => {\n    if (!node) {\n        return undefined;\n    }\n    return node.getAttribute(attribute);\n};\n\n/**\n * @internal\n * Removes all children elements of the given node.\n *\n * @param node -\n */\nconst removeAllChildren = node => {\n    while (node.firstChild) {\n        node.removeChild(node.firstChild);\n    }\n};\n\nexport { getAttribute, select, selectOne, removeAllChildren };\n","import { CardObject } from '../../types';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\n\nlet shortestPermittedCardLength;\n\ninterface CardType {\n    __NO_BRAND?: string;\n    cards?: CardObject[];\n}\n\nconst CardType: CardType = {};\nCardType.__NO_BRAND = 'noBrand';\n\nCardType.cards = [];\n\nCardType.cards.push({\n    cardType: 'mc',\n    startingRules: [51, 52, 53, 54, 55, 22, 23, 24, 25, 26, 27],\n    permittedLengths: [16],\n    pattern: /^(5[1-5][0-9]{0,14}|2[2-7][0-9]{0,14})$/,\n    securityCode: 'CVC'\n});\n\nCardType.cards.push({ cardType: 'visadankort', startingRules: [4571], permittedLengths: [16], pattern: /^(4571)[0-9]{0,12}$/ });\n\nCardType.cards.push({\n    cardType: 'visa',\n    startingRules: [4],\n    permittedLengths: [13, 16, 19],\n    pattern: /^4[0-9]{0,18}$/,\n    securityCode: 'CVV'\n});\n\nCardType.cards.push({ cardType: 'amex', startingRules: [34, 37], permittedLengths: [15], pattern: /^3[47][0-9]{0,13}$/, securityCode: 'CID' });\n\nCardType.cards.push({ cardType: 'diners', startingRules: [36], permittedLengths: [14, 16], pattern: /^(36)[0-9]{0,12}$/ });\n\nCardType.cards.push({ cardType: 'maestrouk', startingRules: [6759], permittedLengths: [16, 18, 19], pattern: /^(6759)[0-9]{0,15}$/ });\n\nCardType.cards.push({ cardType: 'solo', startingRules: [6767], permittedLengths: [16, 18, 19], pattern: /^(6767)[0-9]{0,15}$/ });\n\nCardType.cards.push({\n    cardType: 'laser',\n    startingRules: [6304, 6706, 677117, 677120],\n    permittedLengths: [16, 17, 18, 19],\n    pattern: /^(6304|6706|6709|6771)[0-9]{0,15}$/,\n    cvcPolicy: 'optional'\n});\n\nCardType.cards.push({\n    cardType: 'discover',\n    startingRules: [6011, 644, 645, 646, 647, 648, 649, 65],\n    permittedLengths: [16, 17, 18, 19],\n    pattern: /^(6011[0-9]{0,12}|(644|645|646|647|648|649)[0-9]{0,13}|65[0-9]{0,14})$/\n});\n\nCardType.cards.push({\n    cardType: 'jcb',\n    startingRules: [3528, 3529, 353, 354, 355, 356, 357, 358],\n    permittedLengths: [16, 19],\n    pattern: /^(352[8,9]{1}[0-9]{0,15}|35[4-8]{1}[0-9]{0,16})$/,\n    securityCode: 'CAV'\n});\n\nCardType.cards.push({\n    cardType: 'bcmc',\n    startingRules: [6703, 479658, 606005],\n    permittedLengths: [16, 17, 18, 19],\n    pattern: /^((6703)[0-9]{0,15}|(479658|606005)[0-9]{0,13})$/,\n    cvcPolicy: 'hidden'\n});\n\nCardType.cards.push({ cardType: 'bijcard', startingRules: [5100081], permittedLengths: [16], pattern: /^(5100081)[0-9]{0,9}$/ });\n\nCardType.cards.push({ cardType: 'dankort', startingRules: [5019], permittedLengths: [16], pattern: /^(5019)[0-9]{0,12}$/ });\n\nCardType.cards.push({ cardType: 'hipercard', startingRules: [606282], permittedLengths: [16], pattern: /^(606282)[0-9]{0,10}$/ });\n\n// Moved above maestro (from position below uatp) to stop maestro being recognised over cup\nCardType.cards.push({ cardType: 'cup', startingRules: [62, 81], permittedLengths: [14, 15, 16, 17, 18, 19], pattern: /^(62|81)[0-9]{0,17}$/ }); // orig & android v1 + modified to include our test cards (81...)\n\nCardType.cards.push({\n    cardType: 'maestro',\n    startingRules: [50, 56, 57, 58, 6],\n    permittedLengths: [16, 17, 18, 19],\n    pattern: /^(5[0|6-8][0-9]{0,17}|6[0-9]{0,18})$/,\n    cvcPolicy: 'optional'\n});\n\nCardType.cards.push({\n    cardType: 'elo',\n    // prettier-ignore\n    startingRules: [506699, 50670, 50671, 50672, 50673, 50674, 50675, 50676, 506770, 506771, 506772, 506773, 506774, 506775, 506776, 506777, 506778, 401178, 438935, 451416, 457631, 457632, 504175, 627780, 636297, 636368],\n    permittedLengths: [16],\n    // prettier-ignore\n    pattern:\n        /^((((506699)|(506770)|(506771)|(506772)|(506773)|(506774)|(506775)|(506776)|(506777)|(506778)|(401178)|(438935)|(451416)|(457631)|(457632)|(504175)|(627780)|(636368)|(636297))[0-9]{0,10})|((50676)|(50675)|(50674)|(50673)|(50672)|(50671)|(50670))[0-9]{0,11})$/\n});\n\nCardType.cards.push({ cardType: 'uatp', startingRules: [1], permittedLengths: [15], pattern: /^1[0-9]{0,14}$/, cvcPolicy: 'optional' });\n\nCardType.cards.push({\n    cardType: 'cartebancaire',\n    startingRules: [4, 5, 6],\n    permittedLengths: [16],\n    pattern: /^[4-6][0-9]{0,15}$/\n});\n\nCardType.cards.push({ cardType: 'visaalphabankbonus', startingRules: [450903], permittedLengths: [16], pattern: /^(450903)[0-9]{0,10}$/ });\n\nCardType.cards.push({ cardType: 'mcalphabankbonus', startingRules: [510099], permittedLengths: [16], pattern: /^(510099)[0-9]{0,10}$/ });\n\nCardType.cards.push({\n    cardType: 'hiper',\n    startingRules: [637095, 637568, 637599, 637609, 637612],\n    permittedLengths: [16],\n    pattern: /^(637095|637568|637599|637609|637612)[0-9]{0,10}$/\n});\n\nCardType.cards.push({ cardType: 'oasis', startingRules: [982616], permittedLengths: [16], pattern: /^(982616)[0-9]{0,10}$/, cvcPolicy: 'optional' });\n\nCardType.cards.push({\n    cardType: 'karenmillen',\n    startingRules: [98261465],\n    permittedLengths: [16],\n    pattern: /^(98261465)[0-9]{0,8}$/,\n    cvcPolicy: 'optional'\n});\n\nCardType.cards.push({\n    cardType: 'warehouse',\n    startingRules: [982633],\n    permittedLengths: [16],\n    pattern: /^(982633)[0-9]{0,10}$/,\n    cvcPolicy: 'optional'\n});\n\nCardType.cards.push({ cardType: 'mir', startingRules: [220], permittedLengths: [16, 17, 18, 19], pattern: /^(220)[0-9]{0,16}$/ });\n\nCardType.cards.push({ cardType: 'codensa', startingRules: [590712], permittedLengths: [16], pattern: /^(590712)[0-9]{0,10}$/ });\n\nCardType.cards.push({\n    cardType: 'naranja',\n    startingRules: [377798, 377799, 402917, 402918, 527571, 527572, 589562],\n    permittedLengths: [16, 17, 18, 19],\n    pattern: /^(37|40|5[28])([279])\\d*$/\n});\n\n// TODO: 589657 clashes with naranja, rest ok\nCardType.cards.push({\n    cardType: 'cabal',\n    startingRules: [589657, 600691, 603522, 6042, 6043, 636908],\n    permittedLengths: [16, 17, 18, 19],\n    pattern: /^(58|6[03])([03469])\\d*$/\n});\n\nCardType.cards.push({\n    cardType: 'shopping',\n    startingRules: [2799, 589407, 603488],\n    permittedLengths: [16, 17, 18, 19],\n    pattern: /^(27|58|60)([39])\\d*$/\n});\n\nCardType.cards.push({ cardType: 'argencard', startingRules: [501], permittedLengths: [16, 17, 18, 19], pattern: /^(50)(1)\\d*$/ }); // NOTE: starting rule changed, from 501105, to not clash with dankort. Plus it now matches its regEx!\n\nCardType.cards.push({ cardType: 'troy', startingRules: [9792], permittedLengths: [16], pattern: /^(97)(9)\\d*$/ });\n\n// TODO: clashes with cabal\nCardType.cards.push({ cardType: 'forbrugsforeningen', startingRules: [600722], permittedLengths: [16], pattern: /^(60)(0)\\d*$/ });\n\nCardType.cards.push({\n    cardType: 'vpay',\n    startingRules: [401, 408, 413, 434, 435, 437, 439, 441, 442, 443, 444, 446, 447, 455, 458, 460, 461, 463, 466, 471, 479, 482, 483, 487],\n    permittedLengths: [13, 14, 15, 16, 17, 18, 19],\n    pattern: /^(40[1,8]|413|43[4,5]|44[1,2,3,4,6,7]|45[5,8]|46[0,1,3,6]|47[1,9]|48[2,3,7])[0-9]{0,16}$/ // ^(4[0-1|3-8][0-9]{1,17})$\n});\n\nCardType.cards.push({\n    cardType: 'rupay',\n    startingRules: [508528],\n    permittedLengths: [16],\n    // prettier-ignore\n    pattern:\n        /^(100003|508(2|[5-9])|60(69|[7-8])|652(1[5-9]|[2-5][0-9]|8[5-9])|65300[3-4]|8172([0-1]|[3-5]|7|9)|817(3[3-8]|40[6-9]|410)|35380([0-2]|[5-6]|9))[0-9]{0,12}$/\n});\n\nCardType.cards.push({\n    cardType: 'ticket',\n    expiryDatePolicy: 'hidden'\n});\n\nconst detectCard = (pCardNumber, pAvailableCards?) => {\n    let matchedCards;\n    let i;\n    let len;\n\n    if (pAvailableCards) {\n        // Filter CardType.cards down to those that are found in pAvailableCards\n        matchedCards = CardType.cards\n            .filter(card => pAvailableCards.includes(card.cardType))\n            // Further filter them to those with a regEx pattern that matches pCardNumber\n            .filter(card => hasOwnProperty(card, 'pattern') && pCardNumber.match(card.pattern));\n\n        // If we have matched cards: if there's only one - return it; else return the one with the longest startingRule\n        if (matchedCards.length) {\n            if (matchedCards.length === 1) {\n                return matchedCards[0];\n            }\n\n            // Find longest rule for each matched card & store it as a property on the card\n            for (i = 0, len = matchedCards.length; i < len; i += 1) {\n                if (!matchedCards[i].longestRule) {\n                    const longestRule = matchedCards[i].startingRules.reduce((a, b) => (a > b ? a : b));\n                    // What we actually store is how many chars are in the rule\n                    matchedCards[i].longestRule = String(longestRule).length;\n                }\n            }\n\n            // Based on each matched cards longest rule - find the card with the longest one!\n            return matchedCards.reduce((a, b) => (a.longestRule >= b.longestRule ? a : b));\n        }\n\n        return { cardType: CardType.__NO_BRAND };\n    }\n\n    return { cardType: CardType.__NO_BRAND };\n};\n\nconst detectCardLength = (pCard, pUnformattedVal) => {\n    let maxLength;\n    let shortenedNewValue;\n    let lengthDiff = 0;\n    let reachedValidLength = false;\n    let unformattedVal = pUnformattedVal;\n\n    // Find the longest of the permitted card number lengths for this card brand\n    const maxPermittedLength = pCard.cardType !== CardType.__NO_BRAND ? pCard.permittedLengths[pCard.permittedLengths.length - 1] : 0;\n\n    // If the input value is longer than it's max permitted length then shorten it to that length\n    if (maxPermittedLength && unformattedVal > maxPermittedLength) {\n        lengthDiff = unformattedVal.length - maxPermittedLength;\n\n        if (lengthDiff > 0) {\n            unformattedVal = unformattedVal.substring(0, unformattedVal.length - lengthDiff);\n            shortenedNewValue = unformattedVal;\n        }\n    }\n\n    // If cardNumber has reached one of the cardBrand's 'permitted lengths' - mark it as 'valid'\n    pCard.permittedLengths.forEach(pItem => {\n        if (unformattedVal.length === pItem) {\n            reachedValidLength = true;\n        }\n    });\n\n    // If cardNumber is as long as the cardBrand's maximum permitted length then set the maxLength var\n    if (unformattedVal.length === maxPermittedLength) {\n        // Set maxlength to max + the right amount of spaces (one for every 4 digits, but not on the last block)\n        const div = Math.floor(unformattedVal.length / 4);\n        const mod = unformattedVal.length % 4;\n        const numSpaces = mod > 0 ? div : div - 1;\n\n        maxLength = maxPermittedLength + numSpaces;\n\n        if (pCard.cardType.toLowerCase() === 'amex') {\n            maxLength = maxPermittedLength + 2; // = 17 = 15 digits with space after 4th & 10th\n        }\n    }\n\n    return {\n        shortenedNewValue,\n        maxLength,\n        reachedValidLength\n    };\n};\n\nconst getShortestPermittedCardLength = () => {\n    if (!shortestPermittedCardLength) {\n        let permittedLengthsArray = [];\n\n        CardType.cards.forEach(pItem => {\n            permittedLengthsArray = permittedLengthsArray.concat(pItem.permittedLengths ?? []);\n        });\n\n        shortestPermittedCardLength = Math.min.apply(null, permittedLengthsArray);\n    }\n\n    return shortestPermittedCardLength;\n};\n\nconst getCardByBrand = pBrand => {\n    const cardType = CardType.cards.filter(card => card.cardType === pBrand);\n\n    return cardType[0];\n};\n\nconst isGenericCardType = type => {\n    if (!type) throw new Error('Error: isGenericCardType: type param has not been specified');\n    return type === 'card' || type === 'scheme';\n};\n\nexport default {\n    detectCard,\n    detectCardLength,\n    getShortestPermittedCardLength,\n    getCardByBrand,\n    isGenericCardType,\n    __NO_BRAND: CardType.__NO_BRAND,\n    allCards: CardType.cards\n};\n","export const on = (node: Window | HTMLElement | Document, event, callback, useCapture: boolean = false) => {\n    if (node && typeof node.addEventListener === 'function') {\n        node.addEventListener(event, callback, useCapture);\n        return true;\n    }\n    return false;\n};\n\nexport const off = (node: Window | HTMLElement | Document, event, callback, useCapture: boolean = false) => {\n    if (node && typeof node.removeEventListener === 'function') {\n        node.removeEventListener(event, callback, useCapture);\n        return true;\n    }\n    return false;\n};\n","/**\n * Generate random number using window.crypto if available - otherwise fall back toMath.random\n *\n * @returns Number\n */\nexport function generateRandomNumber() {\n    if (!window.crypto) {\n        return (Math.random() * 0x100000000) | 0;\n    }\n\n    const ranNum = new Uint32Array(1);\n    window.crypto.getRandomValues(ranNum);\n    return ranNum[0];\n}\n\n/**\n * Recursively compare 2 objects\n */\nexport function objectsDeepEqual(x, y) {\n    const xType = typeof x;\n    const yType = typeof y;\n    if (x && y && xType === 'object' && xType === yType) {\n        if (Object.keys(x).length !== Object.keys(y).length) {\n            return false;\n        }\n        return Object.keys(x).every(key => objectsDeepEqual(x[key], y[key]));\n    }\n    return x === y;\n}\n\n/**\n * This function allows us to partially apply any number of variables to functions that take any number of parameters.\n * @returns \\{function(): *\\}\n */\nexport function partial(...args) {\n    // Store the args array\n    const myArgs = args;\n\n    // Grab the function (the first argument). myArgs now contains the remaining arguments\n    const fn = myArgs.shift();\n\n    // Return a function that calls fn with myArgs + whatever else is passed when this returned function is called\n    function partialFn(...args2) {\n        return fn.apply(this, myArgs.concat(args2));\n    }\n    return partialFn;\n}\n","import {\n    CVCPolicyType,\n    DatePolicyType,\n    RtnType_callbackFn,\n    RtnType_noParamVoidFn,\n    RtnType_postMessageListener,\n    SecuredFieldCommonProps\n} from '../types';\n\nabstract class AbstractSecuredField {\n    public sfConfig: SecuredFieldCommonProps; // could be protected but needs to be public for tests to run\n    protected loadingContext: string;\n    protected holderEl: HTMLElement;\n    protected iframeRef: HTMLElement;\n    public loadToConfigTimeout: number;\n    // From getters/setters with the same name\n    protected _isValid: boolean;\n    protected _iframeContentWindow: Window;\n    protected _numKey: number;\n    protected _isEncrypted: boolean;\n    protected _hasError: boolean;\n    protected _errorType: string;\n    protected _cvcPolicy: CVCPolicyType;\n    protected _expiryDatePolicy: DatePolicyType;\n    protected _iframeOnLoadListener: RtnType_noParamVoidFn;\n    protected _postMessageListener: RtnType_postMessageListener;\n    // Callback fns assigned via public functions\n    protected onIframeLoadedCallback: RtnType_noParamVoidFn;\n    protected onConfigCallback: RtnType_callbackFn;\n    protected onEncryptionCallback: RtnType_callbackFn;\n    protected onValidationCallback: RtnType_callbackFn;\n    protected onFocusCallback: RtnType_callbackFn;\n    protected onBinValueCallback: RtnType_callbackFn;\n    protected onTouchstartCallback: RtnType_callbackFn;\n    protected onShiftTabCallback: RtnType_callbackFn;\n    protected onAutoCompleteCallback: RtnType_callbackFn;\n    protected onKeyPressedCallback: RtnType_callbackFn;\n\n    protected constructor() {\n        this.sfConfig = {} as any as SecuredFieldCommonProps;\n    }\n}\n\nexport default AbstractSecuredField;\n","import { ERROR_ACTION_BLUR_SCENARIO, ERROR_ACTION_FOCUS_FIELD, ErrorCodePrefixes, SF_ErrorCodes } from './constants';\nimport { SFError } from '../../components/Card/components/CardInput/types';\nimport { SortErrorsObj, SortedErrorObject, GenericError, SetSRMessagesReturnObject } from './types';\nimport { ValidationRuleResult } from '../../utils/Validator/ValidationRuleResult';\nimport { ErrorMessageObject } from '../../utils/Validator/types';\nimport {\n    ENCRYPTED_BANK_ACCNT_NUMBER_FIELD,\n    ENCRYPTED_BANK_LOCATION_FIELD,\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR,\n    ENCRYPTED_PWD_FIELD,\n    ENCRYPTED_SECURITY_CODE\n} from '../../components/internal/SecuredFields/lib/constants';\nimport { AriaConfigObject } from '../../components/internal/SecuredFields/lib/types';\nimport type Language from '../../language';\n\n/**\n * Extract and translate all the errorCodes related to a specific securedField\n * @param i18n\n * @param errorCodeIdentifier - the identifier for which type of errorCodes we need to collect e.g. 'cc-num'\n */\nexport const getTranslatedErrors = (i18n: Language, errorCodeIdentifier: string): Record<SF_ErrorCodes, string> => {\n    const transObj = Object.values(SF_ErrorCodes).reduce((acc, value) => {\n        // Limit to errors related to specific sf\n        if (value.includes(errorCodeIdentifier)) {\n            acc[value] = i18n.get(value);\n        }\n        return acc;\n    }, {}) as Record<SF_ErrorCodes, string>;\n\n    return transObj;\n};\n\n/**\n * Adds a new error property to an object.\n * This error property is an object containing the translated errors, stored by code, that relate to the securedFields\n * @param originalObject - object we want to duplicate and enhance\n * @param i18n - an i18n object to use to get translations\n * @returns a duplicate of the original object with a new property: \"error\" whose value is a object containing the translated errors\n */\nexport const addErrorTranslationsToObject = (originalObj: AriaConfigObject, i18n: Language, fieldType: string): AriaConfigObject => {\n    const nuObj: AriaConfigObject = { ...originalObj };\n\n    const errorCodeIdentifier = fieldTypeToErrorCodeIdentifier(fieldType);\n    nuObj.error = getTranslatedErrors(i18n, errorCodeIdentifier);\n\n    return nuObj;\n};\n\nexport const getErrorMessageFromCode = (errorCode: string, codeMap: Record<string, string>): string => {\n    let errMsg = errorCode;\n    for (const [key, value] of Object.entries(codeMap)) {\n        if (value === errorCode) {\n            errMsg = key;\n            break;\n        }\n    }\n    return errMsg?.toLowerCase().replace(/[_.\\s]/g, '-');\n};\n\n/**\n * errorCodeIdentifiers must match the prefixes to the numbers in ERROR_CODES (Errors/constants.ts)\n * (Which in turn must match the keys in the translations files)\n */\nconst fieldTypeToErrorCodeIdentifier = (fieldType: string): string => {\n    let errorCodeIdentifier;\n    switch (fieldType) {\n        case ENCRYPTED_CARD_NUMBER:\n            errorCodeIdentifier = ErrorCodePrefixes.CC_NUM;\n            break;\n        case ENCRYPTED_EXPIRY_DATE:\n            errorCodeIdentifier = ErrorCodePrefixes.CC_DAT;\n            break;\n        case ENCRYPTED_EXPIRY_MONTH:\n            errorCodeIdentifier = ErrorCodePrefixes.CC_MTH;\n            break;\n        case ENCRYPTED_EXPIRY_YEAR:\n            errorCodeIdentifier = ErrorCodePrefixes.CC_YR;\n            break;\n        case ENCRYPTED_SECURITY_CODE:\n            errorCodeIdentifier = ErrorCodePrefixes.CC_CVC;\n            break;\n        case ENCRYPTED_PWD_FIELD:\n            errorCodeIdentifier = ErrorCodePrefixes.KCP_PWD;\n            break;\n        case ENCRYPTED_BANK_ACCNT_NUMBER_FIELD:\n            errorCodeIdentifier = ErrorCodePrefixes.ACH_NUM;\n            break;\n        case ENCRYPTED_BANK_LOCATION_FIELD:\n            errorCodeIdentifier = ErrorCodePrefixes.ACH_LOC;\n            break;\n        default:\n    }\n    return errorCodeIdentifier;\n};\n\n/**\n * sortErrorsByLayout - takes a list of errors and a layout, and returns a sorted array of error objects with translated error messages\n *\n * @param errors - an object containing errors, referenced by field type\n * @param layout - a string[] controlling how the output error objects will be ordered. Required when it is known that the way the error object is populated can vary e.g. Card comp, &/or anything with a country selector\n * @param i18n - our internal Language mechanism\n * @param countrySpecificLabels - some errors are region specific, e.g. in the US \"postal code\" = \"zip code\", so map the fieldType value accordingly (if it is being added to the errorMessage string)\n * @param fieldTypeMappingFn - a component specific lookup function that will tell us both if we need to prepend the field type to the SR panel message, and, if so, will retrieve the correct translation for the field type\n */\nexport const sortErrorsByLayout = ({ errors, i18n, layout, countrySpecificLabels, fieldTypeMappingFn }: SortErrorsObj): SortedErrorObject[] => {\n    const SR_INDICATOR_PREFIX = process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test' ? '' : '-sr'; // Useful for testing whether SR is reading out aria-live errors (sr) or aria-describedby ones\n\n    // Create array of error objects, sorted by layout\n    const sortedErrors: SortedErrorObject[] = Object.entries(errors).reduce((acc, [key, value]) => {\n        if (value) {\n            const errObj: ValidationRuleResult | SFError | GenericError = errors[key];\n\n            const TREAT_AS_SF_ERROR = 'errorI18n' in errObj && `rootNode` in errObj; // look for expected props, unique to an SFError\n\n            // Some ValidationRuleResults can be passed an object in the 'errorMessage' prop (to give country specific errors)\n            const ERROR_MSG_IS_OBJECT = typeof errObj.errorMessage === 'object';\n\n            /**\n             * Get error codes - these are used if we need to distinguish between showValidation & onBlur errors\n             * - For a ValidationRuleResult or GenericError the error \"code\" is contained in the errorMessage prop.\n             * - For an SFError the error \"code\" is contained in the error prop.\n             */\n            let errorCode: string;\n            if (TREAT_AS_SF_ERROR) {\n                errorCode = errObj.error;\n            } else {\n                /** Special handling for Address~postalCode (where the errorMessage is an object) */\n                if (ERROR_MSG_IS_OBJECT) {\n                    /** is ValidationRuleResult w. country specific error */\n                    errorCode = (errObj.errorMessage as ErrorMessageObject).translationKey;\n                } else {\n                    /** is ValidationRuleResult || GenericError || an as yet incorrectly formed error */\n                    errorCode = errObj.errorMessage as string;\n                }\n            }\n\n            /**\n             * Get corresponding error msg - a translated string we can place into the SRPanel\n             * NOTE: the error object for a secured field already contains the error in a translated form (errorI18n).\n             * For other fields we still need to translate it, so we use the errObj.errorMessage prop as a translation key\n             */\n            let errorMsg: string;\n            if (TREAT_AS_SF_ERROR && 'errorI18n' in errObj) {\n                errorMsg = errObj.errorI18n + SR_INDICATOR_PREFIX;\n            } else {\n                /**\n                 * For some fields, for a11y reasons (when the translated error msg doesn't contain a reference to the field it refers to), we need to\n                 * add the field type into the translated error message.\n                 *\n                 * This happens with generic errors\n                 *  e.g. \"field.error.required\": \"Enter the %{label}\"\n                 *   or \"invalid.format.expects\": \"%{label} Invalid format. Expected format: %{format}\"\n                 */\n                const mappedLabel = fieldTypeMappingFn ? fieldTypeMappingFn(key, i18n, countrySpecificLabels) : ''; // Retrieve the translated field name, if required\n\n                /** Special handling for Address~postalCode where the errorMessage object contains the details of the country specific format that should have been used for the postcode */\n                if (ERROR_MSG_IS_OBJECT) {\n                    /**  is ValidationRuleResult  w. country specific error */\n                    const translationKey = (errObj.errorMessage as ErrorMessageObject).translationKey;\n                    const countrySpecificFormat = (errObj.errorMessage as ErrorMessageObject).translationObject.values.format;\n\n                    errorMsg = `${i18n.get(translationKey, { values: { label: mappedLabel, format: countrySpecificFormat } })}${SR_INDICATOR_PREFIX}`;\n                } else {\n                    /** is ValidationRuleResult || GenericError || an as yet incorrectly formed error */\n                    errorMsg = i18n.get(errObj.errorMessage as string, { values: { label: mappedLabel } }) + SR_INDICATOR_PREFIX;\n                }\n            }\n\n            acc.push({ field: key, errorMessage: errorMsg, errorCode });\n\n            if (layout) acc.sort((a, b) => layout.indexOf(a.field) - layout.indexOf(b.field));\n        }\n        return acc;\n    }, []);\n\n    return sortedErrors;\n};\n\n/**\n * Implemented as a partial, with an object containing the first 6 arguments; then the final argument, errors, is passed to the partial\n *\n * NOTE: using this generic error setting fny is only suitable when errors for the SRPanel are *only* generated by showValidation().\n * When errors are also generated onBlur, as the user leaves the input, the SR message generation becomes more complex - see CardInput as an example\n */\nexport const setSRMessagesFromErrors = (\n    { i18n, fieldTypeMappingFn, SRPanelRef },\n    { errors, isValidating, layout, countrySpecificLabels }\n): SetSRMessagesReturnObject => {\n    const currentErrorsSortedByLayout = sortErrorsByLayout({\n        errors,\n        i18n,\n        fieldTypeMappingFn,\n        countrySpecificLabels,\n        layout\n    });\n\n    const doLog = false;\n\n    if (doLog) console.log('### setSRMessagesFromErrors::currentErrorsSortedByLayout:: ', currentErrorsSortedByLayout);\n\n    if (currentErrorsSortedByLayout.length) {\n        /** If validating i.e. \"on submit\" type event - then display all errors in the SR panel */\n        if (isValidating) {\n            const errorMsgArr: string[] = currentErrorsSortedByLayout.map(errObj => errObj.errorMessage);\n            if (doLog) console.log('### setSRMessagesFromErrors:: #1 multiple errors:: (validating) errorMsgArr=', errorMsgArr);\n            SRPanelRef.setMessages(errorMsgArr);\n\n            const fieldListArr: string[] = currentErrorsSortedByLayout.map(errObj => errObj.field);\n            return { currentErrorsSortedByLayout, action: ERROR_ACTION_FOCUS_FIELD, fieldToFocus: fieldListArr[0] };\n        } else {\n            // prettier-ignore\n            if (doLog) console.log('### setSRMessagesFromErrors:: #3 on blur scenario:: not validating but there might be an error, either to set or to clear');\n            SRPanelRef?.setMessages(null);\n\n            return { currentErrorsSortedByLayout, action: ERROR_ACTION_BLUR_SCENARIO }; // on blur scenario: not validating but there might be an error, either to set or to clear\n        }\n    } else {\n        if (doLog) console.log('### setSRMessagesFromErrors::componentDidUpdate:: #4 clearing errors:: NO currentErrorsSortedByLayout');\n        SRPanelRef?.setMessages(null); // no errors - so clear SR panel\n        return { currentErrorsSortedByLayout, action: 'none' };\n    }\n};\n\nexport const enhanceErrorObjectKeys = (errorObj, keyPrefix) => {\n    if (!errorObj) return null;\n    const enhancedObj = Object.entries(errorObj).reduce((acc, [key, value]) => {\n        if (value) {\n            const newKey = `${keyPrefix}${key}`;\n            acc[newKey] = value;\n        }\n        return acc;\n    }, {});\n\n    return enhancedObj;\n};\n","import { ENCRYPTED_SECURITY_CODE, ENCRYPTED_SECURITY_CODE_3_DIGITS, ENCRYPTED_SECURITY_CODE_4_DIGITS, GIFT_CARD, SF_FIELDS_MAP } from '../constants';\nimport { AriaConfigObject } from '../types';\nimport type Language from '../../../../../language';\n\n/**\n * Based on txVariant & fieldType, add a field specific contextualTexts object to the passed object\n */\nexport default (originalObj: AriaConfigObject, i18n: Language, txVariant: string, fieldType: string): AriaConfigObject => {\n    const nuObj: AriaConfigObject = { ...originalObj };\n\n    const contextualTexts = {};\n\n    switch (txVariant) {\n        case 'ach':\n            // TODO - when we know the required texts\n            break;\n        case GIFT_CARD:\n            // TODO - when we know the required texts\n            break;\n        default:\n            // Use field type to only add the texts specific to the creditCard securedField\n            switch (fieldType) {\n                case ENCRYPTED_SECURITY_CODE:\n                    contextualTexts[ENCRYPTED_SECURITY_CODE_3_DIGITS] = i18n.get('creditCard.securityCode.contextualText.3digits');\n                    contextualTexts[ENCRYPTED_SECURITY_CODE_4_DIGITS] = i18n.get('creditCard.securityCode.contextualText.4digits');\n                    break;\n\n                default: {\n                    const translationKey = `creditCard.${SF_FIELDS_MAP[fieldType]}.contextualText`;\n                    const translation = i18n.get(translationKey);\n                    if (translation !== translationKey) {\n                        contextualTexts[fieldType] = translation;\n                    }\n                }\n            }\n    }\n\n    if (Object.keys(contextualTexts).length) {\n        nuObj.contextualTexts = contextualTexts;\n    }\n\n    return nuObj;\n};\n","import { addErrorTranslationsToObject } from '../../../../../../core/Errors/utils';\nimport addContextTranslationsToObject from '../../utilities/addContextTranslations';\nimport Language from '../../../../../../language/Language';\nimport { SF_FIELDS_MAP } from '../../constants';\nimport { AriaConfig, AriaConfigObject } from '../../types';\n\n/**\n * Creates an ariaConfig object with 'iframeTitle' and 'label' properties, whose values are retrieved from the translations object.\n * (These values either come from the translation file or have been overwritten by the merchant in a translations config object.)\n * We then add an error object containing the possible errors for any securedField read from the translation file and stored under error-codes\n */\nexport function processAriaConfig(txVariant: string, fieldType: string, i18n: Language, showContextuaElement): AriaConfig {\n    // txVariant can be the scheme name (VISA, Mastercard...) so we put all of them under creditCard\n    const type = ['ach', 'giftcard'].includes(txVariant) ? txVariant : 'creditCard';\n\n    // Get translation for iframeTitle\n    const iframeTitle: string = i18n.get(`${type}.${fieldType}.aria.iframeTitle`);\n\n    // Get translation for aria label using *same* key that is used to label the element - important a11y consideration for (securedField) iframe\n    const label: string = i18n.get(`${type}.${SF_FIELDS_MAP[fieldType]}.label`);\n\n    // Get lang property\n    const lang = i18n.locale;\n\n    // Create a new object with the iframeTitle & label values from translation file\n    const ariaFieldConfigObj: AriaConfigObject = { iframeTitle, label };\n\n    // Add error translations object\n    let enhancedAriaFieldConfigObj: AriaConfigObject = addErrorTranslationsToObject(ariaFieldConfigObj, i18n, fieldType);\n\n    // If allowed, add the translated contextual texts\n    if (showContextuaElement) {\n        enhancedAriaFieldConfigObj = addContextTranslationsToObject(enhancedAriaFieldConfigObj, i18n, txVariant, fieldType);\n    }\n\n    // Create a new aria config object keeping the old entries and adding a new one for this field\n    // N.B. need to do this deconstruction of the original aria config object to break existing refs & avoid getting an \"accumulated\" object\n    return {\n        ...(lang && { lang }),\n        [fieldType]: enhancedAriaFieldConfigObj\n    } as AriaConfig;\n}\n","import * as logger from '../utilities/logger';\nimport createIframe from './utils/createIframe';\nimport { removeAllChildren, selectOne } from '../utilities/dom';\nimport { off, on } from '../../../../../utils/listenerUtils';\nimport postMessageToIframe from '../CSF/utils/iframes/postMessageToIframe';\nimport { isChromeVoxPostMsg, isWebpackPostMsg, originCheckPassed } from '../CSF/utils/iframes/postMessageValidation';\nimport {\n    CVC_POLICY_HIDDEN,\n    CVC_POLICY_OPTIONAL,\n    DATE_POLICY_HIDDEN,\n    DATE_POLICY_OPTIONAL,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR,\n    ENCRYPTED_SECURITY_CODE\n} from '../constants';\nimport { generateRandomNumber } from '../utilities/commonUtils';\nimport { CVCPolicyType, DatePolicyType, RtnType_callbackFn, RtnType_noParamVoidFn, RtnType_postMessageListener, SFFeedbackObj } from '../types';\nimport AbstractSecuredField from './AbstractSecuredField';\nimport { AriaConfig, IframeConfigObject, SecuredFieldSetupObject, SecuredFieldCommonProps } from '../types';\nimport { reject } from '../../../../../utils/commonUtils';\nimport { processAriaConfig } from './utils/processAriaConfig';\nimport { processPlaceholders } from './utils/processPlaceholders';\nimport Language from '../../../../../language/Language';\nimport { hasOwnProperty } from '../../../../../utils/hasOwnProperty';\nimport { Placeholders } from '../../SFP/types';\nimport './SecuredField.scss';\n\nconst logPostMsg = false;\nconst doLog = false;\n\nclass SecuredField extends AbstractSecuredField {\n    constructor(pSetupObj: SecuredFieldSetupObject, i18n: Language) {\n        super();\n\n        /**\n         * List of props to exclude from being set on this.sfConfig.\n         * These props are only required for internal purposes. They do not get sent to the iframe\n         */\n        const deltaPropsArr: string[] = ['loadingContext', 'holderEl', 'iframeSrc', 'showContextualElement', 'placeholders'];\n\n        /**\n         * List of props from setup object that will be set on this.sfConfig\n         * These props will all end up being sent to the iframe\n         */\n        const configVarsFromSetUpObj = reject(deltaPropsArr).from(pSetupObj);\n\n        // Copy passed setup object values to this.sfConfig\n        this.sfConfig = {\n            // ...this.sfConfig, // Do we need to do this? Pretty sure we don't\n            ...configVarsFromSetUpObj,\n            // Break references on iframeUIConfig object so we can overwrite its properties in each securedField instance\n            iframeUIConfig: { ...configVarsFromSetUpObj.iframeUIConfig }\n        } as SecuredFieldCommonProps;\n\n        /**\n         * Extract values only needed for init\n         */\n        const { iframeSrc, placeholders, showContextualElement } = pSetupObj;\n\n        /**\n         * Store those passed setup object values that are needed in multiple functions\n         */\n        this.loadingContext = pSetupObj.loadingContext;\n        this.holderEl = pSetupObj.holderEl;\n\n        /**\n         * Initiate other values on 'this' through setters\n         */\n        this.isValid = false;\n        this.iframeContentWindow = null;\n        this.numKey = generateRandomNumber();\n        this.isEncrypted = false;\n        this.hasError = false;\n        this.errorType = '';\n        this.cvcPolicy = pSetupObj.cvcPolicy;\n        this.expiryDatePolicy = pSetupObj.expiryDatePolicy;\n\n        if (process.env.NODE_ENV === 'development' && doLog) {\n            logger.log(\n                '### SecuredField::constructor:: this.sfConfig.fieldType=',\n                this.sfConfig.fieldType,\n                'isValid=',\n                this._isValid,\n                'numKey=',\n                this.numKey\n            );\n            logger.log('\\n');\n        }\n\n        return this.init(i18n, iframeSrc, placeholders, showContextualElement);\n    }\n\n    init(i18n: Language, iframeSrc: string, placeholders: Placeholders, showContextualElement: boolean): SecuredField {\n        /**\n         * Ensure all fields have a related ariaConfig object containing, at minimum, an iframeTitle property and a (translated) errors object\n         */\n        const processedAriaConfig: AriaConfig = processAriaConfig(this.sfConfig.txVariant, this.sfConfig.fieldType, i18n, showContextualElement);\n        // Set result back onto config object\n        this.sfConfig.iframeUIConfig.ariaConfig = processedAriaConfig;\n\n        // Set result back onto config object\n        this.sfConfig.iframeUIConfig.placeholders = processPlaceholders(this.sfConfig.txVariant, this.sfConfig.fieldType, placeholders);\n\n        /**\n         * Configure, create & reference iframe and add load listener\n         */\n        const iframeConfig = {\n            src: iframeSrc,\n            title: processedAriaConfig[this.sfConfig.fieldType].iframeTitle,\n            policy: 'origin'\n        };\n\n        const iframeEl: HTMLIFrameElement = createIframe(iframeConfig);\n\n        // Place the iframe into the holder\n        this.holderEl.appendChild(iframeEl);\n\n        // Now examine the holder to get an actual DOM node\n        const iframe: HTMLIFrameElement = selectOne(this.holderEl, '.js-iframe');\n\n        if (iframe) {\n            this.iframeContentWindow = iframe.contentWindow;\n\n            // Create reference to bound fn (see getters/setters for binding)\n            this.iframeOnLoadListener = this.iframeOnLoadListenerFn;\n\n            on(iframe, 'load', this.iframeOnLoadListener, false);\n        }\n\n        this.iframeRef = iframe;\n\n        return this;\n    }\n\n    iframeOnLoadListenerFn(): void {\n        // Create reference to bound fn (see getters/setters for binding)\n        this.postMessageListener = this.postMessageListenerFn;\n\n        // Add general listener for 'message' EVENT - the event that 'powers' postMessage\n        on(window, 'message', this.postMessageListener, false);\n\n        // Create and send config object to iframe\n        const configObj: IframeConfigObject = {\n            ...this.sfConfig,\n            numKey: this.numKey\n        };\n\n        if (window._b$dl) console.log('### SecuredField:::: onIframeLoaded:: created configObj=', configObj);\n\n        postMessageToIframe(configObj, this.iframeContentWindow, this.loadingContext);\n        //--\n\n        // Callback to say iframe loaded\n        this.onIframeLoadedCallback();\n    }\n\n    postMessageListenerFn(event: MessageEvent): void {\n        // Check message is from expected domain\n        if (!originCheckPassed(event, this.loadingContext, this.sfConfig.showWarnings)) {\n            return;\n        }\n\n        // TODO - for debugging purposes this would always be useful to see\n        //        logger.log('\\n',this.sfConfig.fieldType,'### CSF SecuredField::postMessageListener:: event.data=',event.data);\n\n        if (process.env.NODE_ENV === 'development' && logPostMsg) {\n            logger.log(\n                '\\n###CSF SecuredField::postMessageListener:: DOMAIN & ORIGIN MATCH, NO WEBPACK WEIRDNESS fieldType=',\n                this.sfConfig.fieldType,\n                'txVariant=',\n                this.sfConfig.txVariant,\n                'this.numKey=',\n                this.numKey\n            );\n        }\n\n        // PARSE DATA OBJECT (thus testing if it is a JSON string) - OR TRY & WORK OUT WHY THE PARSING FAILED\n        let feedbackObj: SFFeedbackObj;\n\n        try {\n            feedbackObj = JSON.parse(event.data);\n        } catch (e) {\n            // Was the message generated by webpack?\n            if (isWebpackPostMsg(event)) {\n                if (this.sfConfig.showWarnings) logger.log('### SecuredField::postMessageListenerFn:: PARSE FAIL - WEBPACK');\n                return;\n            }\n\n            // Was the message generated by ChromeVox?\n            if (isChromeVoxPostMsg(event)) {\n                if (this.sfConfig.showWarnings) logger.log('### SecuredField::postMessageListenerFn:: PARSE FAIL - CHROMEVOX');\n                return;\n            }\n\n            if (this.sfConfig.showWarnings)\n                logger.log('### SecuredField::postMessageListenerFn:: PARSE FAIL - UNKNOWN REASON: event.data=', event.data);\n            return;\n        }\n\n        // CHECK FOR EXPECTED PROPS\n        const hasMainProps: boolean = hasOwnProperty(feedbackObj, 'action') && hasOwnProperty(feedbackObj, 'numKey');\n\n        if (!hasMainProps) {\n            if (this.sfConfig.showWarnings) logger.warn('WARNING SecuredField :: postMessage listener for iframe :: data mismatch!');\n            return;\n        }\n\n        if (process.env.NODE_ENV === 'development' && logPostMsg) {\n            logger.log('### SecuredField::postMessageListener:: feedbackObj.numKey=', feedbackObj.numKey);\n        }\n\n        if (this.numKey !== feedbackObj.numKey) {\n            if (this.sfConfig.showWarnings) {\n                logger.warn(\n                    'WARNING SecuredField :: postMessage listener for iframe :: data mismatch! (Probably a message from an unrelated securedField)'\n                );\n            }\n            return;\n        }\n\n        // VALIDATION CHECKS PASSED - DECIDE ON COURSE OF ACTION\n        if (process.env.NODE_ENV === 'development' && logPostMsg) {\n            logger.log(\n                '### SecuredField::postMessageListener:: numkeys match PROCEED WITH POST MESSAGE PROCESSING fieldType=',\n                this.sfConfig.fieldType,\n                'txVariant=',\n                this.sfConfig.txVariant\n            );\n        }\n\n        switch (feedbackObj.action) {\n            case 'encryption':\n                this.isValid = true;\n                this.onEncryptionCallback(feedbackObj);\n                break;\n\n            case 'config':\n                if (window._b$dl)\n                    console.log('### SecuredField::postMessageListenerFn:: configured - calling onConfigCallback', feedbackObj.fieldType);\n                this.onConfigCallback(feedbackObj);\n                break;\n\n            case 'focus':\n                this.onFocusCallback(feedbackObj);\n                break;\n\n            case 'binValue':\n                this.onBinValueCallback(feedbackObj);\n                break;\n\n            // iOS ONLY - RE. iOS BUGS AROUND BLUR AND FOCUS EVENTS\n            case 'touch':\n                this.onTouchstartCallback(feedbackObj);\n                break;\n\n            // Only happens for Firefox & IE <= 11\n            case 'shifttab':\n                this.onShiftTabCallback(feedbackObj);\n                break;\n\n            case 'autoComplete':\n                this.onAutoCompleteCallback(feedbackObj);\n                break;\n\n            case 'enterKeyPressed':\n                this.onKeyPressedCallback(feedbackObj);\n                break;\n\n            /**\n             * Validate, because action =\n             *\n             *  'brand'\n             *  'delete'\n             *  'luhnCheck'\n             *              //'incomplete field' (an error that follows from a focus (blur) event)\n             *  'incorrectly filled field' (an error that follows from a focus (blur) event) // NEW\n             *  'numberKeyPressed' (or date-, month-, year-, cvc-, pin-, or iban- KeyPressed)\n             *    - since we have no \"error\" action \"...KeyPressed\" is the action type on most error events (other than \"incomplete field\" or \"luhnCheck\")\n             *    and often these error events representing the clearing of an existing error\n             */\n            default:\n                // If we're validation handling (& not encryption handling) field must be invalid\n                this.isValid = false;\n                this.onValidationCallback(feedbackObj);\n        }\n    }\n\n    destroy(): void {\n        off(window, 'message', this.postMessageListener, false);\n        off(this.iframeRef, 'load', this.iframeOnLoadListener, false);\n        this.iframeContentWindow = null;\n        removeAllChildren(this.holderEl);\n    }\n\n    /**\n     * Returns whether the securedField is hidden OR whether it is optional and not in error\n     */\n    isOptionalOrHidden(): boolean {\n        if (\n            this.sfConfig.fieldType === ENCRYPTED_EXPIRY_DATE ||\n            this.sfConfig.fieldType === ENCRYPTED_EXPIRY_MONTH ||\n            this.sfConfig.fieldType === ENCRYPTED_EXPIRY_YEAR\n        ) {\n            switch (this.expiryDatePolicy) {\n                case DATE_POLICY_HIDDEN:\n                    return true;\n                case DATE_POLICY_OPTIONAL:\n                    return !this.hasError;\n                default:\n                    return false;\n            }\n        }\n\n        if (this.sfConfig.fieldType === ENCRYPTED_SECURITY_CODE) {\n            switch (this.cvcPolicy) {\n                case CVC_POLICY_HIDDEN:\n                    return true;\n                case CVC_POLICY_OPTIONAL:\n                    return !this.hasError;\n                default:\n                    return false;\n            }\n        }\n\n        // Any other type of securedField is not optional & can't be hidden\n        return false;\n    }\n\n    // /////// ALLOCATE CALLBACKS /////////\n    onIframeLoaded(callbackFn: RtnType_noParamVoidFn): SecuredField {\n        this.onIframeLoadedCallback = callbackFn;\n        return this;\n    }\n\n    onEncryption(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onEncryptionCallback = callbackFn;\n        return this;\n    }\n\n    onValidation(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onValidationCallback = callbackFn;\n        return this;\n    }\n\n    onConfig(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onConfigCallback = callbackFn;\n        return this;\n    }\n\n    onFocus(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onFocusCallback = callbackFn;\n        return this;\n    }\n\n    onBinValue(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onBinValueCallback = callbackFn;\n        return this;\n    }\n\n    onTouchstart(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onTouchstartCallback = callbackFn;\n        return this;\n    }\n\n    onShiftTab(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onShiftTabCallback = callbackFn;\n        return this;\n    }\n\n    onAutoComplete(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onAutoCompleteCallback = callbackFn;\n        return this;\n    }\n\n    onKeyPressed(callbackFn: RtnType_callbackFn): SecuredField {\n        this.onKeyPressedCallback = callbackFn;\n        return this;\n    }\n    //------------------------------------\n\n    // ///////////// GETTERS/SETTERS //////////////\n\n    get errorType(): string {\n        return this._errorType;\n    }\n    set errorType(value: string) {\n        this._errorType = value;\n    }\n\n    get hasError(): boolean {\n        return this._hasError;\n    }\n    set hasError(value: boolean) {\n        this._hasError = value;\n    }\n\n    get isValid(): boolean {\n        if (this.sfConfig.fieldType === ENCRYPTED_SECURITY_CODE) {\n            switch (this.cvcPolicy) {\n                case CVC_POLICY_HIDDEN:\n                    // If cvc is hidden then the field is always valid\n                    return true;\n                case CVC_POLICY_OPTIONAL:\n                    // If cvc is optional then the field is always valid UNLESS it has an error\n                    return !this.hasError;\n                default:\n                    return this._isValid;\n            }\n        }\n\n        if (\n            this.sfConfig.fieldType === ENCRYPTED_EXPIRY_DATE ||\n            this.sfConfig.fieldType === ENCRYPTED_EXPIRY_MONTH ||\n            this.sfConfig.fieldType === ENCRYPTED_EXPIRY_YEAR\n        ) {\n            switch (this.expiryDatePolicy) {\n                case DATE_POLICY_HIDDEN:\n                    // If date is hidden then the field is always valid\n                    return true;\n                case DATE_POLICY_OPTIONAL:\n                    // If date is optional then the field is always valid UNLESS it has an error\n                    return !this.hasError;\n                default:\n                    return this._isValid;\n            }\n        }\n\n        return this._isValid;\n    }\n    set isValid(value: boolean) {\n        this._isValid = value;\n    }\n\n    get cvcPolicy(): CVCPolicyType {\n        return this._cvcPolicy;\n    }\n\n    set cvcPolicy(value: CVCPolicyType) {\n        // Only set if this is a CVC field\n        if (this.sfConfig.fieldType !== ENCRYPTED_SECURITY_CODE) return;\n\n        // Only set if value has changed\n        if (value === this.cvcPolicy) return;\n\n        if (process.env.NODE_ENV === 'development' && doLog) logger.log(this.sfConfig.fieldType, '### SecuredField::cvcPolicy:: value=', value);\n\n        this._cvcPolicy = value;\n\n        // If the field has changed status (required <--> not required) AND it's error state was due to an isValidated call\n        // NOTE: fixes issue in Components where you first validate and then start typing a maestro number\n        // - w/o this and the fix in CSF the maestro PM will never register as valid\n        if (this.hasError && this.errorType === 'isValidated') {\n            this.hasError = false;\n        }\n    }\n\n    get expiryDatePolicy(): DatePolicyType {\n        return this._expiryDatePolicy;\n    }\n\n    set expiryDatePolicy(value: DatePolicyType) {\n        // Only set if this is a date field type of securedField\n        if (\n            this.sfConfig.fieldType !== ENCRYPTED_EXPIRY_DATE &&\n            this.sfConfig.fieldType !== ENCRYPTED_EXPIRY_MONTH &&\n            this.sfConfig.fieldType !== ENCRYPTED_EXPIRY_YEAR\n        )\n            return;\n\n        // Only set if value has changed\n        if (value === this.expiryDatePolicy) return;\n\n        if (process.env.NODE_ENV === 'development' && doLog) logger.log(this.sfConfig.fieldType, '### SecuredField:expiryDatePolicy:: value=', value);\n\n        this._expiryDatePolicy = value;\n\n        // If the field has changed status (required <--> not required) AND it's error state was due to an isValidated call\n        if (this.hasError && this.errorType === 'isValidated') {\n            this.hasError = false;\n        }\n    }\n\n    get iframeContentWindow(): Window {\n        return this._iframeContentWindow;\n    }\n    set iframeContentWindow(value: Window) {\n        this._iframeContentWindow = value;\n    }\n\n    get isEncrypted(): boolean {\n        return this._isEncrypted;\n    }\n    set isEncrypted(value: boolean) {\n        this._isEncrypted = value;\n    }\n\n    get numKey(): number {\n        return this._numKey;\n    }\n    set numKey(value: number) {\n        this._numKey = value;\n    }\n\n    // Internal use - way to create listener refs that we can add/remove\n    get iframeOnLoadListener(): RtnType_noParamVoidFn {\n        return this._iframeOnLoadListener;\n    }\n    set iframeOnLoadListener(value: RtnType_noParamVoidFn) {\n        this._iframeOnLoadListener = value.bind(this);\n    }\n\n    get postMessageListener(): RtnType_postMessageListener {\n        return this._postMessageListener;\n    }\n    set postMessageListener(value: RtnType_postMessageListener) {\n        this._postMessageListener = value.bind(this);\n    }\n}\n\nexport default SecuredField;\n","import { SFPlaceholdersObject } from '../../types';\nimport { Placeholders } from '../../../SFP/types';\nimport {\n    ENCRYPTED_SECURITY_CODE,\n    ENCRYPTED_SECURITY_CODE_3_DIGITS,\n    ENCRYPTED_SECURITY_CODE_4_DIGITS,\n    GIFT_CARD,\n    SF_FIELDS_MAP\n} from '../../constants';\nimport { Placeholders as AchPlaceholders } from '../../../../../Ach/components/AchInput/types';\nimport { Placeholders as GiftcardPlaceholders } from '../../../../../Giftcard/components/types';\nimport { Placeholders as CardPlaceholders } from '../../../../../Card/components/CardInput/types';\n\n/**\n * Create placeholders with a value from merchant's configuration\n *\n * Based on txVariant & fieldType, maps the entries in the passed placeholders object to create a field specific placeholder object\n */\nexport function processPlaceholders(txVariant: string, fieldType: string, placeholders: Placeholders): SFPlaceholdersObject {\n    switch (txVariant) {\n        case 'ach':\n            return { [fieldType]: (placeholders as AchPlaceholders)[SF_FIELDS_MAP[fieldType]] ?? '' };\n\n        case GIFT_CARD:\n            return { [fieldType]: (placeholders as GiftcardPlaceholders)[SF_FIELDS_MAP[fieldType]] ?? '' };\n\n        default:\n            switch (fieldType) {\n                case ENCRYPTED_SECURITY_CODE:\n                    return {\n                        [ENCRYPTED_SECURITY_CODE_3_DIGITS]: (placeholders as CardPlaceholders).securityCodeThreeDigits ?? '',\n                        [ENCRYPTED_SECURITY_CODE_4_DIGITS]: (placeholders as CardPlaceholders).securityCodeFourDigits ?? ''\n                    };\n\n                default:\n                    return { [fieldType]: (placeholders as CardPlaceholders)[SF_FIELDS_MAP[fieldType]] ?? '' };\n            }\n    }\n}\n","export default function createIframe({ src, title = 'iframe element', policy = 'origin' }) {\n    const iframeEl = document.createElement('iframe');\n    iframeEl.setAttribute('src', src);\n    iframeEl.classList.add('js-iframe');\n    // For a11y some merchants want to be able to remove the title element on the iframe - seeing the info it carries as extraneous for the screenreader\n    if (title === '' || title.trim().length === 0 || title === 'none') {\n        iframeEl.setAttribute('role', 'presentation');\n    } else {\n        iframeEl.setAttribute('title', title);\n    }\n\n    iframeEl.setAttribute('allowtransparency', 'true');\n    iframeEl.setAttribute('referrerpolicy', policy); // Necessary for ClientKey to work\n    // Commenting out stops the \"The devicemotion events are blocked by feature policy\" warning in Chrome >=66 that some merchant experienced\n    // Commenting in stops the same warnings in development (??)\n    if (process.env.NODE_ENV === 'development') {\n        iframeEl.setAttribute('allow', 'accelerometer; gyroscope');\n    }\n\n    const noIframeElContent = document.createTextNode('<p>Your browser does not support iframes.</p>');\n    iframeEl.appendChild(noIframeElContent);\n\n    return iframeEl;\n}\n","import * as logger from '../../../utilities/logger';\n\nexport const originCheckPassed = (event: MessageEvent, pLoadingContext: string, pShowWarnings: boolean): boolean => {\n    const origin = event.origin; // || event.originalEvent.origin;\n\n    const isCheckoutUrl: number = pLoadingContext.indexOf('/checkoutshopper/');\n    let adyenDomain: string = isCheckoutUrl > -1 ? pLoadingContext.substring(0, isCheckoutUrl) : pLoadingContext;\n\n    // Strip trailing /\n    const lastCharIndex: number = adyenDomain.length - 1;\n    if (adyenDomain.charAt(lastCharIndex) === '/') {\n        adyenDomain = adyenDomain.substring(0, lastCharIndex);\n    }\n\n    if (origin !== adyenDomain) {\n        if (pShowWarnings) {\n            logger.warn(\n                'WARNING postMessageValidation: postMessage listener for iframe::origin mismatch!\\n Received message with origin:',\n                origin,\n                'but the only allowed origin for messages to CSF is',\n                adyenDomain,\n                '### event.data=',\n                event.data\n            );\n        }\n        return false;\n    }\n\n    return true;\n};\n\n// Catch webpack postMessages responses\nexport const isWebpackPostMsg = (event: MessageEvent): boolean =>\n    event.data && event.data.type && typeof event.data.type === 'string' && event.data.type.indexOf('webpack') > -1;\n\n// Catch ChromeVox postMessages responses\nexport const isChromeVoxPostMsg = (event: MessageEvent): boolean => event.data && typeof event.data === 'string' && event.data.indexOf('cvox') > -1;\n","interface CheckoutErrorOptions {\n    cause?: any;\n    code?: string;\n}\n\nexport const NETWORK_ERROR = 'NETWORK_ERROR';\nexport const CANCEL = 'CANCEL';\nexport const IMPLEMENTATION_ERROR = 'IMPLEMENTATION_ERROR';\nexport const API_ERROR = 'API_ERROR';\nexport const ERROR = 'ERROR';\nexport const SCRIPT_ERROR = 'SCRIPT_ERROR';\nexport const SDK_ERROR = 'SDK_ERROR';\n\nclass AdyenCheckoutError extends Error {\n    protected static errorTypes = {\n        /** Network error. */\n        NETWORK_ERROR,\n\n        /** Shopper canceled the current transaction. */\n        CANCEL,\n\n        /** Implementation error. The method or parameter are incorrect or are not supported. */\n        IMPLEMENTATION_ERROR,\n\n        /** API error. The API has not returned the expected data  */\n        API_ERROR,\n\n        /** Generic error. */\n        ERROR,\n\n        /** Script error. The browser failed to load 3rd party script */\n        SCRIPT_ERROR,\n\n        /** Something has gone wrong internally */\n        SDK_ERROR\n    };\n\n    public cause: unknown;\n    public options: CheckoutErrorOptions;\n\n    constructor(type: keyof typeof AdyenCheckoutError.errorTypes, message?: string, options?: CheckoutErrorOptions) {\n        super(message);\n\n        this.name = AdyenCheckoutError.errorTypes[type];\n        this.options = options || {};\n        this.cause = this.options.cause;\n    }\n}\n\nexport default AdyenCheckoutError;\n","import { select, getAttribute } from '../../utilities/dom';\nimport {\n    ENCRYPTED_EXPIRY_YEAR,\n    DATE_POLICY_REQUIRED,\n    CVC_POLICY_REQUIRED,\n    DATA_ENCRYPTED_FIELD_ATTR,\n    DATA_INFO,\n    DATA_UID,\n    SF_CONFIG_TIMEOUT,\n    ALL_SECURED_FIELDS,\n    ENCRYPTED_EXPIRY_MONTH\n} from '../../constants';\nimport { existy } from '../../../../../../utils/commonUtils';\nimport cardType from '../utils/cardType';\nimport { SecuredFieldSetupObject } from '../../types';\nimport SecuredField from '../../securedField/SecuredField';\nimport { CardObject, CardBrandData, SFFeedbackObj, CardLoadData, CVCPolicyType, DatePolicyType } from '../../types';\nimport AdyenCheckoutError from '../../../../../../core/Errors/AdyenCheckoutError';\nimport type { SFKeyPressObj } from '../../types';\n\n/**\n * Bound to the instance of CSF\n * Handles specific functionality related to configuring & creating SecuredFields\n */\nexport function createSecuredFields(): number {\n    this.encryptedAttrName = DATA_ENCRYPTED_FIELD_ATTR;\n\n    // Detect DOM elements that qualify as securedField holders & filter them for valid types\n    const securedFields: HTMLElement[] = select(this.props.rootNode, `[${this.encryptedAttrName}]`).filter(field => {\n        const fieldType: string = getAttribute(field, this.encryptedAttrName);\n\n        if (fieldType === ENCRYPTED_EXPIRY_MONTH) {\n            // TODO send analytics about separate date fields\n        }\n\n        const isValidType = ALL_SECURED_FIELDS.includes(fieldType);\n        if (!isValidType) {\n            console.warn(\n                `WARNING: '${fieldType}' is not a valid type for the '${this.encryptedAttrName}' attribute. A SecuredField will not be created for this element.`\n            );\n        }\n        return isValidType;\n    });\n\n    /**\n     * cvcPolicy - 'required' | 'optional' | 'hidden'\n     * - Always 'required' for GiftCards\n     * - Usually 'required' for single branded Credit Cards but with exceptions e.g. maestro ('optional'), bcmc ('hidden').\n     * - Always 'required' for generic Credit Cards at start up - in this case, subsequent, supporting information about whether cvc stops being required\n     * comes from the SF in the brand information (as the shopper inputs the cc number)\n     */\n    const cvcPolicy: CVCPolicyType = CVC_POLICY_REQUIRED;\n\n    /** Usually 'required' for single branded Credit Cards but with exceptions e.g. ticket ('hidden', *technically* a meal voucher) */\n    const expiryDatePolicy: DatePolicyType = DATE_POLICY_REQUIRED;\n\n    // CHECK IF THIS SECURED FIELD IS NOT OF A CREDIT CARD TYPE\n    if (!this.config.isCreditCardType) {\n        this.createNonCardSecuredFields(securedFields);\n        return securedFields.length;\n    }\n\n    // CONTINUE AS CREDIT-CARD TYPE...\n    this.isSingleBrandedCard = false;\n\n    this.securityCode = '';\n\n    this.createCardSecuredFields(securedFields, cvcPolicy, expiryDatePolicy);\n\n    // Return the number of iframes we're going to create\n    return securedFields.length;\n}\n\n/**\n * i.e. giftcard and ach fields\n *\n * Create a new SecuredField for each detected holding element\n */\nexport async function createNonCardSecuredFields(securedFields: HTMLElement[]): Promise<any> {\n    for (let i = 0; i < securedFields.length; i++) {\n        const securedField = securedFields[i];\n        await this.setupSecuredField(securedField).catch(e => {\n            if (window._b$dl) console.log('Secured fields setup failure. e=', e);\n        });\n    }\n}\n\nexport async function createCardSecuredFields(\n    securedFields: HTMLElement[],\n    cvcPolicy: CVCPolicyType,\n    expiryDatePolicy: DatePolicyType\n): Promise<any> {\n    // Declared card type from the initialisation of CSF\n    let type: string = this.state.type;\n\n    // Maybe it's a single branded card defined by setting type: 'card' & a single item in cardGroupTypes\n    // In which case update the type var both locally AND in State\n    if (type === 'card' && this.config.cardGroupTypes.length === 1) {\n        type = this.config.cardGroupTypes[0];\n        this.state.type = type;\n    }\n\n    // So, is it a single branded card?\n    this.isSingleBrandedCard = type !== 'card';\n\n    // If single branded card field...\n    if (this.isSingleBrandedCard) {\n        // Check that type exists\n        const card: CardObject = cardType.getCardByBrand(type);\n\n        // It's possible we don't recognise the card type -\n        // scenario: frontend initially recognises card as e.g. Visa - but then backend tokenises it as a sub-brand which we currently don't recognise\n        if (!existy(card)) {\n            this.state.type = 'unrecognised-single-brand'; // Will let CVC field accept 4 digits in the input\n        } else {\n            // Assess whether cvc field is required based on the card type & whether the cvc field should even be visible\n            cvcPolicy = card.cvcPolicy || CVC_POLICY_REQUIRED;\n            expiryDatePolicy = card.expiryDatePolicy || DATE_POLICY_REQUIRED;\n\n            this.securityCode = card.securityCode;\n        }\n    }\n\n    /**\n     * Create a new SecuredField for each detected holding element\n     *\n     * - we do this in sequence, waiting until one has configured before creating the next.\n     * We do it this way to avoid the 'bug' whereby if something interrupts the loading of an iframe the listener we have for its load event\n     * never fires; which means the iframe never configures.\n     * (NB - you can recreate this 'bug' by creating the securedFields in a synchronous loop:\n     *      securedFields.forEach(this.setupSecuredField.bind(this));\n     *  and putting a breakpoint on the line where we declare the setupSecuredField function)\n     *\n     *  Also note we tried the Array.map/Promise.all way of asynchronously looping through an array - but it didn't fix the issue,\n     *  - so we fall back to a good old for-loop\n     */\n    for (let i = 0; i < securedFields.length; i++) {\n        const securedField = securedFields[i];\n        if (window._b$dl) console.log('\\nAbout to set up securedField:', securedField);\n        await this.setupSecuredField(securedField, cvcPolicy, expiryDatePolicy).catch(e => {\n            if (window._b$dl) console.log('Secured fields setup failure. e=', e);\n        });\n        if (window._b$dl) console.log('Finished setting up securedField:', securedField);\n    }\n    if (window._b$dl) console.log('Finished setting up all securedFields');\n\n    /**\n     * Now the securedFields have all been created and configured...\n     *\n     * For a single branded card we call to onBrand callback once.\n     * This allows the UI to set the correct logo if they haven't already,\n     * and we also pass the cvcPolicy & expiryDatePolicy so the UI can hide the iframe holders if necessary\n     */\n    if (this.isSingleBrandedCard) {\n        const callbackObj: CardBrandData = {\n            type: this.state.type,\n            rootNode: this.props.rootNode,\n            brand: type,\n            cvcPolicy,\n            expiryDatePolicy,\n            cvcText: this.securityCode\n        };\n\n        // Allow a tick for the securedField to finish rendering\n        setTimeout(() => {\n            this.callbacks.onBrand(callbackObj);\n        }, 0);\n    }\n}\n\n// Run for each detected holder of a securedField...\nexport function setupSecuredField(pItem: HTMLElement, cvcPolicy?: CVCPolicyType, expiryDatePolicy?: DatePolicyType): Promise<any> {\n    return new Promise((resolve, reject) => {\n        /**\n         *  possible values:\n         *  encryptedCardNumber\n         *  encryptedExpiryDate\n         *  encryptedExpiryMonth\n         *  encryptedExpiryYear\n         *  encryptedSecurityCode\n         *  encryptedPassword\n         *  encryptedPin???\n         *  encryptedBankAccountNumber\n         *  encryptedBankLocationId\n         *  encryptedIBAN\n         */\n        const fieldType: string = getAttribute(pItem, this.encryptedAttrName);\n\n        if (fieldType === ENCRYPTED_EXPIRY_YEAR) {\n            this.state.hasSeparateDateFields = true;\n        }\n\n        const extraFieldData: string = getAttribute(pItem, DATA_INFO);\n        const uid = getAttribute(pItem, DATA_UID);\n\n        // CREATE SecuredField passing config object\n        const sfInitObj: SecuredFieldSetupObject = {\n            fieldType,\n            extraFieldData,\n            uid,\n            cvcPolicy,\n            holderEl: pItem,\n            expiryDatePolicy,\n            txVariant: this.state.type,\n            // from this.config (calculated)\n            cardGroupTypes: this.config.cardGroupTypes,\n            iframeUIConfig: this.config.iframeUIConfig,\n            sfLogAtStart: this.config.sfLogAtStart,\n            trimTrailingSeparator: this.config.trimTrailingSeparator,\n            isCreditCardType: this.config.isCreditCardType,\n            iframeSrc: this.config.iframeSrc,\n            loadingContext: this.config.loadingContext,\n            showWarnings: this.config.showWarnings,\n            legacyInputMode: this.config.legacyInputMode,\n            minimumExpiryDate: this.config.minimumExpiryDate,\n            // from this.props (passed straight thru)\n            maskSecurityCode: this.props.maskSecurityCode,\n            exposeExpiryDate: this.props.exposeExpiryDate,\n            disableIOSArrowKeys: this.props.shouldDisableIOSArrowKeys,\n            implementationType: this.props.implementationType,\n            showContextualElement: this.props.showContextualElement,\n            placeholders: this.props.placeholders\n        };\n\n        const sf: SecuredField = new SecuredField(sfInitObj, this.props.i18n)\n            .onIframeLoaded((): void => {\n                // Count\n                this.state.iframeCount += 1;\n\n                if (window._b$dl) console.log('### createSecuredFields::onIframeLoaded:: this.state.iframeCount=', this.state.iframeCount);\n\n                // One of our existing securedFields has just loaded new content!\n                if (this.state.iframeCount > this.state.numIframes) {\n                    this.destroySecuredFields();\n                    // TODO send analytics about this error\n                    throw new AdyenCheckoutError(\n                        'ERROR',\n                        `One or more securedFields has just loaded new content. This should never happen. securedFields have been removed.\n                        iframe load count=${this.state.iframeCount}. Expected count:${this.state.numIframes}`\n                    );\n                }\n\n                /** Create timeout within which time we expect the securedField to configure */\n                // @ts-ignore - timeout 'type' *is* a number\n                sf.loadToConfigTimeout = setTimeout(() => {\n                    reject({ type: sfInitObj.fieldType, failReason: 'sf took too long to config' });\n                }, SF_CONFIG_TIMEOUT);\n\n                // If all iframes are loaded - call onLoad callback\n                if (this.state.iframeCount === this.state.originalNumIframes) {\n                    const callbackObj: CardLoadData = { iframesLoaded: true };\n                    this.callbacks.onLoad(callbackObj);\n                }\n            })\n            .onConfig((pFeedbackObj: SFFeedbackObj): void => {\n                this.handleIframeConfigFeedback(pFeedbackObj);\n\n                // Clear timeout since the securedField has configured\n                clearTimeout(sf.loadToConfigTimeout);\n                sf.loadToConfigTimeout = null;\n\n                resolve(pFeedbackObj);\n            })\n            .onFocus((pFeedbackObj: SFFeedbackObj): void => {\n                this.handleFocus(pFeedbackObj);\n            })\n            .onBinValue((pFeedbackObj: SFFeedbackObj): void => {\n                this.handleBinValue(pFeedbackObj);\n            })\n            .onTouchstart((pFeedbackObj: SFFeedbackObj): void => {\n                // re. Disabling arrow keys in iOS - need to disable all other fields in the form\n                if (this.props.shouldDisableIOSArrowKeys) {\n                    /**\n                     * re. this.hasGenuineTouchEvents...\n                     *  There seems to be an issue with Responsive Design mode in Safari that means it allows setting focus on cross-origin iframes,\n                     *  without enabling the touch events that allow the \"disableIOSArrowKeys\" workaround to fully function.\n                     *  This results in a click on an securedFields *label* leading to, for example, the holderName field being disabled, but w/o access\n                     *  to the touch events that would let it re-enable itself.\n                     *\n                     *  So we prevent the \"disableIOSArrowKeys\" workaround unless we genuinely have touch events available.\n                     */\n                    if (this.hasGenuineTouchEvents || pFeedbackObj.hasGenuineTouchEvents) {\n                        this.callbacks.onTouchstartIOS({ fieldType: pFeedbackObj.fieldType });\n                    }\n                }\n\n                // Only perform this step if we genuinely have touch events available\n                if (pFeedbackObj.hasGenuineTouchEvents || this.hasGenuineTouchEvents) {\n                    // iOS ONLY - RE. iOS BUGS AROUND BLUR AND FOCUS EVENTS\n                    // - pass information about which field has just been clicked (gained focus) to the other iframes\n                    this.postMessageToAllIframes({ fieldType: pFeedbackObj.fieldType, fieldClick: true });\n                }\n            })\n            .onShiftTab((pFeedbackObj: SFFeedbackObj): void => {\n                // Only happens for Firefox & IE <= 11\n                this.handleSFShiftTab(pFeedbackObj.fieldType);\n            })\n            .onEncryption((pFeedbackObj: SFFeedbackObj): void => {\n                this.handleEncryption(pFeedbackObj);\n            })\n            .onValidation((pFeedbackObj: SFFeedbackObj): void => {\n                this.handleValidation(pFeedbackObj);\n            })\n            .onAutoComplete((pFeedbackObj: SFFeedbackObj): void => {\n                this.processAutoComplete(pFeedbackObj);\n            })\n            .onKeyPressed((pFeedbackObj: SFFeedbackObj): void => {\n                const { numKey, ...rest } = pFeedbackObj;\n                this.callbacks.onKeyPressed(rest as SFKeyPressObj);\n            });\n\n        // Store reference to securedField in this.state (under fieldType)\n        this.state.securedFields[fieldType] = sf;\n    });\n}\n","function isIE() {\n    const ua = navigator.userAgent;\n\n    const msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    const trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        const rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    const edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n// NOTE: change from const to let for the purposes of testing (the values get set in some tests)\n/* eslint-disable */\nlet __IS_ANDROID = typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent);\nlet __IS_IE = typeof navigator !== 'undefined' && isIE();\nlet __IS_IOS = typeof navigator !== 'undefined' && /iphone|ipod|ipad/i.test(navigator.userAgent);\nlet __IS_FIREFOX = typeof navigator !== 'undefined' && /(firefox)/i.test(navigator.userAgent);\nlet __IS_SAFARI = typeof navigator !== 'undefined' && /(safari)/i.test(navigator.userAgent) && !/(chrome)/i.test(navigator.userAgent);\n/* eslint-enable */\n\nexport default {\n    __IS_ANDROID,\n    __IS_IE,\n    __IS_IOS,\n    __IS_FIREFOX,\n    __IS_SAFARI\n};\n","import { selectOne } from '../../utilities/dom';\nimport ua from '../utils/userAgent';\nimport { on, off } from '../../../../../../utils/listenerUtils';\n\nconst getCaretPos = (pNode: HTMLInputElement | HTMLTextAreaElement): number => {\n    if ('selectionStart' in pNode) {\n        return pNode.selectionStart;\n    }\n    return 0;\n};\n\n/**\n * Detect if touched element is an input or textArea.\n * - If it is do some quirky shit to set focus and caret position on this element\n * - Else do some quirky shit to make the iOS keyboard retract\n *\n * Always then remove this listener and set var saying we have done so (read in CSF...handleFocus)\n * Tell all securedFields some other element now has focus so they can blur themselves\n *\n * @param e -\n */\nfunction touchendListener(e: Event): void {\n    const targetEl: EventTarget = e.target;\n\n    // If other element is Input or TextArea\n    if (targetEl instanceof HTMLInputElement || (HTMLTextAreaElement && targetEl instanceof HTMLTextAreaElement)) {\n        // Force caret to show - 'requires' resetting field's value\n        const val: string = targetEl.value;\n\n        let caretPos: number = getCaretPos(targetEl);\n\n        let adjFlag = false;\n\n        // For some annoying, iOS Safari, reason if caretPos is at the end of the string then it won't show up\n        // - so first decrease it; then set it again, asynchronously\n        if (caretPos === val.length) {\n            caretPos -= 1;\n            adjFlag = true;\n        }\n\n        targetEl.value = val;\n\n        /**\n         * If the input element is of an unexpected type (perhaps the merchant is using a custom button that is an input element, type=\"button\", or,\n         * it is something presented in the 3DS2 flow - both, TBC) then this next line will not work.\n         * However, the input element still has a setSelectionRange property of type \"function\", but trying to call it will throw an error...\n         * so, try, to see if setSelectionRange can be called\n         */\n        try {\n            if (targetEl.setSelectionRange) {\n                targetEl.focus();\n                targetEl.setSelectionRange(caretPos, caretPos);\n\n                // Quirky! (see comment about iOS Safari, above)\n                if (adjFlag) {\n                    caretPos += 1;\n                    setTimeout(() => {\n                        targetEl.setSelectionRange(caretPos, caretPos);\n                    }, 0);\n                }\n            }\n            /* eslint-disable-next-line */\n        } catch (e) {}\n    } else {\n        /**\n         * Workaround for iOS/Safari bug where keypad doesn't retract when SF paymentMethod is no longer active\n         */\n        const hasKeypadFix: boolean = this.config.keypadFix; // to avoid linting no-lonely-if\n        if (hasKeypadFix) {\n            // Create an input we can add focus to.\n            // Otherwise 2nd & sub times the caret gets left in the SF even though it has lost focus and cannot be typed into\n            const rootNode: HTMLElement = this.props.rootNode;\n            const nuInput: HTMLInputElement = document.createElement('input');\n            nuInput.style.width = '1px';\n            nuInput.style.height = '1px';\n            nuInput.style.opacity = '0';\n            nuInput.style.fontSize = '18px'; // prevents zoom\n            rootNode.appendChild(nuInput);\n            nuInput.focus(); // Takes caret from SF\n            rootNode.removeChild(nuInput); // Without this numpad will be replaced with text pad\n        }\n    }\n\n    // Remove listener - it gets reset by next call to handleAdditionalFields from handleFocus\n    this.destroyTouchendListener();\n\n    // Store the fact we have unset the listener\n    this.state.registerFieldForIos = false;\n\n    // Clear focus on secured field inputs now this checkout element has gained focus\n    this.postMessageToAllIframes({ fieldType: 'webInternalElement', fieldClick: true });\n}\n\n/**\n * re. Disabling arrow keys in iOS - need to enable all fields in the form and tell SFs to disable\n *\n * NOTE: Only called when iOS detected & this.props.shouldDisableIOSArrowKeys = true\n */\nfunction touchstartListener(e: Event): void {\n    this.hasGenuineTouchEvents = true;\n    const targetEl: EventTarget = e.target;\n    // If other element is Input or Span (i.e. label text) TODO apply to other types of el?\n    if (targetEl instanceof HTMLInputElement || targetEl instanceof HTMLSpanElement) {\n        this.postMessageToAllIframes({ fieldType: 'webInternalElement', checkoutTouchEvent: true });\n\n        const name = targetEl.getAttribute('name') ?? targetEl.getAttribute('data-id'); // if targetEl is a label's span it will only have a data-id\n        this.callbacks.onTouchstartIOS?.({ fieldType: 'webInternalElement', name });\n    }\n}\n\n/**\n * This works with the touchend handler to allow us to catch (click) events on non-securedFields elements\n * (re. http://gravitydept.com/blog/js-click-event-bubbling-on-ios - events don't bubble unless the click takes place on a link or input)\n *\n * We can use this event to:\n * 1. Set focus on these other elements, and\n * 2. Tell SecuredFields that this has happened so they can blur themselves\n * (see note in adyen-secured-fields...inputBase.js - \"Blur event never fires on input field\")\n *\n * NOTE: Only called when iOS detected\n */\nfunction handleTouchend(): void {\n    const bodyEl: HTMLBodyElement = selectOne(document, 'body');\n    bodyEl.style.cursor = 'pointer';\n\n    on(bodyEl, 'touchend', this.touchendListener);\n\n    // Store the fact we have set the listener\n    this.state.registerFieldForIos = true;\n}\n\nfunction destroyTouchendListener(): boolean {\n    if (!ua.__IS_IOS) return false; // For when fn is called as result of destroy being called on main csf instance\n\n    const bodyEl: HTMLBodyElement = selectOne(document, 'body');\n    bodyEl.style.cursor = 'auto';\n    off(bodyEl, 'touchend', this.touchendListener);\n    return true;\n}\n\nfunction destroyTouchstartListener(): boolean {\n    if (!ua.__IS_IOS) return false; // For when fn is called as result of destroy being called on main csf instance\n\n    off(document, 'touchstart', this.touchstartListener);\n    return true;\n}\n\nexport default {\n    touchendListener,\n    touchstartListener,\n    handleTouchend,\n    destroyTouchendListener,\n    destroyTouchstartListener\n};\n","import { selectOne, select } from '../../../utilities/dom';\n\nconst getPreviousTabbableEl = (matchEl, getPrevious = true) => {\n    const selStr =\n        '*[data-cse], a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), ' +\n        'button:not([disabled]), object, embed, *[tabindex], *[contenteditable]';\n    const allPotentialTabEls = Array.prototype.slice.call(select(document, selStr));\n    const actualTabEls = [];\n\n    allPotentialTabEls.forEach(potentialTabEl => {\n        const tabIndex = potentialTabEl.getAttribute('tabindex');\n        const isValidTabEl = !tabIndex || parseInt(tabIndex, 10) >= 0; // If tabindex hasn't been set, or is set and is >= 0\n        const bounds = potentialTabEl.getBoundingClientRect();\n        const hasDimensions = bounds.width > 0 && bounds.height > 0;\n\n        if (isValidTabEl && hasDimensions) {\n            actualTabEls.push(potentialTabEl);\n        }\n    });\n\n    // Loop through an array until it finds an element based on a test fn, and then return the elements index\n    const getIndexThruTest = (arr, testFn) => {\n        for (let n = 0; n < arr.length; n += 1) {\n            if (testFn(arr[n])) {\n                return n;\n            }\n        }\n        return -1;\n    };\n\n    // Test function\n    const isElOrContainsEl = tabEl => tabEl === matchEl || matchEl.contains(tabEl);\n\n    // Loop through the actualTabEls array until it finds the matchEl, returning its index\n    const matchElIndex = getIndexThruTest(actualTabEls, isElOrContainsEl);\n\n    // Are we actually getting the previous element OR the next?\n    const indexModifier = getPrevious ? -1 : 1;\n\n    return actualTabEls[matchElIndex + indexModifier];\n};\n\nexport const getPreviousTabbableNonSFElement = (passedFieldType, rootNode, getPrevious?) => {\n    // --\n    const sfEl = selectOne(rootNode, `[data-cse=${passedFieldType}]`);\n    return getPreviousTabbableEl(sfEl, getPrevious);\n};\n\nexport const focusExternalField = (pAdditionalField: HTMLElement): void => {\n    if (pAdditionalField) {\n        pAdditionalField.focus();\n\n        // Quirky! - Needed to work in the Components scenario\n        pAdditionalField.blur();\n        pAdditionalField.focus();\n    }\n};\n","import ua from '../utils/userAgent';\nimport * as logger from '../../utilities/logger';\nimport { shiftTabCreditCard } from '../utils/tabbing/tabScenarioCreditCard';\nimport { shiftTabACH } from '../utils/tabbing/tabScenarioACH';\nimport { shiftTabGiftCard } from '../utils/tabbing/tabScenarioGiftCard';\nimport { shiftTabKCP } from '../utils/tabbing/tabScenarioKCP';\nimport { SFFieldType, ShiftTabObject } from '../../types';\nimport { focusExternalField } from '../utils/tabbing/utils';\n\nconst logTab = false;\n\nfunction handleShiftTab(fieldType: SFFieldType): void {\n    if (logTab) logger.log('### handleTab::handleShiftTab:: fieldType', fieldType);\n\n    let shiftTabObj: ShiftTabObject;\n\n    switch (this.state.type) {\n        // ACH scenario: bankAccountNumber SF followed by a bankLocationId SF\n        case 'ach':\n            shiftTabObj = shiftTabACH(fieldType);\n            break;\n\n        // GIFT CARD scenario: SecurityCode preceded by CardNumber\n        case 'giftcard':\n            shiftTabObj = shiftTabGiftCard(fieldType, this.props.rootNode);\n            break;\n\n        // Credit Card scenarios\n        default:\n            // KCP scenario: Regular credit card but with additional fields\n            // - an encrypted pin/password field preceded by a form field of a non-SF type (d.o.b/taxRefNum)\n            if (this.state.isKCP) {\n                shiftTabObj = shiftTabKCP(fieldType, this.props.rootNode, this.state.hasSeparateDateFields);\n            } else {\n                // Regular Credit Card\n                shiftTabObj = shiftTabCreditCard(fieldType, this.props.rootNode, this.state.hasSeparateDateFields, this.state.numIframes);\n            }\n            break;\n    }\n\n    const fieldToFocus: string = shiftTabObj.fieldToFocus;\n    const additionalField: HTMLElement = shiftTabObj.additionalField;\n\n    if (fieldToFocus) {\n        this.setFocusOnFrame(fieldToFocus, logTab);\n    } else if (additionalField) {\n        focusExternalField(additionalField);\n    }\n}\n\nconst eligibleForTabFix = (): boolean => ua.__IS_FIREFOX || (ua.__IS_IE && ua.__IS_IE <= 11);\n\nfunction handleSFShiftTab(fieldType: SFFieldType): void {\n    if (eligibleForTabFix()) {\n        this.handleShiftTab(fieldType);\n    }\n}\n\nexport default {\n    handleShiftTab,\n    handleSFShiftTab\n};\n","import { ENCRYPTED_BANK_ACCNT_NUMBER_FIELD, ENCRYPTED_BANK_LOCATION_FIELD } from '../../../constants';\nimport { SFFieldType, ShiftTabObject } from '../../../types';\n\n// ACH scenario: bankAccountNumber SF followed by a bankLocationId SF\nexport function shiftTabACH(fieldType: SFFieldType): ShiftTabObject {\n    let additionalField: HTMLElement;\n    let fieldToFocus: SFFieldType;\n\n    if (fieldType === ENCRYPTED_BANK_LOCATION_FIELD) {\n        fieldToFocus = ENCRYPTED_BANK_ACCNT_NUMBER_FIELD;\n    }\n\n    return {\n        fieldToFocus,\n        additionalField\n    };\n}\n","import { ENCRYPTED_CARD_NUMBER, ENCRYPTED_SECURITY_CODE } from '../../../constants';\nimport { getPreviousTabbableNonSFElement } from './utils';\nimport { SFFieldType, ShiftTabObject } from '../../../types';\n\n// GIFT CARD scenario: SecurityCode preceded by CardNumber\nexport function shiftTabGiftCard(fieldType: SFFieldType, rootNode: HTMLElement): ShiftTabObject {\n    let additionalField: HTMLElement;\n    let fieldToFocus: SFFieldType;\n\n    switch (fieldType) {\n        case ENCRYPTED_CARD_NUMBER:\n            additionalField = getPreviousTabbableNonSFElement(ENCRYPTED_CARD_NUMBER, rootNode);\n\n            break;\n\n        case ENCRYPTED_SECURITY_CODE:\n            fieldToFocus = ENCRYPTED_CARD_NUMBER;\n            break;\n\n        default:\n            break;\n    }\n\n    return {\n        fieldToFocus,\n        additionalField\n    };\n}\n","import {\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_SECURITY_CODE,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR,\n    ENCRYPTED_PWD_FIELD\n} from '../../../constants';\nimport { getPreviousTabbableNonSFElement } from './utils';\nimport { SFFieldType, ShiftTabObject } from '../../../types';\n\n// KCP scenario: Regular credit card but with additional fields -\n// an encrypted pin/password field preceded by a form field of a non-SF type (d.o.b/taxRefNum)\nexport function shiftTabKCP(fieldType: SFFieldType, rootNode: HTMLElement, hasSeparateDateFields: boolean): ShiftTabObject {\n    let additionalField: HTMLElement;\n    let fieldToFocus: SFFieldType;\n\n    switch (fieldType) {\n        case ENCRYPTED_CARD_NUMBER:\n            additionalField = getPreviousTabbableNonSFElement(ENCRYPTED_CARD_NUMBER, rootNode);\n            break;\n\n        case ENCRYPTED_EXPIRY_DATE:\n            fieldToFocus = ENCRYPTED_CARD_NUMBER;\n            break;\n\n        case ENCRYPTED_EXPIRY_MONTH:\n            fieldToFocus = ENCRYPTED_CARD_NUMBER;\n            break;\n\n        case ENCRYPTED_EXPIRY_YEAR:\n            fieldToFocus = ENCRYPTED_EXPIRY_MONTH;\n            break;\n\n        case ENCRYPTED_SECURITY_CODE:\n            fieldToFocus = !hasSeparateDateFields ? ENCRYPTED_EXPIRY_DATE : ENCRYPTED_EXPIRY_YEAR;\n            break;\n\n        case ENCRYPTED_PWD_FIELD:\n            additionalField = getPreviousTabbableNonSFElement(fieldType, rootNode);\n            break;\n\n        default:\n            break;\n    }\n\n    return {\n        fieldToFocus,\n        additionalField\n    };\n}\n","import {\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_SECURITY_CODE,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR\n} from '../../../constants';\nimport { getPreviousTabbableNonSFElement } from './utils';\nimport { SFFieldType, ShiftTabObject } from '../../../types';\n\n// Regular Credit Card scenario\nexport function shiftTabCreditCard(\n    fieldType: SFFieldType,\n    rootNode: HTMLElement,\n    hasSeparateDateFields: boolean,\n    numIframes: number\n): ShiftTabObject {\n    let additionalField: HTMLElement;\n    let fieldToFocus: SFFieldType;\n\n    switch (fieldType) {\n        case ENCRYPTED_CARD_NUMBER:\n            additionalField = getPreviousTabbableNonSFElement(ENCRYPTED_CARD_NUMBER, rootNode);\n            break;\n\n        case ENCRYPTED_EXPIRY_DATE:\n            fieldToFocus = ENCRYPTED_CARD_NUMBER;\n            break;\n\n        case ENCRYPTED_EXPIRY_MONTH:\n            fieldToFocus = ENCRYPTED_CARD_NUMBER;\n            break;\n\n        case ENCRYPTED_EXPIRY_YEAR:\n            fieldToFocus = ENCRYPTED_EXPIRY_MONTH;\n            break;\n\n        case ENCRYPTED_SECURITY_CODE:\n            // Shifting focus away from securedFields\n            if (numIframes === 1) {\n                additionalField = getPreviousTabbableNonSFElement(ENCRYPTED_SECURITY_CODE, rootNode);\n            } else {\n                // Focus stays within securedFields\n                fieldToFocus = !hasSeparateDateFields ? ENCRYPTED_EXPIRY_DATE : ENCRYPTED_EXPIRY_YEAR;\n            }\n            break;\n\n        default:\n            break;\n    }\n\n    return {\n        fieldToFocus,\n        additionalField\n    };\n}\n","import {\n    ENCRYPTED_SECURITY_CODE,\n    ENCRYPTED_CARD_NUMBER,\n    DATE_POLICY_REQUIRED,\n    DATE_POLICY_HIDDEN,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR\n} from '../../constants';\nimport postMessageToIframe from '../utils/iframes/postMessageToIframe';\nimport { SFFeedbackObj, SendBrandObject, SendExpiryDateObject } from '../../types';\nimport { BinLookupResponse, BrandObject } from '../../../../../Card/types';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\nimport getIframeContentWin from '../utils/iframes/getIframeContentWin';\nimport { SingleBrandResetObject } from '../../../SFP/types';\n\nexport function sendBrandToCardSF(brandObj: SendBrandObject): void {\n    if (hasOwnProperty(this.state.securedFields, ENCRYPTED_CARD_NUMBER)) {\n        const dataObj: object = {\n            txVariant: this.state.type,\n            ...brandObj,\n            fieldType: ENCRYPTED_CARD_NUMBER,\n            numKey: this.state.securedFields[ENCRYPTED_CARD_NUMBER].numKey\n        };\n        postMessageToIframe(dataObj, getIframeContentWin(this.state, ENCRYPTED_CARD_NUMBER), this.config.loadingContext);\n    }\n}\n\nexport function sendExpiryDatePolicyToSF(expiryDateObj: SendExpiryDateObject): void {\n    const separateDateFields =\n        hasOwnProperty(this.state.securedFields, ENCRYPTED_EXPIRY_MONTH) && hasOwnProperty(this.state.securedFields, ENCRYPTED_EXPIRY_YEAR);\n\n    const dateIframesArr = separateDateFields ? [ENCRYPTED_EXPIRY_MONTH, ENCRYPTED_EXPIRY_YEAR] : [ENCRYPTED_EXPIRY_DATE];\n\n    dateIframesArr.forEach((key: string) => {\n        const dataObj: object = {\n            txVariant: this.state.type,\n            ...expiryDateObj,\n            fieldType: key,\n            numKey: this.state.securedFields[key].numKey\n        };\n        postMessageToIframe(dataObj, getIframeContentWin(this.state, key), this.config.loadingContext);\n    });\n}\n\nexport default function handleBrandFromBinLookup(binLookupResponse: BinLookupResponse, resetObj: SingleBrandResetObject): void {\n    const isGenericCard: boolean = this.state.type === 'card';\n\n    /**\n     * The number of digits in number field has dropped below threshold for BIN lookup (or the bin wasn't found in the DB)\n     * - so tell SF to reset & republish the brand it detects\n     */\n    if (!binLookupResponse || !Object.keys(binLookupResponse).length) {\n        if (isGenericCard) {\n            // This will be sent to CardNumber SF which will trigger the brand to be re-evaluated and broadcast\n            // (which will reset cvcPolicy & expiryDatePolicy in state, here in Checkout)\n            this.sendBrandToCardSF({ brand: 'reset' });\n            // Also pass the reset expiryDatePolicy to the date related SFs so they can reset visibility & aria-required attrs\n            this.sendExpiryDatePolicyToSF({ expiryDatePolicy: DATE_POLICY_REQUIRED });\n        } else {\n            /**\n             * For \"dedicated\" card components, i.e a card component created as: checkout.create('bcmc') but which can accept multiple brands,\n             * there will be no to-and-fro with the securedField iframe to reset brand.\n             * The presence of a resetObj indicates we are in this \"dedicated\"\" scenario, so we need to use the information contained within this object\n             * to internally reset the brand\n             */\n            if (resetObj) {\n                this.processBrand({ ...resetObj, fieldType: ENCRYPTED_CARD_NUMBER } as SFFeedbackObj);\n            }\n        }\n\n        // Reset expiryDatePolicy - which never comes from SF // TODO find out under which circumstances this clause is still required\n        if (this.state.type === 'card' && hasOwnProperty(this.state.securedFields, ENCRYPTED_EXPIRY_DATE)) {\n            this.state.securedFields[ENCRYPTED_EXPIRY_DATE].expiryDatePolicy = DATE_POLICY_REQUIRED;\n        }\n\n        return;\n    }\n\n    const binBrandObj: BrandObject = binLookupResponse.supportedBrands[0];\n\n    const passedBrand: string = binBrandObj.brand;\n\n    // Look first for expiryDatePolicy string otherwise use showExpiryDate boolean\n    const expiryDatePolicy = binBrandObj.expiryDatePolicy ?? (binBrandObj.showExpiryDate === true ? DATE_POLICY_REQUIRED : DATE_POLICY_HIDDEN);\n\n    const brandObj: object = {\n        brand: passedBrand,\n        cvcPolicy: binBrandObj.cvcPolicy,\n        expiryDatePolicy,\n        cvcText: 'Security code',\n        showSocialSecurityNumber: binBrandObj.showSocialSecurityNumber ?? false,\n        fieldType: ENCRYPTED_CARD_NUMBER\n    };\n\n    // Take advantage of function used to handle brand messages from SF in order to process this new brand information\n    this.processBrand(brandObj as SFFeedbackObj);\n\n    if (isGenericCard) {\n        // Pass brand to CardNumber SF\n        const cardObj: SendBrandObject = {\n            brand: passedBrand,\n            enableLuhnCheck: binLookupResponse.supportedBrands[0].enableLuhnCheck !== false,\n            ...(binBrandObj?.panLength && { panLength: binBrandObj?.panLength })\n        };\n        this.sendBrandToCardSF(cardObj);\n\n        // Inform the date related securedFields\n        // - if expiryDatePolicy is 'optional' or 'hidden' they need to set the aria-required attribute / hide themselves\n        this.sendExpiryDatePolicyToSF({ expiryDatePolicy });\n    }\n\n    /**\n     * CHECK IF BRAND CHANGE MEANS FORM IS NOW VALID e.g maestro/bcmc (which don't require cvc) OR bcmc/visa (one of which doesn't require cvc, one of which does)\n     */\n\n    /**\n     * First set the cvcPolicy value on the relevant SecuredFields instance (which will reflect in the cvc field being considered valid,\n     *  as long as it is not in error)...\n     */\n    if (hasOwnProperty(this.state.securedFields, ENCRYPTED_SECURITY_CODE)) {\n        this.state.securedFields[ENCRYPTED_SECURITY_CODE].cvcPolicy = binBrandObj.cvcPolicy;\n    }\n\n    /**\n     * ...then set the expiryDatePolicy...\n     */\n    if (hasOwnProperty(this.state.securedFields, ENCRYPTED_EXPIRY_DATE)) {\n        this.state.securedFields[ENCRYPTED_EXPIRY_DATE].expiryDatePolicy = expiryDatePolicy;\n    } else if (hasOwnProperty(this.state.securedFields, ENCRYPTED_EXPIRY_MONTH) && hasOwnProperty(this.state.securedFields, ENCRYPTED_EXPIRY_YEAR)) {\n        this.state.securedFields[ENCRYPTED_EXPIRY_MONTH].expiryDatePolicy = expiryDatePolicy;\n        this.state.securedFields[ENCRYPTED_EXPIRY_YEAR].expiryDatePolicy = expiryDatePolicy;\n    }\n\n    /**\n     * ...and now re-check if form i.e all the SecuredFields, are valid\n     */\n    this.validateForm();\n}\n","import postMessageToIframe from '../utils/iframes/postMessageToIframe';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\nimport getIframeContentWin from '../utils/iframes/getIframeContentWin';\nimport { SFFieldType } from '../../types';\nimport { CSFThisObject } from '../types';\n\n/**\n * @param csfState - comes from initial, partial, implementation\n * @param csfConfig - comes from initial, partial, implementation\n *\n * @param pFieldType -\n * @param doLog -\n */\nexport function setFocusOnFrame({ csfState, csfConfig }: CSFThisObject, pFieldType: SFFieldType, doLog?: boolean): void {\n    // Check destroySecuredFields hasn't been called (thus clearing the state's securedFields object)\n    if (!hasOwnProperty(csfState.securedFields, pFieldType)) return;\n\n    if (process.env.NODE_ENV === 'development' && doLog) console.log('\\n### setFocusOnFrame:: (SHIFT_TAB) place focus on:', pFieldType);\n\n    const focusData = {\n        txVariant: csfState.type,\n        fieldType: pFieldType,\n        focus: true,\n        numKey: csfState.securedFields[pFieldType].numKey\n    };\n\n    postMessageToIframe(focusData, getIframeContentWin(csfState, pFieldType), csfConfig.loadingContext);\n}\n","import postMessageToIframe from '../utils/iframes/postMessageToIframe';\nimport getIframeContentWin from '../utils/iframes/getIframeContentWin';\nimport { CSFThisObject } from '../types';\nimport { SFFieldType } from '../../types';\n\n/**\n * UTIL TO BROADCAST TO ALL IFRAMES AT ONCE\n * Adds correct txVariant, fieldType and numKey for each iframe\n *\n * @param csfState - comes from initial, partial, implementation\n * @param csfConfig  - comes from initial, partial, implementation\n *\n * @param pDataObj -\n */\nexport function postMessageToAllIframes({ csfState, csfConfig }: CSFThisObject, pDataObj: object): boolean {\n    const objKeys: string[] = Object.keys(pDataObj || {});\n    if (!objKeys.length) {\n        // pDataObj is an object with the 'special' key(s) that represent the reason for making this postMessage\n        // without it/them there is no reason to postMessage\n        return false;\n    }\n\n    const securedFieldKeys: string[] = Object.keys(csfState.securedFields);\n    securedFieldKeys.forEach((pFieldType: SFFieldType) => {\n        const dataObj: object = {\n            txVariant: csfState.type,\n            fieldType: pFieldType,\n            numKey: csfState.securedFields[pFieldType].numKey\n        };\n\n        // Copy across 'special' properties from passed data object\n        objKeys.forEach(pKey => {\n            dataObj[pKey] = pDataObj[pKey];\n        });\n\n        postMessageToIframe(dataObj, getIframeContentWin(csfState, pFieldType), csfConfig.loadingContext);\n    });\n    return true;\n}\n","import { ENCRYPTED_CARD_NUMBER, ENCRYPTED_SECURITY_CODE } from '../../constants';\nimport postMessageToIframe from '../utils/iframes/postMessageToIframe';\nimport { objectsDeepEqual } from '../../utilities/commonUtils';\nimport { BrandStorageObject, CardBrandData, SFFeedbackObj, SFFieldType } from '../../types';\nimport { pick } from '../../../../../../utils/commonUtils';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\nimport getIframeContentWin from '../utils/iframes/getIframeContentWin';\nimport { CSFThisObject } from '../types';\n\nconst checkForBrandChange = (pBrand: BrandStorageObject, storedBrand: BrandStorageObject): boolean => {\n    // if the objects aren't the same - then return true = brandChange has happened\n    return !objectsDeepEqual(pBrand, storedBrand);\n};\n\n/**\n * - If generic card type AND passed brand doesn't equal stored brand - send the new brand to the cvc input\n *    (so it can reassess what length it should be and if any value it contains is now valid)\n *\n * - Create object for onBrand callback aka SFPHandlers.handleOnBrand\n *\n * @param csfState - comes from initial, partial, implementation\n * @param csfConfig - comes from initial, partial, implementation\n * @param csfProps - comes from initial, partial, implementation\n * @param csfCallbacks - comes from initial, partial, implementation\n *\n * @param pFeedbackObj -\n */\nexport default function processBrand({ csfState, csfConfig, csfProps, csfCallbacks }: CSFThisObject, pFeedbackObj: SFFeedbackObj): boolean {\n    const fieldType: SFFieldType = pFeedbackObj.fieldType;\n\n    if (fieldType === ENCRYPTED_CARD_NUMBER) {\n        // Check for new brand...\n        const newBrandObj: BrandStorageObject = {\n            brand: pFeedbackObj.brand,\n            cvcPolicy: pFeedbackObj.cvcPolicy,\n            expiryDatePolicy: pFeedbackObj.expiryDatePolicy,\n            showSocialSecurityNumber: pFeedbackObj.showSocialSecurityNumber\n        };\n        const newBrand: boolean = checkForBrandChange(newBrandObj, csfState.brand);\n\n        if (!newBrand) {\n            return null;\n        }\n\n        // Now BCMC can dual brand with Visa it must also be treated as a generic card so we can show/hide the CVC field\n        const treatAsGenericCard: boolean = csfState.type === 'card' || csfState.type === 'bcmc';\n\n        // ...if also a generic card - tell cvc field...\n        if (treatAsGenericCard && newBrand) {\n            // Store on state so for subsequent brand messages we can compare the new and the old\n            csfState.brand = newBrandObj;\n\n            // Perform postMessage to send brand to CVC field - this also needs to happen for BCMC, single branded cards,\n            // because it needs to know the cvcPolicy (to set the aria-required attribute & to show the iframe)\n            if (hasOwnProperty(csfState.securedFields, ENCRYPTED_SECURITY_CODE)) {\n                const dataObj: object = {\n                    txVariant: csfState.type,\n                    brand: newBrandObj.brand,\n                    fieldType: ENCRYPTED_SECURITY_CODE,\n                    cvcPolicy: pFeedbackObj.cvcPolicy,\n                    numKey: csfState.securedFields[ENCRYPTED_SECURITY_CODE].numKey\n                };\n                postMessageToIframe(dataObj, getIframeContentWin(csfState, ENCRYPTED_SECURITY_CODE), csfConfig.loadingContext);\n            }\n        }\n\n        // Create object with brand related properties\n        const brandInfoObj = treatAsGenericCard\n            ? pick(['brand', 'cvcPolicy', 'cvcText', 'expiryDatePolicy', 'showSocialSecurityNumber']).from(pFeedbackObj)\n            : null;\n\n        if (brandInfoObj && brandInfoObj.brand) {\n            const callbackObj: CardBrandData = brandInfoObj as CardBrandData;\n            callbackObj.type = csfState.type;\n            callbackObj.rootNode = csfProps.rootNode as HTMLElement;\n\n            // ...and call SFPHandlers.handleOnBrand\n            csfCallbacks.onBrand(callbackObj);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n","import postMessageToIframe from '../utils/iframes/postMessageToIframe';\nimport { ENCRYPTED_EXPIRY_DATE, ENCRYPTED_EXPIRY_MONTH, ENCRYPTED_EXPIRY_YEAR } from '../../constants';\nimport { SFFeedbackObj, CardAutoCompleteData } from '../../types';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\nimport getIframeContentWin from '../utils/iframes/getIframeContentWin';\nimport { CSFThisObject } from '../types';\n\n/**\n *\n * @param csfState - comes from initial, partial, implementation\n * @param csfConfig - comes from initial, partial, implementation\n * @param csfCallbacks - comes from initial, partial, implementation\n *\n * @param pFeedbackObj -\n */\nexport function processAutoComplete({ csfState, csfConfig, csfCallbacks }: CSFThisObject, pFeedbackObj: SFFeedbackObj): boolean {\n    /**\n     * NOTE: It seems Chrome has started autofilling across cross-origin iframes. Have tested as far back as v104 but have no resources to test further back\n     * So, in theory for Chrome \\>= v104 we don't need to do any of this, including having special listeners in the securedFields\n     */\n\n    // Specifically for cc-name (but no reason not to propagate all AC objects to the merchant)\n    if (pFeedbackObj.name === 'cc-name') {\n        const feedbackObj: SFFeedbackObj = { ...pFeedbackObj };\n        delete feedbackObj.numKey;\n        const ACFeedbackObj: CardAutoCompleteData = feedbackObj as CardAutoCompleteData;\n        csfCallbacks.onAutoComplete(ACFeedbackObj);\n        return true;\n    }\n\n    // Send date info to relevant secured fields (needed for Safari whose Security model won't allow direct population of fields in 3rd party iframes)\n    if (pFeedbackObj.name === 'cc-exp') {\n        const splittableDateVal = pFeedbackObj.value.replace(/[^0-9]/gi, '/'); // Replace any non-digits with a fwd-slash so we can always split it\n\n        const dateValArr: string[] = splittableDateVal.split('/');\n\n        if (dateValArr.length !== 2) {\n            // To avoid bug in some versions of Safari where date doesn't come through as expected\n            return false;\n        }\n\n        if (dateValArr[0].length === 1) dateValArr[0] = `0${dateValArr[0]}`; // pad, if required\n\n        const acMonthVal: string = dateValArr[0];\n\n        // Extra checks that passed year is a valid value\n        const year = dateValArr[1];\n        const isValidYear = (year?.length === 4 || year?.length === 2) && !isNaN(parseInt(year));\n        if (!isValidYear) {\n            return false;\n        }\n\n        const acYearVal: string = year.slice(-2); // take last 2 digits of year\n        const acDateVal = `${acMonthVal}/${acYearVal}`;\n\n        if (hasOwnProperty(csfState.securedFields, ENCRYPTED_EXPIRY_DATE)) {\n            const dataObj: object = {\n                txVariant: csfState.type,\n                fieldType: ENCRYPTED_EXPIRY_DATE,\n                autoComplete: acDateVal,\n                numKey: csfState.securedFields[ENCRYPTED_EXPIRY_DATE].numKey\n            };\n            postMessageToIframe(dataObj, getIframeContentWin(csfState, ENCRYPTED_EXPIRY_DATE), csfConfig.loadingContext);\n            return true;\n        }\n\n        if (hasOwnProperty(csfState.securedFields, ENCRYPTED_EXPIRY_MONTH)) {\n            const dataObj: object = {\n                txVariant: csfState.type,\n                fieldType: ENCRYPTED_EXPIRY_MONTH,\n                autoComplete: acMonthVal,\n                numKey: csfState.securedFields[ENCRYPTED_EXPIRY_MONTH].numKey\n            };\n            postMessageToIframe(dataObj, getIframeContentWin(csfState, ENCRYPTED_EXPIRY_MONTH), csfConfig.loadingContext);\n        }\n\n        if (hasOwnProperty(csfState.securedFields, ENCRYPTED_EXPIRY_YEAR)) {\n            // Dirty! - Need to wait til next page draw if setting month and year at the same time, otherwise only year gets set\n            setTimeout(() => {\n                const dataObj: object = {\n                    txVariant: csfState.type,\n                    fieldType: ENCRYPTED_EXPIRY_YEAR,\n                    autoComplete: acYearVal,\n                    numKey: csfState.securedFields[ENCRYPTED_EXPIRY_YEAR].numKey\n                };\n                postMessageToIframe(dataObj, getIframeContentWin(csfState, ENCRYPTED_EXPIRY_YEAR), csfConfig.loadingContext);\n            }, 0);\n        }\n        return true;\n    }\n\n    return false;\n}\n","import { SFFeedbackObj, CardFocusData } from '../../types';\nimport ua from '../utils/userAgent';\nimport { CSFThisObject } from '../types';\n\n/**\n * Call focus callback and store which field currently has focus\n *\n * @param csfState - comes from initial, partial, implementation\n * @param csfProps - comes from initial, partial, implementation\n * @param csfCallbacks - comes from initial, partial, implementation\n *\n * @param pFeedbackObj -\n */\nexport function handleFocus({ csfState, csfProps, csfCallbacks }: CSFThisObject, handleIOSTouchEvents, pFeedbackObj: SFFeedbackObj): void {\n    const feedbackObj: SFFeedbackObj = { ...pFeedbackObj };\n\n    delete feedbackObj.numKey;\n\n    feedbackObj.rootNode = csfProps.rootNode as HTMLElement;\n    feedbackObj.type = csfState.type;\n\n    // Store which field has focus\n    const focusString: string = feedbackObj.fieldType;\n\n    // FOCUS EVENT - store who has focus, if it differs to the current value\n    if (feedbackObj.focus) {\n        if (csfState.currentFocusObject !== focusString) {\n            csfState.currentFocusObject = focusString;\n\n            // If iOS detected AND we don't have a (touchend) listener\n            if (ua.__IS_IOS && !csfState.registerFieldForIos) {\n                handleIOSTouchEvents();\n            }\n        }\n    } else {\n        // BLUR EVENT - remove stored focus\n        const focusObjectMatches: boolean = csfState.currentFocusObject === focusString;\n        if (focusObjectMatches) {\n            csfState.currentFocusObject = null;\n        }\n    }\n\n    // Call callback (SecuredFieldsProviderHandlers > onFocus)\n    const callbackObj: CardFocusData = feedbackObj as CardFocusData;\n    callbackObj.currentFocusObject = csfState.currentFocusObject;\n    csfCallbacks.onFocus(callbackObj);\n}\n","// Count how many iframes have successfully been configured and, if its all of them, call callback function\n\nimport { CardAdditionalSFData } from '../../types';\nimport { CSFThisObject } from '../types';\n\n// First, object, param comes from partial implementation\n/**\n * @param csfState - comes from initial, partial, implementation\n * @param csfCallbacks - comes from initial, partial, implementation\n * @param isConfigured - comes from initial, partial, implementation\n *\n * @param pFeedbackObj -\n */\nexport function handleIframeConfigFeedback({ csfState, csfCallbacks }: CSFThisObject, isConfigured, pFeedbackObj): boolean {\n    csfState.iframeConfigCount += 1;\n\n    if (window._b$dl)\n        console.log('### handleIframeConfigFeedback::csfState.iframeConfigCount:: ', csfState.iframeConfigCount, 'who=', pFeedbackObj.fieldType);\n\n    if (!csfState.isConfigured) {\n        if (csfState.iframeConfigCount === csfState.originalNumIframes) {\n            if (process.env.NODE_ENV === 'development' && window._b$dl) {\n                console.log('\\n### handleIframeConfigFeedback::handleIframeConfigFeedback:: ALL IFRAMES CONFIG DO CALLBACK type=', csfState.type);\n            }\n\n            // Announce we're configured to the rest of the system\n            isConfigured();\n\n            return true;\n        }\n    } else {\n        const callbackObj: CardAdditionalSFData = { additionalIframeConfigured: true, fieldType: pFeedbackObj.fieldType, type: csfState.type };\n        csfCallbacks.onAdditionalSFConfig(callbackObj);\n    }\n\n    return false;\n}\n","import cardType from '../utils/cardType';\nimport { CardObject, CardConfigSuccessData } from '../../types';\nimport * as logger from '../../utilities/logger';\nimport { CVC_POLICY_REQUIRED } from '../../constants';\nimport { CSFThisObject } from '../types';\n\n/**\n * @param csfState - comes from initial, partial, implementation\n * @param csfConfig - comes from initial, partial, implementation\n * @param csfProps - comes from initial, partial, implementation\n * @param csfCallbacks - comes from initial, partial, implementation\n * @param validateForm - comes from initial, partial, implementation\n */\nexport function isConfigured({ csfState, csfConfig, csfProps, csfCallbacks }: CSFThisObject, validateForm): boolean {\n    csfState.isConfigured = true;\n\n    const callbackObj: CardConfigSuccessData = { iframesConfigured: true, type: csfState.type, rootNode: csfProps.rootNode as HTMLElement };\n\n    csfCallbacks.onConfigSuccess(callbackObj);\n\n    // If a recurring card\n    if (csfState.numIframes === 1 && csfConfig.isCreditCardType) {\n        if (csfState.type === 'card') {\n            logger.error(\"ERROR: Payment method with a single secured field - but 'type' has not been set to a specific card brand\");\n            return false;\n        }\n\n        // Get card object from txVariant\n        const card: CardObject = cardType.getCardByBrand(csfState.type);\n\n        // It's possible we don't recognise the card type -\n        // scenario: frontend initially recognises card as e.g. Visa - but then backend tokenises it as a sub-brand which we currently don't recognise\n        if (card) {\n            // Assess whether cvc field is required\n            const cvcPolicy = card.cvcPolicy ?? CVC_POLICY_REQUIRED;\n\n            // If cvc is optional - the form can be considered valid\n            if (cvcPolicy !== CVC_POLICY_REQUIRED) {\n                validateForm();\n            }\n        }\n    }\n    return true;\n}\n","import { CardAllValidData, SecuredFields } from '../../types';\nimport { CSFThisObject } from '../types';\n\nconst checkFormIsValid = (pSecuredFields: SecuredFields): boolean => {\n    const securedFieldKeys: string[] = Object.keys(pSecuredFields);\n\n    for (let i = 0, len = securedFieldKeys.length; i < len; i += 1) {\n        const key: string = securedFieldKeys[i];\n\n        if (!pSecuredFields[key].isValid) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * @param csfState - comes from initial, partial, implementation\n * @param csfProps - comes from initial, partial, implementation\n * @param csfCallbacks - comes from initial, partial, implementation\n */\nexport default function validateForm({ csfState, csfProps, csfCallbacks }: CSFThisObject): void {\n    const isValid: boolean = checkFormIsValid(csfState.securedFields);\n\n    const validityHasChanged: boolean = isValid !== csfState.allValid;\n\n    csfState.allValid = isValid;\n\n    // Only call onAllValid callback if value has changed OR is true\n    if (!isValid && !validityHasChanged) return;\n\n    const callbackObj: CardAllValidData = { allValid: isValid, type: csfState.type, rootNode: csfProps.rootNode as HTMLElement };\n\n    // BROADCAST VALID STATE OF THE FORM AS A WHOLE\n    csfCallbacks.onAllValid(callbackObj);\n}\n","import { SFFeedbackObj, CardBinValueData } from '../../types';\nimport { CSFThisObject } from '../types';\n\ninterface DestructuredFeedbackObj {\n    binValue?: string;\n    encryptedBin?: string;\n    uuid?: string;\n}\n\n/**\n * @param csfState - comes from initial, partial, implementation\n * @param csfCallbacks - comes from initial, partial, implementation\n *\n * @param pFeedbackObj -\n */\nexport function handleBinValue({ csfState, csfCallbacks }: CSFThisObject, pFeedbackObj: SFFeedbackObj): void {\n    const { binValue, encryptedBin, uuid }: DestructuredFeedbackObj = pFeedbackObj;\n\n    const callbacksObj: CardBinValueData = { binValue, type: csfState.type };\n\n    if (encryptedBin) {\n        callbacksObj.encryptedBin = encryptedBin;\n        callbacksObj.uuid = uuid;\n    }\n\n    csfCallbacks.onBinValue(callbacksObj);\n}\n","import SecuredField from '../../securedField/SecuredField';\n\nexport function destroySecuredFields(): void {\n    // Tell all securedFields iframes: they will remove all event listeners including keyboard events\n    this.postMessageToAllIframes({ destroy: true });\n\n    // Get ref to all the keys under which SecuredField instances are stores\n    const securedFieldKeys: string[] = Object.keys(this.state.securedFields);\n\n    // Tell each SecuredField instance to:\n    // stop listening to message events, remove iframe window refs, remove iframes\n    // Then remove ref to SecuredField instance\n    securedFieldKeys.forEach(pFieldType => {\n        const sf: SecuredField = this.state.securedFields[pFieldType];\n        if (sf) sf.destroy(); // Comment out if you want to test the 'destroy' effects in the actual SF\n        this.state.securedFields[pFieldType] = null;\n    });\n    // --\n\n    // Stop listening to touchend event on body (iOS only)\n    this.destroyTouchendListener();\n    // Stop listening to touchstart event on document (iOS only)\n    this.destroyTouchstartListener();\n\n    // Clear SecuredField storage object\n    this.state.securedFields = {};\n}\n","import AbstractCSF from './AbstractCSF';\nimport { CSFReturnObject, CSFSetupObject, CSFStateObject, CSFThisObject } from './types';\nimport { StylesObject, CardAdditionalSFData, SFFieldType } from '../types';\nimport { BinLookupResponse } from '../../../../Card/types';\nimport { handleConfig } from './extensions/handleConfig';\nimport { configureCallbacks } from './extensions/configureCallbacks';\nimport { handleValidation } from './extensions/handleValidation';\nimport { handleEncryption } from './extensions/handleEncryption';\nimport { createSecuredFields, createNonCardSecuredFields, createCardSecuredFields, setupSecuredField } from './extensions/createSecuredFields';\nimport handleIOSTouchEvents from './extensions/handleIOSTouchEvents';\nimport handleTab from './extensions/handleTab';\nimport handleBrandFromBinLookup, { sendBrandToCardSF, sendExpiryDatePolicyToSF } from './extensions/handleBrandFromBinLookup';\nimport { setFocusOnFrame } from './partials/setFocusOnFrame';\nimport { postMessageToAllIframes } from './partials/postMessageToAllIframes';\nimport processBrand from './partials/processBrand';\nimport { processAutoComplete } from './partials/processAutoComplete';\nimport { handleFocus } from './partials/handleFocus';\nimport { handleIframeConfigFeedback } from './partials/handleIframeConfigFeedback';\nimport { isConfigured } from './partials/isConfigured';\nimport validateForm from './partials/validateForm';\nimport { handleBinValue } from './partials/handleBinValue';\nimport { destroySecuredFields } from './utils/destroySecuredFields';\nimport postMessageToIframe from './utils/iframes/postMessageToIframe';\nimport getIframeContentWin from './utils/iframes/getIframeContentWin';\nimport * as logger from '../utilities/logger';\nimport { selectOne } from '../utilities/dom';\nimport { on } from '../../../../../utils/listenerUtils';\nimport { partial } from '../utilities/commonUtils';\nimport { hasOwnProperty } from '../../../../../utils/hasOwnProperty';\nimport ua from './utils/userAgent';\nimport { SingleBrandResetObject } from '../../SFP/types';\n\nconst notConfiguredWarning = (str = 'You cannot use secured fields') => {\n    logger.warn(`${str} - they are not yet configured. Use the 'onConfigSuccess' callback to know when this has happened.`);\n};\n\nclass CSF extends AbstractCSF {\n    // --\n    constructor(setupObj: CSFSetupObject) {\n        /**\n         * Initialises:\n         *  - this.props = setupObj: CSFSetupObject\n         *\n         * and empty objects for:\n         *  - this.config: CSFConfigObject (populated in handleConfig.ts)\n         *  - this.callbacks: CSFCallbacksConfig (populated in configureCallbacks.ts\n         *  - this.state: CSFStateObject (populated below)\n         */\n        super(setupObj);\n\n        this.state = {\n            /**\n             *  For generic card will always be 'card'.\n             *  For non-generic card will be hardcoded to a particular txVariant e.g. 'mc' or 'visa'\n             *  For other types of SecuredField will be the passed type e.g. 'ach' or 'giftcard'\n             */\n            type: this.props.type,\n            /**\n             *  For generic card will change as shopper types\n             *  For non-generic card will be fixed\n             */\n            brand: this.props.type !== 'card' ? { brand: this.props.type, cvcPolicy: 'required' } : { brand: null, cvcPolicy: 'required' },\n            allValid: undefined,\n            numIframes: 0,\n            originalNumIframes: 0,\n            iframeCount: 0,\n            iframeConfigCount: 0,\n            isConfigured: false,\n            hasSeparateDateFields: false,\n            currentFocusObject: null,\n            registerFieldForIos: false,\n            securedFields: {},\n            isKCP: false\n        } as CSFStateObject;\n\n        // Create object of references to properties on 'this', that can be used to set up the partials\n        const thisObj: CSFThisObject = { csfState: this.state, csfConfig: this.config, csfProps: this.props, csfCallbacks: this.callbacks };\n\n        // Setup 'this' references\n        this.configHandler = handleConfig;\n\n        this.callbacksHandler = configureCallbacks;\n\n        this.validateForm = partial(validateForm, thisObj);\n\n        this.isConfigured = partial(isConfigured, thisObj, this.validateForm);\n        this.handleIframeConfigFeedback = partial(handleIframeConfigFeedback, thisObj, this.isConfigured);\n\n        this.processBrand = partial(processBrand, thisObj);\n\n        this.handleValidation = handleValidation;\n        this.handleEncryption = handleEncryption;\n\n        this.createSecuredFields = createSecuredFields;\n        this.createNonCardSecuredFields = createNonCardSecuredFields;\n        this.createCardSecuredFields = createCardSecuredFields;\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        this.setupSecuredField = setupSecuredField;\n\n        this.postMessageToAllIframes = partial(postMessageToAllIframes, thisObj);\n\n        this.handleIOSTouchEvents = handleIOSTouchEvents.handleTouchend.bind(this);\n        this.touchendListener = handleIOSTouchEvents.touchendListener.bind(this);\n        this.destroyTouchendListener = handleIOSTouchEvents.destroyTouchendListener.bind(this);\n        this.touchstartListener = handleIOSTouchEvents.touchstartListener.bind(this);\n        this.destroyTouchstartListener = handleIOSTouchEvents.destroyTouchstartListener.bind(this);\n\n        this.setFocusOnFrame = partial(setFocusOnFrame, thisObj);\n        this.handleFocus = partial(handleFocus, thisObj, this.handleIOSTouchEvents);\n\n        this.handleSFShiftTab = handleTab.handleSFShiftTab;\n        this.handleShiftTab = handleTab.handleShiftTab;\n\n        this.destroySecuredFields = destroySecuredFields;\n\n        this.processAutoComplete = partial(processAutoComplete, thisObj);\n\n        this.handleBinValue = partial(handleBinValue, thisObj);\n\n        this.handleBrandFromBinLookup = handleBrandFromBinLookup;\n        this.sendBrandToCardSF = sendBrandToCardSF;\n        this.sendExpiryDatePolicyToSF = sendExpiryDatePolicyToSF;\n\n        // Populate config & callbacks objects & create securedFields\n        this.init();\n    }\n\n    private init(): void {\n        this.configHandler(this.props);\n        this.callbacksHandler(this.props.callbacks);\n\n        /**\n         * Create all the securedFields\n         */\n        const numIframes: number = this.createSecuredFields();\n\n        this.state.numIframes = this.state.originalNumIframes = numIframes;\n\n        this.state.isKCP = !!this.props.isKCP;\n\n        /**\n         * Add touchstart listener\n         * re. Disabling arrow keys in iOS\n         */\n        if (ua.__IS_IOS && this.props.shouldDisableIOSArrowKeys) {\n            this.hasGenuineTouchEvents = false;\n            on(document, 'touchstart', this.touchstartListener);\n        }\n    }\n\n    // Expose functions that can be called on the CSF instance\n    public createReturnObject(): CSFReturnObject {\n        // --\n        const returnObj: CSFReturnObject = {\n            // --\n            updateStyles: (pStyleObject: StylesObject): void => {\n                if (this.state.isConfigured) {\n                    this.postMessageToAllIframes({ styleObject: pStyleObject });\n                } else {\n                    logger.warn(\n                        'You cannot update the secured fields styling ' +\n                            \"- they are not yet configured. Use the 'onConfigSuccess' callback to know when this has happened.\"\n                    );\n                }\n            },\n            setFocusOnFrame: (pFieldType: SFFieldType): void => {\n                if (this.state.isConfigured) {\n                    this.setFocusOnFrame(pFieldType);\n                    // Comment in a quick way to test destroying secured fields (also see comment in destroySecuredFields)\n                    // this.destroySecuredFields();\n                } else {\n                    notConfiguredWarning('You cannot set focus on any secured field');\n                }\n            },\n            // For component based implementation - if showValidation function is called on the component use this\n            // function as a way to notify the CSF that a field is in error\n            isValidated: (pFieldType: SFFieldType, code: string): void => {\n                if (this.state.isConfigured) {\n                    if (hasOwnProperty(this.state.securedFields, pFieldType)) {\n                        this.state.securedFields[pFieldType].hasError = true;\n\n                        // If there's not already an errorType, set one\n                        // NOTE: fixes issue in Components where you first validate and then start typing a maestro number\n                        // - w/o this and the corresponding fix in the SecuredField class the maestro PM will never register as valid\n                        if (this.state.securedFields[pFieldType].errorType === '') {\n                            this.state.securedFields[pFieldType].errorType = 'isValidated';\n                        }\n\n                        // Inform iframe\n                        const dataObj: object = {\n                            txVariant: this.state.type,\n                            fieldType: pFieldType,\n                            externalValidation: true,\n                            code,\n                            numKey: this.state.securedFields[pFieldType].numKey\n                        };\n                        postMessageToIframe(dataObj, getIframeContentWin(this.state, pFieldType), this.config.loadingContext);\n                    }\n                } else {\n                    notConfiguredWarning('You cannot set validated on any secured field');\n                }\n            },\n            hasUnsupportedCard: (pFieldType: SFFieldType, code: string): void => {\n                if (this.state.isConfigured) {\n                    if (hasOwnProperty(this.state.securedFields, pFieldType)) {\n                        //\n                        this.state.securedFields[pFieldType].hasError = !!code;\n                        this.state.securedFields[pFieldType].errorType = code;\n\n                        // Inform iframe\n                        const dataObj: object = {\n                            txVariant: this.state.type,\n                            fieldType: pFieldType,\n                            unsupportedCard: !!code,\n                            code,\n                            numKey: this.state.securedFields[pFieldType].numKey\n                        };\n                        postMessageToIframe(dataObj, getIframeContentWin(this.state, pFieldType), this.config.loadingContext);\n                    }\n                } else {\n                    notConfiguredWarning('You cannot set hasUnsupportedCard on any secured field');\n                }\n            },\n            destroy: (): void => {\n                if (this.state.isConfigured) {\n                    this.destroySecuredFields();\n                } else {\n                    notConfiguredWarning('You cannot destroy secured fields');\n                }\n            },\n            brandsFromBinLookup: (binLookupResponse: BinLookupResponse, resetObj: SingleBrandResetObject): void => {\n                if (!this.config.isCreditCardType) return null;\n\n                if (this.state.isConfigured) {\n                    this.handleBrandFromBinLookup(binLookupResponse, resetObj);\n                } else {\n                    notConfiguredWarning('You cannot set pass brands to secured fields');\n                }\n            },\n            addSecuredField: (pFieldType: SFFieldType): void => {\n                const securedField: HTMLElement = selectOne(this.props.rootNode, `[data-cse=\"${pFieldType}\"]`);\n                if (securedField) {\n                    this.state.numIframes += 1;\n                    this.setupSecuredField(securedField);\n                }\n            },\n            removeSecuredField: (pFieldType: SFFieldType): void => {\n                if (this.state.securedFields[pFieldType]) {\n                    this.state.securedFields[pFieldType].destroy();\n                    delete this.state.securedFields[pFieldType];\n                    this.state.numIframes -= 1;\n                    this.state.iframeCount -= 1;\n\n                    const callbackObj: CardAdditionalSFData = { additionalIframeRemoved: true, fieldType: pFieldType, type: this.state.type };\n                    this.callbacks.onAdditionalSFRemoved(callbackObj);\n                }\n            },\n            setKCPStatus: (isKCP: boolean): void => {\n                this.state.isKCP = isKCP;\n            },\n            sfIsOptionalOrHidden: (fieldType: string): boolean => {\n                return this.state.securedFields[fieldType].isOptionalOrHidden();\n            }\n        };\n\n        return returnObj;\n    }\n}\n\nexport default CSF;\n","import CSF from './CSF';\nimport cardType from './utils/cardType';\nimport * as logger from '../utilities/logger';\nimport { falsy } from '../../../../../utils/commonUtils';\nimport { CSFReturnObject, CSFSetupObject } from './types';\nimport { hasOwnProperty } from '../../../../../utils/hasOwnProperty';\nimport { selectOne } from '../utilities/dom';\n\nconst initCSF = (pSetupObj: CSFSetupObject): CSFReturnObject => {\n    if (!pSetupObj) {\n        throw new Error('No securedFields configuration object defined');\n    }\n\n    const setupObj: CSFSetupObject = { ...pSetupObj };\n\n    try {\n        // Map the generic types (i.e. 'card', 'scheme') to 'card'\n        const isGenericCardType: boolean = cardType.isGenericCardType(setupObj.type);\n        setupObj.type = isGenericCardType ? 'card' : setupObj.type;\n    } catch (e) {\n        // If type has not been specified - ensure there is a default\n        setupObj.type = 'card';\n    }\n\n    // //////// 1. Check passed config object has minimum expected properties //////////\n    if (!hasOwnProperty(setupObj, 'rootNode')) {\n        return logger.error('ERROR: SecuredFields configuration object is missing a \"rootNode\" property');\n    }\n\n    if (falsy(setupObj.clientKey)) {\n        return logger.warn('WARNING: AdyenCheckout configuration object is missing a \"clientKey\" property.');\n    }\n\n    //----------------------------------------------------------------------------\n\n    // //////// 2. Find and store reference to the root DOM element //////////\n    const rootNode: HTMLElement = findRootNode(setupObj.rootNode);\n\n    if (!rootNode) {\n        return logger.error(`ERROR: SecuredFields cannot find a valid rootNode element for ${setupObj.type}`);\n    }\n\n    setupObj.rootNode = rootNode; // Overwrite with actual node (in case we were sent a string)\n\n    // //////// 3. Add warning if in development mode and a custom http domain is detected\n    const origin = window.location.origin;\n\n    if (\n        (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test') &&\n        origin.indexOf('http') > -1 &&\n        origin.indexOf('localhost') === -1 &&\n        origin.indexOf('127.0.0.1') === -1\n    ) {\n        console.warn(\n            'WARNING: you are are running from an insecure context:',\n            origin,\n            '\\nCrypto.subtle cannot function in this environment.\\nThe only secure contexts under http contain \"localhost\" or \"127.0.0.1\" in their url.' +\n                '\\nSee https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts'\n        );\n    }\n\n    const myCSF: CSF = new CSF(setupObj);\n    return myCSF.createReturnObject();\n};\n\nconst findRootNode = pRootNode => {\n    let rootNode;\n\n    // Expect to be sent the actual html node...\n    if (typeof pRootNode === 'object') {\n        rootNode = pRootNode;\n    }\n\n    if (typeof pRootNode === 'string') {\n        // ... but if only sent a string - find it ourselves\n        rootNode = selectOne(document, pRootNode);\n\n        if (!rootNode) {\n            return null;\n        }\n    }\n\n    return rootNode;\n};\n\nexport default initCSF;\n","import { Resources } from '../../../core/Context/Resources';\nimport { camelCaseToSnakeCase } from '../../../utils/textUtils';\nimport { ALL_SECURED_FIELDS, ENCRYPTED } from './lib/constants';\n\n/**\n * Used by SecuredFieldsProviderHandlers\n */\nexport const getCardImageUrl = (brand, resources: Resources) => {\n    const type = brand === 'card' ? 'nocard' : brand || 'nocard';\n\n    const imageOptions = {\n        type,\n        extension: 'svg'\n    };\n\n    return resources.getImage(imageOptions)(type);\n};\n\n/**\n * Used by Card.tsx & SecuredFields.tsx\n * @param fieldType -\n */\nexport const fieldTypeToSnakeCase = (fieldType: string) => {\n    let str = camelCaseToSnakeCase(fieldType);\n    // SFs need their fieldType mapped to what the endpoint expects\n    if (ALL_SECURED_FIELDS.includes(fieldType)) {\n        str = str.substring(ENCRYPTED.length + 1); // strip 'encrypted_' off the string\n    }\n    return str;\n};\n","export const camelCaseToSnakeCase = camelCaseString => {\n    return camelCaseString.replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase();\n};\n\nexport const capitalizeFirstLetter = (str: string): string => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","import { getCardImageUrl } from '../utils';\nimport {\n    ENCRYPTED_SECURITY_CODE,\n    ENCRYPTED_CARD_NUMBER,\n    CVC_POLICY_REQUIRED,\n    DATE_POLICY_REQUIRED,\n    ENCRYPTED_EXPIRY_DATE,\n    OPTIONAL,\n    HIDDEN,\n    ENCRYPTED_EXPIRY_MONTH,\n    ENCRYPTED_EXPIRY_YEAR\n} from '../lib/constants';\nimport {\n    CardErrorData,\n    CardFocusData,\n    CardBrandData,\n    CardAllValidData,\n    CardFieldValidData,\n    CardAutoCompleteData,\n    CardConfigSuccessData,\n    CardLoadData,\n    SFKeyPressObj\n} from '../lib/types';\nimport { existy } from '../../../../utils/commonUtils';\nimport AdyenCheckoutError from '../../../../core/Errors/AdyenCheckoutError';\n\n/**\n * Emits the onLoad event\n * Here we can assume all securedFields iframes have fired their 'load' event\n */\nfunction handleOnLoad(cbObj: CardLoadData): void {\n    // Clear 'loading' timeout\n    clearTimeout(this.csfLoadFailTimeout);\n    this.csfLoadFailTimeout = null;\n\n    // Propagate onLoad event\n    this.props.onLoad(cbObj);\n\n    /**\n     * Having seen that the securedFields iframes have loaded some kind of content (we don't know what, yet)\n     * - setTimeout since we expect to get a successful configuration message \"within a reasonable time\"\n     *\n     * Now we catch clientKey & environment mismatch in core.ts - this timeout being called indicates that the securedFields have not all configured\n     * - so we need to clear the loading spinner to see if the securedFields are reporting anything\n     */\n    this.csfConfigFailTimeout = setTimeout(() => {\n        if (this.state.status !== 'ready') {\n            // Hide the spinner\n            this.setState({ status: 'csfConfigFailure' });\n            // Report the error\n            this.props.onError(new AdyenCheckoutError('ERROR', 'secured fields have failed to configure'));\n        }\n    }, this.csfConfigFailTimeoutMS);\n}\n\n/**\n * Emits the onConfigSuccess (ready) event\n * Here we can assume CSF is loaded, configured and ready to be used\n */\nfunction handleOnConfigSuccess(cbObj: CardConfigSuccessData): void {\n    // Clear 'config' timeout\n    clearTimeout(this.csfConfigFailTimeout);\n    this.csfConfigFailTimeout = null;\n\n    this.setState({ status: 'ready' }, () => {\n        // Propagate onConfigSuccess event\n        this.props.onConfigSuccess(cbObj);\n    });\n}\n\n/**\n * Emits the onAllValid event\n */\nfunction handleOnAllValid(status: CardAllValidData): boolean {\n    // Form cannot be valid whilst there is an unsupported card\n    if (this.state.detectedUnsupportedBrands) {\n        return false;\n    }\n\n    this.setState({ isSfpValid: status.allValid }, () => {\n        // New - fixes maestro-with-error-on-optional-cvc-field bug\n        this.props.onChange(this.state, { event: 'handleOnAllValid' });\n        // Propagate onAllValid event\n        this.props.onAllValid(status);\n    });\n\n    return true;\n}\n\n/**\n * Saves a field value from CSF in the CardInput state\n * Emits the onFieldValid event\n */\nfunction handleOnFieldValid(fieldObj: CardFieldValidData): boolean {\n    // A card number field cannot be valid whilst there is an unsupported card\n    if (this.state.detectedUnsupportedBrands && fieldObj.fieldType === ENCRYPTED_CARD_NUMBER) {\n        return false;\n    }\n\n    const setValidFieldState = prevState => ({\n        data: { ...prevState.data, [fieldObj.encryptedFieldName]: fieldObj.blob },\n        valid: { ...prevState.valid, [fieldObj.encryptedFieldName]: fieldObj.valid },\n        /**\n         * For a field that has just received valid:true (field has just been completed & encrypted) - mark the error state for this field as false\n         * For a field that has just received valid:false (field was encrypted, now is not)\n         *  - field is either in a state of being incomplete but without errors (digit deleted) - so mark the error state for this field as false\n         *  or has switched from valid/encrypted state to being in error (digit edited to one that puts the field in error) - so keep any error that\n         *  might just have been set\n         */\n        errors: { ...prevState.errors, [fieldObj.fieldType]: prevState.errors[fieldObj.fieldType] ?? false }\n    });\n\n    this.setState(setValidFieldState, () => {\n        this.props.onChange(this.state, { event: 'handleOnFieldValid', fieldType: fieldObj.fieldType });\n\n        // Propagate onFieldValid event\n        this.props.onFieldValid(fieldObj);\n    });\n\n    return true;\n}\n\nfunction fieldIsInError(fieldType: string, policy: string, numCharsObj: object, errorsObj) {\n    return (policy === OPTIONAL || policy === HIDDEN) && numCharsObj[fieldType] === 0 ? false : errorsObj[fieldType];\n}\n\n/**\n * Saves the card brand in state\n * Emits the onBrand event\n */\nfunction handleOnBrand(cardInfo: CardBrandData): void {\n    this.setState(\n        prevState => {\n            /**\n             * If we change brand to one where the cvc or date field(s) are not required & are empty - then these fields cannot be in error\n             * (scenario: have validated empty form, then choose brand w. optional/hidden cvc or date)...\n             * ...else propagate the existing error.\n             */\n            const cvcFieldInError = fieldIsInError(ENCRYPTED_SECURITY_CODE, cardInfo.cvcPolicy, this.numCharsInField, prevState.errors);\n\n            const dateFieldInError =\n                this.numDateFields === 1\n                    ? fieldIsInError(ENCRYPTED_EXPIRY_DATE, cardInfo.expiryDatePolicy, this.numCharsInField, prevState.errors)\n                    : null;\n\n            // For custom card comp\n            const monthFieldInError =\n                this.numDateFields === 2\n                    ? fieldIsInError(ENCRYPTED_EXPIRY_MONTH, cardInfo.expiryDatePolicy, this.numCharsInField, prevState.errors)\n                    : null;\n\n            const yearFieldInError =\n                this.numDateFields === 2\n                    ? fieldIsInError(ENCRYPTED_EXPIRY_YEAR, cardInfo.expiryDatePolicy, this.numCharsInField, prevState.errors)\n                    : null;\n            // --\n            /** end */\n\n            return {\n                brand: cardInfo.brand,\n                cvcPolicy: cardInfo.cvcPolicy ?? CVC_POLICY_REQUIRED,\n                showSocialSecurityNumber: cardInfo.showSocialSecurityNumber,\n                errors: {\n                    ...prevState.errors,\n                    ...(existy(cvcFieldInError) && { [ENCRYPTED_SECURITY_CODE]: cvcFieldInError }),\n                    ...(existy(dateFieldInError) && { [ENCRYPTED_EXPIRY_DATE]: dateFieldInError }),\n                    ...(existy(monthFieldInError) && { [ENCRYPTED_EXPIRY_MONTH]: monthFieldInError }),\n                    ...(existy(yearFieldInError) && { [ENCRYPTED_EXPIRY_YEAR]: yearFieldInError })\n                },\n                expiryDatePolicy: cardInfo.expiryDatePolicy ?? DATE_POLICY_REQUIRED\n            };\n        },\n        () => {\n            this.props.onChange(this.state, { event: 'handleOnBrand' });\n\n            // Enhance data object with the url for the brand image, first checking if the merchant has configured their own one for this brand\n            const brandImageUrl = this.props.brandsConfiguration[cardInfo.brand]?.icon ?? getCardImageUrl(cardInfo.brand, this.props.resources);\n            this.props.onBrand({ ...cardInfo, brandImageUrl });\n        }\n    );\n}\n\n/**\n * Handles validation errors\n */\nfunction handleOnError(cbObj: CardErrorData, hasUnsupportedCard: boolean = null): boolean {\n    const errorCode = cbObj.error;\n\n    this.setState(\n        prevState => ({\n            errors: { ...prevState.errors, [cbObj.fieldType]: errorCode || false },\n            // If dealing with an unsupported card ensure these card number related fields are reset re. pasting a full, unsupported card straight in\n            ...(hasUnsupportedCard && { data: { ...prevState.data, [ENCRYPTED_CARD_NUMBER]: undefined } }),\n            ...(hasUnsupportedCard && { valid: { ...prevState.valid, [ENCRYPTED_CARD_NUMBER]: false } }),\n            ...(hasUnsupportedCard && { isSfpValid: false })\n        }),\n        () => {\n            this.props.onChange(this.state, { event: 'handleOnError', fieldType: cbObj.fieldType });\n        }\n    );\n\n    return true;\n}\n\nfunction handleFocus(cbObj: CardFocusData): void {\n    this.numCharsInField[cbObj.fieldType] = cbObj.numChars;\n\n    this.props.onFocus(cbObj);\n}\n\nfunction handleOnTouchstartIOS(cbObj): void {\n    // disableIOSArrowKeys is either null or a function (in which case we should call it)\n    this.props.disableIOSArrowKeys?.(cbObj);\n}\n\n// Only called for holder name (from CSF>partials>processAutoComplete)\nfunction handleOnAutoComplete(cbObj: CardAutoCompleteData): void {\n    this.setState({ autoCompleteName: cbObj.value }, () => {\n        this.props.onChange(this.state, { event: 'handleOnAutoComplete', fieldType: cbObj.fieldType });\n        this.setState({ autoCompleteName: null }); // Nullify ref after sending it (lets shopper edit holder name)\n    });\n    this.props.onAutoComplete(cbObj);\n}\n\nfunction handleKeyPressed(obj: SFKeyPressObj): void {\n    if (obj.action === 'enterKeyPressed') {\n        const kb = new KeyboardEvent('keypress', {\n            bubbles: true,\n            cancelable: true,\n            key: 'Enter',\n            code: 'Enter'\n        });\n        this.props.handleKeyPress?.(kb);\n    }\n}\n\n/**\n * Handles cases where no secured fields are necessary (one click payments without CVC)\n * Automatically resolves with a valid state\n */\nfunction handleOnNoDataRequired(): void {\n    this.setState({ status: 'ready' }, () => this.props.onChange({ isSfpValid: true }));\n}\n\nexport default {\n    handleFocus,\n    handleOnAllValid,\n    handleOnAutoComplete,\n    handleOnFieldValid,\n    handleOnLoad,\n    handleOnConfigSuccess,\n    handleOnBrand,\n    handleOnError,\n    handleOnNoDataRequired,\n    handleOnTouchstartIOS,\n    handleKeyPressed\n};\n","import { Component } from 'preact';\nimport { getErrorObject, getFields, getErrorReducer, validFieldsReducer } from './SFPUtils';\nimport initCSF from '../lib/CSF';\nimport handlers from './SecuredFieldsProviderHandlers';\nimport defaultProps from './defaultProps';\nimport { SFPProps, SFPState, SingleBrandResetObject } from './types';\nimport {\n    StylesObject,\n    CardErrorData,\n    CardFocusData,\n    CardBrandData,\n    CardAllValidData,\n    CardFieldValidData,\n    CardAutoCompleteData,\n    CardConfigSuccessData,\n    CardLoadData,\n    SFKeyPressObj\n} from '../lib/types';\nimport { CSFReturnObject, CSFSetupObject } from '../lib/CSF/types';\nimport { CVC_POLICY_REQUIRED, DATE_POLICY_REQUIRED, DEDICATED_CARD_COMPONENTS, ENCRYPTED_CARD_NUMBER, ENCRYPTED_PWD_FIELD } from '../lib/constants';\nimport { BinLookupResponse } from '../../../Card/types';\nimport AdyenCheckoutError from '../../../../core/Errors/AdyenCheckoutError';\nimport { SFStateErrorObj } from '../../../Card/components/CardInput/types';\nimport { getErrorMessageFromCode } from '../../../../core/Errors/utils';\nimport { SF_ErrorCodes } from '../../../../core/Errors/constants';\n\n/**\n * SecuredFieldsProvider:\n * Initialises & handles the client-side part of SecuredFields\n */\nclass SecuredFieldsProvider extends Component<SFPProps, SFPState> {\n    private csfLoadFailTimeout: number;\n    private csfLoadFailTimeoutMS: number;\n    private csfConfigFailTimeout: number;\n    private csfConfigFailTimeoutMS: number;\n    private numCharsInField: object;\n    private rootNode;\n    private numDateFields: number;\n    private csf: CSFReturnObject;\n    private handleOnLoad: (obj: CardLoadData) => void;\n    private handleOnConfigSuccess: (obj: CardConfigSuccessData) => void;\n    private handleOnFieldValid: (obj: CardFieldValidData) => void;\n    private handleOnAllValid: (obj: CardAllValidData) => void;\n    private handleOnBrand: (obj: CardBrandData) => void;\n    private handleFocus: (obj: CardFocusData) => void;\n    private handleOnError: (obj: CardErrorData, hasUnsupportedCard?: boolean) => void;\n    private handleOnAutoComplete: (obj: CardAutoCompleteData) => void;\n    private handleOnNoDataRequired: () => void;\n    private handleOnTouchstartIOS: (obj) => void;\n    private handleKeyPressed: (obj: SFKeyPressObj) => void;\n    public state: SFPState;\n    public props;\n    private issuingCountryCode;\n\n    constructor(props: SFPProps) {\n        super(props);\n\n        const stateObj: SFPState = {\n            status: 'loading',\n            brand: props.type,\n            errors: {},\n            valid: {},\n            data: {},\n            cvcPolicy: CVC_POLICY_REQUIRED,\n            expiryDatePolicy: DATE_POLICY_REQUIRED,\n            isSfpValid: false,\n            hasKoreanFields: props.hasKoreanFields\n        };\n        this.state = stateObj;\n\n        this.csfLoadFailTimeout = null;\n        this.csfLoadFailTimeoutMS = 30000;\n\n        this.csfConfigFailTimeout = null;\n        this.csfConfigFailTimeoutMS = 15000;\n\n        this.numCharsInField = {};\n\n        // Handlers\n        this.handleOnLoad = handlers.handleOnLoad.bind(this);\n        this.handleOnConfigSuccess = handlers.handleOnConfigSuccess.bind(this);\n        this.handleOnFieldValid = handlers.handleOnFieldValid.bind(this);\n        this.handleOnAllValid = handlers.handleOnAllValid.bind(this);\n        this.handleOnBrand = handlers.handleOnBrand.bind(this);\n        this.handleFocus = handlers.handleFocus.bind(this);\n        this.handleOnError = handlers.handleOnError.bind(this);\n        this.handleOnNoDataRequired = handlers.handleOnNoDataRequired.bind(this);\n        this.handleOnAutoComplete = handlers.handleOnAutoComplete.bind(this);\n        this.handleOnTouchstartIOS = handlers.handleOnTouchstartIOS.bind(this); // Only called when iOS detected\n        this.handleKeyPressed = handlers.handleKeyPressed.bind(this);\n\n        this.processBinLookupResponse = this.processBinLookupResponse.bind(this);\n\n        // Bindings for functions exposed to users of this component: SecuredFields & CardInput\n        this.setFocusOn = this.setFocusOn.bind(this);\n        this.updateStyles = this.updateStyles.bind(this);\n        this.handleUnsupportedCard = this.handleUnsupportedCard.bind(this);\n        this.showValidation = this.showValidation.bind(this);\n        this.destroy = this.destroy.bind(this);\n    }\n\n    public static defaultProps = defaultProps;\n\n    public componentDidMount(): void {\n        // When SFP instantiated through SecuredFieldsInput c.f. CardInput\n        if (this.props.rootNode) {\n            this.setRootNode(this.props.rootNode);\n        }\n\n        // Find encryptedFields and map them to the values we use to store valid states\n        const fields = getFields(this.rootNode);\n        const valid = fields.reduce(validFieldsReducer, {});\n\n        this.setState({ valid });\n\n        // Populate numCharsInField object\n        fields.forEach(field => {\n            this.numCharsInField[field] = 0;\n        });\n\n        // Store how many dateFields we are dealing with visually\n        this.numDateFields = fields.filter(f => f.match(/Expiry/)).length;\n\n        if (fields.length) {\n            this.destroy(); // TODO test if this solves the React double render problem.\n            this.initializeCSF(this.rootNode);\n        } else {\n            this.handleOnNoDataRequired();\n        }\n    }\n\n    public componentDidUpdate() {\n        this.checkForKCPFields();\n    }\n\n    public componentWillUnmount(): void {\n        this.csf = null;\n        clearTimeout(this.csfLoadFailTimeout);\n        clearTimeout(this.csfConfigFailTimeout);\n    }\n\n    private initializeCSF(root: HTMLElement): void {\n        let loadingContext = this.props.loadingContext;\n\n        // For loading securedFields from local server during development\n        if (process.env.NODE_ENV === 'development' && process.env.__SF_ENV__ !== 'build') {\n            loadingContext = process.env.__SF_ENV__;\n        }\n\n        // TODO\n        // if(!this.props.keypadFix){\n        // send analytics action because to know if anyone *ever* sets this config prop\n        // }\n\n        const csfSetupObj: CSFSetupObject = {\n            rootNode: root,\n            type: this.props.type,\n            clientKey: this.props.clientKey,\n            cardGroupTypes: this.props.brands,\n            autoFocus: this.props.autoFocus,\n            trimTrailingSeparator: this.props.trimTrailingSeparator,\n            loadingContext,\n            keypadFix: this.props.keypadFix,\n            showWarnings: this.props.showWarnings,\n            iframeUIConfig: {\n                sfStyles: this.props.styles\n            },\n            i18n: this.props.i18n,\n            callbacks: {\n                onLoad: this.handleOnLoad,\n                onConfigSuccess: this.handleOnConfigSuccess,\n                onFieldValid: this.handleOnFieldValid,\n                onAllValid: this.handleOnAllValid,\n                onBrand: this.handleOnBrand,\n                onError: this.handleOnError,\n                onFocus: this.handleFocus,\n                onBinValue: this.props.onBinValue,\n                onAutoComplete: this.handleOnAutoComplete,\n                onAdditionalSFConfig: this.props.onAdditionalSFConfig,\n                onAdditionalSFRemoved: this.props.onAdditionalSFRemoved,\n                onTouchstartIOS: this.handleOnTouchstartIOS,\n                onKeyPressed: this.handleKeyPressed\n            },\n            isKCP: this.state.hasKoreanFields,\n            legacyInputMode: this.props.legacyInputMode,\n            minimumExpiryDate: this.props.minimumExpiryDate,\n            implementationType: this.props.implementationType || 'components', // to distinguish between 'regular' and 'custom' card component\n            forceCompat: this.props.forceCompat,\n            maskSecurityCode: this.props.maskSecurityCode,\n            exposeExpiryDate: this.props.exposeExpiryDate,\n            shouldDisableIOSArrowKeys: !!this.props.disableIOSArrowKeys, // convert whether function has been defined into a boolean\n            placeholders: this.props.placeholders ?? {},\n            showContextualElement: this.props.showContextualElement\n        };\n\n        this.csf = initCSF(csfSetupObj);\n\n        /**\n         * Expect to at least have had the handleOnLoad callback called within this time\n         * - if this hasn't happened then something has happened to interrupt the loading of the securedFields\n         * So we need to clear the loading spinner to see if the securedFields are reporting anything\n         */\n        // @ts-ignore - timout 'type' is a number\n        this.csfLoadFailTimeout = setTimeout(() => {\n            if (this.state.status !== 'ready') {\n                // Hide the spinner\n                this.setState({ status: 'csfLoadFailure' });\n                // Report the error\n                this.props.onError(new AdyenCheckoutError('ERROR', 'secured field iframes have failed to load'));\n            }\n        }, this.csfLoadFailTimeoutMS);\n    }\n\n    private checkForKCPFields() {\n        let needsKoreanFields = false;\n        if (this.props.koreanAuthenticationRequired) {\n            needsKoreanFields = this.issuingCountryCode ? this.issuingCountryCode === 'kr' : this.props.countryCode === 'kr';\n        }\n\n        // Was korean, now isn't - hide password field\n        if (this.state.hasKoreanFields && !needsKoreanFields) {\n            // Clear any stored data\n            const setRemovedFieldState = prevState => ({\n                data: { ...prevState.data, [ENCRYPTED_PWD_FIELD]: undefined },\n                valid: { ...prevState.valid, [ENCRYPTED_PWD_FIELD]: false },\n                errors: { ...prevState.errors, [ENCRYPTED_PWD_FIELD]: false },\n                hasKoreanFields: false\n            });\n\n            this.setState(setRemovedFieldState, () => {\n                this.props.onChange(this.state);\n            });\n\n            this.csf.removeSecuredField(ENCRYPTED_PWD_FIELD);\n            this.csf.setKCPStatus(false);\n        }\n\n        // Wasn't korean, now is - show password field\n        if (!this.state.hasKoreanFields && needsKoreanFields) {\n            const setAddedFieldState = prevState => ({\n                valid: { ...prevState.valid, [ENCRYPTED_PWD_FIELD]: false },\n                hasKoreanFields: true,\n                isSfpValid: false\n            });\n\n            this.setState(setAddedFieldState, () => {\n                this.props.onChange(this.state);\n            });\n\n            this.csf.addSecuredField(ENCRYPTED_PWD_FIELD);\n            this.csf.setKCPStatus(true);\n        }\n    }\n\n    public getChildContext(): object {\n        return { i18n: this.props.i18n };\n    }\n\n    public handleUnsupportedCard(errObj: CardErrorData): boolean {\n        const hasUnsupportedCard = !!errObj.error;\n\n        // Store the brand(s) we detected and which we don't support\n        if (hasUnsupportedCard) {\n            this.setState({ detectedUnsupportedBrands: errObj.detectedBrands });\n        }\n\n        errObj.rootNode = this.rootNode; // Needed for CustomCard\n        this.handleOnError(errObj, hasUnsupportedCard);\n        // Inform CSF that the number field has an unsupportedCard error (or that it has been cleared)\n        if (this.csf) {\n            this.csf.hasUnsupportedCard(ENCRYPTED_CARD_NUMBER, errObj.error);\n        }\n        return hasUnsupportedCard;\n    }\n\n    public setFocusOn(frame: string): void {\n        if (this.csf) this.csf.setFocusOnFrame(frame);\n    }\n\n    public updateStyles(stylesObj: StylesObject): void {\n        if (this.csf) this.csf.updateStyles(stylesObj);\n    }\n\n    public sfIsOptionalOrHidden(fieldType: string): boolean {\n        return this.csf.sfIsOptionalOrHidden(fieldType);\n    }\n\n    public destroy(): void {\n        if (this.csf) this.csf.destroy();\n    }\n\n    public showValidation(): void {\n        const { numDateFields, state }: SecuredFieldsProvider = this;\n\n        Object.keys(state.valid)\n            .reduce(getErrorReducer(numDateFields, state), [])\n            .forEach(field => {\n                // For each detected error pass an error object to the handler (calls error callback & sets state)\n                const errorObj: CardErrorData = getErrorObject(field, this.rootNode, state);\n                this.handleOnError(errorObj, !!state.detectedUnsupportedBrands);\n                // Inform the secured-fields instance of which fields have been found to have errors\n                if (this.csf && this.csf.isValidated) {\n                    this.csf.isValidated(field, errorObj.error);\n                }\n            });\n    }\n\n    /**\n     * Map SF errors to ValidationRuleResult-like objects, for CardInput component\n     */\n    public mapErrorsToValidationRuleResult(): SFStateErrorObj {\n        const fieldNames: string[] = Object.keys(this.state.errors);\n\n        const sfStateErrorsObj = fieldNames.reduce((acc, fieldName) => {\n            const errorCode = this.state.errors[fieldName];\n            if (errorCode) {\n                acc[fieldName] = {\n                    isValid: false,\n                    errorMessage: getErrorMessageFromCode(errorCode, SF_ErrorCodes), // this is the human-readable, untranslated, explanation of the error that will exist on the error object in card.state.errors\n                    // For v5 the object found in state.errors should also contain the additional properties that used to be sent to the onError callback\n                    // namely: translation, errorCode, a ref to rootNode &, in the case of failed binLookup, an array of the detectedBrands\n                    errorI18n: this.props.i18n.get(errorCode),\n                    error: errorCode,\n                    rootNode: this.rootNode,\n                    ...(this.state.detectedUnsupportedBrands && { detectedBrands: this.state.detectedUnsupportedBrands })\n                };\n            } else {\n                acc[fieldName] = null;\n            }\n            return acc;\n        }, {});\n        return sfStateErrorsObj;\n    }\n\n    public processBinLookupResponse(binLookupResponse: BinLookupResponse, resetObject: SingleBrandResetObject): void {\n        // If we were dealing with an unsupported card & now we have a valid /binLookup response (or a response triggering a reset of the UI),\n        // - reset state to clear the error & the stored unsupportedBrands and, in the case of a valid /binLookup response, inform CSF (via handleUnsupportedCard)\n        // (Scenario: from an unsupportedCard state the shopper has pasted another number long enough to trigger a /binLookup)\n        if (this.state.detectedUnsupportedBrands) {\n            this.setState(prevState => ({\n                errors: { ...prevState.errors, [ENCRYPTED_CARD_NUMBER]: false },\n                detectedUnsupportedBrands: null\n            }));\n\n            // If we have some sort of binLookupResponse object then this isn't the reset caused by digits dropping below a threshold\n            // - so call handleUnsupportedCard to clear the error\n            if (this.csf && binLookupResponse) {\n                const errObj: CardErrorData = {\n                    type: 'card',\n                    fieldType: 'encryptedCardNumber',\n                    error: ''\n                };\n                this.handleUnsupportedCard(errObj);\n            }\n        }\n\n        this.issuingCountryCode = binLookupResponse?.issuingCountryCode?.toLowerCase();\n\n        const hasBrandedResetObj = resetObject?.brand;\n\n        /**\n         * Are we dealing with a \"dedicated\" card scenario i.e a card component created as: checkout.create('bcmc') but which can accept multiple brands\n         * - in which case we will need to reset brand and pass on the resetObj to CSF\n         */\n        const mustResetDedicatedBrand = hasBrandedResetObj && DEDICATED_CARD_COMPONENTS.includes(resetObject.brand);\n\n        if (mustResetDedicatedBrand) {\n            // resetObject.brand will be the value of the brand whose logo we want to reshow in the UI\n            this.setState(resetObject, () => {\n                this.props.onChange(this.state);\n            });\n        }\n\n        /**\n         * Scenarios:\n         *\n         * - RESET (binLookupResponse === null): The number of digits in number field has dropped below threshold for BIN lookup\n         * - RESULT (binLookupResponse.supportedBrands.length === 1): binLookup has found a result so inform CSF\n         *\n         * In the RESET scenario, for \"dedicated\" card components we also need to pass on the resetObject since this contains information about\n         * the brand that CSF needs to reset to, internally.\n         */\n        if (this.csf) this.csf.brandsFromBinLookup(binLookupResponse, mustResetDedicatedBrand ? resetObject : null);\n    }\n\n    private setRootNode = (input: HTMLElement): void => {\n        this.rootNode = input;\n    };\n\n    public render(props, state) {\n        return props.render({ setRootNode: this.setRootNode, setFocusOn: this.setFocusOn }, state);\n    }\n}\n\nexport default SecuredFieldsProvider;\n","export default {\n    type: 'card',\n\n    // Settings\n    keypadFix: true,\n    rootNode: null,\n    loadingContext: null,\n    brands: [],\n    showWarnings: false,\n    autoFocus: true,\n    trimTrailingSeparator: true,\n\n    // Events\n    onChange: () => {},\n    onLoad: () => {},\n    onConfigSuccess: () => {},\n    onAllValid: () => {},\n    onFieldValid: () => {},\n    onBrand: () => {},\n    onError: () => {},\n    onBinValue: () => {},\n    onFocus: () => {},\n    onAutoComplete: () => {},\n    handleKeyPress: () => {},\n\n    // Customization\n    styles: {}\n};\n","import Language from '../../../../language/Language';\nimport { BinLookupResponse, BrandConfiguration, CardBrandsConfiguration, CardBackendConfiguration, DualBrandSelectElement } from '../../types';\nimport { InstallmentOptions } from './components/types';\nimport { ValidationResult } from '../../../internal/PersonalDetails/types';\nimport {\n    CardAllValidData,\n    CardAutoCompleteData,\n    CardBinValueData,\n    CardBrandData,\n    CardConfigSuccessData,\n    CardFieldValidData,\n    CardLoadData,\n    CVCPolicyType,\n    DatePolicyType\n} from '../../../internal/SecuredFields/lib/types';\nimport Specifications from '../../../internal/Address/Specifications';\nimport { AddressSchema } from '../../../internal/Address/types';\nimport { CardErrorData, StylesObject } from '../../../internal/SecuredFields/lib/types';\nimport { Resources } from '../../../../core/Context/Resources';\nimport { SRPanel } from '../../../../core/Errors/SRPanel';\nimport RiskElement from '../../../../core/RiskModule';\nimport { DisclaimerMsgObject } from '../../../internal/DisclaimerMessage/DisclaimerMessage';\nimport { OnAddressLookupType, OnAddressSelectedType } from '../../../internal/Address/components/AddressSearch';\nimport { ComponentMethodsRef } from '../../../internal/UIElement/types';\nimport { AddressData, PaymentAmount } from '../../../../types/global-types';\nimport { AnalyticsModule } from '../../../../types/global-types';\nimport { FieldErrorAnalyticsObject } from '../../../../core/Analytics/types';\n\nexport interface CardInputValidState {\n    holderName?: boolean;\n    billingAddress?: boolean;\n    socialSecurityNumber?: boolean;\n    encryptedCardNumber?: boolean;\n    encryptedExpiryMonth?: boolean;\n    encryptedExpiryYear?: boolean;\n    encryptedSecurityCode?: boolean;\n    taxNumber?: boolean;\n    encryptedPassword?: boolean;\n}\n\nexport interface CardInputErrorState {\n    holderName?: ValidationResult;\n    billingAddress?: ValidationResult;\n    socialSecurityNumber?: ValidationResult;\n    encryptedCardNumber?: boolean;\n    encryptedExpiryDate?: boolean;\n    encryptedSecurityCode?: boolean;\n    taxNumber?: ValidationResult;\n    encryptedPassword?: boolean;\n}\n\nexport interface CardInputDataState {\n    holderName?: string;\n    billingAddress?: AddressData;\n    socialSecurityNumber?: string;\n    taxNumber?: string;\n}\n\ntype PlaceholderKeys =\n    | 'holderName'\n    | 'cardNumber'\n    | 'expiryDate'\n    | 'expiryMonth'\n    | 'expiryYear'\n    | 'securityCodeThreeDigits'\n    | 'securityCodeFourDigits'\n    | 'password';\nexport type Placeholders = Partial<Record<PlaceholderKeys, string>>;\n\n/**\n * Should be the subset of the props sent to CardInput that are *actually* used by CardInput\n * - either in the comp itself or are passed on to its children\n */\nexport interface CardInputProps {\n    amount?: PaymentAmount;\n    isPayButtonPrimaryVariant?: boolean;\n    autoFocus?: boolean;\n    billingAddressAllowedCountries?: string[];\n    billingAddressRequired?: boolean;\n    billingAddressRequiredFields?: string[];\n    billingAddressMode?: AddressModeOptions;\n    brand?: string;\n    brands?: string[];\n    brandsConfiguration?: CardBrandsConfiguration;\n    brandsIcons: Array<BrandConfiguration>;\n    clientKey: string;\n    configuration?: CardBackendConfiguration;\n    countryCode?: string;\n    cvcPolicy?: CVCPolicyType;\n    data?: CardInputDataState;\n    disableIOSArrowKeys?: boolean;\n    enableStoreDetails?: boolean;\n    expiryMonth?: string;\n    expiryYear?: string;\n    forceCompat?: boolean;\n    fundingSource?: 'debit' | 'credit';\n    hasCVC?: boolean;\n    hasHolderName?: boolean;\n    holderName?: string;\n    holderNameRequired?: boolean;\n    i18n?: Language;\n    implementationType?: string;\n    installmentOptions?: InstallmentOptions;\n    keypadFix?: boolean;\n    lastFour?: string;\n    loadingContext: string;\n    legacyInputMode?: boolean;\n    minimumExpiryDate?: string;\n    modules?: {\n        srPanel: SRPanel;\n        analytics: AnalyticsModule;\n        risk: RiskElement;\n        resources: Resources;\n    };\n    onAdditionalSFConfig?: () => {};\n    onAdditionalSFRemoved?: () => {};\n    onAllValid?: (o: CardAllValidData) => {};\n    onAutoComplete?: (o: CardAutoCompleteData) => {};\n    onBinValue?: (o: CardBinValueData) => {};\n    onBlur?: (e) => {};\n    onBrand?: (o: CardBrandData) => {};\n    onConfigSuccess?: (O: CardConfigSuccessData) => {};\n    onChange?: (state) => {};\n    onError?: () => {};\n    onFieldValid?: (o: CardFieldValidData) => {};\n    onFocus?: (e) => {};\n    onLoad?: (o: CardLoadData) => {};\n    handleKeyPress?: (obj: KeyboardEvent) => void;\n    onAddressLookup?: OnAddressLookupType;\n    onAddressSelected?: OnAddressSelectedType;\n    addressSearchDebounceMs?: number;\n    payButton?: (obj) => {};\n    placeholders?: Placeholders;\n    positionHolderNameOnTop?: boolean;\n    resources: Resources;\n    setComponentRef?: (ref) => void;\n    showBrandIcon?: boolean;\n    showInstallmentAmounts?: boolean;\n    showPayButton: boolean;\n    showStoreDetailsCheckbox?: boolean;\n    showWarnings?: boolean;\n    showContextualElement?: boolean;\n    specifications?: Specifications;\n    storedPaymentMethodId?: string;\n    styles?: StylesObject;\n    trimTrailingSeparator?: boolean;\n    type?: string;\n    maskSecurityCode?: boolean;\n    exposeExpiryDate?: boolean;\n    disclaimerMessage?: DisclaimerMsgObject;\n    onValidationErrorAnalytics?: (obj: FieldErrorAnalyticsObject) => {};\n}\n\nexport interface CardInputState {\n    dualBrandSelectElements: DualBrandSelectElement[];\n    selectedBrandValue: string;\n    billingAddress: object;\n    brand?: string;\n    data?: object;\n    errors?: object;\n    focusedElement: string;\n    cvcPolicy: CVCPolicyType;\n    expiryDatePolicy: DatePolicyType;\n    isValid: boolean;\n    status: string;\n    valid?: object;\n    issuingCountryCode: string;\n    showSocialSecurityNumber?: boolean;\n}\n\n// An interface for the members exposed by CardInput to its parent Card/UIElement\nexport interface CardInputRef extends ComponentMethodsRef {\n    sfp?: any;\n    setFocusOn?: (who) => void;\n    processBinLookupResponse?: (binLookupResponse: BinLookupResponse, isReset: boolean) => void;\n    updateStyles?: (stylesObj: StylesObject) => void;\n    handleUnsupportedCard?: (errObj: CardErrorData) => boolean;\n}\n\nexport interface FieldError {\n    errorMessage?: string;\n    errorI18n?: string;\n}\n\nexport interface SFError {\n    isValid?: boolean;\n    errorMessage?: string;\n    errorI18n?: string;\n    error: string;\n    rootNode: HTMLElement;\n    detectedBrands?: string[];\n}\n\nexport interface SFStateErrorObj {\n    [key: string]: SFError;\n}\n\nexport interface LayoutObj {\n    props: CardInputProps;\n    showKCP: boolean;\n    showBrazilianSSN: boolean;\n    countrySpecificSchemas: AddressSchema;\n    billingAddressRequiredFields?: string[];\n}\n\nexport enum AddressModeOptions {\n    full = 'full',\n    partial = 'partial',\n    none = 'none'\n}\n","import { SocialSecurityMode } from '../../types';\nimport { AddressModeOptions } from './types';\n\nexport default {\n    type: 'scheme',\n\n    setComponentRef: () => {},\n\n    // Settings\n    autoFocus: true,\n    billingAddressAllowedCountries: [],\n    billingAddressMode: AddressModeOptions.full,\n    billingAddressRequired: false,\n    billingAddressRequiredFields: ['street', 'houseNumberOrName', 'postalCode', 'city', 'stateOrProvince', 'country'],\n\n    configuration: { koreanAuthenticationRequired: false, socialSecurityNumberMode: 'auto' as SocialSecurityMode },\n    data: {\n        billingAddress: {}\n    },\n    disableIOSArrowKeys: false,\n    enableStoreDetails: false,\n    exposeExpiryDate: false,\n    forceCompat: false,\n    hasHolderName: false,\n    holderNameRequired: false,\n    hasCVC: true,\n    hideCVC: false,\n    installmentOptions: {},\n    keypadFix: true,\n    legacyInputMode: false,\n    maskSecurityCode: false,\n    minimumExpiryDate: null,\n    name: null, // Affects Dropin only, the name displayed in the PMList item\n    placeholders: {},\n    positionHolderNameOnTop: false,\n    showBrandIcon: true,\n    showInstallmentAmounts: null,\n    styles: {},\n\n    isPayButtonPrimaryVariant: true,\n    showContextualElement: true,\n\n    // Events\n    onLoad: (): any => {},\n    onConfigSuccess: (): any => {},\n    onAllValid: (): any => {},\n    onFieldValid: (): any => {},\n    onBrand: (): any => {},\n    onError: (): any => {},\n    onBinValue: (): any => {},\n    onBlur: (): any => {},\n    onFocus: (): any => {},\n    onChange: (): any => {}\n};\n","import { CPF_LENGTH } from './constants';\n\nexport function maskCPF(value) {\n    return value\n        .replace(/\\W/gi, '')\n        .replace(/(\\d{3})(?!$)/g, '$1.')\n        .replace(/(.{11}).(\\d{1,2})$/g, '$1-$2');\n}\n\nexport function maskCNPJ(value) {\n    return value.replace(\n        /^(\\d{2})(\\d{3})(\\d{3})?(\\d{4})?(\\d{1,2})?$/g,\n        (match, g1, g2, g3, g4 = '', g5 = '') => `${g1}.${g2}.${g3}/${g4}${g5.length ? `-${g5}` : ''}`\n    );\n}\n\nexport function cleanCPFCNPJ(value) {\n    return value.replace(/[^0-9]/g, '').trim();\n}\n\nexport function formatCPFCNPJ(value = '') {\n    if (typeof value !== 'string') return '';\n    const cleanValue = cleanCPFCNPJ(value);\n    const formattedValue = cleanValue.length > CPF_LENGTH ? maskCNPJ(cleanValue) : maskCPF(cleanValue);\n    return formattedValue;\n}\n","export const CPF_LENGTH = 11;\n","export default function (ssn) {\n    return /(^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$)|(^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$)/.test(ssn);\n}\n","import { CountryFormatRules } from './Validator/types';\n\nconst MAX_LENGTH = 30;\n\nexport const getMaxLengthByFieldAndCountry = (\n    formattingRules: CountryFormatRules,\n    field: string,\n    country: string,\n    ignoreIfFormatterExists: boolean\n): number | null => {\n    // In ignoreIfFormatterExists is true we expect the formatter function to also act to limit length\n    if (ignoreIfFormatterExists && formattingRules[country]?.[field]?.formatterFn) {\n        return null;\n    }\n    const maxLength = formattingRules[country]?.[field]?.maxlength;\n    return maxLength ? maxLength : MAX_LENGTH;\n};\n\n// Not null or undefined or only spaces\nexport const isEmpty = input => !!(input == null || /^[\\s]*$/.test(input));\n\nexport const isString = input => typeof input === 'string' || input instanceof String;\nexport const hasText = input => isString(input) && !isEmpty(input);\n\nexport const SPECIAL_CHARS = '?\\\\+_=!@#$%^&*(){}~<>\\\\[\\\\]\\\\\\\\'; // N.B. difficulty escaping \\ (takes 3 backslashes!)\n\n// Generates a regEx ideal for use in a String.replace call for use in a formatter\n// e.g. getFormattingRegEx('^\\\\d', 'g') will generate: /[^\\d]/g which is a regEx to match anything that is not a digit\nexport const getFormattingRegEx = (specChars: string, flags = 'g') => new RegExp(`[${specChars}]`, flags);\n\n// Creates a regEx ideal for use in a RegExp.test call for use in a validator\nexport const getValidatingRegEx = (specChars: string, exclude: boolean) => new RegExp(`^[${exclude ? '^' : ''}${specChars}]+$`);\n\nexport const CHARACTER_PATTERNS: { [key: string]: RegExp } = {\n    digitsHyphen: /^[\\d-]+$/,\n    noHtml: /^[^<>&]+$/,\n    alphaNum: /^\\d[a-zA-Z0-9]{6,11}$/,\n    noSpecialChars: getValidatingRegEx(SPECIAL_CHARS, true)\n};\n\nexport const exactLength = (input: string, length: number) => {\n    if (isEmpty(input)) {\n        return true;\n    }\n    return input.length === length;\n};\n\nexport const validateForSpecialChars = name => {\n    const hasNoLength = !name.length;\n    // RegEx .test, if run against empty string, will return false\n    return CHARACTER_PATTERNS.noSpecialChars.test(name) || hasNoLength;\n};\n\n// Trim start and never allow more than 1 space on the end\nexport const trimValWithOneSpace = (val: string) => val.trimStart().replace(/\\s+/g, ' ');\n","import { ValidatorRules } from '../../../../utils/Validator/types';\nimport { formatCPFCNPJ } from '../../../internal/SocialSecurityNumberBrazil/utils';\nimport validateSSN from '../../../internal/SocialSecurityNumberBrazil/validate';\nimport { isEmpty } from '../../../../utils/validator-utils';\nimport {\n    BOLETO_SOCIAL_SECURITY_NUMBER_INVALID,\n    CREDITCARD_HOLDER_NAME_INVALID,\n    CREDITCARD_TAX_NUMBER_INVALID\n} from '../../../../core/Errors/constants';\n\nexport const cardInputFormatters = {\n    socialSecurityNumber: formatCPFCNPJ\n};\n\nexport const cardInputValidationRules: ValidatorRules = {\n    socialSecurityNumber: [\n        {\n            modes: ['blur'],\n            validate: value => {\n                if (isEmpty(value)) return null;\n                return validateSSN(value);\n            },\n            errorMessage: BOLETO_SOCIAL_SECURITY_NUMBER_INVALID\n        }\n    ],\n    taxNumber: [\n        {\n            modes: ['blur'],\n            validate: value => (isEmpty(value) ? null : value?.length === 6 || value?.length === 10),\n            errorMessage: CREDITCARD_TAX_NUMBER_INVALID\n        }\n    ],\n    holderName: [\n        {\n            // Will fire at startup and when triggerValidation is called and also applies as text is input\n            modes: ['blur'],\n            validate: value => (isEmpty(value) ? null : true), // true, if there are chars other than spaces\n            errorMessage: CREDITCARD_HOLDER_NAME_INVALID\n        }\n    ],\n    default: [\n        {\n            modes: ['blur'],\n            // ensuring we don't try to run this against objects e.g. billingAddress\n            validate: value => !!value && typeof value === 'string' && value.trim().length > 0\n        }\n    ]\n};\n\nexport const getRuleByNameAndMode = (name, mode) => {\n    const ruleArr = cardInputValidationRules[name] as any[];\n    const rule = ruleArr.reduce((acc, elem) => {\n        if (!acc.length) {\n            if (elem.modes.includes(mode)) {\n                acc.push(elem.validate);\n            }\n        }\n        return acc;\n    }, []);\n    return rule[0];\n};\n","import { SingleBrandResetObject } from '../SFP/types';\nimport { BrandObject } from '../../../Card/types';\nimport createCardVariantSwitcher from './createCardVariantSwitcher';\nimport { BRAND_ICON_UI_EXCLUSION_LIST } from '../lib/constants';\n\n// Externally testable utils\nexport const containsExcludedBrand = (brandsArr: BrandObject[], excludedBrands: string[]): boolean => {\n    return brandsArr.reduce((acc, brandObj) => acc || excludedBrands.includes(brandObj.brand), false);\n};\n\nexport const cloneBrandsArr = (brandsArr: BrandObject[]): BrandObject[] => brandsArr.map(item => ({ ...item }));\n\nexport const removeExcludedBrand = (brandsArr: BrandObject[], mainBrand1 = 'mc', mainBrand2 = 'visa'): BrandObject[] => {\n    const clonedBrands: BrandObject[] = cloneBrandsArr(brandsArr);\n\n    if (clonedBrands[0].brand !== mainBrand1 && clonedBrands[0].brand !== mainBrand2) clonedBrands.reverse();\n    clonedBrands.length = 1;\n    return clonedBrands;\n};\n// --\n\nexport default function extensions(props, refs, states, hasPanLengthRef: Partial<{ current }> = {}) {\n    // Destructure props, refs and state hooks\n    const { type, cvcPolicy } = props;\n    const { sfp } = refs;\n    const { dualBrandSelectElements, setDualBrandSelectElements, setSelectedBrandValue, issuingCountryCode, setIssuingCountryCode } = states;\n\n    return {\n        /**\n         * Handle the binLookup response object generated in triggerBinLookup and process it in relation to the CardInput and it's sub-components.\n         * e.g. we might need to add/remove additional markup (a selector for brands), and inform SFP of the issuingCountryCode & detected brand(s).\n         *\n         * @param binLookupResponse -\n         * @param isReset -\n         */\n        processBinLookup: (binLookupResponse, isReset) => {\n            const issuingCode = binLookupResponse?.issuingCountryCode ? binLookupResponse.issuingCountryCode.toLowerCase() : null;\n            setIssuingCountryCode(issuingCode);\n\n            // Reset UI\n            if (!binLookupResponse || !Object.keys(binLookupResponse).length) {\n                setDualBrandSelectElements([]);\n                setSelectedBrandValue('');\n\n                // If /binLookup has 'reset' then for a generic card the internal regex will kick in to show the right brand icon - so set to null\n                // However for a single-branded card we need to pass the \"base\" type so the brand logo is reset - so set to type\n                const brandToReset = isReset && type !== 'card' ? type : null;\n\n                sfp.current.processBinLookupResponse(binLookupResponse, {\n                    brand: brandToReset,\n                    cvcPolicy: cvcPolicy // undefined except for Bancontact\n                } as SingleBrandResetObject);\n\n                // Reset storage var\n                hasPanLengthRef.current = 0;\n                return;\n            }\n\n            // RESULT: binLookup has found a result so proceed accordingly\n            if (binLookupResponse.supportedBrands?.length) {\n                const hasExcludedBrand: boolean = containsExcludedBrand(binLookupResponse.supportedBrands, BRAND_ICON_UI_EXCLUSION_LIST);\n\n                const supportedBrands: BrandObject[] = hasExcludedBrand\n                    ? removeExcludedBrand(binLookupResponse.supportedBrands)\n                    : cloneBrandsArr(binLookupResponse.supportedBrands);\n\n                // 1) Multiple options found - add to the UI & inform SFP\n                if (supportedBrands.length > 1) {\n                    // --\n                    const switcherObj = createCardVariantSwitcher(supportedBrands);\n\n                    // Set properties on state to trigger the dual branding icons in the UI\n                    setDualBrandSelectElements(switcherObj.dualBrandSelectElements);\n                    setSelectedBrandValue(switcherObj.selectedBrandValue); // initially this value from switcherObj will be ''\n\n                    // Pass an object through to SFP\n                    sfp.current.processBinLookupResponse({\n                        issuingCountryCode: binLookupResponse.issuingCountryCode,\n                        supportedBrands: [switcherObj.leadBrand]\n                    });\n\n                    // Store the fact the binLookup obj has a panLength prop\n                    if (switcherObj.leadBrand.panLength > 0) {\n                        hasPanLengthRef.current = switcherObj.leadBrand.panLength;\n                    }\n\n                    // 2) Single option found (binValueObject.supportedBrands.length === 1)\n                } else {\n                    // Reset UI\n                    setDualBrandSelectElements([]);\n                    setSelectedBrandValue('');\n\n                    // Set (single) value from binLookup so it will be added to the 'brand' property in the paymentMethod object\n                    // EXCEPT - if we are dealing with a brand that we exclude from the UI\n                    if (!hasExcludedBrand) setSelectedBrandValue(supportedBrands[0].brand);\n\n                    // Pass object through to SFP\n                    sfp.current.processBinLookupResponse({\n                        issuingCountryCode: binLookupResponse.issuingCountryCode,\n                        supportedBrands\n                    });\n\n                    // Store the fact the binLookup obj has a panLength prop\n                    if (supportedBrands[0].panLength > 0) {\n                        hasPanLengthRef.current = supportedBrands[0].panLength;\n                    }\n                }\n            }\n        },\n        /**\n         * Handler for clicks on the icons added in response to the /binLookup call\n         * Inform SFP of the brand changes when these selections are made\n         */\n        handleDualBrandSelection: (e: Event | string): void => {\n            let value: Event | string = e;\n\n            if (e instanceof Event) {\n                const target = e.target as HTMLLIElement;\n                value = target.getAttribute('data-value') || target.getAttribute('alt');\n            }\n\n            // Check if we have a value and whether that value corresponds to a brandObject we can propagate\n            // If either are false then abandon the process\n            let brandObjArr: BrandObject[] = [];\n            if (value) {\n                // Find the brandObject with the matching brand value and place into an array\n                brandObjArr = dualBrandSelectElements.reduce((acc, item) => {\n                    if (item.brandObject.brand === value) {\n                        acc.push(item.brandObject);\n                    }\n                    return acc;\n                }, []);\n\n                if (!brandObjArr.length) {\n                    return; // no brand object associated with value was found\n                }\n            } else {\n                return; // no value passed\n            }\n\n            setSelectedBrandValue(value);\n\n            // Pass brand object into SecuredFields\n            sfp.current.processBinLookupResponse({\n                issuingCountryCode,\n                supportedBrands: brandObjArr\n            });\n        }\n    };\n}\n","import { BrandObject, DualBrandSelectElement } from '../../../Card/types';\n\n/**\n * Creates an object used for setting state - that will trigger the rendering of a select element to allow a choice between 2 different card variants\n * @param brandObjArr - array containing 2 card brands objects\n */\nexport default function createCardVariantSwitcher(brandObjArr: BrandObject[]) {\n    const [leadBrand, subBrand] = brandObjArr;\n\n    return {\n        dualBrandSelectElements: [\n            { id: leadBrand.brand, brandObject: leadBrand },\n            { id: subBrand.brand, brandObject: subBrand }\n        ] as DualBrandSelectElement[],\n        selectedBrandValue: '', // set to leadBrand.brand if an initial selection is to be made\n        leadBrand\n    };\n}\n","import { ErrorMessageObject } from './types';\n\n/**\n * Holds the result of a validation\n */\nexport class ValidationRuleResult {\n    private readonly shouldValidate: boolean;\n    public isValid: boolean;\n    public errorMessage: string | ErrorMessageObject;\n\n    constructor(rule, value, mode, context) {\n        this.shouldValidate = rule.modes.includes(mode);\n        this.isValid = rule.validate(value, context);\n        this.errorMessage = rule.errorMessage;\n    }\n\n    /**\n     * Whether the validation is considered an error.\n     * A field is only considered to be an error if the validation rule applies to the current mode i.e. 'blur' or 'input'.\n     * Also, if a validation function returns a null value e.g. when the field is empty, then the field will not be considered to be in error\n     * unless the whole form is being validated\n     */\n    hasError(isValidatingForm = false): boolean {\n        return isValidatingForm ? !this.isValid && this.shouldValidate : this.isValid != null && !this.isValid && this.shouldValidate;\n    }\n}\n","import { ValidatorRules, ValidatorRule, FieldContext, FieldData } from './types';\nimport { ValidationRuleResult } from './ValidationRuleResult';\n\nclass ValidationResult {\n    private validationResults: ValidationRuleResult[];\n\n    constructor(results: ValidationRuleResult[]) {\n        this.validationResults = results;\n    }\n\n    /** Checks if all validation rules have passed */\n    get isValid(): boolean {\n        return this.validationResults.reduce((acc, result) => acc && result.isValid, true);\n    }\n\n    /** Checks if any validation rule returned an error */\n    hasError(isValidatingForm = false): boolean {\n        return Boolean(this.getError(isValidatingForm));\n    }\n\n    /** Returns the first validation result that returned an error */\n    getError(isValidatingForm = false) {\n        return this.validationResults.find(result => result.hasError(isValidatingForm));\n    }\n\n    /** Returns all validation results that returned an error */\n    getAllErrors() {\n        return this.validationResults.filter(result => result.hasError());\n    }\n}\n\nclass Validator {\n    public rules: ValidatorRules = {\n        default: {\n            validate: () => true,\n            modes: ['blur', 'input']\n        }\n    };\n\n    constructor(rules) {\n        this.setRules(rules);\n    }\n\n    setRules(newRules) {\n        this.rules = {\n            ...this.rules,\n            ...newRules\n        };\n    }\n\n    /**\n     * Get all validation rules for a field\n     */\n    private getRulesFor(field: string): ValidatorRule[] {\n        let fieldRules: ValidatorRule | ValidatorRule[] = this.rules[field] ?? this.rules['default'];\n\n        if (!Array.isArray(fieldRules)) {\n            fieldRules = [fieldRules];\n        }\n\n        return fieldRules;\n    }\n\n    /**\n     * Validates a field\n     */\n    validate({ key, value, mode = 'blur' }: FieldData, context?: FieldContext) {\n        const fieldRules = this.getRulesFor(key);\n        const validationRulesResult = fieldRules.map(rule => new ValidationRuleResult(rule, value, mode, context));\n\n        return new ValidationResult(validationRulesResult);\n    }\n}\n\nexport default Validator;\n","const omitKeys = (obj, omit) =>\n    Object.keys(obj)\n        .filter(k => !omit.includes(k))\n        .reduce((a, c) => {\n            a[c] = obj[c];\n            return a;\n        }, {});\n\nconst addKeys = (obj, add, initialValue, defaultData, pendingData) =>\n    add.reduce((a, c) => ({ ...a, [c]: a[c] ?? pendingData?.[c] ?? defaultData?.[c] ?? initialValue }), obj);\n\n/**\n * Processes default data and sets as default in state\n */\nexport function init({ schema, defaultData, processField, fieldProblems }) {\n    const getProcessedState = fieldKey => {\n        if (typeof defaultData[fieldKey] === 'undefined')\n            return { valid: false, errors: null, data: null, fieldProblems: fieldProblems?.[fieldKey] ?? null };\n\n        const [formattedValue, validationResult] = processField(\n            { key: fieldKey, value: defaultData[fieldKey], mode: 'blur' },\n            { state: { data: defaultData } }\n        );\n\n        return {\n            valid: (validationResult.isValid && !fieldProblems?.[fieldKey]) || false,\n            errors: validationResult.hasError() ? validationResult.getError() : null,\n            data: formattedValue,\n            fieldProblems: fieldProblems?.[fieldKey] ?? null\n        };\n    };\n\n    const formData = schema.reduce(\n        (acc: any, fieldKey) => {\n            const { valid, errors, data, fieldProblems } = getProcessedState(fieldKey);\n\n            return {\n                valid: { ...acc.valid, [fieldKey]: valid },\n                errors: { ...acc.errors, [fieldKey]: errors },\n                data: { ...acc.data, [fieldKey]: data },\n                fieldProblems: { ...acc.fieldProblems, [fieldKey]: fieldProblems }\n            };\n        },\n        { data: {}, valid: {}, errors: {}, fieldProblems: {} }\n    );\n\n    return {\n        schema,\n        data: formData.data,\n        valid: formData.valid,\n        errors: formData.errors,\n        fieldProblems: formData.fieldProblems\n    };\n}\n\nexport function getReducer(processField) {\n    return function reducer(state, { type, key, value, mode, schema, defaultData, formValue, selectedSchema, fieldProblems, data }) {\n        const validationSchema: string[] = selectedSchema || state.schema;\n\n        switch (type) {\n            case 'setData': {\n                return { ...state, data: { ...state['data'], [key]: value } };\n            }\n            case 'mergeData': {\n                return { ...state, data: { ...state['data'], ...data } };\n            }\n            case 'setValid': {\n                return { ...state, valid: { ...state['valid'], [key]: value } };\n            }\n            case 'setErrors': {\n                return { ...state, errors: { ...state['errors'], [key]: value } };\n            }\n            case 'setFieldProblems': {\n                return (\n                    state?.schema?.reduce(\n                        (acc, key) => ({\n                            ...acc,\n                            fieldProblems: { ...state['fieldProblems'], [key]: fieldProblems?.[key] ?? null },\n                            valid: { ...state['valid'], [key]: state['valid']?.[key] && !fieldProblems[key] }\n                        }),\n                        state\n                    ) ?? state\n                );\n            }\n            case 'updateField': {\n                const [formattedValue, validation] = processField({ key, value, mode }, { state });\n                const oldValue = state.data[key];\n                const fieldProblems = { ...state.fieldProblems };\n                if (oldValue !== formattedValue) {\n                    fieldProblems[key] = null;\n                }\n                return {\n                    ...state,\n                    data: { ...state['data'], [key]: formattedValue },\n                    errors: { ...state['errors'], [key]: validation.hasError() ? validation.getError() : null },\n                    valid: { ...state['valid'], [key]: (validation.isValid && !fieldProblems[key]) || false },\n                    fieldProblems\n                };\n            }\n            case 'mergeForm': {\n                // To provide a uniform result from forms even if there are multiple levels of nested forms are present\n                const mergedState = {\n                    ...state,\n                    data: { ...state['data'], ...formValue['data'] },\n                    errors: { ...state['errors'], ...formValue['errors'] },\n                    valid: { ...state['valid'], ...formValue['valid'] },\n                    fieldProblems: { ...state['fieldProblems'], ...formValue['fieldProblems'] }\n                };\n                if (mergedState['valid']) {\n                    mergedState.isValid = Object.values(mergedState.valid).every(isValid => isValid);\n                }\n                return mergedState;\n            }\n            case 'setSchema': {\n                const defaultState = init({ schema, defaultData, processField, fieldProblems });\n                const removedSchemaFields = state.schema.filter(x => !schema.includes(x));\n                const newSchemaFields = schema.filter(x => !state.schema.includes(x));\n\n                // if we remove a key from the schema we also lost the latest value of the field\n                // to prevent this we have to store the value in a local state so we can recover it when the key is re-added to the schema\n                const local = {\n                    data: omitKeys(state.data, newSchemaFields),\n                    errors: omitKeys(state.errors, newSchemaFields),\n                    valid: omitKeys(state.valid, newSchemaFields)\n                };\n\n                // reindex data and validation according to the new schema\n                const data = addKeys(omitKeys(state.data, removedSchemaFields), newSchemaFields, null, defaultState.data, state.local?.data);\n                const valid = addKeys(omitKeys(state.valid, removedSchemaFields), newSchemaFields, false, defaultState.valid, state.local?.valid);\n                const errors = addKeys(omitKeys(state.errors, removedSchemaFields), newSchemaFields, null, defaultState.errors, state.local?.errors);\n\n                return { ...state, schema, data, valid, errors, local };\n            }\n            case 'validateForm': {\n                const formValidation = validationSchema.reduce(\n                    (acc, cur) => {\n                        const [, validation] = processField({ key: cur, value: state.data[cur], mode: 'blur' }, { state });\n                        return {\n                            valid: { ...acc['valid'], [cur]: (validation.isValid && !state.fieldProblems[cur]) || false },\n                            errors: { ...acc['errors'], [cur]: validation.hasError(true) ? validation.getError(true) : null }\n                        };\n                    },\n                    { valid: state.valid, errors: state.errors }\n                );\n\n                return { ...state, valid: formValidation.valid, errors: formValidation.errors };\n            }\n            default:\n                throw new Error('Undefined useForm action');\n        }\n    };\n}\n","import { useCallback, useEffect, useMemo, useReducer } from 'preact/hooks';\nimport Validator from '../Validator';\nimport { getReducer, init } from './reducer';\nimport { Form, FormState, FormProps, Formatter } from './types';\n\nfunction isFormatterObject(formatter: Formatter | Function): formatter is Formatter {\n    return formatter && 'formatterFn' in formatter;\n}\n\nfunction useForm<FormSchema>(props: FormProps): Form<FormSchema> {\n    const { rules = {}, formatters = {}, defaultData = {}, fieldProblems = {}, schema = [] } = props;\n\n    const validator = useMemo(() => new Validator(rules), [rules]);\n\n    /** Formats and validates a field */\n    const processField = ({ key, value, mode }, fieldContext) => {\n        // Find a formatting function either stored under 'key' or a level deeper under a 'formatter' property\n        const formatter = formatters?.[key];\n        const formatterFn = isFormatterObject(formatter) ? formatter.formatterFn : formatter;\n        const formattedValue = formatterFn && typeof formatterFn === 'function' ? formatterFn(value ?? '', fieldContext) : value;\n\n        const validationResult = validator.validate({ key, value: formattedValue, mode }, fieldContext);\n        return [formattedValue, validationResult];\n    };\n\n    const [state, dispatch] = useReducer<FormState<FormSchema>, any, any>(\n        getReducer(processField),\n        { defaultData, schema: schema ?? [], processField, fieldProblems },\n        init\n    );\n    const isValid = useMemo(() => state.schema.reduce((acc, val) => acc && state.valid[val], true), [state.schema, state.valid]);\n\n    const getTargetValue = (key, e) => {\n        if (!e.target) return e;\n\n        if (e.target.type === 'checkbox') {\n            return !state.data[key];\n        }\n        return e.target.value;\n    };\n\n    /** Formats, validates, and stores a new value for a form field */\n    const handleChangeFor = (key, mode) => {\n        return e => {\n            const value = getTargetValue(key, e);\n            dispatch({ type: 'updateField', key, value, mode });\n        };\n    };\n\n    /** Validates every field in the form OR just those in selectedSchema */\n    const triggerValidation = useCallback((selectedSchema = null) => {\n        dispatch({ type: 'validateForm', selectedSchema });\n    }, []);\n\n    const setErrors = useCallback((key, value) => dispatch({ type: 'setErrors', key, value }), []);\n    const setValid = useCallback((key, value) => dispatch({ type: 'setValid', key, value }), []);\n    const setData = useCallback((key, value) => dispatch({ type: 'setData', key, value }), []);\n    const mergeData = useCallback(data => dispatch({ type: 'mergeData', data }), []);\n    const setSchema = useCallback(schema => dispatch({ type: 'setSchema', schema, defaultData }), [state.schema]);\n    const mergeForm = useCallback(formValue => dispatch({ type: 'mergeForm', formValue }), []);\n    const setFieldProblems = useCallback(fieldProblems => dispatch({ type: 'setFieldProblems', fieldProblems }), [state.schema]);\n\n    // Set reducer fields problems if fieldProblems prop changes\n    useEffect(() => {\n        setFieldProblems(fieldProblems ?? {});\n    }, [JSON.stringify(fieldProblems)]);\n\n    return {\n        handleChangeFor,\n        triggerValidation,\n        setSchema,\n        setData,\n        mergeData,\n        setValid,\n        setErrors,\n        isValid,\n        mergeForm,\n        setFieldProblems,\n        schema: state.schema,\n        valid: state.valid,\n        errors: state.errors,\n        data: state.data,\n        fieldProblems: state.fieldProblems\n    };\n}\n\nexport default useForm;\n","import {\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_SECURITY_CODE,\n    ENCRYPTED_PWD_FIELD\n} from '../../../internal/SecuredFields/lib/constants';\n\nconst TAX_NUMBER = 'taxNumber';\nconst HOLDER_NAME = 'holderName';\nconst SSN_FIELD = 'socialSecurityNumber';\n\nexport const CREDIT_CARD = [ENCRYPTED_CARD_NUMBER, ENCRYPTED_EXPIRY_DATE, ENCRYPTED_SECURITY_CODE];\n\nexport const CREDIT_CARD_NAME_TOP = [HOLDER_NAME, ENCRYPTED_CARD_NUMBER, ENCRYPTED_EXPIRY_DATE, ENCRYPTED_SECURITY_CODE];\n\nexport const CREDIT_CARD_NAME_BOTTOM = [ENCRYPTED_CARD_NUMBER, ENCRYPTED_EXPIRY_DATE, ENCRYPTED_SECURITY_CODE, HOLDER_NAME];\n\nconst KCP_FIELDS = [TAX_NUMBER, ENCRYPTED_PWD_FIELD];\nexport const KCP_CARD = CREDIT_CARD.concat(KCP_FIELDS);\nexport const KCP_CARD_NAME_TOP = CREDIT_CARD_NAME_TOP.concat(KCP_FIELDS);\nexport const KCP_CARD_NAME_BOTTOM = CREDIT_CARD_NAME_BOTTOM.concat(KCP_FIELDS);\n\nexport const SSN_CARD = CREDIT_CARD.concat([SSN_FIELD]);\nexport const SSN_CARD_NAME_TOP = CREDIT_CARD_NAME_TOP.concat([SSN_FIELD]);\nexport const SSN_CARD_NAME_BOTTOM = CREDIT_CARD_NAME_BOTTOM.concat([SSN_FIELD]);\n","import { AddressSpecifications } from './types';\n\nexport const FALLBACK_VALUE = 'N/A';\nexport const ADDRESS_SCHEMA = ['street', 'houseNumberOrName', 'postalCode', 'city', 'stateOrProvince', 'country', 'firstName', 'lastName'] as const;\nexport const [STREET, HOUSE_NUMBER_OR_NAME, POSTAL_CODE, CITY, STATE_OR_PROVINCE, COUNTRY, FIRST_NAME, LAST_NAME] = ADDRESS_SCHEMA;\n// prettier-ignore\nexport const ADDRESS_SPECIFICATIONS: AddressSpecifications = {\n    AU: {\n        hasDataset: true,\n        labels: {\n            [HOUSE_NUMBER_OR_NAME]: 'apartmentSuite',\n            [STATE_OR_PROVINCE]: 'state',\n            [STREET]: 'address'\n        },\n        optionalFields: [HOUSE_NUMBER_OR_NAME],\n        placeholders: {\n            [STATE_OR_PROVINCE]: 'select.state'\n        },\n        schema: [COUNTRY, STREET, HOUSE_NUMBER_OR_NAME, CITY, [[STATE_OR_PROVINCE, 50], [POSTAL_CODE, 50]]]\n    },\n    BR: {\n        hasDataset: true,\n        labels: {\n            [STATE_OR_PROVINCE]: 'state'\n        },\n        placeholders: {\n            [STATE_OR_PROVINCE]: 'select.state'\n        },\n    },\n    CA: {\n        hasDataset: true,\n        labels: {\n            [HOUSE_NUMBER_OR_NAME]: 'apartmentSuite',\n            [STATE_OR_PROVINCE]: 'provinceOrTerritory',\n            [STREET]: 'address'\n        },\n        optionalFields: [HOUSE_NUMBER_OR_NAME],\n        schema: [COUNTRY, STREET, HOUSE_NUMBER_OR_NAME, [[CITY, 70], [POSTAL_CODE, 30]], STATE_OR_PROVINCE]\n    },\n    GB: {\n        labels: {\n            [CITY]: 'cityTown'\n        },\n        schema: [COUNTRY, [[HOUSE_NUMBER_OR_NAME, 30], [STREET, 70]], [[CITY, 70], [POSTAL_CODE, 30]], STATE_OR_PROVINCE]\n    },\n    US: {\n        hasDataset: true,\n        labels: {\n            [POSTAL_CODE]: 'zipCode',\n            [HOUSE_NUMBER_OR_NAME]: 'apartmentSuite',\n            [STATE_OR_PROVINCE]: 'state',\n            [STREET]: 'address'\n        },\n        optionalFields: [HOUSE_NUMBER_OR_NAME],\n        placeholders: {\n            [STATE_OR_PROVINCE]: 'select.state'\n        },\n        schema: [COUNTRY, STREET, HOUSE_NUMBER_OR_NAME, CITY, [[STATE_OR_PROVINCE, 50], [POSTAL_CODE, 50]]]\n    },\n    default: {\n        optionalFields: [],\n        placeholders: {\n            [STATE_OR_PROVINCE]: 'select.provinceOrTerritory'\n        },\n        schema: [COUNTRY, [[STREET, 70], [HOUSE_NUMBER_OR_NAME, 30]], [[POSTAL_CODE, 30], [CITY, 70]], STATE_OR_PROVINCE],\n    }\n};\n\nexport const PARTIAL_ADDRESS_SCHEMA: AddressSpecifications = {\n    default: {\n        labels: {\n            [POSTAL_CODE]: 'zipCode'\n        },\n        schema: [POSTAL_CODE]\n    }\n};\n\nexport const COUNTRIES_WITH_CUSTOM_SPECIFICATION = Object.keys(ADDRESS_SPECIFICATIONS);\n","import Language from '../../../../language/Language';\nimport { AddressModeOptions, CardInputProps, LayoutObj } from './types';\nimport {\n    CREDIT_CARD,\n    CREDIT_CARD_NAME_BOTTOM,\n    CREDIT_CARD_NAME_TOP,\n    KCP_CARD,\n    KCP_CARD_NAME_BOTTOM,\n    KCP_CARD_NAME_TOP,\n    SSN_CARD,\n    SSN_CARD_NAME_BOTTOM,\n    SSN_CARD_NAME_TOP\n} from './layouts';\nimport { AddressSpecifications, StringObject } from '../../../internal/Address/types';\nimport { PARTIAL_ADDRESS_SCHEMA } from '../../../internal/Address/constants';\nimport { InstallmentsObj } from './components/Installments/Installments';\nimport { SFPProps } from '../../../internal/SecuredFields/SFP/types';\nimport { BRAND_READABLE_NAME_MAP } from '../../../internal/SecuredFields/lib/constants';\nimport { UseImageHookType } from '../../../../core/Context/useImage';\nimport { SF_ErrorCodes } from '../../../../core/Errors/constants';\n\nexport const getCardImageUrl = (brand: string, getImage: UseImageHookType): string => {\n    const imageOptions = {\n        type: brand === 'card' ? 'nocard' : brand || 'nocard',\n        extension: 'svg'\n    };\n\n    return getImage(imageOptions)(brand);\n};\n\n/**\n * Verifies that installment object is valid to send to the Backend.\n * Valid means that it has 'revolving' plan set, or the number of installments is bigger than one\n */\nexport const hasValidInstallmentsObject = (installments?: InstallmentsObj) => {\n    return installments?.plan === 'revolving' || installments?.value > 1;\n};\n\nexport const getLayout = ({\n    props,\n    showKCP,\n    showBrazilianSSN,\n    countrySpecificSchemas = null,\n    billingAddressRequiredFields = null\n}: LayoutObj): string[] => {\n    let layout = CREDIT_CARD;\n    const hasRequiredHolderName = props.hasHolderName && props.holderNameRequired;\n\n    if (hasRequiredHolderName) {\n        layout = props.positionHolderNameOnTop ? CREDIT_CARD_NAME_TOP : CREDIT_CARD_NAME_BOTTOM;\n    }\n\n    if (showKCP) {\n        layout = KCP_CARD;\n        if (hasRequiredHolderName) {\n            layout = props.positionHolderNameOnTop ? KCP_CARD_NAME_TOP : KCP_CARD_NAME_BOTTOM;\n        }\n    }\n\n    if (showBrazilianSSN) {\n        layout = SSN_CARD;\n        if (hasRequiredHolderName) {\n            layout = props.positionHolderNameOnTop ? SSN_CARD_NAME_TOP : SSN_CARD_NAME_BOTTOM;\n        }\n    }\n\n    // w. Billing address\n    if (countrySpecificSchemas) {\n        // Flatten array and remove any numbers that describe how fields should be aligned\n        const countrySpecificSchemasFlat: string[] = countrySpecificSchemas['flat'](2).filter(item => typeof item !== 'number') as string[];\n\n        let countryBasedAddressLayout = countrySpecificSchemasFlat;\n\n        if (billingAddressRequiredFields) {\n            // Get intersection of the 2 arrays\n            countryBasedAddressLayout = countrySpecificSchemasFlat.filter(x => billingAddressRequiredFields.includes(x));\n        }\n\n        layout = CREDIT_CARD.concat(countryBasedAddressLayout);\n        if (hasRequiredHolderName) {\n            layout = props.positionHolderNameOnTop\n                ? CREDIT_CARD_NAME_TOP.concat(countryBasedAddressLayout)\n                : CREDIT_CARD_NAME_BOTTOM.concat(countryBasedAddressLayout);\n        }\n        // TODO we are not yet creating a layout for AVS + SSN field (w. or w/o holderName) - is AVS + SSN a real world scenario?\n    }\n    return layout;\n};\n\n/**\n * Lookup service to map local (CardInput) field refs to a key, possibly region specific, by which to retrieve the translation\n */\nexport const mapFieldKey = (key: string, i18n: Language, countrySpecificLabels: StringObject): string => {\n    // console.log('### utils::mapFieldKey:: key', key);\n    switch (key) {\n        case 'socialSecurityNumber':\n            return i18n.get(`boleto.${key}`);\n        // Address related - if we have a country specific key for the field - use that to get the translation\n        case 'street':\n        case 'houseNumberOrName':\n        case 'postalCode':\n        case 'stateOrProvince':\n        case 'city':\n        case 'country':\n            return countrySpecificLabels?.[key] ? i18n.get(countrySpecificLabels?.[key]) : i18n.get(key);\n        // We know that the translated error messages do contain a reference to the field they refer to, so we won't need to map them (currently applies mostly to SecuredFields related errors)\n        default:\n            return null;\n    }\n};\n\nexport const extractPropsForCardFields = (props: CardInputProps) => {\n    return {\n        // Extract props for CardFieldsWrapper & StoredCardFieldsWrapper(just needs amount, hasCVC, installmentOptions)\n        amount: props.amount,\n        billingAddressRequired: props.billingAddressRequired,\n        billingAddressRequiredFields: props.billingAddressRequiredFields,\n        billingAddressAllowedCountries: props.billingAddressAllowedCountries,\n        brandsConfiguration: props.brandsConfiguration,\n        showStoreDetailsCheckbox: props.showStoreDetailsCheckbox,\n        hasCVC: props.hasCVC,\n        hasHolderName: props.hasHolderName,\n        holderNameRequired: props.holderNameRequired,\n        installmentOptions: props.installmentOptions,\n        placeholders: props.placeholders,\n        positionHolderNameOnTop: props.positionHolderNameOnTop,\n        // Extract props for CardFields > CardNumber\n        showBrandIcon: props.showBrandIcon,\n        showContextualElement: props.showContextualElement,\n        // Extract props for StoredCardFields\n        lastFour: props.lastFour,\n        expiryMonth: props.expiryMonth,\n        expiryYear: props.expiryYear,\n        disclaimerMessage: props.disclaimerMessage\n    };\n};\n\nexport const extractPropsForSFP = (props: CardInputProps) => {\n    return {\n        autoFocus: props.autoFocus,\n        brands: props.brands,\n        brandsConfiguration: props.brandsConfiguration,\n        clientKey: props.clientKey,\n        countryCode: props.countryCode,\n        forceCompat: props.forceCompat,\n        i18n: props.i18n,\n        implementationType: props.implementationType,\n        keypadFix: props.keypadFix,\n        legacyInputMode: props.legacyInputMode,\n        loadingContext: props.loadingContext,\n        maskSecurityCode: props.maskSecurityCode,\n        exposeExpiryDate: props.exposeExpiryDate,\n        minimumExpiryDate: props.minimumExpiryDate,\n        onAdditionalSFConfig: props.onAdditionalSFConfig,\n        onAdditionalSFRemoved: props.onAdditionalSFRemoved,\n        onAllValid: props.onAllValid,\n        onAutoComplete: props.onAutoComplete,\n        onBinValue: props.onBinValue,\n        onConfigSuccess: props.onConfigSuccess,\n        handleKeyPress: props.handleKeyPress,\n        onError: props.onError,\n        onFieldValid: props.onFieldValid,\n        onLoad: props.onLoad,\n        placeholders: props.placeholders,\n        resources: props.resources,\n        showContextualElement: props.showContextualElement,\n        showWarnings: props.showWarnings,\n        trimTrailingSeparator: props.trimTrailingSeparator\n    } as SFPProps; // Can't set as return type on fn or it will complain about missing, mandatory, props\n};\n\nexport const handlePartialAddressMode = (addressMode: AddressModeOptions): AddressSpecifications | null => {\n    return addressMode == AddressModeOptions.partial ? PARTIAL_ADDRESS_SCHEMA : null;\n};\n\n// Almost all errors are blur based, but some SF ones are not i.e. when an unsupported card is entered or the expiry date is out of range\nexport function lookupBlurBasedErrors(errorCode) {\n    return ![\n        SF_ErrorCodes.ERROR_MSG_UNSUPPORTED_CARD_ENTERED,\n        SF_ErrorCodes.ERROR_MSG_CARD_TOO_OLD,\n        SF_ErrorCodes.ERROR_MSG_CARD_TOO_FAR_IN_FUTURE,\n        SF_ErrorCodes.ERROR_MSG_CARD_EXPIRES_TOO_SOON\n    ].includes(errorCode);\n}\n\nexport function getFullBrandName(brand) {\n    return BRAND_READABLE_NAME_MAP[brand] ?? brand;\n}\n","import { AddressSchema, AddressSpecifications, StringObject } from './types';\nimport { ADDRESS_SPECIFICATIONS } from './constants';\nimport { AddressField } from '../../../types/global-types';\n\nconst SCHEMA_MAX_DEPTH = 2;\n\nclass Specifications {\n    private specifications: AddressSpecifications;\n\n    constructor(specifications?) {\n        this.specifications = { ...ADDRESS_SPECIFICATIONS, ...specifications };\n    }\n\n    /**\n     * Checks if a certain country has a dataset.\n     * @param country - The selected country\n     * @returns Boolean\n     */\n    countryHasDataset(country: string): boolean {\n        return !!this.specifications?.[country]?.hasDataset;\n    }\n\n    /**\n     * Checks if a certain country has the passed field in their optional fields array.\n     * @param country - The selected country\n     * @param fieldName - The field to be checked\n     * @returns Boolean\n     */\n    countryHasOptionalField(country: string, fieldName: string): boolean {\n        return !!this.specifications?.[country]?.optionalFields?.includes(fieldName as any);\n    }\n\n    /**\n     * Returns the address schema of the selected country or the default address schema.\n     * @param country - The selected country\n     * @returns AddressSchema\n     */\n    getAddressSchemaForCountry(country: string): AddressSchema {\n        return this.specifications?.[country]?.schema || this.specifications.default.schema;\n    }\n\n    /**\n     * Returns the address labels of the selected country or the default address labels.\n     * @param country - The selected country\n     * @returns StringObject\n     */\n    getAddressLabelsForCountry(country: string): StringObject {\n        return this.specifications?.[country]?.labels || this.specifications.default.labels;\n    }\n\n    /**\n     * Returns the optional fields of the selected country or the default optional fields.\n     * @param country - The selected country\n     * @returns Optional fields array\n     */\n    getOptionalFieldsForCountry(country: string): string[] {\n        return this.specifications?.[country]?.optionalFields || this.specifications.default?.optionalFields || [];\n    }\n\n    /**\n     * Returns the key for a field of the passed country or the default key for that field.\n     * @param fieldName - The field to be searched\n     * @param country - The selected country\n     */\n    getKeyForField(fieldName: string, country: string): string {\n        return this.specifications?.[country]?.labels?.[fieldName] || this.specifications?.default?.labels?.[fieldName] || fieldName;\n    }\n\n    /**\n     * Returns the placeholder key for a field of the passed country or the default key for that field.\n     * @param fieldName - The field to be searched\n     * @param country - The selected country\n     */\n    getPlaceholderKeyForField(fieldName: string, country: string): string {\n        return this.specifications?.[country]?.placeholders?.[fieldName] || this.specifications?.default?.placeholders?.[fieldName];\n    }\n\n    /**\n     * Returns an array with the address schema of the selected country or the default address schema\n     * Flat version of getAddressSchemaForCountry\n     * @param country - The selected country\n     * @returns Array\n     */\n    getAddressSchemaForCountryFlat(country: string): AddressField[] {\n        return this.getAddressSchemaForCountry(country)\n            .flat(SCHEMA_MAX_DEPTH)\n            .filter((element): element is AddressField => typeof element === 'string');\n    }\n}\n\nexport default Specifications;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { h } from 'preact';\nimport './Spinner.scss';\n\ninterface SpinnerProps {\n    /**\n     * Whether the spinner should be rendered inline\n     */\n    inline?: boolean;\n\n    /**\n     * size of the spinner (small/medium/large)\n     */\n    size?: string;\n}\n\n/**\n * Default Loading Spinner\n * @param props -\n */\nconst Spinner = ({ inline = false, size = 'large' }: SpinnerProps) => (\n    <div data-testid=\"spinner\" className={`adyen-checkout__spinner__wrapper ${inline ? 'adyen-checkout__spinner__wrapper--inline' : ''}`}>\n        <div className={`adyen-checkout__spinner adyen-checkout__spinner--${size}`} />\n    </div>\n);\n\nexport default Spinner;\n","import { ComponentChildren, h } from 'preact';\nimport classNames from 'classnames';\nimport Spinner from '../../internal/Spinner';\nimport './LoadingWrapper.scss';\n\ninterface LoadingWrapperProps {\n    status?: string;\n    children?: ComponentChildren;\n}\n\nconst LoadingWrapper = ({ children, status }: LoadingWrapperProps) => {\n    const wrapperClass = classNames('adyen-checkout__loading-input__form', 'loading-input__form', {\n        'loading-input__form--loading': status === 'loading'\n    });\n\n    const spinnerClass = classNames({\n        'loading-input__spinner': true,\n        'loading-input__spinner--active': status === 'loading'\n    });\n\n    return (\n        <div style={{ position: 'relative' }}>\n            <div className={spinnerClass}>\n                <Spinner />\n            </div>\n            <div className={wrapperClass}>{children}</div>\n        </div>\n    );\n};\n\nexport default LoadingWrapper;\n","import { h } from 'preact';\nimport classNames from 'classnames';\nimport { CVCHintProps } from './types';\n\nexport default function CVCHint({ frontCVC = false, fieldLabel }: CVCHintProps) {\n    const hintClassnames = classNames({\n        'adyen-checkout__card__cvc__hint__wrapper': true,\n        'adyen-checkout__field__cvc--front-hint': !!frontCVC,\n        'adyen-checkout__field__cvc--back-hint': !frontCVC\n    });\n\n    return (\n        <span className={hintClassnames}>\n            <svg\n                className={'adyen-checkout__card__cvc__hint adyen-checkout__card__cvc__hint--front'}\n                width=\"27\"\n                height=\"18\"\n                viewBox=\"0 0 27 18\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                aria-hidden={!frontCVC}\n                aria-describedby={'adyen-checkout__cvc__front-hint-img'}\n                role={'img'}\n            >\n                <title id={'adyen-checkout__cvc__front-hint-img'}>{fieldLabel}</title>\n                <path\n                    d=\"M0 3C0 1.34315 1.34315 0 3 0H24C25.6569 0 27 1.34315 27 3V15C27 16.6569 25.6569 18 24 18H3C1.34315 18 0 16.6569 0 15V3Z\"\n                    fill=\"#E6E9EB\"\n                />\n                <rect x=\"4\" y=\"12\" width=\"19\" height=\"2\" fill=\"#B9C4C9\" />\n                <rect x=\"4\" y=\"4\" width=\"4\" height=\"4\" rx=\"1\" fill=\"white\" />\n                <rect className={'adyen-checkout__card__cvc__hint__location'} x=\"16.5\" y=\"4.5\" width=\"7\" height=\"5\" rx=\"2.5\" stroke=\"#C12424\" />\n            </svg>\n\n            <svg\n                className={'adyen-checkout__card__cvc__hint adyen-checkout__card__cvc__hint--back'}\n                width=\"27\"\n                height=\"18\"\n                viewBox=\"0 0 27 18\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                aria-hidden={!!frontCVC}\n                aria-describedby={'adyen-checkout__cvc__back-hint-img'}\n                role={'img'}\n            >\n                <title id={'adyen-checkout__cvc__back-hint-img'}>{fieldLabel}</title>\n                <path\n                    d=\"M27 4.00001V3.37501C27 2.4799 26.6444 1.62146 26.0115 0.988518C25.3786 0.355581 24.5201 0 23.625 0H3.375C2.47989 0 1.62145 0.355581 0.988514 0.988518C0.355579 1.62146 0 2.4799 0 3.37501V4.00001H27Z\"\n                    fill=\"#E6E9EB\"\n                />\n                <path\n                    d=\"M0 6.99994V14.6666C0 15.5507 0.355579 16.3985 0.988514 17.0237C1.62145 17.6488 2.47989 18 3.375 18H23.625C24.5201 18 25.3786 17.6488 26.0115 17.0237C26.6444 16.3985 27 15.5507 27 14.6666V6.99994H0Z\"\n                    fill=\"#E6E9EB\"\n                />\n                <rect y=\"4.00012\" width=\"27\" height=\"3.00001\" fill=\"#687282\" />\n                <path\n                    d=\"M4 11C4 10.4477 4.44772 10 5 10H21C22.1046 10 23 10.8954 23 12C23 13.1046 22.1046 14 21 14H5C4.44771 14 4 13.5523 4 13V11Z\"\n                    fill=\"white\"\n                />\n                <rect className={'adyen-checkout__card__cvc__hint__location'} x=\"16.5\" y=\"9.5\" width=\"7\" height=\"5\" rx=\"2.5\" stroke=\"#C12424\" />\n            </svg>\n        </span>\n    );\n}\n","import { h, toChildArray, createContext } from 'preact';\nimport { useContext, useEffect } from 'preact/hooks';\nimport { Resources } from './Resources';\nimport Language from '../../language';\nimport type { ComponentChildren } from 'preact';\n\ninterface CoreProviderProps {\n    loadingContext: string;\n    i18n: Language;\n    resources: Resources;\n    children: ComponentChildren;\n}\n\ntype ContextValue = {\n    i18n: Language;\n    loadingContext: string;\n    resources: Resources;\n};\n\nconst CoreContext = createContext<ContextValue | undefined>(undefined);\n\nconst CoreProvider = ({ i18n, loadingContext, resources, children }: CoreProviderProps) => {\n    useEffect(() => {\n        if (!i18n || !loadingContext || !resources) {\n            console.warn(\n                `CoreProvider - WARNING core provider is missing:${i18n ? '' : 'i18n'} ${loadingContext ? '' : 'loadingContext'} ${resources ? '' : 'resources'}`\n            );\n        }\n    }, [i18n, loadingContext, resources]);\n\n    return (\n        <CoreContext.Provider\n            value={{\n                i18n,\n                loadingContext,\n                resources\n            }}\n        >\n            {toChildArray(children)}\n        </CoreContext.Provider>\n    );\n};\n\nconst useCoreContext = (): ContextValue => {\n    const context = useContext(CoreContext);\n\n    if (context === undefined) {\n        throw new Error('\"useCoreContext\" must be used within a CoreProvider');\n    }\n\n    return context;\n};\n\nexport { CoreProvider, useCoreContext };\n","import { useCoreContext } from './CoreProvider';\nimport { useCallback } from 'preact/hooks';\nimport { GetImageFnType, ImageOptions } from './Resources';\n\nexport type UseImageHookType = (props: ImageOptions) => GetImageFnType;\nfunction useImage(): (props?: ImageOptions) => GetImageFnType {\n    const { resources } = useCoreContext();\n    return useCallback((props?: ImageOptions) => resources?.getImage(props), []);\n}\n\nexport default useImage;\n","import { h } from 'preact';\nimport cx from 'classnames';\nimport useImage from '../../../core/Context/useImage';\n\ninterface IconProps {\n    type: string;\n    className?: string;\n    alt?: string;\n    height?: number;\n    width?: number;\n}\n\nconst Icon = ({ type, className = '', alt = '', height, width }: IconProps) => {\n    const getImage = useImage();\n    const iconUrl = getImage({ imageFolder: 'components/' })?.(type);\n\n    return <img className={cx('adyen-checkout__icon', className)} alt={alt} src={iconUrl} height={height} width={width} />;\n};\n\nexport default Icon;\n","let idCounter = Date.now();\n\nexport const getUniqueId = (prefix = 'field') => {\n    idCounter += 1;\n    return `${prefix}-${idCounter}`;\n};\n","export const PREFIX = 'bento_';\n","import classNames from 'classnames';\nimport { cloneElement, ComponentChild, Fragment, FunctionalComponent, h, toChildArray, VNode } from 'preact';\nimport Spinner from '../../Spinner';\nimport Icon from '../../Icon';\nimport { ARIA_CONTEXT_SUFFIX, ARIA_ERROR_SUFFIX } from '../../../../core/Errors/constants';\nimport { useCallback, useRef, useState } from 'preact/hooks';\nimport { getUniqueId } from '../../../../utils/idGenerator';\nimport { FieldProps } from './types';\nimport './Field.scss';\nimport { PREFIX } from '../../Icon/constants';\n\nconst Field: FunctionalComponent<FieldProps> = props => {\n    //\n    const {\n        children,\n        className,\n        classNameModifiers,\n        dir,\n        disabled,\n        readOnly,\n        errorMessage,\n        helper,\n        inputWrapperModifiers,\n        isLoading,\n        isValid,\n        label,\n        labelEndAdornment,\n        name,\n        onBlur,\n        onFieldBlur,\n        onFocus,\n        // onFocusField is a securedField related function that allows a label click to set focus on a securedField (equates to CardInput setFocusOn)\n        // TODO should rename it to make its purpose clear => setFocusOnSecuredField\n        onFocusField,\n        showValidIcon,\n        useLabelElement,\n        showErrorElement,\n        showContextualElement,\n        contextualText,\n        // Redeclare prop names to avoid internal clashes\n        filled: propsFilled,\n        focused: propsFocused,\n        i18n,\n        contextVisibleToScreenReader,\n        renderAlternativeToLabel\n    } = props;\n\n    // Controls whether any error element has an aria-hidden=\"true\" attr (which means it is the error for a securedField)\n    // or whether it has an id attr that can be pointed to by an aria-describedby attr on an input element\n    const contextVisibleToSR = contextVisibleToScreenReader ?? true;\n    const showError = showErrorElement && typeof errorMessage === 'string' && errorMessage.length > 0;\n    const showContext = showContextualElement && !showError && contextualText?.length > 0;\n\n    const uniqueId = useRef(getUniqueId(`adyen-checkout-${name}`));\n    const [focused, setFocused] = useState(false);\n    const [filled, setFilled] = useState(false);\n\n    // The means by which focussed/filled is set for securedFields\n    if (propsFocused != null) setFocused(!!propsFocused);\n    if (propsFilled != null) setFilled(!!propsFilled);\n\n    // The means by which focussed/filled is set for other fields - this function is passed down to them and triggered\n    const onFocusHandler = useCallback(\n        (event: h.JSX.TargetedEvent<HTMLInputElement>) => {\n            setFocused(true);\n            onFocus?.(event);\n        },\n        [onFocus]\n    );\n\n    const onBlurHandler = useCallback(\n        (event: h.JSX.TargetedEvent<HTMLInputElement>) => {\n            setFocused(false);\n            onBlur?.(event);\n            // When we also need to fire a specific function when a field blurs // TODO - what is the use case?\n            onFieldBlur?.(event);\n        },\n        [onBlur, onFieldBlur]\n    );\n\n    const renderLabelOrAlternativeContents = useCallback(() => {\n        return (\n            <Fragment>\n                {typeof label === 'string' && (\n                    <span\n                        className={classNames({\n                            'adyen-checkout__label__text': true,\n                            'adyen-checkout__label__text--error': errorMessage\n                        })}\n                        data-id={name}\n                    >\n                        {label}\n                    </span>\n                )}\n\n                {/*TODO - in what scenario is label a function? */}\n                {/*@ts-ignore - function is callable*/}\n                {typeof label === 'function' && label()}\n\n                {labelEndAdornment && <span className=\"adyen-checkout__label-adornment--end\">{labelEndAdornment}</span>}\n\n                {helper && <span className={'adyen-checkout__helper-text'}>{helper}</span>}\n            </Fragment>\n        );\n    }, [label, errorMessage, labelEndAdornment, helper]);\n\n    const renderInputRelatedElements = useCallback(() => {\n        const errorElem = (\n            <span\n                className={classNames({ 'adyen-checkout-contextual-text--error': true, 'adyen-checkout-contextual-text--hidden': !showError })}\n                {...(contextVisibleToSR && { id: `${uniqueId.current}${ARIA_ERROR_SUFFIX}` })}\n                aria-hidden={contextVisibleToSR ? null : 'true'}\n            >\n                {errorMessage}\n            </span>\n        );\n        const contextualElem = (\n            <span\n                className={classNames({ 'adyen-checkout-contextual-text': true, 'adyen-checkout-contextual-text--hidden': !showContext })}\n                {...(contextVisibleToSR && { id: `${uniqueId.current}${ARIA_CONTEXT_SUFFIX}` })}\n                aria-hidden={contextVisibleToSR ? null : 'true'}\n            >\n                {contextualText}\n            </span>\n        );\n\n        return (\n            <Fragment>\n                <div\n                    className={classNames([\n                        'adyen-checkout__input-wrapper',\n                        ...inputWrapperModifiers.map(m => `adyen-checkout__input-wrapper--${m}`)\n                    ])}\n                    dir={dir}\n                >\n                    {toChildArray(children).map((child: ComponentChild): ComponentChild => {\n                        const childProps = {\n                            isValid,\n                            onFocusHandler,\n                            onBlurHandler,\n                            isInvalid: !!errorMessage,\n                            ...(name && { uniqueId: uniqueId.current }),\n                            showErrorElement: showErrorElement\n                        };\n                        return cloneElement(child as VNode, childProps);\n                    })}\n\n                    {isLoading && (\n                        <span className=\"adyen-checkout-input__inline-validation adyen-checkout-input__inline-validation--loading\">\n                            <Spinner size=\"small\" />\n                        </span>\n                    )}\n\n                    {isValid && showValidIcon !== false && (\n                        <span className=\"adyen-checkout-input__inline-validation adyen-checkout-input__inline-validation--valid\">\n                            <Icon type={`${PREFIX}checkmark`} alt={i18n?.get('field.valid')} />\n                        </span>\n                    )}\n\n                    {errorMessage && (\n                        <span className=\"adyen-checkout-input__inline-validation adyen-checkout-input__inline-validation--invalid\">\n                            <Icon type={`${PREFIX}field_error`} alt={i18n?.get('error.title')} />\n                        </span>\n                    )}\n                </div>\n                {errorElem}\n                {contextualElem}\n            </Fragment>\n        );\n    }, [children, errorMessage, contextualText, isLoading, isValid, onFocusHandler, onBlurHandler]);\n\n    /**\n     * Use cases:\n     * - Not all form controls want/need a label e.g. many checkboxes describe what they are in their own markup and don't need the wrapping Field to also generate a labelling element\n     * - securedFields *can't* have a label (screen-reader's can make the association, over different browser contexts, between the label and the input)\n     */\n    const LabelOrAlternative = useCallback(\n        ({ onFocusField, focused, filled, disabled, name, uniqueId, useLabelElement, isSecuredField, children, renderAlternativeToLabel }) => {\n            const defaultWrapperProps = {\n                onClick: onFocusField,\n                className: classNames({\n                    'adyen-checkout__label': true,\n                    'adyen-checkout__label--focused': focused,\n                    'adyen-checkout__label--filled': filled,\n                    'adyen-checkout__label--disabled': disabled\n                })\n            };\n\n            return useLabelElement ? (\n                // if we are NOT dealing with the label for a securedField... we can give it a `for` attribute\n                <label {...defaultWrapperProps} {...(!isSecuredField && name && { htmlFor: uniqueId })}>\n                    {children}\n                </label>\n            ) : (\n                renderAlternativeToLabel(defaultWrapperProps, children, uniqueId) // defaults to null\n\n                // Example usage:\n                // const alternativeLabelContent = (defaultWrapperProps, children, uniqueId) => {\n                //     return (\n                //         <div {...defaultWrapperProps} role={'label'} htmlFor={uniqueId}>\n                //             {children}\n                //         </div>\n                //     );\n                // };\n                // <Field name={'myField'} useLabelElement={false} renderAlternativeToLabel={alternativeLabelContent}>\n            );\n        },\n        []\n    );\n\n    /**\n     * RENDER\n     */\n    return (\n        <div\n            className={classNames(\n                'adyen-checkout__field',\n                className,\n                classNameModifiers.map(m => `adyen-checkout__field--${m}`),\n                {\n                    'adyen-checkout__field--error': errorMessage,\n                    'adyen-checkout__field--valid': isValid,\n                    'adyen-checkout__field--inactive': readOnly || disabled\n                }\n            )}\n        >\n            <LabelOrAlternative\n                onFocusField={onFocusField}\n                name={name}\n                disabled={disabled}\n                filled={filled}\n                focused={focused}\n                useLabelElement={useLabelElement}\n                uniqueId={uniqueId.current}\n                isSecuredField={!contextVisibleToSR}\n                renderAlternativeToLabel={renderAlternativeToLabel}\n            >\n                {renderLabelOrAlternativeContents()}\n            </LabelOrAlternative>\n            {renderInputRelatedElements()}\n        </div>\n    );\n};\n\nField.defaultProps = {\n    className: '',\n    classNameModifiers: [],\n    inputWrapperModifiers: [],\n    useLabelElement: true,\n    showErrorElement: true,\n    showContextualElement: true,\n    renderAlternativeToLabel: () => null\n};\n\nexport default Field;\n","import { h } from 'preact';\nimport { DATA_ENCRYPTED_FIELD_ATTR, DATA_INFO, DATA_UID } from '../../../../internal/SecuredFields/lib/constants';\nimport { SfSpanProps } from './types';\n\n/**\n * Extract the relevant props and write them as attributes to the span that will contain the securedFields iframe\n * Specifically exists to make the uniqueId created by the Field comp accessible to the SFP via a data-uid attr\n */\nexport default function DataSfSpan(props: SfSpanProps) {\n    const opts = {\n        [DATA_ENCRYPTED_FIELD_ATTR]: props.encryptedFieldType,\n        [DATA_INFO]: props['data-info'],\n        [DATA_UID]: props.uniqueId,\n        className: props.className\n    };\n    return <span {...opts}>{props.children}</span>;\n}\n","import { h } from 'preact';\n\nexport const alternativeLabelContent = (defaultWrapperProps, children) => {\n    return (\n        <div {...defaultWrapperProps} aria-hidden={'true'}>\n            {children}\n        </div>\n    );\n};\n","import { h } from 'preact';\nimport classNames from 'classnames';\nimport CVCHint from './CVCHint';\nimport Field from '../../../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { CVCProps } from './types';\nimport {\n    CVC_POLICY_HIDDEN,\n    CVC_POLICY_OPTIONAL,\n    CVC_POLICY_REQUIRED,\n    ENCRYPTED_SECURITY_CODE\n} from '../../../../internal/SecuredFields/lib/constants';\nimport DataSfSpan from './DataSfSpan';\nimport { alternativeLabelContent } from './FieldLabelAlternative';\n\nexport default function CVC(props: CVCProps) {\n    const {\n        label,\n        onFocusField = () => {},\n        error = '',\n        className = '',\n        classNameModifiers = [],\n        focused,\n        filled,\n        isValid,\n        frontCVC = false,\n        cvcPolicy = CVC_POLICY_REQUIRED,\n        showContextualElement,\n        contextualText\n    } = props;\n    const { i18n } = useCoreContext();\n\n    const fieldClassnames = classNames(className, {\n        'adyen-checkout__field__cvc': true,\n        'adyen-checkout__card__cvc__input--hidden': cvcPolicy === CVC_POLICY_HIDDEN,\n        'adyen-checkout__field__cvc--optional': cvcPolicy === CVC_POLICY_OPTIONAL\n    });\n\n    const cvcClassnames = classNames({\n        'adyen-checkout__input': true,\n        'adyen-checkout__input--small': true,\n        'adyen-checkout__card__cvc__input': true,\n        'adyen-checkout__input--error': error,\n        'adyen-checkout__input--focus': focused,\n        'adyen-checkout__input--valid': isValid\n    });\n\n    const fieldLabel = cvcPolicy !== CVC_POLICY_OPTIONAL ? label : i18n.get('creditCard.securityCode.label.optional');\n\n    return (\n        <Field\n            label={fieldLabel}\n            focused={focused}\n            filled={filled}\n            classNameModifiers={[...classNameModifiers, 'securityCode']}\n            onFocusField={() => onFocusField(ENCRYPTED_SECURITY_CODE)}\n            className={fieldClassnames}\n            errorMessage={error}\n            isValid={isValid}\n            dir={'ltr'}\n            name={ENCRYPTED_SECURITY_CODE}\n            i18n={i18n}\n            contextVisibleToScreenReader={false}\n            useLabelElement={false}\n            renderAlternativeToLabel={alternativeLabelContent}\n            showContextualElement={showContextualElement}\n            contextualText={contextualText}\n        >\n            <DataSfSpan encryptedFieldType={ENCRYPTED_SECURITY_CODE} className={cvcClassnames} />\n\n            <CVCHint frontCVC={frontCVC} fieldLabel={fieldLabel} />\n        </Field>\n    );\n}\n","import { h, RefCallback } from 'preact';\nimport { useCallback } from 'preact/hooks';\nimport classNames from 'classnames';\nimport { ARIA_CONTEXT_SUFFIX, ARIA_ERROR_SUFFIX } from '../../../core/Errors/constants';\nimport Language from '../../../language';\nimport './FormFields.scss';\n\nexport interface InputBaseProps extends h.JSX.HTMLAttributes {\n    classNameModifiers?: string[];\n    isInvalid?: boolean;\n    isValid?: boolean;\n    readonly?: boolean;\n    uniqueId?: string;\n    disabled?: boolean;\n    className?: string;\n    placeholder?: string;\n    value?: string;\n    name?: string;\n    checked?: boolean;\n    setRef?: RefCallback<HTMLInputElement>;\n    trimOnBlur?: boolean;\n    i18n?: Language;\n    label?: string;\n    onBlurHandler?: h.JSX.GenericEventHandler<HTMLInputElement>;\n    onFocusHandler?: h.JSX.GenericEventHandler<HTMLInputElement>;\n    maxlength?: number | null;\n    addContextualElement?: boolean;\n    type?: string;\n}\n\nexport default function InputBase({ setRef, ...props }: InputBaseProps) {\n    const { autoCorrect, classNameModifiers, isInvalid, isValid, readonly = null, spellCheck, type, uniqueId, disabled } = props;\n    const className = props.className;\n\n    /**\n     * To avoid confusion with misplaced/misdirected onChange handlers - InputBase only accepts onInput, onBlur & onFocus handlers.\n     * The first 2 being the means by which we expect useForm--handleChangeFor validation functionality to be applied.\n     */\n    if (Object.prototype.hasOwnProperty.call(props, 'onChange')) {\n        console.error('Error: Form fields that rely on InputBase may not have an onChange property');\n    }\n\n    const handleInput = useCallback(\n        (event: h.JSX.TargetedInputEvent<HTMLInputElement>) => {\n            props.onInput(event);\n        },\n        [props.onInput]\n    );\n\n    /**\n     *  Event is fired when a key that produces a character value is pressed down.\n     *  ENTER keypress also triggers this event.\n     *\n     *  TODO: 'keypress' event is deprecated\n     *  https://developer.mozilla.org/en-US/docs/Web/API/Element/keypress_event\n     */\n    const handleKeyPress = useCallback(\n        (event: h.JSX.TargetedKeyboardEvent<HTMLInputElement>) => {\n            if (props?.onKeyPress) props.onKeyPress(event);\n        },\n        [props?.onKeyPress]\n    );\n\n    /**\n     * Event is fired when certain keys are pressed (keys that do not output characters):\n     * Backspace, Arrow keys, Shift, Ctrl, Command, Option, Esc\n     *\n     * Exception: ENTER keypress triggers 'onKeyPress' AND 'onKeyUp'\n     */\n    const handleKeyUp = useCallback(\n        (event: h.JSX.TargetedKeyboardEvent<HTMLInputElement>) => {\n            if (props?.onKeyUp) props.onKeyUp(event);\n        },\n        [props?.onKeyUp]\n    );\n\n    const handleBlur = useCallback(\n        (event: h.JSX.TargetedFocusEvent<HTMLInputElement>) => {\n            props?.onBlurHandler?.(event); // From Field component\n\n            if (props.trimOnBlur) {\n                (event.target as HTMLInputElement).value = (event.target as HTMLInputElement).value.trim(); // needed to trim trailing spaces in field (leading spaces can be done via formatting)\n            }\n\n            props?.onBlur?.(event);\n        },\n        [props.onBlur, props.onBlurHandler]\n    );\n\n    const handleFocus = useCallback(\n        (event: h.JSX.TargetedEvent<HTMLInputElement>) => {\n            props?.onFocusHandler?.(event); // From Field component\n        },\n        [props.onFocusHandler]\n    );\n\n    const inputClassNames = classNames(\n        'adyen-checkout__input',\n        [`adyen-checkout__input--${type}`],\n        className,\n        {\n            'adyen-checkout__input--invalid': isInvalid,\n            'adyen-checkout__input--valid': isValid\n        },\n        classNameModifiers.map(m => `adyen-checkout__input--${m}`)\n    );\n\n    // Don't spread classNameModifiers etc to input element (it ends up as an attribute on the element itself)\n    const { classNameModifiers: cnm, uniqueId: uid, isInvalid: iiv, isValid: iv, addContextualElement: ace, ...newProps } = props;\n\n    return (\n        <input\n            id={uniqueId}\n            {...newProps}\n            aria-required={newProps.required}\n            type={type}\n            className={inputClassNames}\n            readOnly={readonly}\n            spellCheck={spellCheck}\n            autoCorrect={autoCorrect}\n            aria-describedby={`${uniqueId}${isInvalid ? ARIA_ERROR_SUFFIX : ARIA_CONTEXT_SUFFIX}`}\n            aria-invalid={isInvalid}\n            onInput={handleInput}\n            onBlur={handleBlur}\n            onFocus={handleFocus}\n            onKeyUp={handleKeyUp}\n            onKeyPress={handleKeyPress}\n            disabled={disabled}\n            ref={setRef}\n        />\n    );\n}\n\nInputBase.defaultProps = {\n    type: 'text',\n    classNameModifiers: []\n};\n","import { h } from 'preact';\nimport InputBase, { InputBaseProps } from './InputBase';\n\nexport default function InputText(props: InputBaseProps) {\n    /* Type of input base is always text, which is combined with using inputmode to change mobile keyboards.\n     * This gives the most consistent and performant mobile input experience.\n     */\n    return <InputBase classNameModifiers={['large']} {...props} aria-required={props.required} type=\"text\" />;\n}\n","import { h } from 'preact';\nimport CVC from './CVC';\nimport Field from '../../../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { StoredCardFieldsProps } from './types';\nimport { ENCRYPTED_SECURITY_CODE } from '../../../../internal/SecuredFields/lib/constants';\nimport InputText from '../../../../internal/FormFields/InputText';\n\nexport default function StoredCardFields({\n    brand,\n    hasCVC,\n    onFocusField,\n    errors,\n    valid,\n    cvcPolicy,\n    focusedElement,\n    lastFour,\n    expiryMonth,\n    expiryYear,\n    showContextualElement\n}: StoredCardFieldsProps) {\n    const { i18n } = useCoreContext();\n    const storedCardDescription = i18n.get('creditCard.storedCard.description.ariaLabel').replace('%@', lastFour);\n    const storedCardDescriptionSuffix = expiryMonth && expiryYear ? ` ${i18n.get('creditCard.expiryDate.label')} ${expiryMonth}/${expiryYear}` : '';\n    const ariaLabel = `${storedCardDescription}${storedCardDescriptionSuffix}`;\n    const isAmex = brand === 'amex';\n    const cvcContextualText = isAmex\n        ? i18n.get('creditCard.securityCode.contextualText.4digits')\n        : i18n.get('creditCard.securityCode.contextualText.3digits');\n\n    const getError = (errors, fieldType) => {\n        return errors[fieldType] ? i18n.get(errors[fieldType]) : null;\n    };\n\n    return (\n        <div className=\"adyen-checkout__card__form adyen-checkout__card__form--oneClick\" aria-label={ariaLabel}>\n            <div className=\"adyen-checkout__card__exp-cvc adyen-checkout__field-wrapper\">\n                {expiryMonth && expiryYear && (\n                    <Field\n                        label={i18n.get('creditCard.expiryDate.label')}\n                        className=\"adyen-checkout__field--50\"\n                        classNameModifiers={['storedCard']}\n                        name={'expiryDateField'}\n                        disabled\n                    >\n                        <InputText\n                            name={'expiryDateField'}\n                            className={'adyen-checkout__input adyen-checkout__input--disabled adyen-checkout__card__exp-date__input--oneclick'}\n                            value={`${expiryMonth} / ${expiryYear}`}\n                            disabled={true}\n                            dir={'ltr'}\n                        />\n                    </Field>\n                )}\n\n                {hasCVC && (\n                    <CVC\n                        cvcPolicy={cvcPolicy}\n                        error={getError(errors, ENCRYPTED_SECURITY_CODE)}\n                        focused={focusedElement === 'encryptedSecurityCode'}\n                        filled={!!valid.encryptedSecurityCode || !!errors.encryptedSecurityCode}\n                        isValid={!!valid.encryptedSecurityCode}\n                        label={i18n.get('creditCard.securityCode.label')}\n                        onFocusField={onFocusField}\n                        {...(expiryMonth && expiryYear && { className: 'adyen-checkout__field--50' })}\n                        classNameModifiers={['storedCard']}\n                        frontCVC={isAmex}\n                        showContextualElement={showContextualElement}\n                        contextualText={cvcContextualText}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n","import { h, ComponentChildren } from 'preact';\nimport cx from 'classnames';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport './Fieldset.scss';\n\ninterface FieldsetProps {\n    children: ComponentChildren;\n    classNameModifiers: string[];\n    label?: string;\n    readonly?: boolean;\n}\n\nexport default function Fieldset({ children, classNameModifiers = [], label, readonly = false }: FieldsetProps) {\n    const { i18n } = useCoreContext();\n\n    return (\n        <fieldset\n            className={cx([\n                'adyen-checkout__fieldset',\n                ...classNameModifiers.map(m => `adyen-checkout__fieldset--${m}`),\n                { 'adyen-checkout__fieldset--readonly': readonly }\n            ])}\n        >\n            {label && <legend className=\"adyen-checkout__fieldset__title\">{i18n.get(label)}</legend>}\n\n            <div className=\"adyen-checkout__fieldset__fields\">{children}</div>\n        </fieldset>\n    );\n}\n","import { h } from 'preact';\nimport cx from 'classnames';\nimport './RadioGroup.scss';\nimport { RadioGroupProps } from './types';\nimport { getUniqueId } from '../../../../utils/idGenerator';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\n\nexport default function RadioGroup(props: RadioGroupProps) {\n    const { items, name, onChange, value, isInvalid, uniqueId, ariaLabel, style = 'classic' } = props;\n\n    const { i18n } = useCoreContext();\n    const uniqueIdBase = uniqueId?.replace(/[0-9]/g, '').substring(0, uniqueId.lastIndexOf('-'));\n\n    return (\n        <div\n            className={cx(['adyen-checkout__radio_group', `adyen-checkout__radio_group--${style}`])}\n            role={'radiogroup'}\n            {...(ariaLabel && { ['aria-label']: ariaLabel })}\n        >\n            {items.map(item => {\n                const uniqueId = getUniqueId(uniqueIdBase);\n                return (\n                    <div key={item.id} className=\"adyen-checkout__radio_group__input-wrapper\">\n                        <input\n                            id={uniqueId}\n                            type=\"radio\"\n                            checked={value === item.id}\n                            className=\"adyen-checkout__radio_group__input\"\n                            name={name}\n                            onChange={onChange}\n                            onClick={onChange}\n                            value={item.id}\n                        />\n                        <label\n                            className={cx([\n                                'adyen-checkout__label__text',\n                                'adyen-checkout__radio_group__label',\n                                props.className,\n                                { 'adyen-checkout__radio_group__label--invalid': isInvalid }\n                            ])}\n                            htmlFor={uniqueId}\n                        >\n                            {i18n.get(item.name)}\n                        </label>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nRadioGroup.defaultProps = {\n    onChange: () => {},\n    items: []\n};\n","import { JSX } from 'preact';\nimport { useRef, useState, useEffect } from 'preact/hooks';\nimport cx from 'classnames';\nimport './Img.scss';\nimport { h } from 'preact';\nimport { ImgProps } from './types';\n\nexport default function Img(props: ImgProps) {\n    const { backgroundUrl = '', className = '', classNameModifiers = [], src = '', alt = '', showOnError = false } = props;\n    const [loaded, setLoaded] = useState(false);\n    const imageRef = useRef(null);\n\n    const handleLoad = () => {\n        setLoaded(true);\n    };\n\n    const handleError = () => {\n        setLoaded(showOnError);\n    };\n\n    const classNames = cx(\n        [className],\n        'adyen-checkout__image',\n        { 'adyen-checkout__image--loaded': loaded },\n        ...classNameModifiers.map(modifier => `adyen-checkout__image--${modifier}`)\n    );\n\n    useEffect(() => {\n        const image = backgroundUrl ? new Image() : imageRef.current;\n        image.src = backgroundUrl || src;\n        image.onload = handleLoad;\n        setLoaded(!!image.complete);\n    }, []);\n\n    if (backgroundUrl) {\n        return <div data-testid=\"background\" style={{ backgroundUrl } as JSX.CSSProperties} {...props} className={classNames} />;\n    }\n\n    return <img {...props} alt={alt} ref={imageRef} className={classNames} onError={handleError} />;\n}\n","import { h, Fragment } from 'preact';\nimport cx from 'classnames';\nimport { SelectButtonProps } from '../types';\nimport Img from '../../../Img';\n\nfunction SelectButtonElement({ filterable, toggleButtonRef, ...props }) {\n    if (filterable) {\n        // Even if passed, we can't add an id to this div since it is not allowed to associate a div with a label element\n        const { id, ...strippedProps } = props;\n        return <div {...strippedProps} ref={toggleButtonRef} />;\n    }\n\n    return <button id={props.id} aria-describedby={props.ariaDescribedBy} type={'button'} {...props} ref={toggleButtonRef} />;\n}\n\nfunction SelectButton(props: Readonly<SelectButtonProps>) {\n    const { active, selected, inputText, readonly, showList, required } = props;\n\n    // display fallback order\n    const displayText = selected.selectedOptionName || selected.name || props.placeholder || '';\n    // displayInputText only used for the text input for the filter\n    // display the \"typed\" filter text when showing the dropdown,\n    // hide it and show the \"selected\" value when collapsed\n    const displayInputText = showList ? inputText : displayText;\n\n    const setFocus = (e: Event) => {\n        e.preventDefault();\n        if (document.activeElement === props.filterInputRef.current) {\n            if (!props.showList) {\n                props.toggleList(e);\n            }\n        } else if (props.filterInputRef.current) props.filterInputRef.current.focus();\n    };\n\n    // 1. If readonly we ignore the click action\n    // 2. If filterable we want to show the list and focus on the input\n    // 3. Otherwise we just toggle the list\n    const onClickHandler = readonly ? null : props.filterable ? setFocus : props.toggleList;\n\n    const onFocusHandler = readonly ? null : props.onFocus;\n\n    // check COWEB-1301 [Investigate] Drop-in Accessibility - ADA Compliance questions\n    const currentSelectedItemId = active.id ? `listItem-${active.id}` : '';\n\n    return (\n        <SelectButtonElement\n            className={cx({\n                'adyen-checkout__dropdown__button': true,\n                'adyen-checkout__dropdown__button--readonly': readonly,\n                'adyen-checkout__dropdown__button--active': showList,\n                'adyen-checkout__dropdown__button--invalid': props.isInvalid,\n                'adyen-checkout__dropdown__button--valid': props.isValid,\n                'adyen-checkout__dropdown__button--disabled': selected.disabled\n            })}\n            disabled={props.disabled}\n            filterable={props.filterable}\n            onClick={onClickHandler}\n            onKeyDown={!readonly ? props.onButtonKeyDown : null}\n            toggleButtonRef={props.toggleButtonRef}\n            // Only for some dropdowns e.g. the one found in installments when it is just in the form of a single dropdown, do we want to add an id that links to a label's for attr\n            // If we allow an id to be added to the buttons in CtPCardsList, for example, unit tests start failing because it seems a button with an id no longer has a name property that can be used\n            // as a qualifier in findByRole\n            {...(props.allowIdOnButton && props.id && { id: props.id })}\n        >\n            {!props.filterable ? (\n                <Fragment>\n                    {selected.icon && <Img className=\"adyen-checkout__dropdown__button__icon\" src={selected.icon} alt={selected.name} />}\n                    <span className=\"adyen-checkout__dropdown__button__text\">{displayText}</span>\n                    {selected.secondaryText && <span className=\"adyen-checkout__dropdown__button__secondary-text\">{selected.secondaryText}</span>}\n                </Fragment>\n            ) : (\n                <Fragment>\n                    {!showList && selected.icon && <Img className=\"adyen-checkout__dropdown__button__icon\" src={selected.icon} alt={selected.name} />}\n                    <input\n                        value={displayInputText}\n                        aria-autocomplete=\"list\"\n                        aria-controls={props.selectListId}\n                        aria-expanded={showList}\n                        aria-owns={props.selectListId}\n                        autoComplete=\"off\"\n                        className=\"adyen-checkout__filter-input\"\n                        onInput={props.onInput}\n                        onFocus={onFocusHandler}\n                        ref={props.filterInputRef}\n                        role=\"combobox\"\n                        aria-activedescendant={currentSelectedItemId}\n                        type=\"text\"\n                        readOnly={props.readonly}\n                        id={props.id}\n                        aria-describedby={props.ariaDescribedBy}\n                        required={required}\n                    />\n                    {!showList && selected.secondaryText && (\n                        <span className=\"adyen-checkout__dropdown__button__secondary-text\">{selected.secondaryText}</span>\n                    )}\n                </Fragment>\n            )}\n        </SelectButtonElement>\n    );\n}\n\nexport default SelectButton;\n","import { h } from 'preact';\nimport cx from 'classnames';\nimport { SelectItemProps } from '../types';\nimport Img from '../../../Img';\nimport Icon from '../../../Icon';\nimport { PREFIX } from '../../../Icon/constants';\n\nconst SelectListItem = ({ item, active, selected, ...props }: SelectItemProps) => {\n    return (\n        /* eslint-disable jsx-a11y/click-events-have-key-events  */\n        <li\n            aria-disabled={!!item.disabled}\n            aria-selected={selected}\n            className={cx([\n                'adyen-checkout__dropdown__element',\n                {\n                    'adyen-checkout__dropdown__element--active': active,\n                    'adyen-checkout__dropdown__element--disabled': !!item.disabled\n                }\n            ])}\n            // A change in Preact v10.11.1 means that all falsy values are assessed and set on data attributes.\n            // In the case of data-disabled we only ever want it set if item.disabled is actually true, since the presence of the data-disabled attr,\n            // regardless of its value, will disable the select list item\n            data-disabled={item.disabled === true ? true : null}\n            data-value={item.id}\n            onClick={props.onSelect}\n            onMouseEnter={props.onHover}\n            /* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */\n            role=\"option\"\n            //tabIndex={-1}\n            id={`listItem-${item.id}`}\n        >\n            {item.icon && <Img className=\"adyen-checkout__dropdown__element__icon\" alt={item.name} src={item.icon} />}\n            <span className=\"adyen-checkout__dropdown__element__text\">{item.name}</span>\n            {item.secondaryText && <span className=\"adyen-checkout__dropdown__element__secondary-text\">{item.secondaryText}</span>}\n            {selected && <Icon type={`${PREFIX}checkmark`} height={14} width={14} />}\n        </li>\n    );\n};\n\nexport default SelectListItem;\n","import { h } from 'preact';\nimport cx from 'classnames';\nimport SelectListItem from './SelectListItem';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { SelectListProps } from '../types';\n\nfunction SelectList({ selected, active, filteredItems, showList, ...props }: SelectListProps) {\n    const { i18n } = useCoreContext();\n\n    return (\n        /* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n        <ul\n            className={cx({\n                'adyen-checkout__dropdown__list': true,\n                'adyen-checkout__dropdown__list--active': showList\n            })}\n            id={props.selectListId}\n            ref={props.selectListRef}\n            role=\"listbox\"\n        >\n            {filteredItems.length ? (\n                filteredItems.map(item => (\n                    <SelectListItem\n                        active={item.id === active.id}\n                        item={item}\n                        key={item.id}\n                        onSelect={props.onSelect}\n                        onHover={props.onHover}\n                        selected={item.id === selected.id}\n                    />\n                ))\n            ) : (\n                <div className=\"adyen-checkout__dropdown__element adyen-checkout__dropdown__element--no-options\">\n                    {i18n.get('select.noOptionsFound')}\n                </div>\n            )}\n        </ul>\n    );\n}\n\nexport default SelectList;\n","/* eslint-disable */\nexport default function uuidv4(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        let r = (Math.random() * 16) | 0,\n            v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/* eslint-enable */\n","export const keys = {\n    arrowDown: 'ArrowDown',\n    arrowUp: 'ArrowUp',\n    enter: 'Enter',\n    escape: 'Escape',\n    space: ' ',\n    tab: 'Tab'\n};\n","const convertFullToHalf = str => str.replace(/[！-～]/g, r => String.fromCharCode(r.charCodeAt(0) - 0xfee0));\n\n/**\n * This function scrolls and element to view and simulates the default behaviour of .focus() by a given browser\n * This function is inspired, yet simplified of the code found here https://gist.github.com/hsablonniere/2581101\n * @param element - element to focus\n */\nconst simulateFocusScroll = (element: HTMLElement) => {\n    const parent = element.parentNode as HTMLElement;\n    const parentComputedStyle = window.getComputedStyle(parent, null);\n    const parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue('border-top-width'));\n    const overTop = element.offsetTop - parent.offsetTop < parent.scrollTop;\n    const overBottom = element.offsetTop - parent.offsetTop + element.clientHeight - parentBorderTopWidth > parent.scrollTop + parent.clientHeight;\n\n    if (overTop || overBottom) {\n        parent.scrollTop = element.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + element.clientHeight / 2;\n    }\n};\n\nexport { convertFullToHalf, simulateFocusScroll };\n","import { h } from 'preact';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport cx from 'classnames';\nimport SelectButton from './components/SelectButton';\nimport SelectList from './components/SelectList';\nimport uuid from '../../../../utils/uuid';\nimport { keys } from './constants';\nimport { SelectItem, SelectProps } from './types';\nimport './Select.scss';\nimport { ARIA_CONTEXT_SUFFIX, ARIA_ERROR_SUFFIX } from '../../../../core/Errors/constants';\nimport { simulateFocusScroll } from '../utils';\n\nfunction Select({\n    items = [],\n    className = '',\n    classNameModifiers = [],\n    filterable = true,\n    readonly = false,\n    onChange = () => {},\n    onInput,\n    selectedValue,\n    name,\n    isInvalid,\n    isValid,\n    placeholder,\n    uniqueId,\n    disabled,\n    disableTextFilter,\n    clearOnSelect,\n    blurOnClose,\n    onListToggle,\n    allowIdOnButton = false,\n    required\n}: SelectProps) {\n    const filterInputRef = useRef(null);\n    const selectContainerRef = useRef(null);\n    const toggleButtonRef = useRef(null);\n    const selectListRef = useRef(null);\n    const [textFilter, setTextFilter] = useState<string>(null);\n    const [showList, setShowList] = useState<boolean>(false);\n    const selectListId: string = useMemo(() => `select-${uuid()}`, []);\n\n    const active: SelectItem = items.find(i => i.id === selectedValue) || ({} as SelectItem);\n\n    const [inputText, setInputText] = useState<string>();\n\n    const [activeOption, setActiveOption] = useState<SelectItem>(active);\n\n    const selectedOption = active;\n\n    const filteredItems = disableTextFilter ? items : items.filter(item => !textFilter || item.name.toLowerCase().includes(textFilter.toLowerCase()));\n\n    const suffix = isInvalid ? ARIA_ERROR_SUFFIX : ARIA_CONTEXT_SUFFIX;\n    const ariaDescribedBy = uniqueId ? `${uniqueId}${suffix}` : null;\n\n    const setNextActive = () => {\n        if (!filteredItems || filteredItems.length < 1) return;\n        const possibleNextIndex = filteredItems.findIndex(listItem => listItem === activeOption) + 1;\n        const nextIndex = possibleNextIndex < filteredItems.length ? possibleNextIndex : 0;\n        const nextItem = filteredItems[nextIndex];\n        scrollToItem(nextItem);\n        setActiveOption(nextItem);\n    };\n\n    const setPreviousActive = () => {\n        if (!filteredItems || filteredItems.length < 1) return;\n        const possibleNextIndex = filteredItems.findIndex(listItem => listItem === activeOption) - 1;\n        const nextIndex = possibleNextIndex < 0 ? filteredItems.length - 1 : possibleNextIndex;\n        const nextItem = filteredItems[nextIndex];\n        scrollToItem(nextItem);\n        setActiveOption(nextItem);\n    };\n\n    const scrollToItem = (item: SelectItem) => {\n        if (!item) return;\n        const nextElement = document.getElementById(`listItem-${item.id}`);\n        simulateFocusScroll(nextElement);\n    };\n\n    /**\n     * Closes the selectList, empties the text filter and focuses the button element\n     */\n    const closeList = () => {\n        //blurs the field when the list is closed, makes for a better UX for most users, needs more testing\n        blurOnClose && filterInputRef.current.blur();\n        setShowList(false);\n    };\n\n    const openList = () => {\n        setShowList(true);\n    };\n\n    const extractItemFromEvent = (e: Event): SelectItem => {\n        const value = (e.currentTarget as HTMLInputElement).getAttribute('data-value');\n        return filteredItems.find(listItem => listItem.id == value);\n    };\n\n    /**\n     * Closes the select list and fires an onChange\n     * @param e - Event\n     */\n    const handleSelect = (e: Event) => {\n        e.preventDefault();\n\n        // We use a local variable here since writing and if statement is cleaner then a long ternary\n        let valueToEmit;\n\n        if (e.currentTarget instanceof HTMLElement && e.currentTarget.getAttribute('role') === 'option') {\n            // This is the main scenario when clicking and item in the list\n            // Item comes from the event\n            valueToEmit = extractItemFromEvent(e);\n        } else if (activeOption.id && filteredItems.some(item => item.id === activeOption.id)) {\n            // This is the scenario where a user is using the keyboard to navigate\n            // In the case item comes from the visually select item\n            valueToEmit = activeOption;\n        } else {\n            // This is the scenario the user didn't select anything\n            if (textFilter) {\n                // if we filtering for something then select the first option\n                valueToEmit = filteredItems[0];\n            } else {\n                // This will happen when we want to keep an already chosen option\n                // If no active option we should just emit again with the value that was already selected\n                valueToEmit = { id: selectedValue };\n            }\n        }\n\n        if (valueToEmit && !valueToEmit.disabled) {\n            onChange({ target: { value: valueToEmit.id, name: name } });\n\n            if (clearOnSelect) setInputText(null);\n\n            closeList();\n        }\n    };\n\n    /**\n     * Handles hovering and directions\n     * @param e - Event\n     */\n    const handleHover = (e: Event) => {\n        e.preventDefault();\n        const item = extractItemFromEvent(e);\n        setActiveOption(item);\n    };\n\n    /**\n     * Handle keyDown events on the selectList button\n     * Responsible for opening and closing the list\n     * @param e - KeyboardEvent\n     */\n    const handleButtonKeyDown = (e: KeyboardEvent) => {\n        if (e.key === keys.enter && filterable && showList && textFilter) {\n            handleSelect(e);\n        } else if (e.key === keys.escape) {\n            // When user has focused Select button but not yet moved into Select list - close list and keep focus on the Select Button re. a11y guidelines\n            // https://w3c.github.io/aria-practices/examples/disclosure/disclosure-navigation.html\n            closeList();\n        } else if ([keys.arrowUp, keys.arrowDown, keys.enter].includes(e.key) || (e.key === keys.space && (!filterable || !showList))) {\n            e.preventDefault();\n            if (!showList) {\n                openList();\n            } else {\n                handleNavigationKeys(e);\n            }\n        } else if (e.shiftKey && e.key === keys.tab) {\n            // Shift-Tab out of Select - close list re. a11y guidelines (above)\n            closeList();\n        } else if (e.key === keys.tab) {\n            closeList();\n        }\n    };\n\n    /**\n     * Handles movement with navigation keys and enter\n     * Navigates through the list, or select an element, or focus the filter input, or close the menu.\n     * @param e - KeyDownEvent\n     */\n    const handleNavigationKeys = (e: KeyboardEvent) => {\n        switch (e.key) {\n            case keys.space:\n            case keys.enter:\n                handleSelect(e);\n                break;\n            case keys.arrowDown:\n                e.preventDefault();\n                setNextActive();\n                break;\n            case keys.arrowUp:\n                e.preventDefault();\n                setPreviousActive();\n                break;\n            default:\n        }\n    };\n\n    /**\n     * Updates the state with the current text filter value\n     * @param e - KeyboardEvent\n     */\n    const handleTextFilter = (e: KeyboardEvent) => {\n        const value: string = (e.target as HTMLInputElement).value;\n        setInputText(value);\n        setTextFilter(value);\n        if (onInput) {\n            onInput(value);\n        }\n    };\n\n    /**\n     * Toggles the selectList and focuses in either the filter input or in the selectList button\n     * @param e - Event\n     */\n    const toggleList = (e: Event) => {\n        e.preventDefault();\n        if (!showList) {\n            setInputText(null);\n            openList();\n        } else {\n            setInputText(selectedOption.name);\n            closeList();\n        }\n    };\n\n    useEffect(() => {\n        if (showList) {\n            setInputText(null);\n        } else {\n            setTextFilter(null);\n        }\n    }, [showList]);\n\n    /**\n     * Focus on the input if filterable\n     */\n    useEffect(() => {\n        if (showList && filterable && filterInputRef.current) {\n            filterInputRef.current.focus();\n        }\n        onListToggle?.(showList);\n    }, [showList]);\n\n    useEffect(() => {\n        /**\n         * Close the select list when clicking outside the list\n         * @param e - MouseEvent\n         */\n        function handleClickOutside(e: MouseEvent) {\n            // use composedPath so it can also check when inside a web component\n            // if composedPath is not available fallback to e.target\n            const clickIsOutside = e.composedPath\n                ? !e.composedPath().includes(selectContainerRef.current)\n                : !selectContainerRef.current.contains(e.target);\n            if (clickIsOutside) {\n                closeList();\n            }\n        }\n\n        document.addEventListener('click', handleClickOutside, false);\n\n        return () => {\n            document.removeEventListener('click', handleClickOutside, false);\n        };\n    }, [selectContainerRef]);\n\n    return (\n        <div\n            className={cx(['adyen-checkout__dropdown', className, ...classNameModifiers.map(m => `adyen-checkout__dropdown--${m}`)])}\n            ref={selectContainerRef}\n        >\n            <SelectButton\n                inputText={inputText}\n                id={uniqueId ?? null}\n                active={activeOption}\n                selected={selectedOption}\n                filterInputRef={filterInputRef}\n                filterable={filterable}\n                isInvalid={isInvalid}\n                isValid={isValid}\n                onButtonKeyDown={handleButtonKeyDown}\n                onFocus={openList}\n                onInput={handleTextFilter}\n                placeholder={placeholder}\n                readonly={readonly}\n                selectListId={selectListId}\n                showList={showList}\n                toggleButtonRef={toggleButtonRef}\n                toggleList={toggleList}\n                disabled={disabled}\n                ariaDescribedBy={ariaDescribedBy}\n                allowIdOnButton={allowIdOnButton}\n                required={required}\n            />\n            <SelectList\n                active={activeOption}\n                filteredItems={filteredItems}\n                onHover={handleHover}\n                onSelect={handleSelect}\n                selected={selectedOption}\n                selectListId={selectListId}\n                selectListRef={selectListRef}\n                showList={showList}\n            />\n        </div>\n    );\n}\n\nSelect.defaultProps = {\n    className: '',\n    classNameModifiers: [],\n    filterable: true,\n    items: [],\n    readonly: false,\n    onChange: () => {}\n};\n\nexport default Select;\n","import { h } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport Field from '../../../../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../../../../core/Context/CoreProvider';\nimport { InstallmentsItem, InstallmentsProps } from '../types';\nimport Fieldset from '../../../../../internal/FormFields/Fieldset/Fieldset';\nimport RadioGroup from '../../../../../internal/FormFields/RadioGroup';\nimport Select from '../../../../../internal/FormFields/Select';\nimport { alternativeLabelContent } from '../FieldLabelAlternative';\nimport './Installments.scss';\n\nexport interface InstallmentsObj {\n    value: number;\n    plan?: 'revolving';\n}\n\n/**\n * Installments generic dropdown\n */\nfunction Installments(props: InstallmentsProps) {\n    const { i18n } = useCoreContext();\n    const { amount, brand, onChange, type } = props;\n    const installmentOptions = props.installmentOptions[brand] || props.installmentOptions.card;\n    const readOnly = installmentOptions?.values?.length === 1;\n    const [installmentAmount, setInstallmentAmount] = useState(installmentOptions?.preselectedValue || installmentOptions?.values[0]);\n    const [radioBtnValue, setRadioBtnValue] = useState('onetime');\n\n    // hasRadioButtonUI determines if we have 3 radio buttons in the UI ('onetime', 'installments' and 'revolving')\n    const hasRadioButtonUI = installmentOptions?.plans?.includes('revolving');\n    const getPartialAmount = (divider: number): string => i18n.amount(amount.value / divider, amount.currency);\n\n    const onSelectInstallment = e => {\n        const selectedInstallments = e.target.value;\n        setInstallmentAmount(Number(selectedInstallments));\n    };\n\n    const onRadioSelect = e => {\n        const selectedBtn = e.currentTarget.getAttribute('value');\n        setRadioBtnValue(selectedBtn);\n    };\n\n    const installmentItemsMapper = (value: number): InstallmentsItem => {\n        let translationKey;\n        let translationObj;\n\n        if (type === 'amount') {\n            translationKey = 'installmentOption';\n            translationObj = { count: value, values: { times: value, partialValue: getPartialAmount(value) } };\n        } else {\n            translationKey = `installmentOptionMonths`;\n            translationObj = { count: value, values: { times: value } };\n        }\n\n        return {\n            id: value,\n            name: amount.value ? i18n.get(translationKey, translationObj) : `${value}`\n        };\n    };\n\n    useEffect(() => {\n        if (installmentOptions?.values?.includes(installmentAmount)) {\n            return;\n        }\n\n        setInstallmentAmount(installmentOptions?.preselectedValue ?? installmentOptions?.values[0]);\n    }, [brand]);\n\n    useEffect(() => {\n        const stateObj: InstallmentsObj = {\n            value: installmentAmount, // No radio button interface or \"installments\" radio button selected\n            ...(hasRadioButtonUI && radioBtnValue === 'revolving' && { plan: radioBtnValue, value: 1 }),\n            ...(hasRadioButtonUI && radioBtnValue === 'onetime' && { value: 1 })\n        };\n\n        onChange(installmentOptions ? stateObj : { value: null });\n    }, [installmentAmount, installmentOptions, radioBtnValue]);\n\n    if (!installmentOptions) return null;\n    if (amount.value === 0) return null;\n\n    // Alternate interface for installments with the possibility of a \"revolving\" plan\n    if (hasRadioButtonUI) {\n        return (\n            <div className=\"adyen-checkout__installments\">\n                <Field\n                    label={i18n.get('installments')}\n                    classNameModifiers={['installments']}\n                    name={'installmentsPseudoLabel'}\n                    useLabelElement={false}\n                    showContextualElement={false}\n                    renderAlternativeToLabel={alternativeLabelContent}\n                >\n                    <Fieldset classNameModifiers={['revolving-plan']} label={''}>\n                        <RadioGroup\n                            items={[\n                                { id: 'onetime', name: 'installments.oneTime' },\n                                { id: 'installments', name: 'installments.installments' },\n                                { id: 'revolving', name: 'installments.revolving' }\n                            ]}\n                            onChange={onRadioSelect}\n                            value={radioBtnValue}\n                            ariaLabel={i18n.get('installments')}\n                        />\n\n                        <Field\n                            className={radioBtnValue !== 'installments' ? 'revolving-plan-installments__disabled' : 'revolving-plan-installments'}\n                            classNameModifiers={['revolving-plan-installments']}\n                            name={''}\n                            useLabelElement={false}\n                            showContextualElement={false}\n                        >\n                            <Select\n                                filterable={false}\n                                items={installmentOptions.values.map(installmentItemsMapper)}\n                                selectedValue={installmentAmount}\n                                onChange={onSelectInstallment}\n                                name={'installments'}\n                                disabled={radioBtnValue !== 'installments'}\n                            />\n                        </Field>\n                    </Fieldset>\n                </Field>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"adyen-checkout__installments\">\n            <Field label={i18n.get('installments')} classNameModifiers={['installments']} name={'installments'} showContextualElement={false}>\n                <Select\n                    filterable={false}\n                    items={installmentOptions.values.map(installmentItemsMapper)}\n                    selectedValue={installmentAmount}\n                    onChange={onSelectInstallment}\n                    name={'installments'}\n                    readonly={readOnly}\n                    allowIdOnButton={true}\n                />\n            </Field>\n        </div>\n    );\n}\n\nInstallments.defaultProps = {\n    brand: '',\n    amount: {},\n    onChange: () => {}\n};\n\nexport default Installments;\n","export const isValidHttpUrl = (string, allowHttp = false) => {\n    let url;\n    try {\n        url = new URL(string);\n    } catch (_) {\n        return false;\n    }\n    return allowHttp ? url.protocol === 'http:' || url.protocol === 'https:' : url.protocol === 'https:';\n};\n","import { h } from 'preact';\nimport { CustomTranslations } from './types';\nimport AdyenCheckoutError from '../core/Errors/AdyenCheckoutError';\n\n/**\n * Returns a locale with the proper format\n *\n * @example\n * formatLocale('En_us'); -> en-US\n * formatLocale('ar') -> ar\n */\nexport function formatLocale(localeParam: string): string {\n    const locale = localeParam.replace('_', '-');\n    const format = new RegExp('([a-z]{2})([-])([A-Z]{2})');\n\n    // If it's already formatted, return the locale\n    if (format.test(locale)) {\n        return locale;\n    }\n\n    // If no country code is defined (Ex: 'ar') , then returns 'ar'\n    const [languageCode, countryCode] = locale.split('-');\n    if (languageCode.length !== 2) {\n        throw new AdyenCheckoutError('IMPLEMENTATION_ERROR', `Locale '${localeParam}' does not match the expected format`);\n    }\n    if (!countryCode) {\n        return languageCode.toLowerCase();\n    }\n\n    // Ensure correct format and join the strings back together\n    const fullLocale = [languageCode.toLowerCase(), countryCode.toUpperCase()].join('-');\n    if (format.test(fullLocale)) {\n        return fullLocale;\n    } else {\n        throw new AdyenCheckoutError('IMPLEMENTATION_ERROR', `Locale '${localeParam}' does not match the expected format`);\n    }\n}\n\n/**\n * Makes sure that if custom translation is defined using not properly formatted locale keys, then it gets formatted correctly\n * Ex: Custom translation defined as { en_US: { ... }} will be adjusted to { 'en-US': { ... }}\n */\nexport function formatCustomTranslations(customTranslations: CustomTranslations = {}): CustomTranslations {\n    return Object.keys(customTranslations).reduce((memo, customTranslationLocaleKey) => {\n        const locale = formatLocale(customTranslationLocaleKey);\n        memo[locale] = customTranslations[customTranslationLocaleKey];\n        return memo;\n    }, {});\n}\n\nconst replaceTranslationValues = (translation, values) => {\n    return translation.replace(/%{(\\w+)}/g, (_, k) => values[k] || '');\n};\n\n/**\n * Returns a translation string by key\n * @param translations -\n * @param key -\n * @param options -\n *\n * @internal\n */\nexport const getTranslation = (translations: object, key: string, options: { [key: string]: any } = { values: {}, count: 0 }): string => {\n    const keyPlural = `${key}__plural`;\n    const keyForCount = count => `${key}__${count}`;\n\n    if (Object.prototype.hasOwnProperty.call(translations, keyForCount(options.count))) {\n        // Find key__count translation key\n        return replaceTranslationValues(translations[keyForCount(options.count)], options.values);\n    } else if (Object.prototype.hasOwnProperty.call(translations, keyPlural) && options.count > 1) {\n        // Find key__plural translation key, if count greater than 1 (e.g. myTranslation__plural)\n        return replaceTranslationValues(translations[keyPlural], options.values);\n    } else if (Object.prototype.hasOwnProperty.call(translations, key)) {\n        // Find key translation key (e.g. myTranslation)\n        return replaceTranslationValues(translations[key], options.values);\n    }\n\n    return null;\n};\n\n/**\n * Injects JSX elements in a middle of a translation and returns a JSX array\n * The input string should use %# as the token to know where to insert the component\n * @param translation - Translation string\n * @param renderFunctions - An array function that renders JSX elements\n */\nexport const interpolateElement = (translation: string, renderFunctions: Array<(translation: string) => h.JSX.Element | string>) => {\n    // splits by regex group, it guarantees that it only splits with 2 tokens (%#)\n    const matches = translation.split(/%#(.*?)%#/gm);\n\n    if (renderFunctions.length !== Math.floor(matches.length / 2)) {\n        throw Error('The number of functions provided does not match the number of elements in the translation string.');\n    }\n\n    // the map will create an array of JSX / string elements, this syntax in accepted in JSX/react to render elements\n    return matches.map((term, index) => {\n        // math to get the index of the renderFunction that should be used\n        // since we split on tokens, that means the index of the render function is half of the index of the string\n        const indexInFunctionArray = Math.floor(index / 2);\n        return index % 2 === 0 ? term : renderFunctions[indexInFunctionArray](term);\n    });\n};\n","import { Fragment, h } from 'preact';\nimport { isValidHttpUrl } from '../../../utils/isValidURL';\nimport './DisclaimerMessage.scss';\nimport { interpolateElement } from '../../../language/utils';\n\nexport interface DisclaimerMsgObject {\n    message: string;\n    linkText: string;\n    link: string;\n}\n\ninterface InternalDisclaimerMsgObject {\n    message: string;\n    urls: Array<string>;\n}\n\n/**\n *  props: {\n *    message: 'By continuing you agree with the %#terms and conditions%#',\n *    urls: ['https://www.adyen.com']\n *  }\n *  String inside the '%#' token pair will be rendered as an anchor element.\n */\n\nexport default function DisclaimerMessage({ message, urls }: InternalDisclaimerMsgObject) {\n    return (\n        <span className=\"adyen-checkout-disclaimer__label\">\n            <LabelOnlyDisclaimerMessage message={message} urls={urls} />\n        </span>\n    );\n}\n\nexport function LabelOnlyDisclaimerMessage({ message, urls }: InternalDisclaimerMsgObject) {\n    const messageIsStr = typeof message === 'string';\n    const validUrls = urls.every(url => typeof url === 'string' && isValidHttpUrl(url));\n    if (!messageIsStr || !validUrls) return null;\n\n    return (\n        <Fragment>\n            {interpolateElement(\n                message,\n                urls.map(\n                    // for each URL in the URLs array, return a createLink function\n                    url =>\n                        function createLink(translation) {\n                            return (\n                                <a className=\"adyen-checkout__link\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {translation}\n                                </a>\n                            );\n                        }\n                )\n            )}\n        </Fragment>\n    );\n}\n","import { h } from 'preact';\nimport LoadingWrapper from '../../../../internal/LoadingWrapper';\nimport StoredCardFields from './StoredCardFields';\nimport Installments from './Installments';\nimport DisclaimerMessage from '../../../../internal/DisclaimerMessage';\n\nexport const StoredCardFieldsWrapper = ({\n    // base (shared)\n    // n/a\n    // vars created in CardInput:\n    sfpState,\n    setFocusOn,\n    cvcPolicy,\n    focusedElement,\n    hasInstallments,\n    handleInstallments,\n    showAmountsInInstallments,\n    showContextualElement,\n    // props passed through from CardInput:\n    amount,\n    hasCVC,\n    installmentOptions,\n    lastFour,\n    expiryMonth,\n    expiryYear,\n    // Card\n    disclaimerMessage\n}) => {\n    return (\n        <LoadingWrapper status={sfpState.status}>\n            <StoredCardFields\n                errors={sfpState.errors}\n                brand={sfpState.brand}\n                hasCVC={hasCVC}\n                cvcPolicy={cvcPolicy}\n                onFocusField={setFocusOn}\n                focusedElement={focusedElement}\n                valid={sfpState.valid}\n                lastFour={lastFour}\n                expiryMonth={expiryMonth}\n                expiryYear={expiryYear}\n                showContextualElement={showContextualElement}\n            />\n\n            {hasInstallments && (\n                <Installments\n                    amount={amount}\n                    brand={sfpState.brand}\n                    installmentOptions={installmentOptions}\n                    onChange={handleInstallments}\n                    type={showAmountsInInstallments ? 'amount' : 'months'}\n                />\n            )}\n\n            {disclaimerMessage && (\n                <DisclaimerMessage\n                    message={disclaimerMessage.message.replace('%{linkText}', `%#${disclaimerMessage.linkText}%#`)}\n                    urls={[disclaimerMessage.link]}\n                />\n            )}\n        </LoadingWrapper>\n    );\n};\n","import { h } from 'preact';\nimport { getCardImageUrl, getFullBrandName } from '../utils';\nimport { BrandIconProps } from './types';\nimport useImage from '../../../../../core/Context/useImage';\nimport { useState } from 'preact/hooks';\nimport classNames from 'classnames';\n\nexport default function BrandIcon({ brand, brandsConfiguration = {} }: BrandIconProps) {\n    const getImage = useImage();\n    const imageName = brand === 'card' ? 'nocard' : brand;\n    const imageUrl = brandsConfiguration[brand]?.icon ?? getCardImageUrl(imageName, getImage);\n\n    const [hasLoaded, setHasLoaded] = useState(false);\n\n    const handleError = () => {\n        setHasLoaded(false);\n    };\n\n    const handleLoad = () => {\n        setHasLoaded(true);\n    };\n\n    const fieldClassnames = classNames({\n        'adyen-checkout-card-input__icon': true,\n        'adyen-checkout__card__cardNumber__brandIcon': true,\n        'adyen-checkout-card-input__icon--hidden': !hasLoaded\n    });\n\n    return <img className={fieldClassnames} onLoad={handleLoad} onError={handleError} alt={getFullBrandName(brand)} src={imageUrl} />;\n}\n","import { h } from 'preact';\nimport { getCardImageUrl, getFullBrandName } from '../../utils';\nimport { DualBrandingIconProps } from '../types';\nimport './DualBrandingIcon.scss';\nimport useImage from '../../../../../../core/Context/useImage';\n\nconst DualBrandingIcon = ({ brand, onClick, dataValue, notSelected, brandsConfiguration = {} }: DualBrandingIconProps) => {\n    const getImage = useImage();\n    const imageName = brand === 'card' ? 'nocard' : brand;\n    const imageUrl = brandsConfiguration[brand]?.icon ?? getCardImageUrl(imageName, getImage);\n    const handleError = e => {\n        e.target.style.cssText = 'display: none';\n    };\n\n    return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n        <img\n            className={`adyen-checkout-card-input__icon ${\n                notSelected ? 'adyen-checkout__card__cardNumber__brandIcon--not-selected' : ''\n            } adyen-checkout__card__cardNumber__brandIcon`}\n            onError={handleError}\n            alt={getFullBrandName(brand)}\n            src={imageUrl}\n            onClick={onClick}\n            data-value={dataValue}\n        />\n    );\n};\n\nexport default DualBrandingIcon;\n","import { h } from 'preact';\nimport classNames from 'classnames';\nimport BrandIcon from './BrandIcon';\nimport DualBrandingIcon from './DualBrandingIcon/DualBrandingIcon';\nimport Field from '../../../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { CardNumberProps } from './types';\nimport DataSfSpan from './DataSfSpan';\nimport { ENCRYPTED_CARD_NUMBER } from '../../../../internal/SecuredFields/lib/constants';\nimport { alternativeLabelContent } from './FieldLabelAlternative';\n\nexport default function CardNumber(props: CardNumberProps) {\n    const { i18n } = useCoreContext();\n    const { error = '', isValid = false, onFocusField = () => {}, dualBrandingElements, dualBrandingChangeHandler, dualBrandingSelected } = props;\n\n    return (\n        <Field\n            label={props.label}\n            focused={props.focused}\n            filled={props.filled}\n            classNameModifiers={['cardNumber']}\n            onFocusField={() => onFocusField(ENCRYPTED_CARD_NUMBER)}\n            errorMessage={error}\n            isValid={isValid}\n            dir={'ltr'}\n            name={ENCRYPTED_CARD_NUMBER}\n            showValidIcon={false}\n            i18n={i18n}\n            contextVisibleToScreenReader={false} // securedFields have their own, internal, aria-describedby element\n            useLabelElement={false}\n            renderAlternativeToLabel={alternativeLabelContent}\n        >\n            <DataSfSpan\n                encryptedFieldType={ENCRYPTED_CARD_NUMBER}\n                className={classNames({\n                    'adyen-checkout__input': true,\n                    'adyen-checkout__input--large': true,\n                    'adyen-checkout__card__cardNumber__input': true,\n                    'adyen-checkout__input--error': error,\n                    'adyen-checkout__input--focus': props.focused,\n                    'adyen-checkout__input--valid': isValid,\n                    'adyen-checkout__card__cardNumber__input--noBrand': !props.showBrandIcon\n                })}\n            ></DataSfSpan>\n\n            {props.showBrandIcon && !dualBrandingElements && <BrandIcon brandsConfiguration={props.brandsConfiguration} brand={props.brand} />}\n\n            {dualBrandingElements && !error && (\n                <div\n                    className={classNames([\n                        'adyen-checkout__card__dual-branding__buttons',\n                        { 'adyen-checkout__card__dual-branding__buttons--active': isValid }\n                    ])}\n                >\n                    {dualBrandingElements.map(element => (\n                        <DualBrandingIcon\n                            key={element.id}\n                            brand={element.id}\n                            brandsConfiguration={props.brandsConfiguration}\n                            onClick={dualBrandingChangeHandler}\n                            dataValue={element.id}\n                            notSelected={dualBrandingSelected !== '' && dualBrandingSelected !== element.id}\n                        />\n                    ))}\n                </div>\n            )}\n        </Field>\n    );\n}\n","import { h } from 'preact';\nimport classNames from 'classnames';\nimport Field from '../../../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { ExpirationDateProps } from './types';\nimport DataSfSpan from './DataSfSpan';\n\nimport {\n    DATE_POLICY_HIDDEN,\n    DATE_POLICY_OPTIONAL,\n    DATE_POLICY_REQUIRED,\n    ENCRYPTED_EXPIRY_DATE\n} from '../../../../internal/SecuredFields/lib/constants';\nimport useImage from '../../../../../core/Context/useImage';\nimport { alternativeLabelContent } from './FieldLabelAlternative';\n\nexport default function ExpirationDate(props: ExpirationDateProps) {\n    const {\n        label,\n        focused,\n        filled,\n        onFocusField,\n        className = '',\n        error = '',\n        isValid = false,\n        expiryDatePolicy = DATE_POLICY_REQUIRED,\n        showContextualElement,\n        contextualText\n    } = props;\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    const fieldClassnames = classNames(className, {\n        'adyen-checkout__field__exp-date': true,\n        'adyen-checkout__card__exp-date__input--hidden': expiryDatePolicy === DATE_POLICY_HIDDEN,\n        'adyen-checkout__field__exp-date--optional': expiryDatePolicy === DATE_POLICY_OPTIONAL\n    });\n\n    const fieldLabel = expiryDatePolicy !== DATE_POLICY_OPTIONAL ? label : `${label} ${i18n.get('field.title.optional')}`;\n\n    return (\n        <Field\n            label={fieldLabel}\n            classNameModifiers={['expiryDate']}\n            className={fieldClassnames}\n            focused={focused}\n            filled={filled}\n            onFocusField={() => onFocusField(ENCRYPTED_EXPIRY_DATE)}\n            errorMessage={error}\n            isValid={isValid}\n            dir={'ltr'}\n            name={'encryptedExpiryDate'}\n            i18n={i18n}\n            contextVisibleToScreenReader={false}\n            useLabelElement={false}\n            renderAlternativeToLabel={alternativeLabelContent}\n            showContextualElement={showContextualElement}\n            contextualText={contextualText}\n        >\n            <DataSfSpan\n                encryptedFieldType={ENCRYPTED_EXPIRY_DATE}\n                className={classNames('adyen-checkout__input', 'adyen-checkout__input--small', 'adyen-checkout__card__exp-date__input', {\n                    'adyen-checkout__input--error': error,\n                    'adyen-checkout__input--focus': focused,\n                    'adyen-checkout__input--valid': isValid\n                })}\n            />\n            <span\n                className={classNames('adyen-checkout__field__exp-date_hint_wrapper', {\n                    'adyen-checkout__field__exp-date_hint_wrapper--hidden': error || isValid\n                })}\n            >\n                <img\n                    src={getImage({ imageFolder: 'components/' })('expiry_date_hint')}\n                    className=\"adyen-checkout__field__exp-date_hint\"\n                    alt={fieldLabel}\n                />\n            </span>\n        </Field>\n    );\n}\n","import { h } from 'preact';\nimport classNames from 'classnames';\nimport Img from '../../../../../internal/Img';\nimport './AvailableBrands.scss';\nimport { BrandConfiguration } from '../../../../types';\nimport { getFullBrandName } from '../../utils';\n\ntype AvailableBrands = Array<BrandConfiguration>;\n\ninterface PaymentMethodBrandsProps {\n    brands: AvailableBrands;\n    activeBrand: string;\n}\n\nconst AvailableBrands = ({ brands, activeBrand }: PaymentMethodBrandsProps) => {\n    if (!brands?.length) {\n        return null;\n    }\n\n    const isValidBrand = activeBrand !== 'card';\n    return (\n        <span\n            className={classNames('adyen-checkout__card__brands', {\n                'adyen-checkout__card__brands--hidden': isValidBrand\n            })}\n        >\n            {brands.map(({ name, icon }) => (\n                <span key={name} className=\"adyen-checkout__card__brands__brand-wrapper\">\n                    <Img src={icon} alt={getFullBrandName(name)} />\n                </span>\n            ))}\n        </span>\n    );\n};\n\nexport default AvailableBrands;\n","import { h } from 'preact';\nimport CardNumber from './CardNumber';\nimport CVC from './CVC';\nimport ExpirationDate from './ExpirationDate';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { CardFieldsProps } from './types';\nimport classNames from 'classnames';\nimport {\n    BRAND_ICON_UI_EXCLUSION_LIST,\n    DATE_POLICY_HIDDEN,\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_SECURITY_CODE\n} from '../../../../internal/SecuredFields/lib/constants';\nimport AvailableBrands from './AvailableBrands';\n\nexport default function CardFields({\n    brand,\n    brandsIcons,\n    brandsConfiguration,\n    dualBrandingElements,\n    dualBrandingChangeHandler,\n    dualBrandingSelected,\n    errors,\n    focusedElement,\n    hasCVC,\n    cvcPolicy,\n    expiryDatePolicy,\n    onFocusField,\n    showBrandIcon,\n    valid,\n    showContextualElement\n}: CardFieldsProps) {\n    const { i18n } = useCoreContext();\n\n    const getError = (errors, fieldType) => {\n        return errors[fieldType] ? i18n.get(errors[fieldType]) : null;\n    };\n\n    // A set of brands filtered to exclude those that can never appear in the UI\n    const allowedBrands = brandsIcons?.filter(brandsIcons => !BRAND_ICON_UI_EXCLUSION_LIST?.includes(brandsIcons.name));\n    const isAmex = brand === 'amex';\n    const cvcContextualText = isAmex\n        ? i18n.get('creditCard.securityCode.contextualText.4digits')\n        : i18n.get('creditCard.securityCode.contextualText.3digits');\n\n    return (\n        <div className=\"adyen-checkout__card__form\">\n            <CardNumber\n                brand={brand}\n                brandsConfiguration={brandsConfiguration}\n                error={getError(errors, ENCRYPTED_CARD_NUMBER)}\n                focused={focusedElement === ENCRYPTED_CARD_NUMBER}\n                isValid={!!valid.encryptedCardNumber}\n                label={i18n.get('creditCard.cardNumber.label')}\n                onFocusField={onFocusField}\n                filled={!!errors.encryptedCardNumber || !!valid.encryptedCardNumber}\n                showBrandIcon={showBrandIcon}\n                dualBrandingElements={dualBrandingElements}\n                dualBrandingChangeHandler={dualBrandingChangeHandler}\n                dualBrandingSelected={dualBrandingSelected}\n            />\n\n            <AvailableBrands activeBrand={brand} brands={allowedBrands} />\n\n            <div\n                className={classNames('adyen-checkout__card__exp-cvc adyen-checkout__field-wrapper', {\n                    'adyen-checkout__card__exp-cvc__exp-date__input--hidden': expiryDatePolicy === DATE_POLICY_HIDDEN\n                })}\n            >\n                <ExpirationDate\n                    error={getError(errors, ENCRYPTED_EXPIRY_DATE)}\n                    focused={focusedElement === ENCRYPTED_EXPIRY_DATE}\n                    isValid={!!valid.encryptedExpiryMonth && !!valid.encryptedExpiryYear}\n                    filled={!!errors.encryptedExpiryDate || !!valid.encryptedExpiryYear}\n                    label={i18n.get('creditCard.expiryDate.label')}\n                    onFocusField={onFocusField}\n                    className={'adyen-checkout__field--50'}\n                    expiryDatePolicy={expiryDatePolicy}\n                    showContextualElement={showContextualElement}\n                    contextualText={i18n.get('creditCard.expiryDate.contextualText')}\n                />\n\n                {hasCVC && (\n                    <CVC\n                        error={getError(errors, ENCRYPTED_SECURITY_CODE)}\n                        focused={focusedElement === ENCRYPTED_SECURITY_CODE}\n                        cvcPolicy={cvcPolicy}\n                        isValid={!!valid.encryptedSecurityCode}\n                        filled={!!errors.encryptedSecurityCode || !!valid.encryptedSecurityCode}\n                        label={i18n.get('creditCard.securityCode.label')}\n                        onFocusField={onFocusField}\n                        className={'adyen-checkout__field--50'}\n                        frontCVC={isAmex}\n                        showContextualElement={showContextualElement}\n                        contextualText={cvcContextualText}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n","import { h } from 'preact';\nimport InputBase from './InputBase';\n\nexport default function InputTelephone(props) {\n    return <InputBase {...props} type=\"tel\" />;\n}\n","import { h } from 'preact';\nimport { useMemo } from 'preact/hooks';\nimport classNames from 'classnames';\nimport Field from '../../../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { KCPProps } from './types';\nimport DataSfSpan from './DataSfSpan';\nimport InputTelephone from '../../../../internal/FormFields/InputTelephone';\nimport { alternativeLabelContent } from './FieldLabelAlternative';\nimport { CREDITCARD_TAX_NUMBER_INVALID } from '../../../../../core/Errors/constants';\n\nexport default function KCPAuthentication(props: KCPProps) {\n    const { i18n } = useCoreContext();\n\n    const taxNumberLabel = useMemo((): string => {\n        if (props.value?.length > 6) return i18n.get('creditCard.taxNumber.labelAlt');\n\n        return i18n.get('creditCard.taxNumber.label');\n    }, [props.value]);\n\n    return (\n        <div className=\"adyen-checkout__card__kcp-authentication\">\n            <Field\n                label={taxNumberLabel}\n                filled={props.filled}\n                classNameModifiers={['kcp-taxNumber']}\n                errorMessage={props.error && i18n.get(CREDITCARD_TAX_NUMBER_INVALID)}\n                isValid={props.isValid}\n                dir={'ltr'}\n                name={'kcpTaxNumberOrDOB'}\n                onFocus={e => props.onFieldFocusAnalytics('taxNumber', e)}\n                onBlur={e => props.onFieldBlurAnalytics('taxNumber', e)}\n            >\n                <InputTelephone\n                    name={'kcpTaxNumberOrDOB'}\n                    className=\"adyen-checkout__card__kcp-taxNumber__input adyen-checkout__input\"\n                    maxLength={10}\n                    minLength={6}\n                    autoComplete={'false'}\n                    value={props.value}\n                    required={true}\n                    onBlur={props.onBlur}\n                    onInput={props.onInput}\n                    disabled={props.disabled}\n                    placeholder={props.placeholder}\n                />\n            </Field>\n\n            <Field\n                label={i18n.get('creditCard.password.label')}\n                focused={props.focusedElement === 'encryptedPassword'}\n                filled={props.filled}\n                classNameModifiers={['50', 'koreanAuthentication-encryptedPassword']}\n                onFocusField={() => props.onFocusField('encryptedPassword')}\n                errorMessage={props.encryptedPasswordState.errors && i18n.get(String(props.encryptedPasswordState.errors))}\n                isValid={props.encryptedPasswordState.valid}\n                dir={'ltr'}\n                name={'encryptedPassword'}\n                useLabelElement={false}\n                renderAlternativeToLabel={alternativeLabelContent}\n            >\n                <DataSfSpan\n                    encryptedFieldType=\"encryptedPassword\"\n                    className={classNames({\n                        'adyen-checkout__input': true,\n                        'adyen-checkout__input--large': true,\n                        'adyen-checkout__input--error': props.encryptedPasswordState.errors,\n                        'adyen-checkout__input--valid': props.encryptedPasswordState.valid,\n                        'adyen-checkout__input--focus': props.focusedElement === 'encryptedPassword'\n                    })}\n                />\n            </Field>\n        </div>\n    );\n}\n","import { h } from 'preact';\nimport Field from '../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport InputText from '../FormFields/InputText';\n\nconst SocialSecurityNumberBrazil = ({\n    onBlur,\n    onInput,\n    valid = false,\n    error = null,\n    data = '',\n    required = false,\n    disabled = false,\n    onFieldFocusAnalytics = null,\n    onFieldBlurAnalytics = null\n}) => {\n    const { i18n } = useCoreContext();\n\n    return (\n        <Field\n            label={`${i18n.get('boleto.socialSecurityNumber')}`}\n            classNameModifiers={['socialSecurityNumber']}\n            errorMessage={error && error.errorMessage ? i18n.get(error.errorMessage) : !!error}\n            isValid={Boolean(valid)}\n            name={'socialSecurityNumber'}\n            onFocus={e => onFieldFocusAnalytics?.('socialSecurityNumber', e)}\n            onBlur={e => onFieldBlurAnalytics?.('socialSecurityNumber', e)}\n        >\n            <InputText\n                name={'socialSecurityNumber'}\n                autocorrect={'off'}\n                spellcheck={false}\n                value={data}\n                maxLength={18}\n                onInput={onInput}\n                onBlur={onBlur}\n                required={required}\n                disabled={disabled}\n            />\n        </Field>\n    );\n};\n\nexport default SocialSecurityNumberBrazil;\n","import { ComponentChild, h } from 'preact';\nimport cx from 'classnames';\nimport './Checkbox.scss';\nimport { ARIA_CONTEXT_SUFFIX, ARIA_ERROR_SUFFIX } from '../../../../core/Errors/constants';\n\ninterface CheckboxProps {\n    checked?: boolean;\n    classNameModifiers?: string[];\n    label?: string | ComponentChild;\n    name?: string;\n    isInvalid?: boolean;\n    onChange?;\n    onInput?;\n    className?: string;\n    value?: string;\n    uniqueId?: string;\n    showErrorElement?: boolean;\n    showContextualElement?: boolean;\n}\n\nexport default function Checkbox({ classNameModifiers = [], label, isInvalid, onChange, ...props }: CheckboxProps) {\n    // Strip some values from props. We need to reference them but don't want to set them as attributes.\n    const { uniqueId: uid, showErrorElement, showContextualElement, ...newProps } = props;\n\n    return (\n        <label className=\"adyen-checkout__checkbox\" htmlFor={uid}>\n            <input\n                id={uid}\n                {...newProps}\n                {...(showErrorElement && { 'aria-describedby': `${uid}${ARIA_ERROR_SUFFIX}` })}\n                {...(showContextualElement && { 'aria-describedby': `${uid}${ARIA_CONTEXT_SUFFIX}` })}\n                className={cx([\n                    'adyen-checkout__checkbox__input',\n                    [props.className],\n                    { 'adyen-checkout__checkbox__input--invalid': isInvalid },\n                    classNameModifiers.map(m => `adyen-checkout__input--${m}`)\n                ])}\n                type=\"checkbox\"\n                onChange={onChange}\n            />\n            <span className=\"adyen-checkout__checkbox__label\">{label}</span>\n        </label>\n    );\n}\n\nCheckbox.defaultProps = {\n    onChange: () => {}\n};\n","import { useState, useEffect } from 'preact/hooks';\nimport { h } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Checkbox from '../FormFields/Checkbox';\n\n/**\n * \"Store details\" generic checkbox\n */\nfunction StoreDetails({ storeDetails = false, ...props }) {\n    const { i18n } = useCoreContext();\n    const [value, setValue] = useState(storeDetails);\n\n    const onChange = e => {\n        setValue(e.target.checked);\n    };\n\n    useEffect(() => {\n        props.onChange(value);\n    }, [value]);\n\n    return (\n        <div className=\"adyen-checkout__store-details\">\n            <Checkbox onChange={onChange} label={i18n.get('storeDetails')} name={'storeDetails'} />\n        </div>\n    );\n}\n\nexport default StoreDetails;\n","import { Fragment, h } from 'preact';\nimport Fieldset from '../../FormFields/Fieldset';\nimport { ReadOnlyAddressProps } from '../types';\nimport { FALLBACK_VALUE } from '../constants';\n\nconst FullName = ({ firstName, lastName }) => {\n    return (\n        <Fragment>\n            {firstName && `${firstName} `}\n            {lastName && `${lastName}`}\n            <br />\n        </Fragment>\n    );\n};\n\nconst ReadOnlyAddress = ({ data, label }: ReadOnlyAddressProps) => {\n    const { street, houseNumberOrName, city, postalCode, stateOrProvince, country, firstName, lastName } = data;\n    const hasName = firstName || lastName;\n\n    return (\n        <Fieldset classNameModifiers={[label]} label={label} readonly>\n            <Fragment>\n                {hasName && <FullName firstName={firstName} lastName={lastName}></FullName>}\n                {!!street && street}\n                {houseNumberOrName && `, ${houseNumberOrName},`}\n                <br />\n                {postalCode && `${postalCode}`}\n                {city && `, ${city}`}\n                {stateOrProvince && stateOrProvince !== FALLBACK_VALUE && `, ${stateOrProvince}`}\n                {country && `, ${country} `}\n            </Fragment>\n        </Fieldset>\n    );\n};\n\nexport default ReadOnlyAddress;\n","import { CountryFormatRules, FormatRules } from '../../../utils/Validator/types';\nimport { Formatter } from '../../../utils/useForm/types';\nimport { getFormattingRegEx, SPECIAL_CHARS, trimValWithOneSpace } from '../../../utils/validator-utils';\n\nconst createFormatByDigits = (digits: number): Formatter => {\n    const format = new Array(digits).fill('9').join('');\n    return {\n        // Formatter - excludes non digits and limits to maxlength\n        formatterFn: val => val.replace(getFormattingRegEx('^\\\\d', 'g'), '').substring(0, digits),\n        format,\n        maxlength: digits\n    };\n};\n\nconst specialCharsRegEx = getFormattingRegEx(SPECIAL_CHARS);\nconst formattingFn = val => trimValWithOneSpace(val).replace(specialCharsRegEx, '');\n\nexport const addressFormatters: FormatRules = {\n    postalCode: {\n        formatterFn: (val, context) => {\n            const country = context.state.data.country;\n\n            // Country specific formatting rule\n            const specificRule = countrySpecificFormatters[country]?.postalCode.formatterFn;\n            if (specificRule) {\n                return specificRule(val);\n            }\n\n            // Default formatting rule: allow anything\n            return val;\n        }\n    },\n    street: {\n        formatterFn: formattingFn\n    },\n    houseNumberOrName: {\n        formatterFn: formattingFn\n    },\n    city: {\n        formatterFn: formattingFn\n    }\n};\n\n// TODO make proper formatter fns for those entries that don't just have a straightforward, x number of digits, no spaces, format\n//  check against our internal documentation on address postal code\n//  which, for example, says BR isn't just 8 digits (it can be spilt by a hyphen) & CZ can also be 5 digits, no spaces\nexport const countrySpecificFormatters: CountryFormatRules = {\n    AT: {\n        postalCode: createFormatByDigits(4)\n    },\n    AU: {\n        postalCode: createFormatByDigits(4)\n    },\n    BE: {\n        postalCode: createFormatByDigits(4)\n    },\n    BG: {\n        postalCode: createFormatByDigits(4)\n    },\n    BR: {\n        postalCode: {\n            // Formatter - excludes non digits, but allows hyphens, and limits to a maxlength that varies depending on whether a hyphen is present or not\n            formatterFn: val => {\n                const nuVal = val.replace(getFormattingRegEx('^\\\\d-', 'g'), '');\n                const maxlength = nuVal.indexOf('-') > -1 ? 9 : 8;\n                return nuVal.substring(0, maxlength);\n            },\n            format: '12345678 or 12345-678',\n            maxlength: 9\n        }\n    },\n    CA: {\n        postalCode: {\n            format: 'A9A 9A9 or A9A9A9',\n            maxlength: 7\n        }\n    },\n    CH: {\n        postalCode: createFormatByDigits(4)\n    },\n    CY: {\n        postalCode: createFormatByDigits(4)\n    },\n    CZ: {\n        postalCode: {\n            format: '999 99',\n            maxlength: 6\n        }\n    },\n    DE: {\n        postalCode: createFormatByDigits(5)\n    },\n    DK: {\n        postalCode: {\n            format: '9999',\n            maxlength: 7\n        }\n    },\n    EE: {\n        postalCode: createFormatByDigits(5)\n    },\n    ES: {\n        postalCode: createFormatByDigits(5)\n    },\n    FI: {\n        postalCode: createFormatByDigits(5)\n    },\n    FR: {\n        postalCode: createFormatByDigits(5)\n    },\n    GB: {\n        postalCode: {\n            // Disallow special chars & set to maxlength\n            formatterFn: val => val.replace(getFormattingRegEx(SPECIAL_CHARS), '').substring(0, 8),\n            format: 'AA99 9AA or A99 9AA or A9 9AA',\n            maxlength: 8\n        }\n    },\n    GR: {\n        postalCode: {\n            format: '999 99',\n            maxlength: 6\n        }\n    },\n    HR: {\n        postalCode: {\n            format: '[1-5]9999',\n            maxlength: 5\n        }\n    },\n    HU: {\n        postalCode: createFormatByDigits(4)\n    },\n    IE: {\n        postalCode: {\n            format: 'A99 A999',\n            maxlength: 8\n        }\n    },\n    IS: {\n        postalCode: createFormatByDigits(3)\n    },\n    IT: {\n        postalCode: createFormatByDigits(5)\n    },\n    LI: {\n        postalCode: createFormatByDigits(4)\n    },\n    LT: {\n        postalCode: {\n            format: '9999 or 99999 or LT-99999',\n            maxlength: 8\n        }\n    },\n    LU: {\n        postalCode: createFormatByDigits(4)\n    },\n    LV: {\n        postalCode: {\n            format: '9999 or LV-9999',\n            maxlength: 7\n        }\n    },\n    MC: {\n        postalCode: {\n            format: '980NN',\n            maxlength: 5\n        }\n    },\n    MT: {\n        postalCode: {\n            format: 'AA99 or AAA99 or AA9999 or AAA9999',\n            maxlength: 8\n        }\n    },\n    MY: {\n        postalCode: createFormatByDigits(5)\n    },\n    NL: {\n        postalCode: {\n            format: '9999AA',\n            maxlength: 7\n        }\n    },\n    NZ: {\n        postalCode: createFormatByDigits(4)\n    },\n    NO: {\n        postalCode: createFormatByDigits(4)\n    },\n    PL: {\n        postalCode: {\n            // Formatter - excludes non digits, but allows hyphens, and limits to a maxlength that varies depending on whether a hyphen is present or not\n            formatterFn: val => {\n                const nuVal = val.replace(getFormattingRegEx('^\\\\d-', 'g'), '');\n                const maxlength = nuVal.indexOf('-') > -1 ? 6 : 5;\n                return nuVal.substring(0, maxlength);\n            },\n            format: '99999 or 99-999',\n            maxlength: 6\n        }\n    },\n    PT: {\n        postalCode: {\n            formatterFn: val => {\n                const nuVal = val.replace(getFormattingRegEx('^\\\\d-', 'g'), '');\n                return nuVal.substring(0, 8);\n            },\n            format: '9999-999',\n            maxlength: 8\n        }\n    },\n    RO: {\n        postalCode: createFormatByDigits(6)\n    },\n    SI: {\n        postalCode: {\n            format: '9999 or SI-9999',\n            maxlength: 7\n        }\n    },\n    SE: {\n        postalCode: createFormatByDigits(5)\n    },\n    SG: {\n        postalCode: createFormatByDigits(6)\n    },\n    SK: {\n        postalCode: {\n            format: '99999 or SK-99999',\n            maxlength: 8\n        }\n    },\n    JP: {\n        postalCode: {\n            format: '999-9999',\n            maxlength: 8\n        }\n    },\n    US: {\n        postalCode: {\n            formatterFn: val => {\n                const nuVal = val.replace(getFormattingRegEx('^\\\\d-', 'g'), '');\n                const maxlength = nuVal.indexOf('-') > -1 ? 10 : 5;\n                return nuVal.substring(0, maxlength);\n            },\n            format: '99999 or 99999-9999'\n        }\n    }\n};\n","import { ValidatorRules, ValidatorRule } from '../../../utils/Validator/types';\nimport { countrySpecificFormatters } from './validate.formats';\nimport { ERROR_FIELD_REQUIRED, ERROR_INVALID_FORMAT_EXPECTS } from '../../../core/Errors/constants';\nimport { isEmpty } from '../../../utils/validator-utils';\n\nconst createPatternByDigits = (digits: number) => {\n    return {\n        pattern: new RegExp(`\\\\d{${digits}}`)\n    };\n};\n\nexport const validatePostalCode = (val: string, countryCode: string, validatorRules: ValidatorRules) => {\n    if (countryCode) {\n        // If there is no value, we display the 'required' error message\n        if (isEmpty(val)) return null;\n\n        // Dynamically create errorMessage\n        (validatorRules.postalCode as ValidatorRule).errorMessage = {\n            translationKey: ERROR_INVALID_FORMAT_EXPECTS,\n            translationObject: {\n                values: {\n                    format: countrySpecificFormatters[countryCode]?.postalCode.format || null\n                }\n            }\n        };\n\n        const pattern = postalCodePatterns[countryCode]?.pattern;\n        return pattern ? pattern.test(val) : !!val; // No pattern? Accept any, filled, value.\n    }\n    // Default rule\n    return isEmpty(val) ? null : true;\n};\n\nconst postalCodePatterns = {\n    AT: createPatternByDigits(4),\n    AU: createPatternByDigits(4),\n    BE: { pattern: /(?:(?:[1-9])(?:\\d{3}))/ },\n    BG: createPatternByDigits(4),\n    BR: { pattern: /^\\d{5}-?\\d{3}$/ },\n    CA: { pattern: /(?:[ABCEGHJ-NPRSTVXY]\\d[A-Z][ -]?\\d[A-Z]\\d)/ },\n    CH: { pattern: /[1-9]\\d{3}/ },\n    CY: createPatternByDigits(4),\n    CZ: { pattern: /\\d{3}\\s?\\d{2}/ },\n    DE: createPatternByDigits(5),\n    DK: createPatternByDigits(4),\n    EE: createPatternByDigits(5),\n    ES: { pattern: /(?:0[1-9]|[1-4]\\d|5[0-2])\\d{3}/ },\n    FI: createPatternByDigits(5),\n    FR: createPatternByDigits(5),\n    GB: { pattern: /^([A-Za-z][A-Ha-hK-Yk-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$/ },\n    GE: createPatternByDigits(4),\n    GR: { pattern: /^\\d{3}\\s{0,1}\\d{2}$/ },\n    HR: { pattern: /^([1-5])[0-9]{4}$/ },\n    HU: createPatternByDigits(4),\n    IE: { pattern: /(?:^[AC-FHKNPRTV-Y][0-9]{2}|D6W)[ -]?[0-9AC-FHKNPRTV-Y]{4}/ },\n    IS: createPatternByDigits(3),\n    IT: createPatternByDigits(5),\n    LI: createPatternByDigits(4),\n    LT: { pattern: /^(LT-\\d{5}|\\d{4,5})$/ },\n    LU: createPatternByDigits(4),\n    LV: { pattern: /^(LV-)[0-9]{4}$/ },\n    MC: { pattern: /^980\\d{2}$/ },\n    MT: { pattern: /^[A-Za-z]{3}\\d{4}$/ },\n    MY: createPatternByDigits(5),\n    NL: { pattern: /(?:NL-)?(?:[1-9]\\d{3} ?(?:[A-EGHJ-NPRTVWXZ][A-EGHJ-NPRSTVWXZ]|S[BCEGHJ-NPRTVWXZ]))/ },\n    NO: createPatternByDigits(4),\n    PL: { pattern: /^\\d{2}[-]{0,1}\\d{3}$/ },\n    PT: { pattern: /^([1-9]\\d{3})([- ]?(\\d{3})? *)$/ },\n    RO: createPatternByDigits(6),\n    SI: createPatternByDigits(4),\n    SE: createPatternByDigits(5),\n    SG: createPatternByDigits(6),\n    SK: createPatternByDigits(5),\n    US: createPatternByDigits(5)\n};\n\n/**\n * Validates only postalCode property. As the partial address form does not have the country selector, the country value\n * must be informed beforehand and can't be picked up from the form context\n *\n * @param country - Country that will be used to validate postal code\n */\nexport const getPartialAddressValidationRules = (country: string): ValidatorRules => {\n    const validationRules: ValidatorRules = {\n        postalCode: {\n            modes: ['blur'],\n            validate: val => {\n                return validatePostalCode(val, country, validationRules);\n            },\n            errorMessage: ERROR_FIELD_REQUIRED\n        }\n    };\n    return validationRules;\n};\n\nexport const getAddressValidationRules = (specifications): ValidatorRules => {\n    const addressValidationRules: ValidatorRules = {\n        postalCode: {\n            modes: ['blur'],\n            validate: (val, context) => {\n                const country = context.state.data.country;\n                return validatePostalCode(val, country, addressValidationRules);\n            },\n            errorMessage: ERROR_FIELD_REQUIRED\n        },\n        houseNumberOrName: {\n            validate: (value, context) => {\n                const selectedCountry = context.state?.data?.country;\n                const isOptional = selectedCountry && specifications.countryHasOptionalField(selectedCountry, 'houseNumberOrName');\n                return isOptional || (isEmpty(value) ? null : true);\n            },\n            modes: ['blur'],\n            errorMessage: ERROR_FIELD_REQUIRED\n        },\n        default: {\n            validate: value => (isEmpty(value) ? null : true), // true, if there are chars other than spaces\n            modes: ['blur'],\n            errorMessage: ERROR_FIELD_REQUIRED\n        }\n    };\n    return addressValidationRules;\n};\n","/**\n * FALLBACK_CONTEXT\n */\nexport const FALLBACK_CONTEXT = 'https://checkoutshopper-live.adyen.com/checkoutshopper/';\n\nexport const GENERIC_OPTIONS = [\n    'amount',\n    'secondaryAmount',\n    'countryCode',\n    'environment',\n    '_environmentUrls',\n    'loadingContext',\n    'i18n',\n    'modules',\n    'order',\n    'session',\n    'clientKey',\n    'showPayButton',\n    'redirectFromTopWhenInIframe',\n\n    // Events\n    'onPaymentCompleted',\n    'onPaymentFailed',\n    'beforeRedirect',\n    'beforeSubmit',\n    'onSubmit',\n    'onActionHandled',\n    'onAdditionalDetails',\n    'onChange',\n    'onEnterKeyPressed',\n    'onError',\n    'onBalanceCheck',\n    'onOrderCancel',\n    'onOrderRequest',\n    'onOrderUpdated',\n    'onPaymentMethodsRequest'\n];\n\nexport const DEFAULT_HTTP_TIMEOUT = 60000;\n\nexport default {\n    FALLBACK_CONTEXT,\n    GENERIC_OPTIONS,\n    DEFAULT_HTTP_TIMEOUT\n};\n","import { DEFAULT_HTTP_TIMEOUT, FALLBACK_CONTEXT } from '../config';\nimport AdyenCheckoutError from '../Errors/AdyenCheckoutError';\n\nexport interface HttpOptions {\n    accept?: string;\n    contentType?: string;\n    headers?;\n    loadingContext?: string;\n    method?: string;\n    path: string;\n    timeout?: number;\n    errorLevel?: ErrorLevel;\n    errorMessage?: string;\n    errorCode?: string;\n}\n\ninterface FetchErrorOptions {\n    message?: string;\n    level?: ErrorLevel;\n    cause?: unknown;\n    code?: string;\n}\n\ntype ErrorLevel = 'silent' | 'info' | 'warn' | 'error' | 'fatal';\n\ntype AdyenApiErrorResponse = {\n    errorCode: string;\n    message: string;\n    errorType: string;\n    status: number;\n};\n\nfunction isAdyenApiErrorResponse(data: any): data is AdyenApiErrorResponse {\n    return data && data.errorCode && data.errorType && data.message && data.status;\n}\n\nexport function http<T>(options: HttpOptions, data?: any): Promise<T> {\n    const {\n        headers = [],\n        errorLevel = 'warn',\n        errorCode,\n        loadingContext = FALLBACK_CONTEXT,\n        method = 'GET',\n        path,\n        timeout = DEFAULT_HTTP_TIMEOUT\n    } = options;\n\n    const request: RequestInit = {\n        method,\n        mode: 'cors',\n        cache: 'default',\n        credentials: 'same-origin',\n        headers: {\n            Accept: 'application/json, text/plain, */*',\n            'Content-Type': method === 'POST' ? 'application/json' : 'text/plain',\n            ...headers\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer-when-downgrade',\n        ...(AbortSignal?.timeout && { signal: AbortSignal?.timeout(timeout) }),\n        ...(data && { body: JSON.stringify(data) })\n    };\n\n    const url = `${loadingContext}${path}`;\n\n    return (\n        fetch(url, request)\n            .then(async response => {\n                const data = await response.json();\n\n                if (response.ok) {\n                    return data;\n                }\n\n                if (isAdyenApiErrorResponse(data)) {\n                    handleFetchError({ message: data.message, level: errorLevel, cause: data, code: errorCode });\n                    return;\n                }\n\n                const errorMessage = options.errorMessage || `Service at ${url} is not available`;\n                handleFetchError({ message: errorMessage, level: errorLevel, cause: data, code: errorCode });\n                return;\n            })\n            /**\n             * Catch block handles Network error, CORS error, or exception throw by the `handleFetchError`\n             * inside the `then` block\n             */\n            .catch((error: unknown) => {\n                /**\n                 * If error is instance of AdyenCheckoutError, which means that it was already\n                 * handled by the `handleFetchError` on the `then` block, then we just throw it.\n                 * There is no need to create it again\n                 */\n                if (error instanceof AdyenCheckoutError) {\n                    throw error;\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-base-to-string,@typescript-eslint/restrict-template-expressions\n                const errorMessage = options.errorMessage || `Call to ${url} failed. Error= ${error}`;\n                handleFetchError({ message: errorMessage, level: errorLevel, cause: error, code: errorCode });\n            })\n    );\n}\n\nfunction handleFetchError({ message, level, cause, code }: FetchErrorOptions): void {\n    switch (level) {\n        case 'silent': {\n            break;\n        }\n        case 'info':\n        case 'warn':\n        case 'error': {\n            console[level](message);\n            break;\n        }\n        default:\n            throw new AdyenCheckoutError('NETWORK_ERROR', message, { cause, code });\n    }\n}\n\nexport function httpGet<T = any>(options: HttpOptions, data?: any): Promise<T> {\n    return http<T>({ ...options, method: 'GET' }, data);\n}\n\nexport function httpPost<T = any>(options: HttpOptions, data?: any): Promise<T> {\n    return http<T>({ ...options, method: 'POST' }, data);\n}\n","import { httpGet } from './http';\n\nexport default function getDataset(name: string, loadingContext, locale?) {\n    const options = {\n        loadingContext,\n        errorLevel: 'warn' as const,\n        errorMessage: `Dataset ${name} is not available`,\n        path: locale ? `datasets/${name}/${locale}.json` : `datasets/${name}.json`\n    };\n\n    return httpGet(options);\n}\n","import { h } from 'preact';\nimport { useState, useLayoutEffect } from 'preact/hooks';\nimport Field from '../../FormFields/Field';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport getDataset from '../../../../core/Services/get-dataset';\nimport { StateFieldItem, StateFieldProps } from '../types';\nimport Select from '../../FormFields/Select';\n\nexport default function StateField(props: StateFieldProps) {\n    const { classNameModifiers, label, onDropdownChange, readOnly, selectedCountry, specifications, value, required } = props;\n    const { i18n, loadingContext } = useCoreContext();\n    const [states, setStates] = useState<StateFieldItem[]>([]);\n    const [loaded, setLoaded] = useState<boolean>(false);\n\n    useLayoutEffect(() => {\n        if (!selectedCountry || !specifications.countryHasDataset(selectedCountry)) {\n            setStates([]);\n            setLoaded(true);\n            return;\n        }\n\n        getDataset(`states/${selectedCountry}`, loadingContext, i18n.locale)\n            .then(response => {\n                const newStates = response && response.length ? response : [];\n                setStates(newStates);\n                setLoaded(true);\n            })\n            .catch(() => {\n                setStates([]);\n                setLoaded(true);\n            });\n    }, [selectedCountry]);\n\n    if (!loaded || !states.length) return null;\n\n    return (\n        <Field\n            label={label}\n            classNameModifiers={classNameModifiers}\n            errorMessage={props.errorMessage}\n            isValid={!!value}\n            showValidIcon={false}\n            name={'stateOrProvince'}\n            i18n={i18n}\n            readOnly={readOnly && !!value}\n        >\n            <Select\n                name={'stateOrProvince'}\n                onChange={onDropdownChange}\n                selectedValue={value}\n                items={states}\n                required={required}\n                readonly={readOnly && !!value}\n            />\n        </Field>\n    );\n}\n","import { h } from 'preact';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport Field from '../../FormFields/Field';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport getDataset from '../../../../core/Services/get-dataset';\nimport { CountryFieldProps, CountryFieldItem } from '../types';\nimport Select from '../../FormFields/Select';\n\nconst formatCountries = (countries: Array<CountryFieldItem>, allowedCountries: string[]) => {\n    const applyFilter = (country: CountryFieldItem) => allowedCountries.includes(country.id);\n    const applyMapper = (country: CountryFieldItem) => {\n        return {\n            ...country,\n            name: country.name,\n            selectedOptionName: country.name\n        };\n    };\n    return allowedCountries.length ? countries.filter(applyFilter).map(applyMapper) : countries.map(applyMapper);\n};\n\nexport default function CountryField(props: CountryFieldProps) {\n    const { allowedCountries = [], classNameModifiers = [], errorMessage, onDropdownChange, value, required } = props;\n    const { i18n, loadingContext } = useCoreContext();\n    const [countries, setCountries] = useState<CountryFieldItem[]>([]);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const [readOnly, setReadOnly] = useState(props.readOnly);\n\n    useLayoutEffect(() => {\n        getDataset('countries', loadingContext, i18n.locale)\n            .then(response => {\n                const newCountries = formatCountries(response, allowedCountries);\n                setCountries(newCountries || []);\n                setReadOnly(newCountries.length === 1 || readOnly);\n                setLoaded(true);\n            })\n            .catch(error => {\n                console.error(error);\n                setCountries([]);\n                setLoaded(true);\n            });\n    }, []);\n\n    if (!loaded) return null;\n\n    return (\n        <Field\n            name={'country'}\n            label={i18n.get('country')}\n            errorMessage={errorMessage}\n            classNameModifiers={classNameModifiers}\n            isValid={!!value}\n            showValidIcon={false}\n            i18n={i18n}\n            readOnly={readOnly && !!value}\n        >\n            <Select\n                onChange={onDropdownChange}\n                name={'country'}\n                selectedValue={value}\n                items={countries}\n                readonly={readOnly && !!value}\n                required={required}\n            />\n        </Field>\n    );\n}\n","import { h } from 'preact';\nimport Field from '../../FormFields/Field';\nimport StateField from './StateField';\nimport CountryField from './CountryField';\nimport { AddressStateError, FieldContainerProps } from '../types';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport Language from '../../../../language/Language';\nimport InputText from '../../FormFields/InputText';\n\nfunction getErrorMessage(errors: AddressStateError, fieldName: string, i18n: Language, label: string): string | boolean {\n    if (typeof errors[fieldName]?.errorMessage === 'object') {\n        const { translationKey, translationObject } = errors[fieldName].errorMessage;\n        return i18n.get(translationKey, translationObject);\n    }\n    // Default error msg: Enter the [label name]\n    const errorMsg = i18n.get(errors[fieldName]?.errorMessage, { values: { label: label.toLowerCase() } });\n    return errorMsg || !!errors[fieldName];\n}\n\n/**\n * USAGE: Specifically defined as a util to provide a wrapper for fields created within the Address component\n *\n * NOT TO BE USED: if you just want to add a Country or State dropdown outside of an Address component\n * - then you should implement <CountryField> or <StateField> directly\n */\nfunction FieldContainer(props: FieldContainerProps) {\n    const { i18n } = useCoreContext();\n    const { classNameModifiers = [], data, errors, valid, fieldName, onInput, onBlur, trimOnBlur, maxLength, disabled } = props;\n\n    const value: string = data[fieldName];\n    const selectedCountry: string = data.country;\n    const isOptional: boolean = props.specifications.countryHasOptionalField(selectedCountry, fieldName);\n    const labelKey: string = props.specifications.getKeyForField(fieldName, selectedCountry);\n    const optionalLabel = isOptional ? ` ${i18n.get('field.title.optional')}` : '';\n    const label = `${i18n.get(labelKey)}${optionalLabel}`;\n    const errorMessage = getErrorMessage(errors, fieldName, i18n, label);\n\n    switch (fieldName) {\n        case 'country':\n            return (\n                <CountryField\n                    allowedCountries={props.allowedCountries}\n                    classNameModifiers={classNameModifiers}\n                    label={label}\n                    errorMessage={errorMessage}\n                    onDropdownChange={props.onDropdownChange}\n                    value={value}\n                    required={!isOptional}\n                />\n            );\n        case 'stateOrProvince':\n            return (\n                <StateField\n                    classNameModifiers={classNameModifiers}\n                    label={label}\n                    errorMessage={errorMessage}\n                    onDropdownChange={props.onDropdownChange}\n                    selectedCountry={selectedCountry}\n                    specifications={props.specifications}\n                    value={value}\n                    required={!isOptional}\n                />\n            );\n        default:\n            return (\n                <Field\n                    label={label}\n                    classNameModifiers={classNameModifiers}\n                    errorMessage={errorMessage}\n                    isValid={valid[fieldName]}\n                    name={fieldName}\n                    i18n={i18n}\n                    onFocus={e => props.onFieldFocusAnalytics(fieldName, e)}\n                    onBlur={e => props.onFieldBlurAnalytics(fieldName, e)}\n                >\n                    <InputText\n                        name={fieldName}\n                        classNameModifiers={classNameModifiers}\n                        value={value}\n                        onInput={onInput}\n                        onBlur={onBlur}\n                        maxlength={maxLength}\n                        trimOnBlur={trimOnBlur}\n                        disabled={disabled}\n                        required={!isOptional}\n                    />\n                </Field>\n            );\n    }\n}\n\nexport default FieldContainer;\n","export const DEFAULT_DEBOUNCE_TIME_MS = 300;\n\nexport const debounce = (fn: Function, ms = DEFAULT_DEBOUNCE_TIME_MS) => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n    return function (this: any, ...args: any[]) {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => fn.apply(this, args), ms);\n    };\n};\n","import Field from '../../FormFields/Field';\nimport { h } from 'preact';\nimport { AddressLookupItem } from '../types';\nimport { useCallback, useEffect, useState, useMemo } from 'preact/hooks';\nimport './AddressSearch.scss';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { debounce } from '../../../../utils/debounce';\nimport Select from '../../FormFields/Select';\nimport { AddressData } from '../../../../types';\n\nexport type OnAddressLookupType = (\n    value: string,\n    actions: {\n        resolve: (value: Array<AddressLookupItem>) => void;\n        reject: (reason?: any) => void;\n    }\n) => Promise<void>;\n\nexport type OnAddressSelectedType = (\n    value: string,\n    actions: {\n        resolve: (value: AddressLookupItem) => void;\n        reject: (reason?: any) => void;\n    }\n) => Promise<void>;\n\ninterface AddressSearchProps {\n    onAddressLookup?: OnAddressLookupType;\n    onAddressSelected?: OnAddressSelectedType;\n    onSelect: (addressItem: AddressData) => void;\n    onManualAddress: any;\n    externalErrorMessage: string;\n    hideManualButton: boolean;\n    showContextualElement?: boolean;\n    contextualText?: string;\n    placeholder?: string;\n    addressSearchDebounceMs?: number;\n}\n\ninterface RejectionReason {\n    errorMessage: string;\n}\n\nexport default function AddressSearch({\n    onAddressLookup,\n    onAddressSelected,\n    onSelect,\n    onManualAddress,\n    externalErrorMessage,\n    hideManualButton,\n    showContextualElement,\n    contextualText,\n    placeholder,\n    addressSearchDebounceMs\n}: Readonly<AddressSearchProps>) {\n    const [formattedData, setFormattedData] = useState([]);\n    const [originalData, setOriginalData] = useState([]);\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const { i18n } = useCoreContext();\n    const mapDataToSelect = data => data.map(({ id, name }) => ({ id, name }));\n\n    const handlePromiseReject = useCallback((reason: RejectionReason) => {\n        if (reason?.errorMessage) {\n            setErrorMessage(reason.errorMessage);\n        }\n    }, []);\n\n    const onTextInput = useCallback(\n        (inputValue: string) => {\n            new Promise<Array<AddressLookupItem>>((resolve, reject) => {\n                void onAddressLookup(inputValue, { resolve, reject });\n            })\n                .then(searchArray => {\n                    setOriginalData(searchArray);\n                    setFormattedData(mapDataToSelect(searchArray));\n                    setErrorMessage('');\n                })\n                .catch(reason => handlePromiseReject(reason));\n        },\n        [onAddressLookup]\n    );\n\n    // update error message when there's a new one\n    useEffect(() => {\n        setErrorMessage(externalErrorMessage);\n    }, [externalErrorMessage]);\n\n    const onSelectItem = event => {\n        if (!event.target.value) {\n            setErrorMessage(i18n.get('address.errors.incomplete'));\n            return;\n        }\n        const value = originalData.find(item => item.id === event.target.value);\n\n        // 1. in case we don't get a function just select item\n        if (typeof onAddressSelected !== 'function') {\n            onSelect(value);\n            setFormattedData([]);\n            return;\n        }\n\n        // 2. in case callback is provided, create and call onAddressSelected\n        new Promise<AddressLookupItem>((resolve, reject) => {\n            void onAddressSelected(value, { resolve, reject });\n        })\n            .then(fullData => {\n                onSelect(fullData);\n                setFormattedData([]);\n            })\n            .catch(reason => handlePromiseReject(reason));\n    };\n\n    const debounceInputHandler = useMemo(() => debounce(onTextInput, addressSearchDebounceMs), []);\n\n    return (\n        <div className={'adyen-checkout__address-search adyen-checkout__field-group'}>\n            <Field\n                label={i18n.get('address')}\n                classNameModifiers={['address-search']}\n                errorMessage={errorMessage}\n                name={'address-search'}\n                showContextualElement={showContextualElement}\n                contextualText={contextualText}\n            >\n                <Select\n                    name={'address-search'}\n                    className={'adyen-checkout__address-search__dropdown'}\n                    placeholder={placeholder}\n                    onInput={debounceInputHandler}\n                    items={formattedData}\n                    onChange={onSelectItem}\n                    disableTextFilter={true}\n                    blurOnClose={true}\n                />\n            </Field>\n            {!hideManualButton && (\n                <span className=\"adyen-checkout__address-search__manual-add\">\n                    <button\n                        type=\"button\"\n                        className=\"adyen-checkout__button adyen-checkout__button--inline adyen-checkout__button--link adyen-checkout__address-search__manual-add__button\"\n                        onClick={onManualAddress}\n                    >\n                        {'+ ' + i18n.get('address.enterManually')}\n                    </button>\n                </span>\n            )}\n        </div>\n    );\n}\n","import { Fragment, h } from 'preact';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport Fieldset from '../FormFields/Fieldset';\nimport ReadOnlyAddress from './components/ReadOnlyAddress';\nimport { getAddressValidationRules } from './validate';\nimport { addressFormatters, countrySpecificFormatters } from './validate.formats';\nimport { AddressProps } from './types';\nimport { AddressData } from '../../../types/global-types';\nimport FieldContainer from './components/FieldContainer';\nimport useForm from '../../../utils/useForm';\nimport Specifications from './Specifications';\nimport { ADDRESS_SCHEMA, FALLBACK_VALUE } from './constants';\nimport { getMaxLengthByFieldAndCountry } from '../../../utils/validator-utils';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport AddressSearch from './components/AddressSearch';\nimport { ComponentMethodsRef } from '../UIElement/types';\n\nexport default function Address(props: AddressProps) {\n    const { i18n } = useCoreContext();\n\n    const { label = '', requiredFields, visibility, iOSFocusedField = null, showContextualElement } = props;\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const addressRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(addressRef.current).length) {\n        props.setComponentRef?.(addressRef.current);\n    }\n\n    const specifications = useMemo(() => new Specifications(props.specifications), [props.specifications]);\n\n    const requiredFieldsSchema = specifications.getAddressSchemaForCountryFlat(props.countryCode).filter(field => requiredFields.includes(field));\n\n    const [hasSelectedAddress, setHasSelectedAddress] = useState(false);\n\n    const [useManualAddress, setUseManualAddress] = useState(false);\n\n    const [searchErrorMessage, setSearchErrorMessage] = useState('');\n\n    const showAddressSearch = !!props.onAddressLookup;\n\n    const [ignoreCountryChange, setIgnoreCountryChange] = useState(false);\n\n    const showAddressFields = props.onAddressLookup ? hasSelectedAddress || useManualAddress : true;\n\n    const { data, errors, valid, isValid, handleChangeFor, triggerValidation, setData, mergeData } = useForm<AddressData>({\n        schema: requiredFieldsSchema,\n        defaultData: props.data,\n        // Ensure any passed validation rules are merged with the default ones\n        rules: { ...getAddressValidationRules(specifications), ...props.validationRules },\n        formatters: addressFormatters\n    });\n\n    const setSearchData = useCallback(\n        (selectedAddress: AddressData) => {\n            const propsKeysToProcess = ADDRESS_SCHEMA;\n            const newStateData = propsKeysToProcess.reduce((acc: AddressData, propKey) => {\n                // Make sure the data provided by the merchant is always strings\n                const providedValue = selectedAddress[propKey];\n                if (providedValue !== null && providedValue !== undefined) {\n                    // Cast everything to string\n                    acc[propKey] = String(providedValue);\n                }\n                return acc;\n            }, {});\n            mergeData(newStateData);\n            setIgnoreCountryChange(true);\n            triggerValidation();\n            setHasSelectedAddress(true);\n        },\n        [setHasSelectedAddress, triggerValidation, setData]\n    );\n\n    const onManualAddress = useCallback(() => {\n        setUseManualAddress(true);\n    }, []);\n\n    // Expose method expected by (parent) Address.tsx\n    addressRef.current.showValidation = () => {\n        triggerValidation();\n        if (showAddressSearch && !showAddressFields && !isValid) {\n            setSearchErrorMessage(i18n.get('address.errors.incomplete'));\n        } else {\n            setSearchErrorMessage('');\n        }\n    };\n\n    /**\n     * For iOS: iOSFocusedField is the name of the element calling for other elements to be disabled\n     * - so if it is set (meaning we are in iOS *and* an input has been focussed) only enable the field that corresponds to this element\n     */\n    const enabledFields: string[] = requiredFieldsSchema.filter(item => {\n        return !iOSFocusedField ? true : item === iOSFocusedField;\n    });\n\n    /**\n     * Effect that:\n     * - Resets validation for all fields by triggering handleChangeFor(fieldName, 'input')\n     * - Applies validation on postalCode field in case it has any value\n     */\n    useEffect((): void => {\n        // if the country was set via setSearchData we don't want to trigger this\n        if (ignoreCountryChange) {\n            setIgnoreCountryChange(false);\n            return;\n        }\n\n        const stateOrProvince = specifications.countryHasDataset(data.country) ? '' : FALLBACK_VALUE;\n        const newData = { ...data, stateOrProvince };\n\n        requiredFields.forEach(fieldName => {\n            handleChangeFor(fieldName, 'input')(newData[fieldName] ?? '');\n        });\n\n        if (newData.postalCode) {\n            handleChangeFor('postalCode', 'blur')(data.postalCode);\n        }\n    }, [data.country]);\n\n    /**\n     * Set the value of 'stateOrProvince' during the initial render if\n     * property is provided during the creation of the payment method\n     */\n    useEffect((): void => {\n        const stateFieldIsRequired = requiredFields.includes('stateOrProvince');\n        const countryHasStatesDataset = data.country && specifications.countryHasDataset(data.country);\n        const addressShouldHaveState = stateFieldIsRequired && countryHasStatesDataset;\n        const stateOrProvince = data.stateOrProvince || (addressShouldHaveState ? '' : FALLBACK_VALUE);\n\n        handleChangeFor('stateOrProvince', 'input')(stateOrProvince);\n    }, []);\n\n    useEffect((): void => {\n        const optionalFields = specifications.getOptionalFieldsForCountry(data.country);\n        const processedData = ADDRESS_SCHEMA.reduce((acc, cur) => {\n            const isOptional = optionalFields.includes(cur);\n            const isRequired = requiredFields.includes(cur);\n            const newValue = data[cur];\n            const initialValue = props.data[cur];\n            // recover default data values which are not requiredFields, or prefill with 'N/A'\n            const fallbackValue = !isRequired && !newValue && !!initialValue ? initialValue : FALLBACK_VALUE;\n            const value = (isOptional && !newValue) || !isRequired ? fallbackValue : newValue;\n            if (value?.length) acc[cur] = value;\n            return acc;\n        }, {});\n\n        props.onChange({ data: processedData, valid, errors, isValid });\n    }, [data, valid, errors, isValid]);\n\n    if (visibility === 'hidden') return null;\n    if (visibility === 'readOnly') return <ReadOnlyAddress data={data} label={label} />;\n\n    const getComponent = (fieldName: string, { classNameModifiers = [] }) => {\n        if (!requiredFields.includes(fieldName)) return null;\n\n        return (\n            <FieldContainer\n                key={fieldName}\n                allowedCountries={props.allowedCountries}\n                classNameModifiers={[...classNameModifiers, fieldName]}\n                data={data}\n                errors={errors}\n                valid={valid}\n                fieldName={fieldName}\n                onInput={handleChangeFor(fieldName, 'input')}\n                onBlur={handleChangeFor(fieldName, 'blur')}\n                onDropdownChange={handleChangeFor(fieldName, 'blur')}\n                specifications={specifications}\n                maxLength={getMaxLengthByFieldAndCountry(countrySpecificFormatters, fieldName, data.country, true)}\n                trimOnBlur={true}\n                disabled={!enabledFields.includes(fieldName)}\n                onFieldFocusAnalytics={props.onFieldFocusAnalytics}\n                onFieldBlurAnalytics={props.onFieldBlurAnalytics}\n            />\n        );\n    };\n\n    const getWrapper = group => (\n        <div className=\"adyen-checkout__field-group\">\n            {group.map(([field, size]) => getComponent(field, { classNameModifiers: [`col-${size}`] }))}\n        </div>\n    );\n\n    const addressSchema = specifications.getAddressSchemaForCountry(data.country);\n\n    return (\n        <Fragment>\n            <Fieldset classNameModifiers={[label || 'address']} label={label}>\n                {showAddressSearch && (\n                    <AddressSearch\n                        onAddressLookup={props.onAddressLookup}\n                        onAddressSelected={props.onAddressSelected}\n                        onSelect={setSearchData}\n                        onManualAddress={onManualAddress}\n                        externalErrorMessage={searchErrorMessage}\n                        hideManualButton={showAddressFields}\n                        showContextualElement={showContextualElement}\n                        contextualText={i18n.get('address.search.contextualText')}\n                        addressSearchDebounceMs={props.addressSearchDebounceMs}\n                    />\n                )}\n                {showAddressFields && (\n                    <Fragment>{addressSchema.map(field => (field instanceof Array ? getWrapper(field) : getComponent(field, {})))}</Fragment>\n                )}\n            </Fieldset>\n        </Fragment>\n    );\n}\n\nAddress.defaultProps = {\n    countryCode: null,\n    validationRules: null,\n    data: {},\n    onChange: () => {},\n    visibility: 'editable',\n    requiredFields: ADDRESS_SCHEMA,\n    specifications: {},\n    onFieldFocusAnalytics: () => {},\n    onFieldBlurAnalytics: () => {}\n};\n","import { h } from 'preact';\nimport Field from '../../../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { CardHolderNameProps } from './types';\nimport InputText from '../../../../internal/FormFields/InputText';\nimport { CREDITCARD_HOLDER_NAME_INVALID } from '../../../../../core/Errors/constants';\n\nexport default function CardHolderName({\n    onBlur,\n    onInput,\n    placeholder,\n    value,\n    required,\n    error = false,\n    isValid,\n    disabled,\n    onFieldFocusAnalytics,\n    onFieldBlurAnalytics\n}: CardHolderNameProps) {\n    const { i18n } = useCoreContext();\n\n    return (\n        <Field\n            label={i18n.get('creditCard.holderName')}\n            className={'adyen-checkout__card__holderName'}\n            errorMessage={error && i18n.get(CREDITCARD_HOLDER_NAME_INVALID)}\n            isValid={!!isValid}\n            name={'holderName'}\n            i18n={i18n}\n            onFocus={e => onFieldFocusAnalytics('holderName', e)}\n            onBlur={e => onFieldBlurAnalytics('holderName', e)}\n        >\n            <InputText\n                name={'holderName'}\n                className=\"adyen-checkout__card__holderName__input adyen-checkout__input\"\n                placeholder={placeholder}\n                autocomplete={'cc-name'}\n                {...{ value, required, onBlur, onInput, disabled }}\n            />\n        </Field>\n    );\n}\n","import { h } from 'preact';\nimport LoadingWrapper from '../../../../internal/LoadingWrapper';\nimport CardFields from './CardFields';\nimport KCPAuthentication from './KCPAuthentication';\nimport SocialSecurityNumberBrazil from '../../../../internal/SocialSecurityNumberBrazil/SocialSecurityNumberBrazil';\nimport StoreDetails from '../../../../internal/StoreDetails';\nimport Address from '../../../../internal/Address';\nimport CardHolderName from './CardHolderName';\nimport Installments from './Installments';\nimport DisclaimerMessage from '../../../../internal/DisclaimerMessage';\n\nexport const CardFieldsWrapper = ({\n    // vars created in CardInput:\n    // base (shared)\n    data,\n    valid,\n    errors,\n    handleChangeFor,\n    sfpState,\n    setFocusOn,\n    cvcPolicy,\n    focusedElement,\n    hasInstallments,\n    handleInstallments,\n    showAmountsInInstallments,\n    // Card\n    brandsIcons,\n    formData,\n    formErrors,\n    formValid,\n    expiryDatePolicy,\n    dualBrandSelectElements,\n    extensions,\n    selectedBrandValue,\n    // KCP\n    showKCP,\n    // SSN\n    showBrazilianSSN,\n    socialSecurityNumber,\n    // Store details\n    handleOnStoreDetails,\n    // Address\n    billingAddress,\n    handleAddress,\n    setAddressRef,\n    partialAddressSchema,\n    onAddressLookup,\n    onAddressSelected,\n    addressSearchDebounceMs,\n    // For this comp (props passed through from CardInput)\n    amount,\n    billingAddressRequired,\n    billingAddressRequiredFields,\n    billingAddressAllowedCountries,\n    billingAddressValidationRules = null,\n    brandsConfiguration,\n    showStoreDetailsCheckbox,\n    hasCVC,\n    hasHolderName,\n    holderNameRequired,\n    installmentOptions,\n    placeholders,\n    positionHolderNameOnTop,\n    // For CardFields > CardNumber\n    showBrandIcon,\n    showContextualElement,\n    //\n    iOSFocusedField,\n    disclaimerMessage,\n    //\n    onFieldFocusAnalytics,\n    onFieldBlurAnalytics\n}) => {\n    const cardHolderField = (\n        <CardHolderName\n            required={holderNameRequired}\n            placeholder={placeholders.holderName}\n            value={formData.holderName}\n            error={!!formErrors.holderName && holderNameRequired}\n            isValid={!!formValid.holderName}\n            onBlur={handleChangeFor('holderName', 'blur')}\n            onInput={handleChangeFor('holderName', 'input')}\n            disabled={iOSFocusedField && iOSFocusedField !== 'holderName'}\n            onFieldFocusAnalytics={onFieldFocusAnalytics}\n            onFieldBlurAnalytics={onFieldBlurAnalytics}\n        />\n    );\n\n    return (\n        <LoadingWrapper status={sfpState.status}>\n            {hasHolderName && positionHolderNameOnTop && cardHolderField}\n\n            <CardFields\n                showBrandIcon={showBrandIcon}\n                showContextualElement={showContextualElement}\n                brand={sfpState.brand}\n                brandsIcons={brandsIcons}\n                brandsConfiguration={brandsConfiguration}\n                focusedElement={focusedElement}\n                onFocusField={setFocusOn}\n                hasCVC={hasCVC}\n                cvcPolicy={cvcPolicy}\n                expiryDatePolicy={expiryDatePolicy}\n                errors={sfpState.errors}\n                valid={sfpState.valid}\n                dualBrandingElements={dualBrandSelectElements.length > 0 && dualBrandSelectElements}\n                dualBrandingChangeHandler={extensions.handleDualBrandSelection}\n                dualBrandingSelected={selectedBrandValue}\n            />\n\n            {hasHolderName && !positionHolderNameOnTop && cardHolderField}\n\n            {showKCP && (\n                <KCPAuthentication\n                    onFocusField={setFocusOn}\n                    focusedElement={focusedElement}\n                    encryptedPasswordState={{\n                        data: sfpState.encryptedPassword,\n                        valid: sfpState.valid ? sfpState.valid.encryptedPassword : false,\n                        errors: sfpState.errors ? sfpState.errors.encryptedPassword : false\n                    }}\n                    value={data.taxNumber}\n                    error={!!errors.taxNumber}\n                    isValid={!!valid.taxNumber}\n                    onBlur={handleChangeFor('taxNumber', 'blur')}\n                    onInput={handleChangeFor('taxNumber', 'input')}\n                    disabled={iOSFocusedField && iOSFocusedField !== 'kcpTaxNumberOrDOB'}\n                    placeholder={placeholders.taxNumber}\n                    onFieldFocusAnalytics={onFieldFocusAnalytics}\n                    onFieldBlurAnalytics={onFieldBlurAnalytics}\n                />\n            )}\n\n            {showBrazilianSSN && (\n                <div className=\"adyen-checkout__card__socialSecurityNumber\">\n                    <SocialSecurityNumberBrazil\n                        onBlur={handleChangeFor('socialSecurityNumber', 'blur')}\n                        onInput={handleChangeFor('socialSecurityNumber', 'input')}\n                        error={errors?.socialSecurityNumber}\n                        valid={valid?.socialSecurityNumber}\n                        data={socialSecurityNumber}\n                        required={true}\n                        disabled={iOSFocusedField && iOSFocusedField !== 'socialSecurityNumber'}\n                        onFieldFocusAnalytics={onFieldFocusAnalytics}\n                        onFieldBlurAnalytics={onFieldBlurAnalytics}\n                    />\n                </div>\n            )}\n\n            {showStoreDetailsCheckbox && <StoreDetails onChange={handleOnStoreDetails} />}\n\n            {hasInstallments && (\n                <Installments\n                    amount={amount}\n                    brand={sfpState.brand}\n                    installmentOptions={installmentOptions}\n                    onChange={handleInstallments}\n                    type={showAmountsInInstallments ? 'amount' : 'months'}\n                />\n            )}\n\n            {billingAddressRequired && (\n                <Address\n                    label=\"billingAddress\"\n                    data={billingAddress}\n                    onChange={handleAddress}\n                    allowedCountries={billingAddressAllowedCountries}\n                    requiredFields={billingAddressRequiredFields}\n                    setComponentRef={setAddressRef}\n                    validationRules={billingAddressValidationRules}\n                    specifications={partialAddressSchema}\n                    iOSFocusedField={iOSFocusedField}\n                    onAddressLookup={onAddressLookup}\n                    showContextualElement={showContextualElement}\n                    onAddressSelected={onAddressSelected}\n                    addressSearchDebounceMs={addressSearchDebounceMs}\n                    onFieldFocusAnalytics={onFieldFocusAnalytics}\n                    onFieldBlurAnalytics={onFieldBlurAnalytics}\n                />\n            )}\n\n            {disclaimerMessage && (\n                <DisclaimerMessage\n                    message={disclaimerMessage.message.replace('%{linkText}', `%#${disclaimerMessage.linkText}%#`)}\n                    urls={[disclaimerMessage.link]}\n                />\n            )}\n        </LoadingWrapper>\n    );\n};\n","import { ENCRYPTED_CARD_NUMBER, CREDIT_CARD_SF_FIELDS } from '../../../internal/SecuredFields/lib/constants';\nimport { selectOne } from '../../../internal/SecuredFields/lib/utilities/dom';\nimport { CardFocusData } from '../../../internal/SecuredFields/lib/types';\n\n/**\n * Helper for CardInput - gets a field name and sets focus on it\n */\nexport const setFocusOnFirstField = (isValidating, sfp, fieldToFocus) => {\n    if (isValidating) {\n        // If not a cardInput related securedField - find field and set focus on it\n        if (!CREDIT_CARD_SF_FIELDS.includes(fieldToFocus)) {\n            setFocusOnNonSF(fieldToFocus, sfp);\n        } else {\n            // Is a securedField - so it has its own focus procedures\n            sfp.current.setFocusOn(fieldToFocus);\n        }\n    }\n};\n\nexport const getAddressHandler = (setFormData, setFormValid, setFormErrors) => {\n    // Return Handler fn:\n    return address => {\n        setFormData('billingAddress', address.data);\n        setFormValid('billingAddress', address.isValid);\n        setFormErrors('billingAddress', address.errors);\n    };\n};\n\nexport const getFocusHandler = (setFocusedElement, onFocus, onBlur) => {\n    // Return Handler fn:\n    return (e: CardFocusData) => {\n        setFocusedElement(e.currentFocusObject);\n        e.focus === true ? onFocus(e.fieldType, e) : onBlur(e.fieldType, e);\n    };\n};\n\nexport const getAutoJumpHandler = (isAutoJumping, sfp, layout) => {\n    return () => {\n        if (!isAutoJumping.current) {\n            isAutoJumping.current = true;\n\n            // CardInput can call this more than once in quick succession\n            // e.g. if field was in error (error + fieldValid) or other SFs are optional (fieldValid + allValid) etc\n            // - so make async to avoid double setFocus call\n            void Promise.resolve().then(() => {\n                const panIndex = layout.findIndex(elem => elem === ENCRYPTED_CARD_NUMBER);\n                const subsequentFields = layout.slice(panIndex + 1);\n\n                /**\n                 * Investigate subsequent fields to see if they can/should accept focus\n                 */\n                for (const field of subsequentFields) {\n                    // Is the next field a credit card related securedField?\n                    if (CREDIT_CARD_SF_FIELDS.includes(field)) {\n                        const isOptionalOrHidden = sfp.current.sfIsOptionalOrHidden(field);\n                        if (!isOptionalOrHidden) {\n                            sfp.current.setFocusOn(field);\n                            break;\n                        }\n                    } else {\n                        // If it isn't an SF - shift focus to it (we're currently not concerned with whether the field is optional)\n\n                        setFocusOnNonSF(field, sfp);\n                        break;\n                    }\n                }\n\n                isAutoJumping.current = false;\n            });\n        }\n    };\n};\n\nconst setFocusOnNonSF = (field, sfp) => {\n    let nameVal: string = field;\n\n    // We have an exception with the kcp taxNumber where the name of the field ('kcpTaxNumberOrDOB') doesn't match\n    // the value by which the field is referred to internally ('taxNumber')\n    if (nameVal === 'taxNumber') nameVal = 'kcpTaxNumberOrDOB';\n\n    if (nameVal === 'country' || nameVal === 'stateOrProvince') {\n        // Set focus on dropdown\n        const field: HTMLElement = selectOne(sfp.current.rootNode, `.adyen-checkout__field--${nameVal} .adyen-checkout__filter-input`);\n        field?.focus();\n    } else {\n        // Set focus on input\n        const field: HTMLElement = selectOne(sfp.current.rootNode, `[name=\"${nameVal}\"]`);\n        field?.focus();\n    }\n};\n","// Pass 2 arrays of similar objects - and compare for differences\nexport function getArrayDifferences<A, S extends string>(currentArray: A[], previousArray: A[], comparisonKey?: S): A[] {\n    let difference;\n\n    const compKey = comparisonKey || 'id';\n\n    // If nothing to compare - take the new item...\n    if (currentArray.length === 1 && !previousArray) {\n        difference = currentArray;\n    }\n    // .. else, find the difference: what's in the new array that wasn't in the old array?\n    if (currentArray.length > previousArray?.length) {\n        difference = currentArray.filter(({ [compKey]: id1 }) => !previousArray.some(({ [compKey]: id2 }) => id2 === id1));\n    }\n    return difference;\n}\n","import { h } from 'preact';\nimport './FormInstruction.scss';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\n\nconst FormInstruction = () => {\n    const { i18n } = useCoreContext();\n    return <p className=\"adyen-checkout-form-instruction\">{i18n.get('form.instruction')}</p>;\n};\n\nexport default FormInstruction;\n","import { createContext } from 'preact';\nimport { SRPanel } from './SRPanel';\nimport { SetSRMessagesReturnFn } from './SRPanelProvider';\nimport { FieldTypeMappingFn } from './types';\n\ninterface SetSRMessagesFromObjectsFnProps {\n    fieldTypeMappingFn?: FieldTypeMappingFn;\n}\n\ntype SetSRMessagesFromObjectsFn = (props: SetSRMessagesFromObjectsFnProps) => SetSRMessagesReturnFn;\n\nexport interface ISRPanelContext {\n    srPanel: SRPanel;\n    setSRMessagesFromObjects: SetSRMessagesFromObjectsFn;\n    setSRMessagesFromStrings: (strs) => void;\n    clearSRPanel: () => void;\n    shouldMoveFocusSR: boolean;\n}\n\n// Will be needed once PersonalDetails & Address have ability to administer their own SRPanel\n// export const mockSRContext: ISRPanelContext = {\n//     srPanel: null,\n//     setSRMessagesFromObjects: null,\n//     setSRMessagesFromStrings: null,\n//     clearSRPanel: null,\n//     shouldMoveFocusSR: null\n// };\n\nexport const SRPanelContext = createContext<ISRPanelContext>({\n    srPanel: null,\n    setSRMessagesFromObjects: null,\n    setSRMessagesFromStrings: null,\n    clearSRPanel: null,\n    shouldMoveFocusSR: null\n});\n","import { useContext } from 'preact/hooks';\nimport { ISRPanelContext, SRPanelContext } from './SRPanelContext';\n\nfunction useSRPanelContext(): ISRPanelContext {\n    return useContext(SRPanelContext);\n}\n\nexport default useSRPanelContext;\n","import { useRef, useEffect } from 'preact/hooks';\n\nexport function usePrevious<T>(value: T): T {\n    const ref: any = useRef<T>();\n\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n\n    // Return previous value\n    return ref.current;\n}\n","import { useEffect, useState } from 'preact/hooks';\nimport useSRPanelContext from '../../../../core/Errors/useSRPanelContext';\nimport { SetSRMessagesReturnFn } from '../../../../core/Errors/SRPanelProvider';\nimport { handlePartialAddressMode, lookupBlurBasedErrors, mapFieldKey } from './utils';\nimport { usePrevious } from '../../../../utils/hookUtils';\nimport { SetSRMessagesReturnObject, SortedErrorObject } from '../../../../core/Errors/types';\nimport { ERROR_ACTION_BLUR_SCENARIO, ERROR_ACTION_FOCUS_FIELD } from '../../../../core/Errors/constants';\nimport { setFocusOnFirstField } from './handlers';\nimport { getArrayDifferences } from '../../../../utils/arrayUtils';\n\nconst useSRPanelForCardInputErrors = ({ errors, props, isValidating, retrieveLayout, specifications, billingAddress, sfp }) => {\n    // Extract fns from context\n    const { setSRMessagesFromObjects, setSRMessagesFromStrings, clearSRPanel, shouldMoveFocusSR } = useSRPanelContext();\n\n    // Generate a setSRMessages function - implemented as a partial, since the initial set of arguments don't change.\n    const setSRMessages: SetSRMessagesReturnFn = setSRMessagesFromObjects?.({\n        fieldTypeMappingFn: mapFieldKey\n    });\n\n    const partialAddressSchema = handlePartialAddressMode(props.billingAddressMode);\n\n    const [sortedErrorList, setSortedErrorList] = useState<SortedErrorObject[]>(null);\n\n    // Get the previous list of errors\n    const previousSortedErrors = usePrevious(sortedErrorList);\n\n    const sfStateErrorsObj = sfp.current?.mapErrorsToValidationRuleResult();\n    const mergedErrors = { ...errors, ...sfStateErrorsObj };\n\n    useEffect(() => {\n        try {\n            // Extract and then flatten billingAddress errors into a new object with *all* the field errors at top level\n            const { billingAddress: extractedAddressErrors, ...errorsWithoutAddress } = mergedErrors;\n\n            const errorsForPanel = { ...errorsWithoutAddress, ...extractedAddressErrors };\n\n            // Pass dynamic props (errors, layout etc) to SRPanel via partial\n            const srPanelResp: SetSRMessagesReturnObject = setSRMessages?.({\n                errors: errorsForPanel,\n                isValidating: isValidating.current,\n                layout: retrieveLayout(),\n                // If we don't have country specific address labels, we might have a label related to a partialAddressSchema (i.e. zipCode)\n                countrySpecificLabels: specifications.getAddressLabelsForCountry(billingAddress?.country) ?? partialAddressSchema?.default?.labels\n            });\n\n            // Store the array of sorted error objects separately so that we can use it to make comparisons between the old and new arrays\n            const currentErrorsSortedByLayout = srPanelResp?.currentErrorsSortedByLayout;\n            setSortedErrorList(currentErrorsSortedByLayout);\n\n            /**\n             * Need extra actions after setting SRPanel messages in order to focus field (if required) and because we have some errors that are fired onBlur\n             */\n            switch (srPanelResp?.action) {\n                // A call to focus the first field in error will always follow the call to validate the whole form\n                case ERROR_ACTION_FOCUS_FIELD:\n                    if (shouldMoveFocusSR) setFocusOnFirstField(isValidating.current, sfp, srPanelResp?.fieldToFocus);\n                    // Remove 'showValidation' mode - allowing time for collation of all the fields in error whilst it is 'showValidation' mode (some errors come in a second render pass)\n                    setTimeout(() => {\n                        isValidating.current = false;\n                    }, 300);\n                    break;\n                /** On blur scenario: not validating, i.e. trying to submit form, but there might be an error, either to set or to clear */\n                case ERROR_ACTION_BLUR_SCENARIO: {\n                    const difference = getArrayDifferences<SortedErrorObject, string>(currentErrorsSortedByLayout, previousSortedErrors, 'field');\n\n                    const latestErrorMsg = difference?.[0];\n\n                    if (latestErrorMsg) {\n                        // Use the error code to look up whether error is actually a blur based one (most are but some SF ones aren't)\n                        const isBlurBasedError = lookupBlurBasedErrors(latestErrorMsg.errorCode);\n\n                        /**\n                         *  ONLY ADD BLUR BASED ERRORS TO THE ERROR PANEL - doing this step prevents the non-blur based errors from being read out twice\n                         *  (once from the aria-live, error panel & once from the aria-describedby element)\n                         */\n                        const latestSRError = isBlurBasedError ? latestErrorMsg.errorMessage : null;\n                        // console.log('### CardInput2::componentDidUpdate:: #2 (not validating) single error:: latestSRError', latestSRError);\n                        setSRMessagesFromStrings(latestSRError);\n                    } else {\n                        // called when previousSortedErrors.length >= currentErrorsSortedByLayout.length\n                        // console.log('### CardInput2::componentDidUpdate:: #3(not validating) clearing errors:: NO latestErrorMsg');\n                        clearSRPanel();\n                    }\n                    break;\n                }\n                default:\n                    break;\n            }\n        } catch (_) {\n            // We don't handle the error related to the sr panel, let it fail silently.\n        }\n    }, [errors]);\n\n    return { sortedErrorList, previousSortedErrors, clearSRPanel };\n};\n\nexport default useSRPanelForCardInputErrors;\n","import { h, Fragment } from 'preact';\nimport { useState, useEffect, useRef, useMemo, useCallback } from 'preact/hooks';\nimport SecuredFieldsProvider from '../../../internal/SecuredFields/SFP/SecuredFieldsProvider';\nimport { OnChangeEventDetails, SFPState } from '../../../internal/SecuredFields/SFP/types';\nimport defaultProps from './defaultProps';\nimport './CardInput.scss';\nimport { AddressModeOptions, CardInputDataState, CardInputErrorState, CardInputProps, CardInputRef, CardInputValidState } from './types';\nimport { CVC_POLICY_REQUIRED, DATE_POLICY_REQUIRED, ENCRYPTED_CARD_NUMBER } from '../../../internal/SecuredFields/lib/constants';\nimport { BinLookupResponse } from '../../types';\nimport { cardInputFormatters, cardInputValidationRules, getRuleByNameAndMode } from './validate';\nimport CIExtensions from '../../../internal/SecuredFields/binLookup/extensions';\nimport useForm from '../../../../utils/useForm';\nimport { SortedErrorObject } from '../../../../core/Errors/types';\nimport { handlePartialAddressMode, extractPropsForCardFields, extractPropsForSFP, getLayout } from './utils';\nimport Specifications from '../../../internal/Address/Specifications';\nimport { StoredCardFieldsWrapper } from './components/StoredCardFieldsWrapper';\nimport { CardFieldsWrapper } from './components/CardFieldsWrapper';\nimport { getAddressHandler, getAutoJumpHandler, getFocusHandler } from './handlers';\nimport { InstallmentsObj } from './components/Installments/Installments';\nimport { TouchStartEventObj } from './components/types';\nimport classNames from 'classnames';\nimport { getPartialAddressValidationRules } from '../../../internal/Address/validate';\nimport useImage from '../../../../core/Context/useImage';\nimport { getArrayDifferences } from '../../../../utils/arrayUtils';\nimport FormInstruction from '../../../internal/FormInstruction';\nimport { AddressData } from '../../../../types/global-types';\nimport { CardBrandData, CardFocusData } from '../../../internal/SecuredFields/lib/types';\nimport { FieldErrorAnalyticsObject } from '../../../../core/Analytics/types';\nimport { PREFIX } from '../../../internal/Icon/constants';\nimport useSRPanelForCardInputErrors from './useSRPanelForCardInputErrors';\n\nconst CardInput = (props: CardInputProps) => {\n    const sfp = useRef(null);\n    const isValidating = useRef(false);\n    const getImage = useImage();\n\n    const billingAddressRef = useRef(null);\n    const setAddressRef = ref => {\n        billingAddressRef.current = ref;\n    };\n\n    const cardInputRef = useRef<CardInputRef>({});\n    // Just call once to create the object by which we expose the members expected by the parent Card comp\n    if (!Object.keys(cardInputRef.current).length) {\n        props.setComponentRef(cardInputRef.current);\n    }\n\n    const hasPanLengthRef = useRef(0);\n    const isAutoJumping = useRef(false);\n\n    const specifications = useMemo(() => new Specifications(props.specifications), [props.specifications]);\n\n    // Store ref to sfp (useful for 'deep' debugging)\n    cardInputRef.current.sfp = sfp;\n\n    /**\n     * STATE HOOKS\n     */\n    const [status, setStatus] = useState('ready');\n\n    const [errors, setErrors] = useState<CardInputErrorState>({});\n    const [valid, setValid] = useState<CardInputValidState>({\n        ...(props.holderNameRequired && { holderName: false })\n    });\n    const [data, setData] = useState<CardInputDataState>({\n        ...(props.hasHolderName && { holderName: props.data.holderName ?? '' })\n    });\n\n    const [focusedElement, setFocusedElement] = useState('');\n    const [isSfpValid, setIsSfpValid] = useState(false);\n    const [expiryDatePolicy, setExpiryDatePolicy] = useState(DATE_POLICY_REQUIRED);\n    const [cvcPolicy, setCvcPolicy] = useState(CVC_POLICY_REQUIRED);\n    const [issuingCountryCode, setIssuingCountryCode] = useState<string>(null);\n\n    const [dualBrandSelectElements, setDualBrandSelectElements] = useState([]);\n    const [selectedBrandValue, setSelectedBrandValue] = useState(props.storedPaymentMethodId ? props.brand : ''); // If this is a storedCard comp initialise state with the storedCard's brand\n\n    const showBillingAddress = props.billingAddressMode !== AddressModeOptions.none && props.billingAddressRequired;\n\n    const partialAddressSchema = handlePartialAddressMode(props.billingAddressMode);\n    // Keeps the value of the country set initially by the merchant, before the Address Component mutates it\n    const partialAddressCountry = useRef<string>(partialAddressSchema && props.data?.billingAddress?.country);\n\n    const [storePaymentMethod, setStorePaymentMethod] = useState(false);\n    const [billingAddress, setBillingAddress] = useState<AddressData>(showBillingAddress ? props.data.billingAddress : null);\n    const [showSocialSecurityNumber, setShowSocialSecurityNumber] = useState(false);\n    const [socialSecurityNumber, setSocialSecurityNumber] = useState('');\n    const [installments, setInstallments] = useState<InstallmentsObj>({ value: null });\n\n    // re. Disable arrows for iOS: The name of the element calling for other elements to be disabled\n    // - either a securedField type (like 'encryptedCardNumber') when call is coming from SF\n    // or else the name of an internal, Adyen-web, element (like 'holderName')\n    const [iOSFocusedField, setIOSFocusedField] = useState(null);\n\n    /**\n     * This stores the brand as detected by the internal regEx.\n     * It eventually gets overwritten by the brand as detected by the /binLookup, but will revert back to the regEx detection\n     * if the PAN length drops below the /binLookup digit threshold.\n     * Default value, 'card', indicates no brand detected\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [internallyDetectedBrand, setInternallyDetectedBrand] = useState('card');\n\n    /**\n     * LOCAL VARS\n     */\n    const {\n        handleChangeFor,\n        triggerValidation,\n        data: formData,\n        valid: formValid,\n        errors: formErrors,\n        setSchema,\n        setData: setFormData,\n        setValid: setFormValid,\n        setErrors: setFormErrors\n    } = useForm<CardInputDataState>({\n        schema: [],\n        defaultData: props.data,\n        formatters: cardInputFormatters,\n        rules: cardInputValidationRules\n    });\n\n    const hasInstallments = !!Object.keys(props.installmentOptions).length && props.fundingSource !== 'debit';\n    const showAmountsInInstallments = props.showInstallmentAmounts ?? true;\n\n    const cardCountryCode: string = issuingCountryCode ?? props.countryCode;\n    const isKorea = cardCountryCode === 'kr'; // If issuingCountryCode or the merchant defined countryCode is set to 'kr'\n    const showKCP = props.configuration.koreanAuthenticationRequired && isKorea;\n\n    const showBrazilianSSN: boolean =\n        (showSocialSecurityNumber && props.configuration.socialSecurityNumberMode === 'auto') ||\n        props.configuration.socialSecurityNumberMode === 'show';\n\n    /**\n     * HANDLERS\n     */\n    // Handlers for focus & blur on all fields. Can be renamed to onFieldFocus once the onFocusField is renamed in Field.tsx\n    const onFieldFocusAnalytics = (who: string, e: Event | CardFocusData) => {\n        props.onFocus({ fieldType: who, event: e });\n    };\n    const onFieldBlurAnalytics = (who: string, e: Event | CardFocusData) => {\n        props.onBlur({ fieldType: who, event: e });\n    };\n\n    const onBrand = useCallback((obj: CardBrandData) => {\n        setInternallyDetectedBrand(obj.brand);\n        props.onBrand(obj);\n    }, []);\n\n    // Make SecuredFields aware of the focus & blur handlers\n    const handleFocus = getFocusHandler(setFocusedElement, onFieldFocusAnalytics, onFieldBlurAnalytics);\n\n    const retrieveLayout = (): string[] => {\n        return getLayout({\n            props,\n            showKCP,\n            showBrazilianSSN,\n            ...(props.billingAddressRequired && {\n                countrySpecificSchemas: specifications.getAddressSchemaForCountry(billingAddress?.country),\n                billingAddressRequiredFields: props.billingAddressRequiredFields\n            })\n        });\n    };\n\n    /**\n     * re. Disabling arrow keys in iOS:\n     * Only by disabling all fields in the Card PM except for the active securedField input can we force the iOS soft keyboard arrow keys to disable\n     *\n     * NOTE: only called if ua.__IS_IOS = true && this.config.disableIOSArrowKeys = true (as referenced in CSF)\n     *\n     * @param obj - has fieldType prop saying whether this function is being called in response to an securedFields click ('encryptedCardNumber' etc)\n     * - in which case we should disable all non-SF fields\n     * or,\n     * due to an internal action ('webInternalElement') - in which case we can enable all non-SF fields\n     */\n    const handleTouchstartIOS = useCallback((obj: TouchStartEventObj) => {\n        const elementType = obj.fieldType !== 'webInternalElement' ? obj.fieldType : obj.name;\n        setIOSFocusedField(elementType);\n    }, []);\n\n    const handleAddress = getAddressHandler(setFormData, setFormValid, setFormErrors);\n\n    const doPanAutoJump = getAutoJumpHandler(isAutoJumping, sfp, retrieveLayout());\n\n    const handleSecuredFieldsChange = (sfState: SFPState, eventDetails?: OnChangeEventDetails): void => {\n        /**\n         * Handling auto complete value for holderName (but only if the component is using a holderName field)\n         */\n        if (sfState.autoCompleteName) {\n            if (!props.hasHolderName) return;\n            const holderNameValidationFn = getRuleByNameAndMode('holderName', 'blur');\n            const acHolderName = holderNameValidationFn(sfState.autoCompleteName) ? sfState.autoCompleteName : null;\n            if (acHolderName) {\n                setFormData('holderName', acHolderName);\n                setFormValid('holderName', true); // only if holderName is valid does this fny get called - so we know it's valid and w/o error\n                setFormErrors('holderName', null);\n            }\n            return;\n        }\n\n        /**\n         * Decide if we can shift focus to the expiryDate field.\n         *\n         * We can if... the config prop, autoFocus, is true AND we have a panLength value from binLookup\n         * AND we are responding to a handleOnFieldValid message about the PAN that says it is valid\n         */\n        if (\n            props.autoFocus &&\n            hasPanLengthRef.current > 0 &&\n            eventDetails?.event === 'handleOnFieldValid' &&\n            eventDetails?.fieldType === ENCRYPTED_CARD_NUMBER &&\n            sfState.valid.encryptedCardNumber\n        ) {\n            doPanAutoJump();\n        }\n\n        /**\n         * Process SFP state\n         */\n        setData({ ...data, ...sfState.data });\n        setErrors({ ...errors, ...sfState.errors });\n        setValid({ ...valid, ...sfState.valid });\n\n        setIsSfpValid(sfState.isSfpValid);\n\n        // Values relating to /binLookup response\n        setCvcPolicy(sfState.cvcPolicy);\n        setShowSocialSecurityNumber(sfState.showSocialSecurityNumber);\n        setExpiryDatePolicy(sfState.expiryDatePolicy);\n    };\n\n    // Farm the handlers for binLookup related functionality out to another 'extensions' file\n    const extensions = useMemo(\n        () =>\n            CIExtensions(\n                props,\n                { sfp },\n                {\n                    dualBrandSelectElements,\n                    setDualBrandSelectElements,\n                    setSelectedBrandValue,\n                    issuingCountryCode,\n                    setIssuingCountryCode\n                },\n                hasPanLengthRef\n            ),\n        [dualBrandSelectElements, issuingCountryCode]\n    );\n\n    /**\n     * EXPOSE METHODS expected by Card.tsx\n     */\n    cardInputRef.current.showValidation = () => {\n        // set flag\n        isValidating.current = true;\n\n        /**\n         * Clear errors prior to validating so that the screenreader will read them *all* again, and in the right order\n         * - only using aria-atomic on the error panel will read them in the wrong order\n         */\n        clearSRPanel?.(); // TODO - recheck if this is still true\n\n        // Validate SecuredFields\n        sfp.current.showValidation();\n\n        // Validate holderName & SSN & KCP (taxNumber) but *not* billingAddress\n        triggerValidation(['holderName', 'socialSecurityNumber', 'taxNumber']);\n\n        // Validate Address\n        if (billingAddressRef?.current) billingAddressRef.current.showValidation();\n    };\n\n    cardInputRef.current.processBinLookupResponse = (binLookupResponse: BinLookupResponse, isReset: boolean) => {\n        extensions.processBinLookup(binLookupResponse, isReset);\n    };\n\n    cardInputRef.current.setStatus = setStatus;\n\n    /**\n     * EFFECT HOOKS\n     */\n    useEffect(() => {\n        // componentDidMount - expose more methods expected by Card.tsx\n        cardInputRef.current.setFocusOn = sfp.current.setFocusOn;\n        cardInputRef.current.updateStyles = sfp.current.updateStyles;\n        cardInputRef.current.handleUnsupportedCard = sfp.current.handleUnsupportedCard;\n\n        // componentWillUnmount\n        return () => {\n            sfp.current.destroy();\n        };\n    }, []);\n\n    /**\n     * Handle form schema updates\n     */\n    useEffect(() => {\n        const newSchema = [\n            ...(props.hasHolderName ? ['holderName'] : []),\n            ...(showBrazilianSSN ? ['socialSecurityNumber'] : []),\n            ...(showKCP ? ['taxNumber'] : []),\n            ...(showBillingAddress ? ['billingAddress'] : [])\n        ];\n        setSchema(newSchema);\n    }, [props.hasHolderName, showBrazilianSSN, showKCP]);\n\n    /**\n     * Handle updates from useForm\n     */\n    useEffect(() => {\n        setData({ ...data, holderName: formData.holderName ?? '', taxNumber: formData.taxNumber });\n\n        setSocialSecurityNumber(formData.socialSecurityNumber);\n\n        if (showBillingAddress) setBillingAddress({ ...formData.billingAddress });\n\n        setValid({\n            ...valid,\n            holderName: props.holderNameRequired ? formValid.holderName : true,\n            // Setting value to false if it's falsy keeps in line with existing, expected behaviour\n            // - but there is an argument to allow 'undefined' as a value to indicate the non-presence of the field\n            socialSecurityNumber: formValid.socialSecurityNumber ? formValid.socialSecurityNumber : false,\n            taxNumber: formValid.taxNumber ? formValid.taxNumber : false,\n            billingAddress: formValid.billingAddress ? formValid.billingAddress : false\n        });\n\n        // Check if billingAddress errors object has any properties that aren't null or undefined\n        const addressHasErrors = formErrors.billingAddress\n            ? Object.entries(formErrors.billingAddress).reduce((acc, [, error]) => acc || error != null, false)\n            : false;\n\n        // Errors\n        setErrors({\n            ...errors,\n            holderName: props.holderNameRequired && !!formErrors.holderName ? formErrors.holderName : null,\n            socialSecurityNumber: showBrazilianSSN && !!formErrors.socialSecurityNumber ? formErrors.socialSecurityNumber : null,\n            taxNumber: showKCP && !!formErrors.taxNumber ? formErrors.taxNumber : null,\n            billingAddress: showBillingAddress && addressHasErrors ? formErrors.billingAddress : null\n        });\n    }, [formData, formValid, formErrors]);\n\n    // Use the custom hook to set (or clear) errors in the SRPanel\n    const {\n        sortedErrorList: currentErrorsSortedByLayout,\n        previousSortedErrors,\n        clearSRPanel\n    } = useSRPanelForCardInputErrors({\n        errors,\n        props,\n        isValidating,\n        retrieveLayout,\n        specifications,\n        billingAddress,\n        sfp\n    });\n\n    // Analytics: ValidationErrors\n    if (currentErrorsSortedByLayout) {\n        const newErrors = getArrayDifferences<SortedErrorObject, string>(currentErrorsSortedByLayout, previousSortedErrors, 'field');\n        newErrors?.forEach(errorItem => {\n            const aObj: FieldErrorAnalyticsObject = {\n                fieldType: errorItem.field,\n                errorCode: errorItem.errorCode\n            };\n\n            props.onValidationErrorAnalytics(aObj);\n        });\n    }\n\n    /**\n     * Main 'componentDidUpdate' handler\n     */\n    useEffect(() => {\n        const holderNameValid: boolean = valid.holderName;\n\n        const sfpValid: boolean = isSfpValid;\n        const addressValid: boolean = showBillingAddress ? valid.billingAddress : true;\n\n        const koreanAuthentication: boolean = showKCP ? !!valid.taxNumber && !!valid.encryptedPassword : true;\n\n        const socialSecurityNumberValid: boolean = showBrazilianSSN ? !!valid.socialSecurityNumber : true;\n\n        const isValid: boolean = sfpValid && holderNameValid && addressValid && koreanAuthentication && socialSecurityNumberValid;\n\n        const sfStateErrorsObj = sfp.current.mapErrorsToValidationRuleResult();\n        const mergedErrors = { ...errors, ...sfStateErrorsObj }; // maps sfErrors AND solves race condition problems for sfp from showValidation\n\n        props.onChange({\n            data,\n            valid,\n            errors: mergedErrors,\n            isValid,\n            billingAddress,\n            selectedBrandValue,\n            storePaymentMethod,\n            socialSecurityNumber,\n            installments\n        });\n    }, [data, valid, errors, selectedBrandValue, storePaymentMethod, installments]);\n\n    /**\n     * RENDER\n     */\n    const FieldToRender = props.storedPaymentMethodId ? StoredCardFieldsWrapper : CardFieldsWrapper;\n\n    return (\n        <Fragment>\n            <SecuredFieldsProvider\n                ref={sfp}\n                {...extractPropsForSFP(props)}\n                styles={{ ...props.styles }}\n                koreanAuthenticationRequired={props.configuration.koreanAuthenticationRequired}\n                hasKoreanFields={!!(props.configuration.koreanAuthenticationRequired && props.countryCode === 'kr')}\n                onChange={handleSecuredFieldsChange}\n                onBrand={onBrand}\n                onFocus={handleFocus}\n                type={props.brand}\n                disableIOSArrowKeys={props.disableIOSArrowKeys ? handleTouchstartIOS : null}\n                render={({ setRootNode, setFocusOn }, sfpState) => (\n                    <div\n                        ref={setRootNode}\n                        className={classNames({\n                            'adyen-checkout__card-input': true,\n                            'adyen-checkout-card-input__wrapper': true,\n                            [`adyen-checkout__card-input--${props.fundingSource ?? 'credit'}`]: true,\n                            'adyen-checkout__card-input--loading': status === 'loading'\n                        })}\n                        role={'form'}\n                    >\n                        <FormInstruction />\n\n                        <FieldToRender\n                            // Extract exact props that we need to pass down\n                            {...extractPropsForCardFields(props)}\n                            // Pass on vars created in CardInput:\n                            // Base (shared w. StoredCard)\n                            data={data}\n                            valid={valid}\n                            errors={errors}\n                            handleChangeFor={handleChangeFor}\n                            focusedElement={focusedElement}\n                            setFocusOn={setFocusOn}\n                            sfpState={sfpState}\n                            cvcPolicy={cvcPolicy}\n                            hasInstallments={hasInstallments}\n                            showAmountsInInstallments={showAmountsInInstallments}\n                            handleInstallments={setInstallments}\n                            // For Card\n                            brandsIcons={props.brandsIcons}\n                            formData={formData}\n                            formErrors={formErrors}\n                            formValid={formValid}\n                            expiryDatePolicy={expiryDatePolicy}\n                            dualBrandSelectElements={dualBrandSelectElements}\n                            extensions={extensions}\n                            selectedBrandValue={selectedBrandValue}\n                            // For KCP\n                            showKCP={showKCP}\n                            // For SSN\n                            showBrazilianSSN={showBrazilianSSN}\n                            socialSecurityNumber={socialSecurityNumber}\n                            // For Store details\n                            handleOnStoreDetails={setStorePaymentMethod}\n                            // For Address\n                            setAddressRef={setAddressRef}\n                            billingAddress={billingAddress}\n                            billingAddressValidationRules={partialAddressSchema && getPartialAddressValidationRules(partialAddressCountry.current)}\n                            partialAddressSchema={partialAddressSchema}\n                            handleAddress={handleAddress}\n                            onAddressLookup={props.onAddressLookup}\n                            onAddressSelected={props.onAddressSelected}\n                            addressSearchDebounceMs={props.addressSearchDebounceMs}\n                            //\n                            iOSFocusedField={iOSFocusedField}\n                            //\n                            onFieldFocusAnalytics={onFieldFocusAnalytics}\n                            onFieldBlurAnalytics={onFieldBlurAnalytics}\n                        />\n                    </div>\n                )}\n            />\n            {props.showPayButton &&\n                props.payButton({\n                    status,\n                    variant: props.isPayButtonPrimaryVariant ? 'primary' : 'secondary',\n                    icon: getImage({ imageFolder: 'components/' })(`${PREFIX}lock`)\n                })}\n        </Fragment>\n    );\n};\n\nCardInput.defaultProps = defaultProps;\n\nexport default CardInput;\n","import getProp from './getProp';\nimport { BrowserInfo } from '../types/global-types';\n\n/**\n * Collects available frontend browser info and store it in the properties dictated by the EMVCo spec\n * (3DS_Spec_protocolAndCoreFny_v2-1_Oct2017.pdf)\n *\n * @example\n * ```js\n * const browserInfo = collectBrowserInfo();\n * ```\n *\n * @returns An object containing the retrieved browser properties\n */\nexport default function collectBrowserInfo(): BrowserInfo {\n    const colorDepth = getProp(window, 'screen.colorDepth') || '';\n    const javaEnabled = getProp(window, 'navigator.javaEnabled') ? window.navigator.javaEnabled() : false;\n    const screenHeight = getProp(window, 'screen.height') || ''; // TODO: Shall we set this to null instead?\n    const screenWidth = getProp(window, 'screen.width') || ''; // TODO: Shall we set this to null instead?\n    const userAgent = getProp(window, 'navigator.userAgent') || '';\n\n    const language = getProp(window, 'navigator.language') || 'en';\n    const d = new Date();\n    const timeZoneOffset = d.getTimezoneOffset();\n\n    return {\n        acceptHeader: '*/*',\n        colorDepth,\n        language,\n        javaEnabled,\n        screenHeight,\n        screenWidth,\n        userAgent,\n        timeZoneOffset\n    };\n}\n","import { httpPost } from '../../../../core/Services/http';\nimport { CardBinLookupData, CardBinValueData, CardErrorData } from '../lib/types';\nimport { DEFAULT_CARD_GROUP_TYPES } from '../lib/constants';\nimport { SF_ErrorCodes } from '../../../../core/Errors/constants';\nimport { BinLookupResponse, BinLookupResponseRaw } from '../../../Card/types';\n\nif (process.env.NODE_ENV === 'development') {\n    window.mockBinCount = 0; // Set to 0 to turn off mocking, 1 to turn it on\n}\n\nexport default parent => {\n    let currentRequestId = null;\n\n    return (callbackObj: CardBinValueData) => {\n        // Allow way for merchant to disallow binLookup by specifically setting the prop to false\n        if (parent.props.doBinLookup === false) {\n            if (parent.props.onBinValue) parent.props.onBinValue(callbackObj);\n            return;\n        }\n\n        // Do binLookup when encryptedBin property is present (and only if the merchant is using a clientKey)\n        if (callbackObj.encryptedBin && parent.props.clientKey) {\n            // Store id of request we're about to make\n            currentRequestId = callbackObj.uuid;\n\n            void httpPost(\n                {\n                    loadingContext: parent.props.loadingContext,\n                    path: `v3/bin/binLookup?token=${parent.props.clientKey}`\n                },\n                {\n                    type: parent.props.brand,\n                    supportedBrands: parent.props.brands || DEFAULT_CARD_GROUP_TYPES,\n                    encryptedBin: callbackObj.encryptedBin,\n                    requestId: callbackObj.uuid // Pass id of request\n                }\n            ).then((data: BinLookupResponseRaw) => {\n                // If response is the one we were waiting for...\n                if (data?.requestId === currentRequestId) {\n                    if (process.env.NODE_ENV === 'development') {\n                        // TODO mocking\n                        if (window.mockBinCount >= 1) {\n                            switch (window.mockBinCount) {\n                                case 1:\n                                    console.log('\\n### triggerBinLookUp::mock first response:: ');\n                                    data.brands = [\n                                        {\n                                            brand: 'mc',\n                                            cvcPolicy: 'optional',\n                                            enableLuhnCheck: true,\n                                            // showExpiryDate: true, // deprecated in /binLookup v3\n                                            expiryDatePolicy: 'optional',\n                                            // panLength: 16,\n                                            supported: true\n                                        }\n                                    ];\n                                    // data.issuingCountryCode = 'KR'; // needed to mock korean_local_card\n                                    // increment to alter second response\n                                    window.mockBinCount++;\n\n                                    break;\n                                case 2:\n                                    console.log('\\n### triggerBinLookUp::mock second response:: ');\n                                    // data.brands = null;\n                                    data.brands = [\n                                        {\n                                            brand: 'maestro',\n                                            cvcPolicy: 'required',\n                                            enableLuhnCheck: true,\n                                            showExpiryDate: true,\n                                            supported: true,\n                                            showSocialSecurityNumber: false\n                                            // panLength: 16\n                                        }\n                                    ];\n                                    break;\n                                default:\n                            }\n                        }\n                        // TODO end\n                    }\n\n                    if (data.brands?.length) {\n                        const mappedResponse = data.brands.reduce(\n                            (acc, item) => {\n                                // All brand strings end up in the detectedBrands array\n                                acc.detectedBrands.push(item.brand);\n                                // Also add the paymentMethodVariants (more granular description of the txvariant)\n                                acc.paymentMethodVariants.push(item.paymentMethodVariant);\n\n                                // Add supported brand objects to the supportedBrands array\n                                if (item.supported === true) {\n                                    acc.supportedBrands.push(item);\n                                    return acc;\n                                }\n\n                                return acc;\n                            },\n                            { supportedBrands: [], detectedBrands: [], paymentMethodVariants: [] }\n                        );\n\n                        /**\n                         * supportedBrands = merchant supports this brand(s); we have detected the card number to be of this brand(s); carry on!\n                         */\n                        if (mappedResponse.supportedBrands.length) {\n                            // ...call processBinLookupResponse with, a simplified, response object if it contains at least one supported brand\n                            parent.processBinLookupResponse({\n                                issuingCountryCode: data.issuingCountryCode,\n                                supportedBrands: mappedResponse.supportedBrands,\n                                ...(data.showSocialSecurityNumber ? { showSocialSecurityNumber: data.showSocialSecurityNumber } : {})\n                            } as BinLookupResponse);\n\n                            // Inform merchant of the result\n                            parent.onBinLookup({\n                                type: callbackObj.type,\n                                detectedBrands: mappedResponse.detectedBrands,\n                                // supportedBrands contains the subset of this.props.brands that matches the card number that the shopper has typed\n                                supportedBrands: mappedResponse.supportedBrands.map(item => item.brand),\n                                paymentMethodVariants: mappedResponse.paymentMethodVariants,\n                                supportedBrandsRaw: mappedResponse.supportedBrands, // full supportedBrands data (for customCard comp)\n                                brands: parent.props.brands || DEFAULT_CARD_GROUP_TYPES,\n                                issuingCountryCode: data.issuingCountryCode\n                            } as CardBinLookupData);\n\n                            return;\n                        }\n\n                        /**\n                         * detectedBrands = no brands the merchant supports were found; what we did detect the shopper to be entering was this brand;\n                         * error!\n                         */\n                        if (mappedResponse.detectedBrands.length) {\n                            const errObj: CardErrorData = {\n                                type: 'card',\n                                fieldType: 'encryptedCardNumber',\n                                error: SF_ErrorCodes.ERROR_MSG_UNSUPPORTED_CARD_ENTERED,\n                                detectedBrands: mappedResponse.detectedBrands\n                            };\n                            parent.handleUnsupportedCard(errObj);\n\n                            // Inform merchant of the result\n                            parent.onBinLookup({\n                                type: callbackObj.type,\n                                detectedBrands: mappedResponse.detectedBrands,\n                                supportedBrands: null,\n                                paymentMethodVariants: mappedResponse.paymentMethodVariants,\n                                brands: parent.props.brands || DEFAULT_CARD_GROUP_TYPES\n                            } as CardBinLookupData);\n\n                            return;\n                        }\n                    } else {\n                        /**\n                         *  BIN not in DB (a failed lookup will just contain a requestId)\n                         */\n                        parent.onBinLookup({\n                            type: callbackObj.type,\n                            detectedBrands: null,\n                            supportedBrands: null,\n                            paymentMethodVariants: null,\n                            brands: parent.props.brands || DEFAULT_CARD_GROUP_TYPES\n                        } as CardBinLookupData);\n\n                        // Reset the UI and let the native, regex branding happen (for the generic card)\n                        // For a single-branded card we need to pass a boolean to prompt resetting the brand logo to the 'base' type\n                        parent.processBinLookupResponse({}, true);\n                    }\n                } else {\n                    if (!data?.requestId) {\n                        // Some other kind of error on the backend\n                        parent.props.onError(data || { errorType: 'binLookup', message: 'unknownError' });\n                    }\n                    // Else - response with wrong requestId\n                }\n            });\n        } else if (currentRequestId) {\n            /**\n             * If onBinValue callback is called AND we have been doing binLookup BUT passed object doesn't have an encryptedBin property\n             * - then THE NUMBER OF DIGITS IN NUMBER FIELD HAS DROPPED BELOW THRESHOLD for BIN lookup - so reset the UI\n             */\n            parent.processBinLookupResponse(null, true);\n\n            currentRequestId = null; // Ignore any pending responses\n\n            // Reset any errors\n            const errObj: CardErrorData = {\n                type: 'card',\n                fieldType: 'encryptedCardNumber',\n                error: ''\n            };\n            parent.handleUnsupportedCard(errObj);\n\n            // CustomCard needs this to reset the UI\n            parent.onBinLookup({\n                isReset: true\n            } as CardBinLookupData);\n        }\n\n        if (parent.props.onBinValue) parent.props.onBinValue(callbackObj);\n    };\n};\n","import { ClickToPayScheme } from '../../types';\n\nexport type MastercardError = {\n    message: string;\n    reason: string;\n};\n\nexport type VisaError = {\n    error: {\n        message: string;\n        reason: string;\n    };\n};\n\nclass SrciError extends Error {\n    public reason: string;\n    public message: string;\n    public source: string;\n    public scheme: ClickToPayScheme;\n    public errorFromCardSchemeSdk: unknown;\n\n    constructor(schemeError: VisaError | MastercardError, source: string, scheme: ClickToPayScheme) {\n        super();\n\n        const message = 'error' in schemeError ? schemeError?.error?.message : schemeError?.message;\n        const reason = 'error' in schemeError ? schemeError?.error?.reason : schemeError?.reason;\n\n        this.message = message;\n        this.reason = reason;\n        this.source = source;\n        this.scheme = scheme;\n        this.errorFromCardSchemeSdk = schemeError;\n    }\n\n    toString() {\n        return `Reason: ${this.reason} / Source: ${this.source} / Scheme: ${this.scheme} / Message: ${this.message}`;\n    }\n}\n\nexport default SrciError;\n","import AdyenCheckoutError from '../core/Errors/AdyenCheckoutError';\n\ninterface IScript {\n    load(): Promise<any>;\n    remove(): HTMLScriptElement;\n}\n\n/**\n * Creates a script element from a certain source in the passed node selector.\n * If no selector is passed it will add the script element in the body.\n *\n * @example\n * ```\n * const script = new Script('https://example.com/script.js', '.container');\n * script.load().then(doSomething);\n *\n * // To clean up just call the remove method\n * script.remove();\n * ```\n */\nclass Script implements IScript {\n    private readonly src: string;\n    private readonly node: string;\n    private readonly attributes: Partial<HTMLScriptElement>;\n    private readonly dataAttributes: Record<string, string | undefined>;\n\n    private isScriptLoadCalled = false;\n    private script: HTMLScriptElement;\n\n    constructor(src, node = 'body', attributes: Partial<HTMLScriptElement> = {}, dataAttributes: Record<string, string | undefined> = {}) {\n        this.src = src;\n        this.node = node;\n        this.attributes = attributes;\n        this.dataAttributes = dataAttributes;\n    }\n\n    public load = (): Promise<void> => {\n        if (this.isScriptLoadCalled) {\n            if (process.env.NODE_ENV === 'development') console.warn(`[Warning] script.load called more than once for ${this.src}`);\n            return;\n        }\n\n        return new Promise((resolve, reject) => {\n            const handleOnLoad = () => {\n                this.script.setAttribute('data-script-loaded', 'true');\n                resolve();\n            };\n\n            const handleOnError = (errorEvent: ErrorEvent) => {\n                this.remove();\n                reject(\n                    new AdyenCheckoutError('SCRIPT_ERROR', `Unable to load script ${this.src}. Message: ${errorEvent.message}`, {\n                        cause: errorEvent.error\n                    })\n                );\n            };\n\n            this.isScriptLoadCalled = true;\n\n            const scriptContainer: Element = document.querySelector(this.node);\n            this.script = scriptContainer.querySelector(`script[src=\"${this.src}\"]`);\n\n            // Script element exists in the browser and is already loaded\n            if (this.script && this.script.getAttribute('data-script-loaded')) {\n                resolve();\n                return;\n            } else if (this.script) {\n                // Script element exists in the browser, but it is not loaded yet\n                // Use-case:  Multiple PayPal standalone components being loaded in different parts of the screen.\n                this.script.addEventListener('load', handleOnLoad);\n                this.script.addEventListener('error', handleOnError);\n                return;\n            }\n\n            // Script element doesn't exist in the browser, so we create it and append to the DOM tree\n            this.script = document.createElement('script');\n            Object.assign(this.script, this.attributes);\n            Object.assign(this.script.dataset, this.dataAttributes);\n\n            this.script.src = this.src;\n            this.script.async = true;\n\n            this.script.addEventListener('load', handleOnLoad);\n            this.script.addEventListener('error', handleOnError);\n\n            scriptContainer.appendChild(this.script);\n        });\n    };\n\n    public remove = (): HTMLScriptElement => {\n        return this.script.parentNode && this.script.parentNode.removeChild(this.script);\n    };\n}\n\nexport default Script;\n","import {\n    CustomSdkConfiguration,\n    SrcCheckoutParams,\n    SrciCheckoutResponse,\n    SrciCompleteIdentityValidationResponse,\n    SrcIdentityLookupParams,\n    SrciIdentityLookupResponse,\n    SrciInitiateIdentityValidationResponse,\n    SrciIsRecognizedResponse,\n    SrcInitParams,\n    SrcProfile\n} from './types';\nimport SrciError, { MastercardError, VisaError } from './SrciError';\nimport { ClickToPayScheme } from '../../types';\nimport Script from '../../../../../utils/Script';\n\nexport interface ISrcInitiator {\n    schemeName: ClickToPayScheme;\n    // Loading 3rd party library\n    loadSdkScript(): Promise<void>;\n    removeSdkScript(): void;\n    // SRCi specification methods\n    init(params: SrcInitParams, srciTransactionId: string): Promise<void>;\n    isRecognized(): Promise<SrciIsRecognizedResponse>;\n    identityLookup(params: SrcIdentityLookupParams): Promise<SrciIdentityLookupResponse>;\n    initiateIdentityValidation(): Promise<SrciInitiateIdentityValidationResponse>;\n    completeIdentityValidation(validationData: string): Promise<SrciCompleteIdentityValidationResponse>;\n    getSrcProfile(idTokens: string[]): Promise<SrcProfile>;\n    checkout(params: SrcCheckoutParams): Promise<SrciCheckoutResponse>;\n    unbindAppInstance(): Promise<void>;\n}\n\nexport default abstract class AbstractSrcInitiator implements ISrcInitiator {\n    public schemeSdk: any;\n    public abstract readonly schemeName: ClickToPayScheme;\n\n    protected readonly customSdkConfiguration: CustomSdkConfiguration;\n\n    private readonly sdkUrl: string;\n    private scriptElement: Script | null = null;\n\n    protected constructor(sdkUrl: string, customSdkConfiguration: CustomSdkConfiguration) {\n        if (!sdkUrl) throw Error('AbstractSrcInitiator: Invalid SDK URL');\n\n        this.sdkUrl = sdkUrl;\n        this.customSdkConfiguration = customSdkConfiguration;\n    }\n\n    public async loadSdkScript(): Promise<void> {\n        if (!this.isSdkIsAvailableOnWindow()) {\n            this.scriptElement = new Script(this.sdkUrl);\n            await this.scriptElement.load();\n        }\n        this.assignSdkReference();\n    }\n\n    public removeSdkScript(): void {\n        this.scriptElement.remove();\n    }\n\n    /**\n     * Verifies if SDK is already loaded on the window object.\n     * Example: Merchant can preload the SDK to speed up the loading time\n     */\n    protected abstract isSdkIsAvailableOnWindow(): boolean;\n\n    /**\n     * Assign SchemeSDK object to 'schemeSdk' property.\n     * Each scheme creates its own object reference on 'window' using different naming,\n     * therefore this method should be implemented by the subclass to assign the property\n     * accordingly\n     */\n    protected abstract assignSdkReference(): void;\n\n    /**\n     * Initializes the app with common state. The init method must be called before any other methods.\n     */\n    public abstract init(params: SrcInitParams, srciTransactionId: string): Promise<void>;\n\n    /**\n     * This method performs checkout using the specified card. If successful, the\n     * response contains summary checkout information.\n     */\n    public async checkout(params: SrcCheckoutParams): Promise<SrciCheckoutResponse> {\n        try {\n            const checkoutResponse = await this.schemeSdk.checkout(params);\n            return checkoutResponse;\n        } catch (error) {\n            const srciError = new SrciError(error as VisaError | MastercardError, 'checkout', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    /**\n     * This method disassociates the Consumer application / Consumer Device from the Consumer’s SRC Profile.\n     */\n    public async unbindAppInstance(): Promise<void> {\n        try {\n            await this.schemeSdk.unbindAppInstance();\n        } catch (error) {\n            const srciError = new SrciError(error as VisaError | MastercardError, 'unbindAppInstance', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    /**\n     * Determines whether the consumer is recognized, e.g. by detecting the presence of a local cookie in\n     * the browser environment.\n     */\n    public async isRecognized(): Promise<SrciIsRecognizedResponse> {\n        try {\n            const isRecognizedResponse = await this.schemeSdk.isRecognized();\n            return isRecognizedResponse;\n        } catch (error) {\n            const srciError = new SrciError(error as VisaError | MastercardError, 'isRecognized', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    /**\n     * Sends a validation code to the specified consumer.\n     * This method sends a one-time password (OTP) to the consumer to start validation\n     */\n    public async initiateIdentityValidation(): Promise<SrciInitiateIdentityValidationResponse> {\n        try {\n            const identityValidationResponse = await this.schemeSdk.initiateIdentityValidation();\n            return identityValidationResponse;\n        } catch (error) {\n            const srciError = new SrciError(error as VisaError | MastercardError, 'initiateIdentityValidation', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    /**\n     * Obtains the masked card and other account profile data associated with the userId.\n     */\n    public async getSrcProfile(idTokens: string[]): Promise<SrcProfile> {\n        try {\n            const getSrcProfileResponse = await this.schemeSdk.getSrcProfile({ idTokens });\n            return getSrcProfileResponse;\n        } catch (error) {\n            const srciError = new SrciError(error as VisaError | MastercardError, 'getSrcProfile', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    /**\n     * Obtains the user account associated with the consumer’s identity (an email address or phone\n     * number).\n     */\n    public abstract identityLookup(params: SrcIdentityLookupParams): Promise<SrciIdentityLookupResponse>;\n\n    /**\n     * This method completes the identity validation by receiving the one-time password (OTP) sent to the\n     * consumer to start validation.\n     */\n    public abstract completeIdentityValidation(otp: string): Promise<SrciCompleteIdentityValidationResponse>;\n}\n","import { getVisaSetttings, VISA_SDK_PROD, VISA_SDK_TEST } from './config';\nimport AbstractSrcInitiator from './AbstractSrcInitiator';\nimport SrciError, { MastercardError, VisaError } from './SrciError';\nimport type {\n    CustomSdkConfiguration,\n    SrciCompleteIdentityValidationResponse,\n    SrcIdentityLookupParams,\n    SrciIdentityLookupResponse,\n    SrcInitParams\n} from './types';\n\nconst IdentityTypeMap = {\n    email: 'EMAIL',\n    telephoneNumber: 'MOBILE_NUMBER'\n};\n\nclass VisaSdk extends AbstractSrcInitiator {\n    public readonly schemeName = 'visa';\n\n    constructor(environment: string, customSdkConfig: CustomSdkConfiguration) {\n        super(environment.toLowerCase().includes('live') ? VISA_SDK_PROD : VISA_SDK_TEST, customSdkConfig);\n    }\n\n    protected isSdkIsAvailableOnWindow(): boolean {\n        // @ts-ignore vAdapters is created by the VISA sdk\n        if (window.vAdapters?.VisaSRCI) return true;\n        return false;\n    }\n\n    protected assignSdkReference(): void {\n        // @ts-ignore vAdapters is created by the VISA sdk\n        this.schemeSdk = new window.vAdapters.VisaSRCI();\n    }\n\n    public async init(params: SrcInitParams, srciTransactionId: string): Promise<void> {\n        try {\n            const sdkProps = {\n                ...params,\n                ...getVisaSetttings(this.customSdkConfiguration),\n                srciTransactionId\n            };\n\n            await this.schemeSdk.init(sdkProps);\n        } catch (err) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'init', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    public async identityLookup({ identityValue, type }: SrcIdentityLookupParams): Promise<SrciIdentityLookupResponse> {\n        try {\n            const consumerIdentity = {\n                identityValue,\n                type: IdentityTypeMap[type]\n            };\n\n            const response = await this.schemeSdk.identityLookup(consumerIdentity);\n            return response;\n        } catch (err) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'identityLookup', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    public async completeIdentityValidation(otp: string): Promise<SrciCompleteIdentityValidationResponse> {\n        try {\n            const response = await this.schemeSdk.completeIdentityValidation(otp);\n            return response;\n        } catch (err: unknown) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'completeIdentityValidation', this.schemeName);\n            throw srciError;\n        }\n    }\n}\n\nexport default VisaSdk;\n","import { getMastercardSettings, MC_SDK_PROD, MC_SDK_TEST } from './config';\nimport AbstractSrcInitiator from './AbstractSrcInitiator';\nimport SrciError, { MastercardError, VisaError } from './SrciError';\nimport {\n    CustomSdkConfiguration,\n    SrciCompleteIdentityValidationResponse,\n    SrcIdentityLookupParams,\n    SrciIdentityLookupResponse,\n    SrcInitParams\n} from './types';\n\nconst IdentityTypeMap = {\n    email: 'EMAIL_ADDRESS',\n    telephoneNumber: 'MOBILE_PHONE_NUMBER'\n};\n\nclass MastercardSdk extends AbstractSrcInitiator {\n    public readonly schemeName = 'mc';\n\n    constructor(environment: string, customSdkConfig: CustomSdkConfiguration) {\n        super(environment.toLowerCase().includes('live') ? MC_SDK_PROD : MC_SDK_TEST, customSdkConfig);\n    }\n\n    protected isSdkIsAvailableOnWindow(): boolean {\n        // @ts-ignore SRCSDK_MASTERCARD is created by the MC sdk\n        if (window.SRCSDK_MASTERCARD) return true;\n        return false;\n    }\n\n    protected assignSdkReference(): void {\n        // @ts-ignore SRCSDK_MASTERCARD is created by the MC sdk\n        this.schemeSdk = window.SRCSDK_MASTERCARD;\n    }\n\n    public async init(params: SrcInitParams, srciTransactionId: string): Promise<void> {\n        try {\n            const sdkProps = {\n                ...params,\n                ...getMastercardSettings(this.customSdkConfiguration),\n                srciTransactionId\n            };\n            await this.schemeSdk.init(sdkProps);\n        } catch (err) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'init', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    public async identityLookup({ identityValue, type }: SrcIdentityLookupParams): Promise<SrciIdentityLookupResponse> {\n        try {\n            const consumerIdentity = {\n                identityValue,\n                identityType: IdentityTypeMap[type]\n            };\n\n            const response = await this.schemeSdk.identityLookup({ consumerIdentity });\n            return response;\n        } catch (err) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'identityLookup', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    public async completeIdentityValidation(otp: string): Promise<SrciCompleteIdentityValidationResponse> {\n        try {\n            const response = await this.schemeSdk.completeIdentityValidation({ validationData: otp });\n            return response;\n        } catch (err) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'completeIdentityValidation', this.schemeName);\n            throw srciError;\n        }\n    }\n}\n\nexport default MastercardSdk;\n","/**\n * Type guard used on Promise.allSettled to define is Promise is fulfilled\n */\nconst isFulfilled = <T>(p: PromiseSettledResult<T>): p is PromiseFulfilledResult<T> => p.status === 'fulfilled';\n\n/**\n * Type guard used on Promise.allSettled to define is Promise is rejected\n */\nconst isRejected = <T>(p: PromiseSettledResult<T>): p is PromiseRejectedResult => p.status === 'rejected';\n\nexport { isFulfilled, isRejected };\n","import { ISrcInitiator } from './AbstractSrcInitiator';\nimport VisaSdk from './VisaSdk';\nimport MastercardSdk from './MastercardSdk';\nimport { CustomSdkConfiguration } from './types';\nimport AdyenCheckoutError from '../../../../../core/Errors/AdyenCheckoutError';\nimport { isFulfilled, isRejected } from '../../../../../utils/promise-util';\n\nconst sdkMap: Record<string, typeof VisaSdk | typeof MastercardSdk | null> = {\n    visa: VisaSdk,\n    mc: MastercardSdk,\n    default: null\n};\n\nconst getSchemeSdk = (scheme: string, environment: string, customConfig: CustomSdkConfiguration): ISrcInitiator | null => {\n    const SchemeSdkClass = sdkMap[scheme] || sdkMap.default;\n    return SchemeSdkClass ? new SchemeSdkClass(environment, customConfig) : null;\n};\n\nexport interface ISrcSdkLoader {\n    load(environment: string): Promise<ISrcInitiator[]>;\n    schemes: string[];\n}\n\nclass SrcSdkLoader implements ISrcSdkLoader {\n    public readonly schemes: string[];\n    private readonly customSdkConfiguration: CustomSdkConfiguration;\n\n    constructor(schemes: string[], { dpaLocale = 'en_US', dpaPresentationName = '' }) {\n        this.schemes = schemes;\n        this.customSdkConfiguration = { dpaLocale, dpaPresentationName };\n    }\n\n    public async load(environment: string): Promise<ISrcInitiator[]> {\n        if (!this.schemes || this.schemes.length === 0) {\n            throw new AdyenCheckoutError('ERROR', 'ClickToPay -> SrcSdkLoader: There are no schemes set to be loaded');\n        }\n\n        return new Promise((resolve, reject) => {\n            const sdks: ISrcInitiator[] = this.schemes.map(scheme => getSchemeSdk(scheme, environment, this.customSdkConfiguration));\n            const loadScriptPromises = sdks.map(sdk => sdk.loadSdkScript());\n\n            void Promise.allSettled(loadScriptPromises).then(loadScriptResponses => {\n                if (loadScriptResponses.every(isRejected)) {\n                    reject(\n                        new AdyenCheckoutError('ERROR', `ClickToPay -> SrcSdkLoader # Unable to load network schemes: ${this.schemes.toString()}`)\n                    );\n                }\n\n                const sdksLoaded = sdks.filter((sdk, index) => isFulfilled(loadScriptResponses[index]));\n\n                resolve(sdksLoaded);\n            });\n        });\n    }\n}\n\nexport default SrcSdkLoader;\n","import { CustomSdkConfiguration } from './types';\n\nconst VISA_SDK_TEST = 'https://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/src-i-adapter/visa-sdk.js?v2';\nconst VISA_SDK_PROD = 'https://assets.secure.checkout.visa.com/checkout-widget/resources/js/src-i-adapter/visa-sdk.js?v2';\n\nconst MC_SDK_TEST = 'https://sandbox.src.mastercard.com/sdk/srcsdk.mastercard.js';\nconst MC_SDK_PROD = 'https://src.mastercard.com/sdk/srcsdk.mastercard.js';\n\nconst getVisaSetttings = ({ dpaLocale = 'en_US', dpaPresentationName = '' }: CustomSdkConfiguration) => ({\n    dpaTransactionOptions: {\n        dpaLocale: dpaLocale,\n        payloadTypeIndicator: 'NON_PAYMENT',\n        customInputData: {\n            checkoutOrchestrator: 'merchant'\n        }\n    },\n    dpaData: {\n        dpaPresentationName\n    }\n});\n\nconst getMastercardSettings = ({ dpaLocale = 'en_US', dpaPresentationName = '' }: CustomSdkConfiguration) => ({\n    dpaTransactionOptions: {\n        dpaLocale: dpaLocale,\n        paymentOptions: {\n            dynamicDataType: 'CARD_APPLICATION_CRYPTOGRAM_SHORT_FORM'\n        },\n        consumerNameRequested: true,\n        customInputData: {\n            'com.mastercard.dcfExperience': 'PAYMENT_SETTINGS'\n        },\n        confirmPayment: false\n    },\n    dpaData: {\n        dpaPresentationName\n    }\n});\n\nexport { VISA_SDK_TEST, VISA_SDK_PROD, MC_SDK_TEST, MC_SDK_PROD, getVisaSetttings, getMastercardSettings };\n","const SchemeNames = {\n    mc: 'Mastercard',\n    visa: 'Visa'\n};\n\nexport { SchemeNames };\n","import { DigitalCardStatus, SrcCard } from '../services/sdks/types';\nimport { SchemeNames } from '../services/sdks/utils';\nimport { ClickToPayScheme } from '../types';\n\nclass ShopperCard {\n    public dateOfCardLastUsed?: string;\n    public dateOfCardCreated: string;\n    public panLastFour: string;\n    public srcDigitalCardId: string;\n    public scheme: ClickToPayScheme;\n    public artUri: string;\n    public srcCorrelationId: string;\n    public tokenId?: string;\n    public isExpired: boolean;\n\n    private readonly panExpirationMonth: string;\n    private readonly panExpirationYear: string;\n    private readonly descriptorName?: string;\n    private readonly status?: DigitalCardStatus = null;\n\n    constructor(maskedCard: SrcCard, scheme: ClickToPayScheme, srcCorrelationId: string) {\n        this.dateOfCardLastUsed = maskedCard.dateOfCardLastUsed;\n        this.dateOfCardCreated = maskedCard.dateOfCardCreated;\n        this.panLastFour = maskedCard.panLastFour;\n        this.srcDigitalCardId = maskedCard.srcDigitalCardId;\n        this.descriptorName = maskedCard.digitalCardData.descriptorName;\n        this.tokenId = maskedCard.tokenId;\n        this.scheme = scheme;\n        this.artUri = maskedCard.digitalCardData.artUri;\n        this.srcCorrelationId = srcCorrelationId;\n        this.panExpirationMonth = maskedCard.panExpirationMonth;\n        this.panExpirationYear = maskedCard.panExpirationYear;\n        this.status = maskedCard.digitalCardData.status;\n\n        this.isExpired = this.confirmCardIsExpired();\n    }\n\n    get title() {\n        return this.scheme === 'visa' ? SchemeNames[this.scheme] : this.descriptorName || SchemeNames[this.scheme];\n    }\n\n    get isDcfPopupEmbedded(): boolean {\n        return this.scheme === 'mc';\n    }\n\n    private confirmCardIsExpired(): boolean {\n        if (this.status !== 'ACTIVE') return true;\n        if (!this.panExpirationYear && !this.panExpirationMonth) return false;\n\n        const [currentMonth, currentYear] = [new Date().getMonth() + 1, new Date().getFullYear()];\n        if (Number(this.panExpirationYear) > currentYear) return false;\n        if (Number(this.panExpirationYear) === currentYear && Number(this.panExpirationMonth) >= currentMonth) return false;\n\n        return true;\n    }\n}\n\nexport default ShopperCard;\n","import { CardTypes, ClickToPayCheckoutPayload, SrcProfileWithScheme } from './types';\nimport { SrciCheckoutResponse } from './sdks/types';\nimport ShopperCard from '../models/ShopperCard';\nimport SrciError from './sdks/SrciError';\n\nexport const CTP_IFRAME_NAME = 'ctpIframe';\n\n/**\n * Creates the payload for the /payments call\n */\nfunction createCheckoutPayloadBasedOnScheme(\n    card: ShopperCard,\n    srciCheckoutResponse: SrciCheckoutResponse,\n    environment: string\n): ClickToPayCheckoutPayload {\n    const { scheme, tokenId, srcDigitalCardId, srcCorrelationId } = card;\n\n    switch (scheme) {\n        case 'visa':\n            /**\n             * For test environment, we are using hardcoded tokenId\n             */\n            return tokenId\n                ? {\n                      srcScheme: scheme,\n                      srcCorrelationId,\n                      srcTokenReference: environment.toLowerCase().includes('live') ? tokenId : '987654321'\n                  }\n                : { srcScheme: scheme, srcCheckoutPayload: srciCheckoutResponse.checkoutResponse, srcCorrelationId };\n        case 'mc':\n        default:\n            return { srcScheme: scheme, srcDigitalCardId, srcCorrelationId };\n    }\n}\n\nfunction createShopperMaskedCardsData(memo: ShopperCard[], srcProfile: SrcProfileWithScheme): ShopperCard[] {\n    const { profiles, srcCorrelationId } = srcProfile;\n\n    const cards: ShopperCard[] = profiles.reduce((memo: ShopperCard[], profile) => {\n        const profileCards: ShopperCard[] = profile.maskedCards.map(maskedCard => new ShopperCard(maskedCard, srcProfile.scheme, srcCorrelationId));\n        return [...memo, ...profileCards];\n    }, []);\n\n    return [...memo, ...cards];\n}\n\nfunction sortCardByLastTimeUsed(card1: ShopperCard, card2: ShopperCard) {\n    return new Date(card2.dateOfCardLastUsed).getTime() - new Date(card1.dateOfCardLastUsed).getTime();\n}\n\nfunction sortCardByLastTimeCreated(card1: ShopperCard, card2: ShopperCard) {\n    return new Date(card2.dateOfCardCreated).getTime() - new Date(card1.dateOfCardCreated).getTime();\n}\n\nfunction splitAvailableAndExpiredCards(memo: CardTypes, card: ShopperCard): CardTypes {\n    if (card.isExpired) memo.expiredCards.push(card);\n    else memo.availableCards.push(card);\n    return memo;\n}\n\nfunction splitUnusedAndUsedCards(memo: { unusedCards: ShopperCard[]; usedCards: ShopperCard[] }, card: ShopperCard) {\n    if (card.dateOfCardLastUsed) memo.usedCards.push(card);\n    else memo.unusedCards.push(card);\n    return memo;\n}\n\n/**\n * Creates the Shopper card list. The available cards are placed before the expired cards\n */\nfunction createShopperCardsList(srcProfiles: SrcProfileWithScheme[]): ShopperCard[] {\n    const cards: ShopperCard[] = srcProfiles.reduce(createShopperMaskedCardsData, []);\n    const { availableCards, expiredCards } = cards.reduce(splitAvailableAndExpiredCards, { availableCards: [], expiredCards: [] });\n    const { unusedCards, usedCards } = availableCards.reduce(splitUnusedAndUsedCards, { unusedCards: [], usedCards: [] });\n\n    return [...usedCards.sort(sortCardByLastTimeUsed), ...unusedCards.sort(sortCardByLastTimeCreated), ...expiredCards.sort(sortCardByLastTimeUsed)];\n}\n\nfunction isSrciError(error: unknown): error is SrciError {\n    if ((error as SrciError).reason) return true;\n    return false;\n}\n\nexport { createShopperCardsList, createCheckoutPayloadBasedOnScheme, isSrciError };\n","interface TimeoutErrorProps {\n    source: string;\n    scheme: string;\n    isTimeoutTriggeredBySchemeSdk: boolean;\n}\n\nclass TimeoutError extends Error {\n    public scheme: string;\n    public source: string;\n    public isTimeoutTriggeredBySchemeSdk: boolean;\n\n    /** Currently populated only by Visa SDK if available */\n    public correlationId?: string;\n\n    constructor(options: TimeoutErrorProps) {\n        super(`ClickToPayService - Timeout during ${options.source}() of the scheme '${options.scheme}'`);\n\n        this.name = 'TimeoutError';\n        this.source = options.source;\n        this.scheme = options.scheme;\n        this.isTimeoutTriggeredBySchemeSdk = options.isTimeoutTriggeredBySchemeSdk;\n    }\n\n    public setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n\n    public toString() {\n        return this.message;\n    }\n}\n\nexport default TimeoutError;\n","import TimeoutError from '../errors/TimeoutError';\n\nfunction executeWithTimeout<T>(asyncFn: () => Promise<T>, timer: number, error: TimeoutError): Promise<T> {\n    let timeout = null;\n    const wait = (seconds: number) =>\n        new Promise<T>((_, reject) => {\n            timeout = setTimeout(() => reject(error), seconds);\n        });\n    return Promise.race<T>([asyncFn(), wait(timer)])\n        .then(value => {\n            clearTimeout(timeout);\n            return value;\n        })\n        .catch(error => {\n            clearTimeout(timeout);\n            throw error;\n        });\n}\nexport { executeWithTimeout };\n","import { ISrcInitiator } from './sdks/AbstractSrcInitiator';\nimport {\n    CallbackStateSubscriber,\n    IClickToPayService,\n    IdentityLookupParams,\n    ClickToPayCheckoutPayload,\n    SrcProfileWithScheme,\n    SchemesConfiguration,\n    IdentityValidationData\n} from './types';\nimport { ISrcSdkLoader } from './sdks/SrcSdkLoader';\nimport { createCheckoutPayloadBasedOnScheme, createShopperCardsList, CTP_IFRAME_NAME } from './utils';\nimport { SrciIdentityLookupResponse, SrciIsRecognizedResponse, SrcProfile } from './sdks/types';\nimport SrciError from './sdks/SrciError';\nimport { SchemeNames } from './sdks/utils';\nimport ShopperCard from '../models/ShopperCard';\nimport uuidv4 from '../../../../utils/uuid';\nimport AdyenCheckoutError from '../../../../core/Errors/AdyenCheckoutError';\nimport { isFulfilled, isRejected } from '../../../../utils/promise-util';\nimport TimeoutError from '../errors/TimeoutError';\nimport { executeWithTimeout } from './execute-with-timeout';\n\nexport enum CtpState {\n    Idle = 'Idle',\n    Loading = 'Loading',\n    ShopperIdentified = 'ShopperIdentified',\n    OneTimePassword = 'OneTimePassword',\n    Ready = 'Ready',\n    Login = 'Login',\n    NotAvailable = 'NotAvailable'\n}\n\nclass ClickToPayService implements IClickToPayService {\n    private readonly sdkLoader: ISrcSdkLoader;\n    private readonly schemesConfig: SchemesConfiguration;\n    private readonly shopperIdentity?: IdentityLookupParams;\n    private readonly environment: string;\n\n    private readonly onTimeout?: (error: TimeoutError) => void;\n\n    /**\n     * Mandatory unique ID passed to all the networks (Click to Pay systems), used to track user journey\n     */\n    private readonly srciTransactionId: string = uuidv4();\n\n    private sdks: ISrcInitiator[];\n    private validationSchemeSdk: ISrcInitiator = null;\n    private stateSubscriber: CallbackStateSubscriber;\n\n    public state: CtpState = CtpState.Idle;\n    public shopperCards: ShopperCard[] = null;\n    public identityValidationData: IdentityValidationData = null;\n\n    /**\n     * Indicates if the shopper opted for saving cookies during the transaction\n     */\n    public storeCookies = false;\n\n    constructor(\n        schemesConfig: SchemesConfiguration,\n        sdkLoader: ISrcSdkLoader,\n        environment: string,\n        shopperIdentity?: IdentityLookupParams,\n        onTimeout?: (error: TimeoutError) => void\n    ) {\n        this.sdkLoader = sdkLoader;\n        this.schemesConfig = schemesConfig;\n        this.shopperIdentity = shopperIdentity;\n        this.environment = environment;\n        this.onTimeout = onTimeout;\n    }\n\n    public get shopperAccountFound(): boolean {\n        return [CtpState.Ready, CtpState.ShopperIdentified].includes(this.state);\n    }\n\n    public get schemes(): string[] {\n        return this.sdkLoader.schemes;\n    }\n\n    public updateStoreCookiesConsent(shouldStore: boolean) {\n        this.storeCookies = shouldStore;\n    }\n\n    public async initialize(): Promise<void> {\n        this.setState(CtpState.Loading);\n\n        try {\n            this.sdks = await this.sdkLoader.load(this.environment);\n            await this.initiateSdks();\n\n            const { recognized = false, idTokens = null } = await this.verifyIfShopperIsRecognized();\n\n            if (recognized) {\n                await this.getShopperProfile(idTokens);\n                this.setState(CtpState.Ready);\n                return;\n            }\n\n            if (!this.shopperIdentity) {\n                this.setState(CtpState.NotAvailable);\n                return;\n            }\n\n            const { isEnrolled } = await this.verifyIfShopperIsEnrolled(this.shopperIdentity);\n            if (isEnrolled) {\n                this.setState(CtpState.ShopperIdentified);\n                return;\n            }\n\n            this.setState(CtpState.NotAvailable);\n        } catch (error) {\n            if ((error instanceof SrciError && error?.reason === 'REQUEST_TIMEOUT') || error instanceof TimeoutError) {\n                this.handleTimeout(error);\n            } else if (error instanceof SrciError) {\n                console.warn(`Error at ClickToPayService # init: ${error.toString()}`);\n            } else {\n                console.warn(error);\n            }\n\n            this.setState(CtpState.NotAvailable);\n        }\n    }\n\n    /**\n     * Set the callback for notifying when the CtPState changes\n     */\n    public subscribeOnStateChange(callback: CallbackStateSubscriber): void {\n        this.stateSubscriber = callback;\n    }\n\n    /**\n     * Initiates Consumer Identity validation with one Click to Pay System.\n     * The Click to Pay System sends a one-time-password (OTP) to the registered email address or mobile number.\n     **/\n    public async startIdentityValidation(): Promise<void> {\n        if (!this.validationSchemeSdk) {\n            throw Error('startIdentityValidation: No ValidationSDK set for the validation process');\n        }\n        try {\n            const { maskedValidationChannel } = await this.validationSchemeSdk.initiateIdentityValidation();\n\n            this.identityValidationData = {\n                maskedShopperContact: maskedValidationChannel.replace(/\\*/g, '•'),\n                selectedNetwork: SchemeNames[this.validationSchemeSdk.schemeName]\n            };\n\n            this.setState(CtpState.OneTimePassword);\n        } catch (error: unknown) {\n            // If there is an error when 'startIdentityValidation' (Ex: account is blocked), we reset the scheme chosen to perform this step\n            this.validationSchemeSdk = null;\n            throw error;\n        }\n    }\n\n    /**\n     * Completes the  validation of the Shopper by evaluating the supplied OTP.\n     */\n    public async finishIdentityValidation(otpCode: string): Promise<void> {\n        if (!this.validationSchemeSdk) {\n            throw Error('finishIdentityValidation: No ValidationSDK set for the validation process');\n        }\n\n        const validationToken = await this.validationSchemeSdk.completeIdentityValidation(otpCode);\n        await this.getShopperProfile([validationToken.idToken]);\n        this.setState(CtpState.Ready);\n        this.validationSchemeSdk = null;\n    }\n\n    /**\n     * This method performs checkout using the selected card\n     */\n    public async checkout(card: ShopperCard): Promise<ClickToPayCheckoutPayload> {\n        if (!card) {\n            throw Error('ClickToPayService # checkout: Missing card data');\n        }\n\n        const checkoutSdk = this.sdks.find(sdk => sdk.schemeName === card.scheme);\n\n        const checkoutResponse = await checkoutSdk.checkout({\n            srcDigitalCardId: card.srcDigitalCardId,\n            srcCorrelationId: card.srcCorrelationId,\n            ...(card.isDcfPopupEmbedded && { windowRef: window.frames[CTP_IFRAME_NAME] }),\n            ...(this.storeCookies && { complianceSettings: { complianceResources: [{ complianceType: 'REMEMBER_ME', uri: '' }] } })\n        });\n\n        if (checkoutResponse.dcfActionCode !== 'COMPLETE') {\n            throw new AdyenCheckoutError(\n                'ERROR',\n                `Checkout through Scheme DCF did not complete. DCF Action code received: ${checkoutResponse.dcfActionCode}`\n            );\n        }\n\n        return createCheckoutPayloadBasedOnScheme(card, checkoutResponse, this.environment);\n    }\n\n    /**\n     * Call the 'unbindAppInstance()' method of each SRC SDK in order to remove the shopper cookies.\n     * Besides, it deletes all information stored about the shopper.\n     */\n    public async logout(): Promise<void> {\n        if (!this.sdks) {\n            throw new AdyenCheckoutError('ERROR', 'ClickToPayService is not initialized');\n        }\n\n        try {\n            const logoutPromises = this.sdks.map(sdk => sdk.unbindAppInstance());\n            await Promise.all(logoutPromises);\n        } catch (error) {\n            if (error instanceof SrciError) console.warn(`Error at ClickToPayService # logout: ${error.toString()}`);\n            else console.warn(error);\n        }\n\n        this.shopperCards = null;\n        this.identityValidationData = null;\n        this.validationSchemeSdk = null;\n\n        this.setState(CtpState.Login);\n    }\n\n    /**\n     * Call the 'identityLookup()' method of each SRC SDK in order to verify if the shopper has an account.\n     *\n     * Based on the responses from the Click to Pay Systems, we should do the validation process using the SDK that\n     * that responds faster with 'consumerPresent=true'\n     */\n    public verifyIfShopperIsEnrolled(shopperIdentity: IdentityLookupParams): Promise<{ isEnrolled: boolean }> {\n        const { shopperEmail } = shopperIdentity;\n\n        return new Promise((resolve, reject) => {\n            const lookupPromises = this.sdks.map(sdk => {\n                const identityLookupPromise = executeWithTimeout<SrciIdentityLookupResponse>(\n                    () => sdk.identityLookup({ identityValue: shopperEmail, type: 'email' }),\n                    5000,\n                    new TimeoutError({\n                        source: 'identityLookup',\n                        scheme: sdk.schemeName,\n                        isTimeoutTriggeredBySchemeSdk: false\n                    })\n                );\n\n                return identityLookupPromise\n                    .then(response => {\n                        if (response.consumerPresent && !this.validationSchemeSdk) {\n                            this.setSdkForPerformingShopperIdentityValidation(sdk);\n                            resolve({ isEnrolled: true });\n                        }\n                    })\n                    .catch(error => {\n                        reject(error);\n                    });\n            });\n\n            void Promise.allSettled(lookupPromises).then(() => {\n                resolve({ isEnrolled: false });\n            });\n        });\n    }\n\n    private setState(state: CtpState): void {\n        this.state = state;\n        this.stateSubscriber?.(this.state);\n    }\n\n    private setSdkForPerformingShopperIdentityValidation(sdk: ISrcInitiator) {\n        this.validationSchemeSdk = sdk;\n    }\n\n    private handleTimeout(error: SrciError | TimeoutError) {\n        // If the timeout error was thrown directly by the scheme SDK, we convert it to TimeoutError\n        // If the timeout error was thrown by our internal timeout mechanism, we don't do anything\n        const timeoutError =\n            error instanceof SrciError\n                ? new TimeoutError({ source: error.source, scheme: error.scheme, isTimeoutTriggeredBySchemeSdk: true })\n                : error;\n\n        if (timeoutError.scheme === 'visa') {\n            timeoutError.setCorrelationId(window.VISA_SDK?.correlationId);\n\n            // Visa srciDpaId must be passed when there is no correlation ID available\n            if (window.VISA_SDK?.correlationId) window.VISA_SDK?.buildClientProfile?.();\n            else window.VISA_SDK?.buildClientProfile?.(this.schemesConfig.visa.srciDpaId);\n        }\n        this.onTimeout?.(timeoutError);\n    }\n\n    /**\n     * Based on the given 'idToken', this method goes through each SRCi SDK and fetches the shopper\n     * profile with his cards.\n     */\n    private async getShopperProfile(idTokens: string[]): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const srcProfilesPromises = this.sdks.map(sdk => sdk.getSrcProfile(idTokens));\n\n            void Promise.allSettled(srcProfilesPromises).then(srcProfilesResponses => {\n                if (srcProfilesResponses.every(isRejected)) {\n                    reject(srcProfilesResponses[0].reason);\n                }\n\n                const createProfileWithScheme = (promiseResult: PromiseSettledResult<SrcProfile>, index) =>\n                    isFulfilled(promiseResult) && { ...promiseResult.value, scheme: this.sdks[index].schemeName };\n\n                const profilesWithScheme: SrcProfileWithScheme[] = srcProfilesResponses.map(createProfileWithScheme).filter(profile => !!profile);\n\n                this.shopperCards = createShopperCardsList(profilesWithScheme);\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * Calls the 'isRecognized()' method of each SRC SDK in order to verify if the shopper is\n     * recognized on the device. The shopper is recognized if he/she has the Cookies stored\n     * on their browser\n     */\n    private verifyIfShopperIsRecognized(): Promise<SrciIsRecognizedResponse> {\n        return new Promise((resolve, reject) => {\n            const promises = this.sdks.map(sdk => {\n                const isRecognizedPromise = executeWithTimeout<SrciIsRecognizedResponse>(\n                    () => sdk.isRecognized(),\n                    5000,\n                    new TimeoutError({\n                        source: 'isRecognized',\n                        scheme: sdk.schemeName,\n                        isTimeoutTriggeredBySchemeSdk: false\n                    })\n                );\n\n                return isRecognizedPromise\n                    .then(response => {\n                        if (response.recognized) resolve(response);\n                    })\n                    .catch(error => {\n                        reject(error);\n                    });\n            });\n\n            // If the 'resolve' didn't happen until this point, then shopper is not recognized\n            void Promise.allSettled(promises).then(() => {\n                resolve({ recognized: false });\n            });\n        });\n    }\n\n    private initiateSdks(): Promise<void[]> {\n        const initPromises = this.sdks.map(sdk => {\n            const cfg = this.schemesConfig[sdk.schemeName];\n\n            return executeWithTimeout<void>(\n                () => sdk.init(cfg, this.srciTransactionId),\n                5000,\n                new TimeoutError({\n                    source: 'init',\n                    scheme: sdk.schemeName,\n                    isTimeoutTriggeredBySchemeSdk: false\n                })\n            );\n        });\n\n        return Promise.all(initPromises);\n    }\n}\n\nexport default ClickToPayService;\n","import SrcSdkLoader from './sdks/SrcSdkLoader';\nimport ClickToPayService from './ClickToPayService';\nimport { IClickToPayService, IdentityLookupParams } from './types';\nimport { SrcInitParams } from './sdks/types';\nimport { CardBackendConfiguration } from '../../../Card/types';\nimport { ClickToPayProps, ClickToPayScheme } from '../types';\n\n/**\n * Creates the Click to Pay service in case the required configuration is provided\n */\nexport default function createClickToPayService(\n    configuration: CardBackendConfiguration,\n    clickToPayConfiguration: ClickToPayProps | undefined,\n    environment: string\n): IClickToPayService | null {\n    const schemesConfig = createSchemesInitConfiguration(configuration);\n\n    if (!schemesConfig) {\n        return null;\n    }\n\n    const shopperIdentity = createShopperIdentityObject(clickToPayConfiguration?.shopperEmail, clickToPayConfiguration?.telephoneNumber);\n\n    const schemeNames = Object.keys(schemesConfig);\n    const srcSdkLoader = new SrcSdkLoader(schemeNames, {\n        dpaLocale: clickToPayConfiguration?.locale,\n        dpaPresentationName: clickToPayConfiguration?.merchantDisplayName\n    });\n    return new ClickToPayService(schemesConfig, srcSdkLoader, environment, shopperIdentity, clickToPayConfiguration?.onTimeout);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst createShopperIdentityObject = (shopperEmail: string, telephoneNumber: string): IdentityLookupParams | null => {\n    const identityLookup = {\n        ...(shopperEmail && { shopperEmail })\n        // ...(telephoneNumber && { telephoneNumber }) telephoneNumber not supported yet\n    };\n\n    return Object.keys(identityLookup).length > 0 ? identityLookup : null;\n};\n\n/**\n * Parses 'configuration' object that comes from the Card payment method config, and try to create the Click to Pay\n * initialization object in case the values are provided.\n */\nconst createSchemesInitConfiguration = (configuration: CardBackendConfiguration): Record<ClickToPayScheme, SrcInitParams> => {\n    if (!configuration) {\n        return null;\n    }\n\n    const { visaSrciDpaId, visaSrcInitiatorId, mcDpaId, mcSrcClientId } = configuration;\n\n    const schemesConfig: Record<ClickToPayScheme, SrcInitParams> = {\n        ...(mcDpaId && mcSrcClientId && { mc: { srciDpaId: mcDpaId, srcInitiatorId: mcSrcClientId } }),\n        ...(visaSrciDpaId &&\n            visaSrcInitiatorId && {\n                visa: {\n                    srciDpaId: visaSrciDpaId,\n                    srcInitiatorId: visaSrcInitiatorId\n                }\n            })\n    };\n    return Object.keys(schemesConfig).length === 0 ? null : schemesConfig;\n};\n","import { createContext } from 'preact';\nimport { CtpState } from '../services/ClickToPayService';\nimport { ClickToPayCheckoutPayload, IClickToPayService } from '../services/types';\nimport ShopperCard from '../models/ShopperCard';\nimport { ClickToPayProps } from '../types';\nimport { PaymentAmount } from '../../../../types/global-types';\nimport AdyenCheckoutError from '../../../../core/Errors/AdyenCheckoutError';\nimport { UIElementStatus } from '../../UIElement/types';\n\nexport interface IClickToPayContext\n    extends Pick<IClickToPayService, 'checkout' | 'startIdentityValidation' | 'finishIdentityValidation' | 'verifyIfShopperIsEnrolled'> {\n    isStandaloneComponent: boolean;\n    isCtpPrimaryPaymentMethod: boolean;\n    isStoringCookies: boolean;\n    setIsCtpPrimaryPaymentMethod(isPrimary: boolean): void;\n    logoutShopper(): Promise<void>;\n    updateStoreCookiesConsent(shouldStore: boolean): void;\n    ctpState: CtpState;\n    cards: ShopperCard[];\n    schemes: string[];\n    otpMaskedContact: string;\n    otpNetwork: string;\n    amount: PaymentAmount;\n    configuration: ClickToPayProps;\n    status: UIElementStatus;\n    onSubmit(payload: ClickToPayCheckoutPayload): void;\n    onSetStatus(status: UIElementStatus): void;\n    onError(error: AdyenCheckoutError): void;\n    onReady(): void;\n}\n\nconst ClickToPayContext = createContext<IClickToPayContext>({\n    status: null,\n    onSubmit: null,\n    onSetStatus: null,\n    onError: null,\n    onReady: null,\n    amount: null,\n    configuration: null,\n    isStandaloneComponent: null,\n    isCtpPrimaryPaymentMethod: null,\n    isStoringCookies: false,\n    setIsCtpPrimaryPaymentMethod: null,\n    logoutShopper: null,\n    updateStoreCookiesConsent: null,\n    ctpState: null,\n    cards: [],\n    schemes: [],\n    otpMaskedContact: null,\n    otpNetwork: null,\n    checkout: null,\n    verifyIfShopperIsEnrolled: null,\n    startIdentityValidation: null,\n    finishIdentityValidation: null\n});\n\nexport { ClickToPayContext };\n","import { h } from 'preact';\nimport { CtpState } from '../services/ClickToPayService';\nimport { ClickToPayContext } from './ClickToPayContext';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { ClickToPayCheckoutPayload, IClickToPayService, IdentityLookupParams } from '../services/types';\nimport ShopperCard from '../models/ShopperCard';\nimport { ClickToPayProps } from '../types';\nimport AdyenCheckoutError from '../../../../core/Errors/AdyenCheckoutError';\nimport { PaymentAmount } from '../../../../types/global-types';\nimport { UIElementStatus } from '../../UIElement/types';\n\ntype ClickToPayProviderRef = {\n    setStatus?(status: UIElementStatus): void;\n};\n\nexport type ClickToPayProviderProps = {\n    isStandaloneComponent: boolean;\n    clickToPayService: IClickToPayService | null;\n    configuration: ClickToPayProps;\n    amount: PaymentAmount;\n    children: any;\n    setClickToPayRef(ref): void;\n    onSubmit(payload: ClickToPayCheckoutPayload): void;\n    onSetStatus(status: UIElementStatus): void;\n    onError(error: AdyenCheckoutError): void;\n};\n\nconst ClickToPayProvider = ({\n    isStandaloneComponent = false,\n    clickToPayService,\n    amount,\n    configuration,\n    children,\n    setClickToPayRef,\n    onSubmit,\n    onSetStatus,\n    onError\n}: ClickToPayProviderProps) => {\n    const [ctpService] = useState<IClickToPayService | null>(clickToPayService);\n    const [ctpState, setCtpState] = useState<CtpState>(clickToPayService?.state || CtpState.NotAvailable);\n    const [isCtpPrimaryPaymentMethod, setIsCtpPrimaryPaymentMethod] = useState<boolean>(true);\n    const [status, setStatus] = useState<UIElementStatus>('ready');\n    const clickToPayRef = useRef<ClickToPayProviderRef>({});\n    const isOnReadyInvoked = useRef<boolean>(false);\n\n    useEffect(() => {\n        setClickToPayRef(clickToPayRef.current);\n        clickToPayRef.current.setStatus = setStatus;\n    }, []);\n\n    useEffect(() => {\n        ctpService?.subscribeOnStateChange(status => setCtpState(status));\n    }, [ctpService]);\n\n    const onReady = useCallback(() => {\n        if (isOnReadyInvoked.current) {\n            return;\n        }\n        configuration.onReady?.();\n        isOnReadyInvoked.current = true;\n    }, [configuration?.onReady]);\n\n    const finishIdentityValidation = useCallback(\n        async (otpValue: string) => {\n            await ctpService?.finishIdentityValidation(otpValue);\n        },\n        [ctpService]\n    );\n\n    const startIdentityValidation = useCallback(async () => {\n        const data = await ctpService?.startIdentityValidation();\n        return data;\n    }, [ctpService]);\n\n    const checkout = useCallback(\n        async (card: ShopperCard) => {\n            return await ctpService?.checkout(card);\n        },\n        [ctpService]\n    );\n\n    const verifyIfShopperIsEnrolled = useCallback(\n        async (shopperIdentity: IdentityLookupParams) => {\n            return await ctpService?.verifyIfShopperIsEnrolled(shopperIdentity);\n        },\n        [ctpService]\n    );\n\n    const logoutShopper = useCallback(async () => {\n        await ctpService?.logout();\n    }, [ctpService]);\n\n    const updateStoreCookiesConsent = useCallback(\n        (shouldStore: boolean) => {\n            ctpService.updateStoreCookiesConsent(shouldStore);\n        },\n        [ctpService]\n    );\n\n    return (\n        <ClickToPayContext.Provider\n            value={{\n                status,\n                onSubmit,\n                onError,\n                onSetStatus,\n                amount,\n                configuration,\n                isStoringCookies: ctpService?.storeCookies,\n                isStandaloneComponent,\n                isCtpPrimaryPaymentMethod,\n                setIsCtpPrimaryPaymentMethod,\n                ctpState,\n                verifyIfShopperIsEnrolled,\n                cards: ctpService?.shopperCards,\n                schemes: ctpService?.schemes,\n                otpMaskedContact: ctpService?.identityValidationData?.maskedShopperContact,\n                otpNetwork: ctpService?.identityValidationData?.selectedNetwork,\n                checkout,\n                logoutShopper,\n                startIdentityValidation,\n                finishIdentityValidation,\n                updateStoreCookiesConsent,\n                onReady\n            }}\n        >\n            {children}\n        </ClickToPayContext.Provider>\n    );\n};\n\nexport default ClickToPayProvider;\n","import { useContext } from 'preact/hooks';\nimport { ClickToPayContext, IClickToPayContext } from './ClickToPayContext';\n\nfunction useClickToPayContext(): IClickToPayContext {\n    return useContext(ClickToPayContext);\n}\n\nexport default useClickToPayContext;\n","import { Component, h } from 'preact';\nimport classNames from 'classnames';\nimport Spinner from '../Spinner';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport './Button.scss';\nimport { ButtonProps, ButtonState } from './types';\n\nclass Button extends Component<ButtonProps, ButtonState> {\n    public static defaultProps = {\n        status: 'default',\n        variant: 'primary',\n        disabled: false,\n        label: '',\n        inline: false,\n        target: '_self',\n        onClick: () => {}\n    };\n\n    public onClick = e => {\n        e.preventDefault();\n\n        if (!this.props.disabled) {\n            this.props.onClick(e, { complete: this.complete });\n        }\n    };\n\n    public complete = (delay = 1000) => {\n        this.setState({ completed: true });\n        setTimeout(() => {\n            this.setState({ completed: false });\n        }, delay);\n    };\n\n    public onKeyDown = (event: KeyboardEvent) => {\n        this.props.onKeyDown?.(event);\n    };\n\n    render({ classNameModifiers = [], disabled, href, icon, inline, label, status, variant }, { completed }) {\n        const { i18n } = useCoreContext();\n\n        const buttonIcon = icon ? <img className=\"adyen-checkout__button__icon\" src={icon} alt=\"\" aria-hidden=\"true\" /> : '';\n\n        const modifiers = [\n            ...classNameModifiers,\n            ...(variant !== 'primary' ? [variant] : []),\n            ...(inline ? ['inline'] : []),\n            ...(completed ? ['completed'] : []),\n            ...(status === 'loading' || status === 'redirect' ? ['loading'] : [])\n        ];\n\n        const buttonClasses = classNames(['adyen-checkout__button', ...modifiers.map(m => `adyen-checkout__button--${m}`)]);\n\n        const buttonStates = {\n            loading: (\n                <span className=\"adyen-checkout__button__content\">\n                    <Spinner size=\"medium\" inline />\n                    <span className={'adyen-checkout__button__text--sr-only'}>{i18n.get('loading')}</span>\n                </span>\n            ),\n            redirect: (\n                <span className=\"adyen-checkout__button__content\">\n                    <Spinner size=\"medium\" inline />\n                    {i18n.get('payButton.redirecting')}\n                </span>\n            ),\n            default: (\n                <span className=\"adyen-checkout__button__content\">\n                    {buttonIcon}\n                    <span className=\"adyen-checkout__button__text\">{label}</span>\n                </span>\n            )\n        };\n\n        const buttonText = buttonStates[status] || buttonStates.default;\n\n        if (href) {\n            return (\n                <a className={buttonClasses} href={href} disabled={disabled} target={this.props.target} rel={this.props.rel}>\n                    {buttonText}\n                </a>\n            );\n        }\n\n        return (\n            <button className={buttonClasses} type=\"button\" disabled={disabled} onClick={this.onClick} onKeyDown={this.onKeyDown}>\n                {buttonText}\n                {status !== 'loading' && status !== 'redirect' && this.props.children}\n            </button>\n        );\n    }\n}\n\nexport default Button;\n","import { ValidatorRules } from '../../../../../../utils/Validator/types';\n\nexport const otpValidationRules: ValidatorRules = {\n    otp: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: '',\n        modes: ['blur']\n    },\n    default: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: '',\n        modes: ['blur']\n    }\n};\n","import { h } from 'preact';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport useClickToPayContext from '../../../context/useClickToPayContext';\nimport classnames from 'classnames';\nimport { useCoreContext } from '../../../../../../core/Context/CoreProvider';\nimport Icon from '../../../../Icon';\nimport { isSrciError } from '../../../services/utils';\nimport { PREFIX } from '../../../../Icon/constants';\nimport Button from '../../../../Button';\n\nconst CONFIRMATION_SHOWING_TIME = 2000;\n\ninterface CtPResendOtpLinkProps {\n    onError(errorCode: string): void;\n    onResendCode(): void;\n    disabled: boolean;\n}\n\nconst CtPResendOtpLink = ({ onError, onResendCode, disabled }: CtPResendOtpLinkProps): h.JSX.Element => {\n    const [counter, setCounter] = useState<number>(null);\n    const [showConfirmation, setShowConfirmation] = useState<boolean>(false);\n    const { i18n } = useCoreContext();\n    const { startIdentityValidation } = useClickToPayContext();\n\n    useEffect(() => {\n        let timeout = null;\n        if (counter > 0) {\n            timeout = setTimeout(() => setCounter(counter - 1), 1000);\n        }\n        return () => clearTimeout(timeout);\n    }, [counter]);\n\n    useEffect(() => {\n        let timeout = null;\n\n        if (showConfirmation) {\n            timeout = setTimeout(() => {\n                setShowConfirmation(false);\n                setCounter(60);\n            }, CONFIRMATION_SHOWING_TIME);\n        }\n        return () => clearTimeout(timeout);\n    }, [showConfirmation]);\n\n    const handleResendCodeClick = useCallback(\n        async event => {\n            event.preventDefault();\n\n            try {\n                onResendCode();\n                setShowConfirmation(true);\n                await startIdentityValidation();\n            } catch (error: unknown) {\n                setCounter(0);\n                setShowConfirmation(false);\n\n                if (!isSrciError(error)) {\n                    console.error(error);\n                    return;\n                }\n\n                onError(error.reason);\n            }\n        },\n        [startIdentityValidation, onError, onResendCode]\n    );\n\n    if (showConfirmation) {\n        return (\n            <div className=\"adyen-checkout-ctp__otp-resend-code--confirmation\">\n                {i18n.get('ctp.otp.codeResent')}\n                <Icon type={`${PREFIX}checkmark`} height={14} width={14} />\n            </div>\n        );\n    }\n\n    if (counter > 0) {\n        return (\n            <div className=\"adyen-checkout-ctp__otp-resend-code--disabled\">\n                {i18n.get('ctp.otp.resendCode')} -{' '}\n                <span className=\"adyen-checkout-ctp__otp-resend-code-counter\"> {counter > 0 && `${counter}s`} </span>\n            </div>\n        );\n    }\n\n    return (\n        <Button\n            classNameModifiers={[classnames('otp-resend-code', { 'otp-resend-code--disabled': disabled })]}\n            onClick={handleResendCodeClick}\n            variant=\"link\"\n            inline={true}\n            disabled={disabled}\n        >\n            {i18n.get('ctp.otp.resendCode')}\n        </Button>\n    );\n};\n\nexport default CtPResendOtpLink;\n","import { h } from 'preact';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { otpValidationRules } from './validate';\nimport CtPResendOtpLink from './CtPResendOtpLink';\nimport useClickToPayContext from '../../../context/useClickToPayContext';\nimport { useCoreContext } from '../../../../../../core/Context/CoreProvider';\nimport useForm from '../../../../../../utils/useForm';\nimport Field from '../../../../FormFields/Field';\nimport './CtPOneTimePasswordInput.scss';\nimport InputText from '../../../../FormFields/InputText';\n\ntype OnChangeProps = { data: CtPOneTimePasswordInputDataState; valid; errors; isValid: boolean };\n\ninterface CtPOneTimePasswordInputProps {\n    hideResendOtpButton: boolean;\n    disabled: boolean;\n    isValidatingOtp: boolean;\n    errorMessage?: string;\n    onSetInputHandlers(handlers: CtPOneTimePasswordInputHandlers): void;\n    onPressEnter(): Promise<void>;\n    onChange({ data, valid, errors, isValid }: OnChangeProps): void;\n    onResendCode(): void;\n}\n\ninterface CtPOneTimePasswordInputDataState {\n    otp?: string;\n}\n\nexport type CtPOneTimePasswordInputHandlers = {\n    validateInput(): void;\n};\n\nconst CtPOneTimePasswordInput = (props: CtPOneTimePasswordInputProps): h.JSX.Element => {\n    const { i18n } = useCoreContext();\n    const {\n        configuration: { disableOtpAutoFocus }\n    } = useClickToPayContext();\n\n    const formSchema = ['otp'];\n    const [resendOtpError, setResendOtpError] = useState<string>(null);\n    const { handleChangeFor, data, triggerValidation, valid, errors, isValid, setData } = useForm<CtPOneTimePasswordInputDataState>({\n        schema: formSchema,\n        rules: otpValidationRules\n    });\n    const otpInputHandlersRef = useRef<CtPOneTimePasswordInputHandlers>({ validateInput: null });\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [isOtpFielDirty, setIsOtpFieldDirty] = useState<boolean>(false);\n\n    const validateInput = useCallback(() => {\n        setIsOtpFieldDirty(true);\n        triggerValidation();\n    }, [triggerValidation]);\n\n    /**\n     * If shopper changes the value of the OTP fields, input becomes dirty\n     */\n    useEffect(() => {\n        if (data.otp) setIsOtpFieldDirty(true);\n    }, [data.otp]);\n\n    useEffect(() => {\n        if (!disableOtpAutoFocus && inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [inputRef.current, disableOtpAutoFocus]);\n\n    useEffect(() => {\n        otpInputHandlersRef.current.validateInput = validateInput;\n        props.onSetInputHandlers(otpInputHandlersRef.current);\n    }, [validateInput, props.onSetInputHandlers]);\n\n    const handleOnResendOtp = useCallback(() => {\n        setData('otp', '');\n        setResendOtpError(null);\n        if (!disableOtpAutoFocus) {\n            inputRef.current.focus();\n        }\n        props.onResendCode();\n    }, [props.onResendCode, inputRef.current, disableOtpAutoFocus]);\n\n    const handleOnResendOtpError = useCallback(\n        (errorCode: string) => {\n            const message = i18n.get(`ctp.errors.${errorCode}`);\n            if (message) setResendOtpError(message);\n        },\n        [i18n]\n    );\n\n    const handleOnKeyPress = useCallback(\n        (event: h.JSX.TargetedKeyboardEvent<HTMLInputElement>) => {\n            if (event.key === 'Enter') {\n                void props.onPressEnter();\n            }\n        },\n        [props.onPressEnter]\n    );\n\n    useEffect(() => {\n        props.onChange({ data, valid, errors, isValid });\n    }, [data, valid, errors]);\n\n    return (\n        <div className={'adyen-checkout-ctp__otp-field-wrapper'}>\n            <Field\n                name=\"oneTimePassword\"\n                label={i18n.get('ctp.otp.fieldLabel')}\n                errorMessage={isOtpFielDirty ? resendOtpError || props.errorMessage || !!errors.otp : null}\n                classNameModifiers={['otp']}\n            >\n                <InputText\n                    name={'otp'}\n                    autocorrect={'off'}\n                    spellcheck={false}\n                    value={data.otp}\n                    disabled={props.disabled}\n                    onInput={handleChangeFor('otp', 'input')}\n                    onBlur={handleChangeFor('otp', 'blur')}\n                    onKeyPress={handleOnKeyPress}\n                    setRef={(ref: HTMLInputElement) => {\n                        inputRef.current = ref;\n                    }}\n                />\n            </Field>\n            <div className={'adyen-checkout-ctp__otp-resend-code-wrapper'}>\n                <CtPResendOtpLink disabled={props.isValidatingOtp} onError={handleOnResendOtpError} onResendCode={handleOnResendOtp} />\n            </div>\n        </div>\n    );\n};\n\nexport default CtPOneTimePasswordInput;\n","import { h } from 'preact';\nimport classnames from 'classnames';\nimport Img from '../../../Img';\nimport { SchemeNames } from '../../services/sdks/utils';\nimport useClickToPayContext from '../../context/useClickToPayContext';\nimport useImage from '../../../../../core/Context/useImage';\nimport './CtPBrand.scss';\n\ntype CtPBrandProps = {\n    classNameModifiers?: string[];\n};\n\nconst CtPBrand = ({ classNameModifiers = [] }: CtPBrandProps) => {\n    const getImage = useImage();\n    const { schemes } = useClickToPayContext();\n\n    const ctpImageUrl = getImage()('ctp');\n    const pipeImageUrl = getImage({ imageFolder: 'components/' })('pipe');\n\n    return (\n        <div\n            className={classnames(\n                'adyen_checkout-ctp__brand-wrapper',\n                classNameModifiers.map(m => `adyen_checkout-ctp__brand-wrapper--${m}`)\n            )}\n        >\n            <Img className=\"adyen_checkout-ctp__brand-logo\" src={ctpImageUrl} alt={'Logo of Click to Pay'} />\n            <Img className=\"adyen_checkout-ctp__brand-pipe\" src={pipeImageUrl} alt=\"\" />\n\n            {schemes.map(brand => (\n                <Img\n                    key={brand}\n                    className={classnames('adyen_checkout-ctp__brand-scheme', `adyen_checkout-ctp__brand-scheme-${brand}`)}\n                    src={getImage()(brand)}\n                    alt={`Logo of ${SchemeNames[brand]}`}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport { CtPBrand };\n","import { useTrapFocus } from './useTrapFocus';\nimport { useCallback, useEffect } from 'preact/hooks';\n\ntype UseModalProps = {\n    modalElement?: HTMLElement;\n    isOpen: boolean;\n    isDismissible: boolean;\n    focusFirst: HTMLElement;\n    focusAfterClose: HTMLElement;\n    onClose(): void;\n};\n\ntype UseModalHook = {\n    /**\n     * Function that focus on the 'focusAfterClose' element, and then closes the modal\n     */\n    closeModal(): void;\n    handleClickOutside(event: MouseEvent): void;\n};\n\nconst KEYCODE_ESC = 27;\n\nconst useModal = ({ modalElement, isOpen, isDismissible, focusFirst, focusAfterClose, onClose }: UseModalProps): UseModalHook => {\n    useTrapFocus({ rootElement: modalElement, shouldTrap: isOpen, focusFirst });\n\n    const closeModal = useCallback(() => {\n        focusAfterClose.focus();\n        onClose();\n    }, [onClose, focusAfterClose]);\n\n    const handleClickOutside = useCallback(\n        (event: MouseEvent) => {\n            if (isDismissible && event.target instanceof HTMLElement && !modalElement.contains(event.target)) {\n                closeModal();\n            }\n        },\n        [closeModal, isDismissible, modalElement]\n    );\n\n    useEffect(() => {\n        if (!isOpen || !modalElement) return;\n        const closeOnPressingEscape = (event: KeyboardEvent): void => {\n            const isEscapePressed = event.key === 'Escape' || event.key === 'Esc' || event.keyCode === KEYCODE_ESC;\n            if (isEscapePressed) {\n                closeModal();\n            }\n        };\n\n        modalElement.addEventListener('keydown', closeOnPressingEscape);\n        return () => modalElement.removeEventListener('keydown', closeOnPressingEscape);\n    }, [isOpen, modalElement, closeModal]);\n\n    return { closeModal, handleClickOutside };\n};\n\nexport { useModal };\n","import { useEffect, useState } from 'preact/hooks';\n\ntype UseTrapFocusProps = {\n    rootElement?: HTMLElement;\n    /**\n     * Element that must be focused when the hook is executed. If no element is passed, the first focusable child\n     * element of the root element will be focused\n     */\n    focusFirst?: HTMLElement;\n    /**\n     * Can be used to conditionally disable the trap mechanism\n     */\n    shouldTrap?: boolean;\n};\n\nconst KEYCODE_TAB = 9;\nconst FOCUSABLE_ELEMENTS =\n    'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])';\n\n/**\n * Hook used to trap the focus within the specific element and its child nodes.\n */\nconst useTrapFocus = ({ rootElement, focusFirst, shouldTrap = true }: UseTrapFocusProps): void => {\n    const [firstFocusableEl, setFirstFocusableEl] = useState<HTMLElement>(focusFirst);\n\n    useEffect(() => {\n        if (!shouldTrap) return;\n        firstFocusableEl?.focus();\n    }, [firstFocusableEl, shouldTrap]);\n\n    useEffect(() => {\n        if (!shouldTrap) return;\n\n        const focusableEl: NodeListOf<HTMLElement> = rootElement.querySelectorAll<HTMLElement>(FOCUSABLE_ELEMENTS);\n\n        const firstFocusableEl: HTMLElement = focusableEl[0];\n        const lastFocusableEl: HTMLElement = focusableEl[focusableEl.length - 1];\n\n        setFirstFocusableEl(focusFirst || firstFocusableEl);\n\n        const trapFocus = (event: KeyboardEvent): void => {\n            const isTabPressed = event.key === 'Tab' || event.keyCode === KEYCODE_TAB;\n\n            if (!isTabPressed) return;\n\n            if (event.shiftKey && document.activeElement === firstFocusableEl) {\n                lastFocusableEl.focus();\n                event.preventDefault();\n                return;\n            }\n            if (document.activeElement === lastFocusableEl) {\n                firstFocusableEl.focus();\n                event.preventDefault();\n                return;\n            }\n        };\n\n        rootElement.addEventListener('keydown', trapFocus);\n\n        return () => {\n            setFirstFocusableEl(null);\n            rootElement.removeEventListener('keydown', trapFocus);\n        };\n    }, [rootElement, focusFirst, shouldTrap]);\n};\n\nexport { useTrapFocus };\n","import { ComponentChildren, h } from 'preact';\nimport { useRef } from 'preact/hooks';\nimport cx from 'classnames';\nimport './Modal.scss';\nimport { useModal } from './useModal';\n\ntype ModalRenderFnProps = {\n    /**\n     * Function used to properly trigger the Modal close mechanism. It takes into account the element that the Modal needs\n     * to set focus when it is dismissed.\n     */\n    onCloseModal(): void;\n};\n\ntype ModalProps = {\n    children: ({ onCloseModal }: ModalRenderFnProps) => ComponentChildren;\n    classNameModifiers?: string[];\n    onClose(): void;\n    isOpen: boolean;\n    isDismissible?: boolean;\n    labelledBy: string;\n    describedBy: string;\n    /**\n     * Reference to the element that should be focused when the modal is opened\n     */\n    focusFirst: HTMLElement;\n    /**\n     * Reference to the element that should be focused when the modal is closed\n     */\n    focusAfterClose: HTMLElement;\n};\n\nconst Modal = ({\n    children,\n    classNameModifiers = [],\n    isOpen,\n    onClose,\n    isDismissible = true,\n    labelledBy,\n    describedBy,\n    focusFirst,\n    focusAfterClose,\n    ...props\n}: ModalProps) => {\n    const modalContainerRef = useRef<HTMLDivElement>();\n    const { closeModal, handleClickOutside } = useModal({\n        modalElement: modalContainerRef.current,\n        isOpen,\n        isDismissible,\n        focusFirst,\n        focusAfterClose,\n        onClose\n    });\n\n    return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n        <div\n            className={cx(\n                'adyen-checkout__modal-wrapper',\n                classNameModifiers.map(m => `adyen-checkout__modal-wrapper--${m}`),\n                { 'adyen-checkout__modal-wrapper--open': isOpen }\n            )}\n            role=\"dialog\"\n            aria-labelledby={labelledBy}\n            aria-describedby={describedBy}\n            aria-modal=\"true\"\n            aria-hidden={!isOpen}\n            onClick={handleClickOutside}\n            {...props}\n        >\n            <div className=\"adyen-checkout__modal\" ref={modalContainerRef}>\n                {children({ onCloseModal: closeModal })}\n            </div>\n        </div>\n    );\n};\n\nexport { Modal };\n","import { Fragment, h } from 'preact';\nimport { useRef } from 'preact/hooks';\nimport { CtPBrand } from '../../CtPBrand';\nimport { useCoreContext } from '../../../../../../core/Context/CoreProvider';\nimport useImage from '../../../../../../core/Context/useImage';\nimport { Modal } from '../../../../Modal';\nimport Img from '../../../../Img';\nimport Button from '../../../../Button';\nimport './CtPInfoModal.scss';\n\nlet idGenerator = Date.now();\n\nfunction getUniqueId() {\n    idGenerator += 1;\n    return `adyen-${idGenerator}`;\n}\n\ntype CtPInfoModalProps = {\n    isOpen: boolean;\n    onClose(): void;\n    focusAfterClose: HTMLElement;\n};\n\nconst CtPInfoModal = ({ isOpen, onClose, focusAfterClose }: CtPInfoModalProps) => {\n    const focusFirstElement = useRef<HTMLParagraphElement>();\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    const labelledBy = getUniqueId();\n    const describedBy = getUniqueId();\n\n    return (\n        <Modal\n            onClose={onClose}\n            isOpen={isOpen}\n            classNameModifiers={['ctp']}\n            labelledBy={labelledBy}\n            describedBy={describedBy}\n            focusFirst={focusFirstElement.current}\n            focusAfterClose={focusAfterClose}\n        >\n            {({ onCloseModal }) => (\n                <Fragment>\n                    <Img className=\"adyen-checkout__ctp-modal-header-image\" src={getImage({ imageFolder: 'components/' })('ctp_landscape')} alt=\"\" />\n                    <h1 id={labelledBy} className=\"adyen-checkout__ctp-modal-title\">\n                        {i18n.get('ctp.infoPopup.title')}\n                    </h1>\n\n                    <div id={describedBy}>\n                        <p tabIndex={-1} ref={focusFirstElement} className=\"adyen-checkout__ctp-modal-text\">\n                            {i18n.get('ctp.infoPopup.subtitle')}\n                        </p>\n\n                        <ul className=\"adyen-checkout__ctp-modal-text adyen-checkout__ctp-modal-benefits\" type=\"disc\">\n                            <li>{i18n.get('ctp.infoPopup.benefit1')}</li>\n                            <li>{i18n.get('ctp.infoPopup.benefit2')}</li>\n                            <li>{i18n.get('ctp.infoPopup.benefit3')}</li>\n                        </ul>\n\n                        <CtPBrand classNameModifiers={['popup']} />\n                    </div>\n\n                    <Button onClick={onCloseModal} label={i18n.get('close')} />\n                </Fragment>\n            )}\n        </Modal>\n    );\n};\n\nexport { CtPInfoModal };\n","import { Fragment, h } from 'preact';\nimport { useCallback, useRef, useState } from 'preact/hooks';\nimport { CtPInfoModal } from './CtPInfoModal';\nimport useImage from '../../../../../core/Context/useImage';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport Img from '../../../Img';\nimport './CtPInfo.scss';\n\nconst CtPInfo = () => {\n    const [isInfoModalOpen, setIsInfoModalOpen] = useState<boolean>(false);\n    const buttonRef = useRef<HTMLButtonElement>();\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const url = getImage({ imageFolder: 'components/' })('info');\n\n    const handleOnClose = useCallback(() => {\n        setIsInfoModalOpen(false);\n    }, []);\n\n    const handleOnIconClick = useCallback(() => {\n        setIsInfoModalOpen(true);\n    }, []);\n\n    return (\n        <Fragment>\n            <button\n                ref={buttonRef}\n                onClick={handleOnIconClick}\n                className=\"adyen-web__ctp-info-button\"\n                aria-label={i18n.get('ctp.aria.infoModalButton')}\n                type=\"button\"\n            >\n                <Img height=\"15\" src={url} ariaHidden={true} />\n            </button>\n\n            <CtPInfoModal isOpen={isInfoModalOpen} onClose={handleOnClose} focusAfterClose={buttonRef.current} />\n        </Fragment>\n    );\n};\n\nexport { CtPInfo };\n","import { h } from 'preact';\nimport useClickToPayContext from '../../context/useClickToPayContext';\nimport { CtpState } from '../../services/ClickToPayService';\nimport classnames from 'classnames';\nimport { useMemo } from 'preact/hooks';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport './CtPLogoutLink.scss';\nimport Button from '../../../Button';\n\nconst CtPLogoutLink = () => {\n    const { ctpState, logoutShopper, status, cards } = useClickToPayContext();\n    const { i18n } = useCoreContext();\n\n    if ([CtpState.Ready, CtpState.OneTimePassword].includes(ctpState) === false) {\n        return null;\n    }\n\n    const label = useMemo(() => {\n        if (ctpState === CtpState.Ready && cards.length > 1) return i18n.get('ctp.logout.notYourCards');\n        if (ctpState === CtpState.Ready && cards.length === 1) return i18n.get('ctp.logout.notYourCard');\n        if (ctpState === CtpState.Ready && cards.length === 0) return i18n.get('ctp.logout.notYourProfile');\n        return i18n.get('ctp.logout.notYou');\n    }, [i18n, ctpState]);\n\n    return (\n        <Button\n            classNameModifiers={[\n                classnames('section-logout-button', {\n                    'section-logout-button--disabled': status === 'loading'\n                })\n            ]}\n            disabled={status === 'loading'}\n            onClick={logoutShopper}\n            variant=\"link\"\n            inline={true}\n        >\n            {label}\n        </Button>\n    );\n};\n\nexport default CtPLogoutLink;\n","import { h } from 'preact';\nimport classnames from 'classnames';\nimport CtPLogoutLink from './CtPLogoutLink';\nimport { CtPBrand } from '../CtPBrand';\nimport useClickToPayContext from '../../context/useClickToPayContext';\nimport './CtPSection.scss';\n\ninterface CtPSectionProps {\n    onEnterKeyPress: (event: h.JSX.TargetedKeyboardEvent<HTMLInputElement>) => void;\n    children?: h.JSX.Element[];\n}\n\nconst CtPSection = ({ children, onEnterKeyPress }: CtPSectionProps): h.JSX.Element => {\n    const { isStandaloneComponent } = useClickToPayContext();\n\n    return (\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <div\n            className={classnames('adyen-checkout-ctp__section', { 'adyen-checkout-ctp__section--standalone': isStandaloneComponent })}\n            onKeyPress={onEnterKeyPress}\n        >\n            <div className=\"adyen-checkout-ctp__section-brand\">\n                <CtPBrand />\n                <CtPLogoutLink />\n            </div>\n\n            {children}\n        </div>\n    );\n};\n\nconst Title = ({ endAdornment, children }: { endAdornment?; children }) => (\n    <div className=\"adyen-checkout-ctp__section-header\">\n        <h1 className=\"adyen-checkout-ctp__section-header-title\">{children}</h1>\n        {endAdornment && <span className=\"adyen-checkout-ctp__section-header-adornment\">{endAdornment}</span>}\n    </div>\n);\nconst Text = ({ children }: { children }) => <p className=\"adyen-checkout-ctp__section-text\">{children}</p>;\n\nCtPSection.Title = Title;\nCtPSection.Text = Text;\n\nexport default CtPSection;\n","import { h, Fragment } from 'preact';\nimport classnames from 'classnames';\nimport Field from '../../../../FormFields/Field';\nimport Checkbox from '../../../../FormFields/Checkbox';\nimport { useCoreContext } from '../../../../../../core/Context/CoreProvider';\nimport { useState, useCallback } from 'preact/hooks';\nimport useClickToPayContext from '../../../context/useClickToPayContext';\nimport isScreenSmall from '../../../../../../utils/isScreenSmall';\nimport './CtPSaveCookiesCheckbox.scss';\n\nfunction CtPSaveCookiesCheckbox() {\n    const { i18n } = useCoreContext();\n    const { updateStoreCookiesConsent, isStoringCookies } = useClickToPayContext();\n    const [checked, setIsChecked] = useState(isStoringCookies);\n    const [isTextTruncated, setIsTextTruncated] = useState<boolean>(isScreenSmall());\n\n    const handleOnChange = useCallback(() => {\n        const newChecked = !checked;\n        setIsChecked(newChecked);\n        updateStoreCookiesConsent(newChecked);\n    }, [updateStoreCookiesConsent, setIsChecked, checked]);\n\n    return (\n        <div\n            className={classnames('adyen-checkout-ctp__otp-checkbox-container', {\n                'adyen-checkout-ctp__otp-checkbox-container--checked': checked\n            })}\n        >\n            <Field\n                classNameModifiers={['consentCheckbox']}\n                name={'clickToPayCookiesCheckbox'}\n                showContextualElement={false}\n                useLabelElement={false}\n                i18n={i18n}\n            >\n                <Checkbox\n                    name={'clickToPayCookiesCheckbox'}\n                    onInput={handleOnChange}\n                    label={i18n.get('ctp.otp.saveCookiesCheckbox.label')}\n                    checked={checked}\n                    aria-describedby={'adyen-ctp-cookies-info'}\n                />\n            </Field>\n\n            <p className=\"adyen-checkout-ctp__otp-checkbox-info\">\n                {isTextTruncated ? (\n                    <Fragment>\n                        <span id=\"adyen-ctp-cookies-info\">{i18n.get('ctp.otp.saveCookiesCheckbox.shorterInfo')} </span>\n                        <button className=\"adyen-checkout-ctp__otp-readmore-button\" onClick={() => setIsTextTruncated(false)}>\n                            {i18n.get('readMore')}..\n                        </button>\n                    </Fragment>\n                ) : (\n                    <span id=\"adyen-ctp-cookies-info\">{i18n.get('ctp.otp.saveCookiesCheckbox.information')}</span>\n                )}\n            </p>\n        </div>\n    );\n}\n\nexport default CtPSaveCookiesCheckbox;\n","const isScreenSmall = (): boolean => window.matchMedia('(max-width: 480px)').matches;\n\nexport default isScreenSmall;\n","import { Fragment, h } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport Button from '../../../Button';\nimport useClickToPayContext from '../../context/useClickToPayContext';\nimport CtPOneTimePasswordInput from './CtPOneTimePasswordInput';\nimport { CtPOneTimePasswordInputHandlers } from './CtPOneTimePasswordInput/CtPOneTimePasswordInput';\nimport { CtPInfo } from '../CtPInfo';\nimport CtPSection from '../CtPSection';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport './CtPOneTimePassword.scss';\nimport CtPSaveCookiesCheckbox from './CtPSaveCookiesCheckbox';\nimport { isSrciError } from '../../services/utils';\n\ntype CtPOneTimePasswordProps = {\n    onDisplayCardComponent?(): void;\n};\nconst CtPOneTimePassword = ({ onDisplayCardComponent }: CtPOneTimePasswordProps): h.JSX.Element => {\n    const { i18n } = useCoreContext();\n    const { finishIdentityValidation, otpMaskedContact, otpNetwork, isCtpPrimaryPaymentMethod } = useClickToPayContext();\n    const [otp, setOtp] = useState<string>(null);\n    const [isValid, setIsValid] = useState<boolean>(false);\n    const [isValidatingOtp, setIsValidatingOtp] = useState<boolean>(false);\n    const [errorCode, setErrorCode] = useState<string>(null);\n    const [otpInputHandlers, setOtpInputHandlers] = useState<CtPOneTimePasswordInputHandlers>(null);\n    const [isAccountLocked, setIsAccountLocked] = useState<boolean>(false);\n\n    const onSetOtpInputHandlers = useCallback((handlers: CtPOneTimePasswordInputHandlers) => {\n        setOtpInputHandlers(handlers);\n    }, []);\n\n    const onChangeOtpInput = useCallback(({ data, isValid }) => {\n        setOtp(data.otp);\n        setIsValid(isValid);\n    }, []);\n\n    const onResendCode = useCallback(() => {\n        setErrorCode(null);\n    }, []);\n\n    const onSubmitPassword = useCallback(async () => {\n        setErrorCode(null);\n\n        if (!isValid) {\n            otpInputHandlers.validateInput();\n            return;\n        }\n\n        setIsValidatingOtp(true);\n\n        try {\n            await finishIdentityValidation(otp);\n        } catch (error: unknown) {\n            if (!isSrciError(error)) {\n                setIsValidatingOtp(false);\n                return;\n            }\n\n            setErrorCode(error?.reason);\n            setIsValidatingOtp(false);\n\n            if (error?.reason === 'ACCT_INACCESSIBLE') {\n                setIsAccountLocked(true);\n                onDisplayCardComponent?.();\n            }\n        }\n    }, [otp, isValid, otpInputHandlers, onDisplayCardComponent]);\n\n    const handleButtonKeyDown = useCallback(\n        (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n                void onSubmitPassword();\n            }\n        },\n        [onSubmitPassword]\n    );\n\n    const subtitleParts = i18n.get('ctp.otp.subtitle').split('%@');\n\n    return (\n        <Fragment>\n            <CtPSection.Title endAdornment={<CtPInfo />}>{i18n.get('ctp.otp.title')}</CtPSection.Title>\n\n            <CtPSection.Text>\n                {subtitleParts[0]} {otpNetwork} {subtitleParts[1]}\n                <span className=\"adyen-checkout-ctp__otp-subtitle--highlighted\">{otpMaskedContact}</span>\n                {subtitleParts[2]}\n            </CtPSection.Text>\n\n            <CtPOneTimePasswordInput\n                hideResendOtpButton={isAccountLocked}\n                onChange={onChangeOtpInput}\n                onSetInputHandlers={onSetOtpInputHandlers}\n                disabled={isValidatingOtp}\n                errorMessage={errorCode && i18n.get(`ctp.errors.${errorCode}`)}\n                onPressEnter={onSubmitPassword}\n                onResendCode={onResendCode}\n                isValidatingOtp={isValidatingOtp}\n            />\n\n            <CtPSaveCookiesCheckbox />\n\n            <Button\n                disabled={isAccountLocked}\n                label={i18n.get('continue')}\n                variant={isCtpPrimaryPaymentMethod ? 'primary' : 'secondary'}\n                onClick={onSubmitPassword}\n                status={isValidatingOtp && 'loading'}\n                onKeyDown={handleButtonKeyDown}\n            />\n        </Fragment>\n    );\n};\n\nexport default CtPOneTimePassword;\n","import { Fragment, h } from 'preact';\nimport classnames from 'classnames';\nimport Img from '../../../../Img';\nimport ShopperCard from '../../../models/ShopperCard';\nimport { useCoreContext } from '../../../../../../core/Context/CoreProvider';\nimport useImage from '../../../../../../core/Context/useImage';\nimport './CtPSingleCard.scss';\n\ntype CtPSingleCardProps = {\n    card: ShopperCard;\n    errorMessage?: string;\n};\n\nconst CtPSingleCard = ({ card, errorMessage }: CtPSingleCardProps) => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const cardImage = card.artUri || getImage()(card.scheme);\n\n    return (\n        <Fragment>\n            <div className=\"adyen-checkout-ctp__card-list-single-card\">\n                <Img src={cardImage} height={24} className={'adyen-checkout-ctp__card-image'} />\n\n                <span className={classnames({ 'adyen-checkout-ctp__card-list-single-card-expired': card.isExpired })}>\n                    {card.title} {`•••• ${card.panLastFour}`}\n                </span>\n\n                {card.isExpired && <span className=\"adyen-checkout-ctp__expired-label\">{i18n.get('ctp.cards.expiredCard')}</span>}\n            </div>\n\n            {errorMessage && <div className=\"adyen-checkout-contextual-text--error\">{errorMessage}</div>}\n        </Fragment>\n    );\n};\n\nexport default CtPSingleCard;\n","import Language from '../../../language';\nimport { PaymentAmountExtended } from '../../../types/global-types';\n\nexport const PAY_BTN_DIVIDER = '/ ';\n\nconst amountLabel = (i18n, amount: PaymentAmountExtended) =>\n    !!amount?.value && !!amount?.currency ? i18n.amount(amount.value, amount.currency, { currencyDisplay: amount.currencyDisplay || 'symbol' }) : '';\n\nconst payAmountLabel = (i18n: Language, amount: PaymentAmountExtended) => `${i18n.get('payButton')} ${amountLabel(i18n, amount)}`;\n\nconst secondaryAmountLabel = (i18n: Language, secondaryAmount: PaymentAmountExtended) => {\n    const convertedSecondaryAmount =\n        secondaryAmount && !!secondaryAmount?.value && !!secondaryAmount?.currency\n            ? i18n.amount(secondaryAmount.value, secondaryAmount.currency, { currencyDisplay: secondaryAmount.currencyDisplay || 'symbol' })\n            : '';\n\n    const divider = convertedSecondaryAmount.length ? PAY_BTN_DIVIDER : '';\n\n    return `${divider}${convertedSecondaryAmount}`;\n};\n\nexport { payAmountLabel, amountLabel, secondaryAmountLabel };\n","import { h } from 'preact';\nimport './SecondaryButtonLabel.scss';\n\nconst SecondaryButtonLabel = ({ label }) => {\n    return <span className={'checkout-secondary-button__text'}>{label}</span>;\n};\n\nexport default SecondaryButtonLabel;\n","import { h } from 'preact';\nimport Button from '../Button';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { ButtonProps } from '../Button/types';\nimport { payAmountLabel, secondaryAmountLabel } from './utils';\nimport { PaymentAmountExtended } from '../../../types/global-types';\nimport SecondaryButtonLabel from './components/SecondaryButtonLabel';\n\nexport interface PayButtonProps extends ButtonProps {\n    /**\n     * Class name modifiers will be used as: `adyen-checkout__image--${modifier}`\n     */\n    classNameModifiers?: string[];\n    label?: string;\n    amount: PaymentAmountExtended;\n    secondaryAmount?: PaymentAmountExtended;\n    status?: string;\n    disabled?: boolean;\n    icon?: string;\n    onClick?(): void;\n}\n\nconst PayButton = ({ amount, secondaryAmount, classNameModifiers = [], label, ...props }: PayButtonProps) => {\n    const { i18n } = useCoreContext();\n    const isZeroAuth = amount && {}.hasOwnProperty.call(amount, 'value') && amount.value === 0;\n    const defaultLabel = isZeroAuth ? i18n.get('confirmPreauthorization') : payAmountLabel(i18n, amount);\n\n    /**\n     * Show the secondaryLabel if:\n     *  - it's not zero auth, and\n     *  - we don't have a predefined label (i.e. redirect, qrcode, await based comps...), and\n     *  - we do have an amount object (merchant might not be passing this in order to not show the amount on the button), and\n     *  - we have a secondaryAmount object with some properties\n     */\n    const secondaryLabel =\n        !isZeroAuth && !label && amount && secondaryAmount && Object.keys(secondaryAmount).length\n            ? secondaryAmountLabel(i18n, secondaryAmount)\n            : null;\n\n    return (\n        <Button\n            {...props}\n            disabled={props.disabled || props.status === 'loading'}\n            classNameModifiers={[...classNameModifiers, 'pay']}\n            label={label || defaultLabel}\n        >\n            {secondaryLabel && <SecondaryButtonLabel label={secondaryLabel} />}\n        </Button>\n    );\n};\n\nexport default PayButton;\nexport { payAmountLabel };\n","const isMobile = (): boolean => window.matchMedia('(max-width: 768px)').matches && /Android|iPhone|iPod/.test(navigator.userAgent);\n\nexport default isMobile;\n","import { h } from 'preact';\nimport { useEffect, useMemo } from 'preact/hooks';\nimport ShopperCard from '../../../models/ShopperCard';\nimport useClickToPayContext from '../../../context/useClickToPayContext';\nimport { useCoreContext } from '../../../../../../core/Context/CoreProvider';\nimport useImage from '../../../../../../core/Context/useImage';\nimport useForm from '../../../../../../utils/useForm';\nimport isMobile from '../../../../../../utils/isMobile';\nimport Field from '../../../../FormFields/Field';\nimport './CtPCardsList.scss';\nimport Select from '../../../../FormFields/Select';\n\ntype CtPCardsListProps = {\n    cards: ShopperCard[];\n    cardSelected: ShopperCard;\n    errorMessage?: string;\n    onChangeCard(card: ShopperCard): void;\n};\n\ntype CardsSelectorDataState = {\n    srcDigitalCardId: string;\n};\n\nconst schema = ['srcDigitalCardId'];\n\nconst CtPCardsList = ({ cardSelected, cards, errorMessage, onChangeCard }: CtPCardsListProps) => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const { status } = useClickToPayContext();\n    const { handleChangeFor, data } = useForm<CardsSelectorDataState>({\n        schema,\n        defaultData: { srcDigitalCardId: cardSelected.srcDigitalCardId }\n    });\n\n    const items = useMemo(() => {\n        return cards.map(card => ({\n            icon: card.artUri || getImage()(card.scheme),\n            name: `${isMobile() ? '' : card.title} •••• ${card.panLastFour} `,\n            secondaryText: card.isExpired && i18n.get('ctp.cards.expiredCard'),\n            id: card.srcDigitalCardId,\n            disabled: card.isExpired\n        }));\n    }, [cards]);\n\n    useEffect(() => {\n        const { srcDigitalCardId } = data;\n        const card = cards.find(card => card.srcDigitalCardId === srcDigitalCardId);\n        onChangeCard(card);\n    }, [data, onChangeCard]);\n\n    return (\n        <Field name=\"clickToPayCards\" errorMessage={errorMessage} readOnly={status === 'loading'}>\n            <Select\n                items={items}\n                selectedValue={data['srcDigitalCardId']}\n                name={'cards'}\n                filterable={false}\n                className={'adyen-checkout-ctp__cards-list-dropdown'}\n                readonly={status === 'loading'}\n                onChange={handleChangeFor('srcDigitalCardId')}\n            />\n        </Field>\n    );\n};\n\nexport default CtPCardsList;\n","import { Component, h } from 'preact';\nimport classNames from 'classnames';\nimport './Iframe.scss';\n\ninterface IframeProps {\n    width?: string;\n    height?: string;\n    minWidth?: string;\n    minHeight?: string;\n    border?: string;\n    src?: string;\n    allow?: string;\n    name?: string;\n    title?: string;\n    classNameModifiers?: string[];\n    callback?: (contentWindow) => void;\n}\n\nclass Iframe extends Component<IframeProps> {\n    public static defaultProps = {\n        width: '0',\n        height: '0',\n        minWidth: '0',\n        minHeight: '0',\n        src: null,\n        allow: null,\n        title: 'components iframe',\n        classNameModifiers: []\n    };\n\n    private iframeEl;\n\n    iframeOnLoad() {\n        if (this.props.callback && typeof this.props.callback === 'function') {\n            this.props.callback(this.iframeEl.contentWindow);\n        }\n    }\n\n    componentDidMount() {\n        if (this.iframeEl.addEventListener) {\n            this.iframeEl.addEventListener('load', this.iframeOnLoad.bind(this), false);\n        } else if (this.iframeEl.attachEvent) {\n            // IE fallback\n            this.iframeEl.attachEvent('onload', this.iframeOnLoad.bind(this));\n        } else {\n            this.iframeEl.onload = this.iframeOnLoad.bind(this);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.iframeEl.removeEventListener) {\n            this.iframeEl.removeEventListener('load', this.iframeOnLoad.bind(this), false);\n        } else if (this.iframeEl.detachEvent) {\n            // IE fallback\n            this.iframeEl.detachEvent('onload', this.iframeOnLoad.bind(this));\n        } else {\n            this.iframeEl.onload = null;\n        }\n    }\n\n    render({ name, src, width, height, minWidth, minHeight, allow, title, classNameModifiers }: IframeProps) {\n        const validClassNameModifiers = classNameModifiers.filter(m => !!m);\n\n        return (\n            <iframe\n                ref={ref => {\n                    this.iframeEl = ref;\n                }}\n                allow={allow}\n                className={classNames(\n                    'adyen-checkout__iframe',\n                    `adyen-checkout__iframe--${name}`,\n                    validClassNameModifiers.length && classNameModifiers.map(m => `adyen-checkout__iframe--${name}-${m}`)\n                )}\n                name={name}\n                src={src}\n                width={width}\n                height={height}\n                frameBorder=\"0\"\n                title={title}\n                /* eslint-disable react/no-unknown-property */\n                referrerpolicy=\"origin\"\n                min-width={minWidth}\n                min-height={minHeight}\n                /* eslint-enable react/no-unknown-property */\n            />\n        );\n    }\n}\n\nexport default Iframe;\n","import { Fragment, h } from 'preact';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport useClickToPayContext from '../../context/useClickToPayContext';\nimport CtPSingleCard from './CtPSingleCard/CtPSingleCard';\nimport PayButton from '../../../PayButton';\nimport { amountLabel } from '../../../PayButton/utils';\nimport CtPCardsList from './CtPCardsList';\nimport ShopperCard from '../../models/ShopperCard';\nimport SrciError from '../../services/sdks/SrciError';\nimport CtPSection from '../CtPSection';\nimport { CTP_IFRAME_NAME } from '../../services/utils';\nimport Iframe from '../../../../internal/IFrame';\nimport useImage from '../../../../../core/Context/useImage';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport isMobile from '../../../../../utils/isMobile';\nimport Language from '../../../../../language';\nimport { PaymentAmount } from '../../../../../types/global-types';\nimport './CtPCards.scss';\nimport AdyenCheckoutError from '../../../../../core/Errors/AdyenCheckoutError';\nimport { PREFIX } from '../../../Icon/constants';\n\ntype CtPCardsProps = {\n    onDisplayCardComponent?(): void;\n};\n\nfunction getErrorLabel(errorCode: string, i18n: Language): string {\n    if (!errorCode) return null;\n\n    const errorLabel = i18n.get(`ctp.errors.${errorCode}`);\n    if (errorLabel.includes('ctp.errors')) return i18n.get(`ctp.errors.UNKNOWN_ERROR`);\n    return errorLabel;\n}\n\nfunction getPayButtonLabel(i18n: Language, amount: PaymentAmount, checkoutCard?: ShopperCard): string | null {\n    if (!checkoutCard) return i18n.get('payButton');\n    if (!isMobile())\n        return i18n.get('payButton.with', {\n            values: { value: amountLabel(i18n, amount), maskedData: `•••• ${checkoutCard?.panLastFour}` }\n        });\n    return null;\n}\n\nconst CtPCards = ({ onDisplayCardComponent }: CtPCardsProps) => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const { amount, cards, checkout, isCtpPrimaryPaymentMethod, status, onSubmit, onSetStatus, onError } = useClickToPayContext();\n    const [checkoutCard, setCheckoutCard] = useState<ShopperCard | undefined>(cards.find(card => !card.isExpired) || cards[0]);\n    const [errorCode, setErrorCode] = useState<string>(null);\n    const isEveryCardExpired = cards.every(card => card.isExpired);\n    const [isShopperCheckingOutWithCtp, setIsShopperCheckingOutWithCtp] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (cards.length === 0 || isEveryCardExpired) {\n            onDisplayCardComponent?.();\n        }\n    }, [onDisplayCardComponent, isEveryCardExpired, cards]);\n\n    const doCheckout = useCallback(async () => {\n        if (!checkoutCard) return;\n\n        try {\n            setIsShopperCheckingOutWithCtp(true);\n            setErrorCode(null);\n            onSetStatus('loading');\n            const payload = await checkout(checkoutCard);\n            onSubmit(payload);\n        } catch (error: unknown) {\n            if (error instanceof SrciError) {\n                setErrorCode(error?.reason);\n                console.warn(`CtP - Checkout: Reason: ${error?.reason} / Source: ${error?.source} / Scheme: ${error?.scheme}`);\n            }\n            setIsShopperCheckingOutWithCtp(false);\n\n            if (error instanceof AdyenCheckoutError) onError(error);\n            else onError(new AdyenCheckoutError('ERROR', 'Error during ClickToPay checkout', { cause: error }));\n        }\n    }, [checkout, checkoutCard]);\n\n    const handleOnChangeCard = useCallback((card: ShopperCard) => {\n        setCheckoutCard(card);\n    }, []);\n\n    /**\n     * If shopper submits the payment using the default Card component while CtP is rendered, the status here will be updated\n     * and that can potentially display an iframe.\n     *\n     * Therefore, we use the flag 'isShopperCheckingOutWithCtp' to flag that the iframe should be displayed only in case the\n     * Shopper is checking out with Click to Pay.\n     */\n    const displayNetworkDcf = isShopperCheckingOutWithCtp && status === 'loading' && checkoutCard?.isDcfPopupEmbedded;\n    const displayCardCheckoutView = status !== 'loading' || !displayNetworkDcf;\n\n    const handlePayButtonKeyDown = useCallback(\n        (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n                void doCheckout();\n            }\n        },\n        [doCheckout]\n    );\n\n    return (\n        <Fragment>\n            <Iframe name={CTP_IFRAME_NAME} height=\"380\" width=\"100%\" classNameModifiers={[displayNetworkDcf ? '' : 'hidden']} />\n\n            {displayCardCheckoutView && (\n                <Fragment>\n                    <CtPSection.Title>{i18n.get('ctp.cards.title')}</CtPSection.Title>\n                    <CtPSection.Text>{i18n.get('ctp.cards.subtitle')}</CtPSection.Text>\n                    {cards.length === 0 && <div className=\"adyen-checkout-ctp__empty-cards\">{i18n.get('ctp.emptyProfile.message')}</div>}\n                    {cards.length === 1 && <CtPSingleCard card={cards[0]} errorMessage={getErrorLabel(errorCode, i18n)} />}\n                    {cards.length > 1 && (\n                        <CtPCardsList\n                            cardSelected={checkoutCard}\n                            cards={cards}\n                            onChangeCard={handleOnChangeCard}\n                            errorMessage={getErrorLabel(errorCode, i18n)}\n                        />\n                    )}\n\n                    <PayButton\n                        disabled={isEveryCardExpired}\n                        amount={amount}\n                        label={getPayButtonLabel(i18n, amount, checkoutCard)}\n                        status={status}\n                        variant={isCtpPrimaryPaymentMethod ? 'primary' : 'secondary'}\n                        icon={\n                            cards.length !== 0 &&\n                            getImage({ imageFolder: 'components/' })(isCtpPrimaryPaymentMethod ? `${PREFIX}lock` : `${PREFIX}lock_black`)\n                        }\n                        onClick={doCheckout}\n                        onKeyDown={handlePayButtonKeyDown}\n                    />\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nexport default CtPCards;\n","import { Fragment, h } from 'preact';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport './CtPLoader.scss';\n\nconst CtPLoader = (): h.JSX.Element => {\n    const { i18n } = useCoreContext();\n\n    return (\n        <Fragment>\n            <div className=\"adyen-checkout-ctp__card-animation\">\n                <div className=\"adyen-checkout-ctp__card-animation-layer\"></div>\n                <div className=\"adyen-checkout-ctp__card-animation-layer\"></div>\n                <div className=\"adyen-checkout-ctp__card-animation-layer\"></div>\n            </div>\n\n            <div className=\"adyen-checkout-ctp__loading-subtitle\">{i18n.get('ctp.loading.intro')}</div>\n        </Fragment>\n    );\n};\n\nexport default CtPLoader;\n","import { ValidatorRules } from '../../../../../utils/Validator/types';\n\nexport const loginValidationRules: ValidatorRules = {\n    shopperLogin: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: '',\n        modes: ['blur']\n    },\n    default: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: '',\n        modes: ['blur']\n    }\n};\n","import { h } from 'preact';\nimport InputBase, { InputBaseProps } from './InputBase';\n\nexport default function InputEmail(props: InputBaseProps) {\n    return <InputBase {...props} type=\"email\" autoCapitalize=\"off\" />;\n}\n","import { h } from 'preact';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { loginValidationRules } from './validate';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport useForm from '../../../../../utils/useForm';\nimport Field from '../../../FormFields/Field';\nimport InputEmail from '../../../FormFields/InputEmail';\n\ntype OnChangeProps = { data: CtPLoginInputDataState; valid; errors; isValid: boolean };\n\ninterface CtPLoginInputProps {\n    disabled: boolean;\n    errorMessage?: string;\n    onPressEnter(): Promise<void>;\n    onChange({ data, valid, errors, isValid }: OnChangeProps): void;\n    onSetInputHandlers(handlers: CtPLoginInputHandlers): void;\n}\n\ninterface CtPLoginInputDataState {\n    shopperLogin?: string;\n}\n\nexport type CtPLoginInputHandlers = {\n    validateInput(): void;\n};\n\nconst CtPLoginInput = (props: CtPLoginInputProps): h.JSX.Element => {\n    const { i18n } = useCoreContext();\n    const formSchema = ['shopperLogin'];\n    const { handleChangeFor, data, triggerValidation, valid, errors, isValid } = useForm<CtPLoginInputDataState>({\n        schema: formSchema,\n        rules: loginValidationRules\n    });\n    const loginInputHandlersRef = useRef<CtPLoginInputHandlers>({ validateInput: null });\n    const [isLoginInputDirty, setIsLoginInputDirty] = useState<boolean>(false);\n\n    const validateInput = useCallback(() => {\n        setIsLoginInputDirty(true);\n        triggerValidation();\n    }, [triggerValidation]);\n\n    useEffect(() => {\n        if (data.shopperLogin) setIsLoginInputDirty(true);\n    }, [data.shopperLogin]);\n\n    useEffect(() => {\n        loginInputHandlersRef.current.validateInput = validateInput;\n        props.onSetInputHandlers(loginInputHandlersRef.current);\n    }, [validateInput, props.onSetInputHandlers]);\n\n    const handleOnKeyPress = useCallback(\n        (event: h.JSX.TargetedKeyboardEvent<HTMLInputElement>) => {\n            if (event.key === 'Enter') {\n                void props.onPressEnter();\n            }\n        },\n        [props.onPressEnter]\n    );\n\n    useEffect(() => {\n        props.onChange({ data, valid, errors, isValid });\n    }, [data, valid, errors]);\n\n    return (\n        <Field\n            name=\"shopperLogin\"\n            label={i18n.get('ctp.login.inputLabel')}\n            errorMessage={isLoginInputDirty ? props.errorMessage || !!errors.shopperLogin : null}\n            classNameModifiers={['shopperLogin']}\n        >\n            <InputEmail\n                name={'shopperLogin'}\n                autocorrect={'off'}\n                spellcheck={false}\n                value={data.shopperLogin}\n                disabled={props.disabled}\n                onInput={handleChangeFor('shopperLogin', 'input')}\n                onBlur={handleChangeFor('shopperLogin', 'blur')}\n                onKeyPress={handleOnKeyPress}\n            />\n        </Field>\n    );\n};\n\nexport default CtPLoginInput;\n","import { Fragment, h } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport Button from '../../../Button';\nimport useClickToPayContext from '../../context/useClickToPayContext';\nimport CtPLoginInput, { CtPLoginInputHandlers } from './CtPLoginInput';\nimport { CtPInfo } from '../CtPInfo';\nimport CtPSection from '../CtPSection';\nimport SrciError from '../../services/sdks/SrciError';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport './CtPLogin.scss';\nimport TimeoutError from '../../errors/TimeoutError';\nimport { isSrciError } from '../../services/utils';\n\nconst CtPLogin = (): h.JSX.Element => {\n    const { i18n } = useCoreContext();\n    const { isCtpPrimaryPaymentMethod, setIsCtpPrimaryPaymentMethod, verifyIfShopperIsEnrolled, startIdentityValidation } = useClickToPayContext();\n    const [shopperLogin, setShopperLogin] = useState<string>(null);\n    const [isValid, setIsValid] = useState<boolean>(false);\n    const [errorCode, setErrorCode] = useState<string>(null);\n    const [isLoggingIn, setIsLoggingIn] = useState<boolean>(false);\n    const [loginInputHandlers, setLoginInputHandlers] = useState<CtPLoginInputHandlers>(null);\n\n    const onSetLoginInputHandlers = useCallback((handlers: CtPLoginInputHandlers) => {\n        setLoginInputHandlers(handlers);\n    }, []);\n\n    const handleOnLoginChange = useCallback(({ data, isValid }) => {\n        setShopperLogin(data.shopperLogin);\n        setIsValid(isValid);\n\n        // As soon as the Shopper interacts with input, the CtP becomes the primary PM\n        if (data?.shopperLogin?.length > 0) {\n            setIsCtpPrimaryPaymentMethod(true);\n        }\n    }, []);\n\n    const handleOnLoginButtonClick = useCallback(async () => {\n        setErrorCode(null);\n\n        if (!isValid) {\n            loginInputHandlers.validateInput();\n            return;\n        }\n\n        setIsLoggingIn(true);\n\n        try {\n            const { isEnrolled } = await verifyIfShopperIsEnrolled({ shopperEmail: shopperLogin });\n            if (isEnrolled) {\n                await startIdentityValidation();\n            } else {\n                setErrorCode('NOT_FOUND');\n                setIsLoggingIn(false);\n            }\n        } catch (error: unknown) {\n            if (error instanceof SrciError) console.warn(`CtP - Login error: ${error.toString()}`);\n            if (error instanceof TimeoutError) console.warn(error.toString());\n            if (isSrciError(error)) setErrorCode(error?.reason);\n            else console.error(error);\n\n            setIsLoggingIn(false);\n        }\n    }, [verifyIfShopperIsEnrolled, startIdentityValidation, shopperLogin, isValid, loginInputHandlers]);\n\n    const handleButtonKeyDown = useCallback(\n        (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n                void handleOnLoginButtonClick();\n            }\n        },\n        [handleOnLoginButtonClick]\n    );\n\n    return (\n        <Fragment>\n            <CtPSection.Title endAdornment={<CtPInfo />}>{i18n.get('ctp.login.title')}</CtPSection.Title>\n\n            <CtPSection.Text>{i18n.get('ctp.login.subtitle')}</CtPSection.Text>\n\n            <CtPLoginInput\n                onChange={handleOnLoginChange}\n                onSetInputHandlers={onSetLoginInputHandlers}\n                disabled={isLoggingIn}\n                errorMessage={errorCode && i18n.get(`ctp.errors.${errorCode}`)}\n                onPressEnter={handleOnLoginButtonClick}\n            />\n\n            <Button\n                label={i18n.get('continue')}\n                variant={isCtpPrimaryPaymentMethod ? 'primary' : 'secondary'}\n                status={isLoggingIn && 'loading'}\n                onClick={() => {\n                    void handleOnLoginButtonClick();\n                }}\n                onKeyDown={handleButtonKeyDown}\n            />\n        </Fragment>\n    );\n};\n\nexport default CtPLogin;\n","import { h } from 'preact';\nimport { useCallback, useEffect } from 'preact/hooks';\nimport { CtpState } from './services/ClickToPayService';\nimport useClickToPayContext from './context/useClickToPayContext';\nimport CtPOneTimePassword from './components/CtPOneTimePassword';\nimport CtPCards from './components/CtPCards';\nimport CtPSection from './components/CtPSection';\nimport CtPLoader from './components/CtPLoader';\nimport CtPLogin from './components/CtPLogin';\nimport SrciError from './services/sdks/SrciError';\n\ntype ClickToPayComponentProps = {\n    onDisplayCardComponent?(): void;\n};\n\nconst ClickToPayComponent = ({ onDisplayCardComponent }: ClickToPayComponentProps): h.JSX.Element => {\n    const { ctpState, onReady, startIdentityValidation, logoutShopper } = useClickToPayContext();\n\n    useEffect(() => {\n        if ([CtpState.OneTimePassword, CtpState.Login, CtpState.Ready].includes(ctpState)) {\n            onReady();\n        }\n    }, [ctpState, onReady]);\n\n    useEffect(() => {\n        async function sendOneTimePassword() {\n            try {\n                await startIdentityValidation();\n            } catch (error) {\n                if (error instanceof SrciError) console.warn(`CtP - Identity Validation error: ${error.toString()}`);\n                await logoutShopper();\n            }\n        }\n        if (ctpState === CtpState.ShopperIdentified) {\n            void sendOneTimePassword();\n        }\n    }, [ctpState]);\n\n    /**\n     * We capture the ENTER keypress within the ClickToPay component because we do not want to propagate the event up to the UIElement\n     * UIElement would perform the payment flow (by calling .submit), which is not relevant/supported by Click to Pay\n     */\n    const handleEnterKeyPress = useCallback((event: h.JSX.TargetedKeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault(); // Prevent <form> submission if Component is placed inside a form\n            event.stopPropagation(); // Prevent global BaseElement keypress event to be triggered\n        }\n    }, []);\n\n    if (ctpState === CtpState.NotAvailable) {\n        return null;\n    }\n\n    return (\n        <CtPSection onEnterKeyPress={handleEnterKeyPress}>\n            {[CtpState.Loading, CtpState.ShopperIdentified].includes(ctpState) && <CtPLoader />}\n            {ctpState === CtpState.OneTimePassword && <CtPOneTimePassword onDisplayCardComponent={onDisplayCardComponent} />}\n            {ctpState === CtpState.Ready && <CtPCards onDisplayCardComponent={onDisplayCardComponent} />}\n            {ctpState === CtpState.Login && <CtPLogin />}\n        </CtPSection>\n    );\n};\n\nexport default ClickToPayComponent;\n","import { h } from 'preact';\nimport classnames from 'classnames';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport './ContentSeparator.scss';\n\ninterface ContentSeparatorProps {\n    label?: string;\n    classNames?: string[];\n}\n\nfunction ContentSeparator({ label = 'qrCodeOrApp', classNames = [] }: ContentSeparatorProps) {\n    const { i18n } = useCoreContext();\n    return <div className={classnames('adyen-checkout__content-separator', ...classNames)}>{i18n.get(label)}</div>;\n}\n\nexport default ContentSeparator;\n","import { Fragment, h } from 'preact';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport useClickToPayContext from '../../internal/ClickToPay/context/useClickToPayContext';\nimport { CtpState } from '../../internal/ClickToPay/services/ClickToPayService';\nimport ClickToPayComponent from '../../internal/ClickToPay';\nimport ContentSeparator from '../../internal/ContentSeparator';\nimport Button from '../../internal/Button';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\n\ntype ClickToPayWrapperProps = {\n    children(isCardPrimaryInput?: boolean): h.JSX.Element;\n};\n\nconst ClickToPayHolder = ({ children }: ClickToPayWrapperProps) => {\n    const { i18n } = useCoreContext();\n    const [isCardInputVisible, setIsCardInputVisible] = useState<boolean>(null);\n    const { ctpState, isCtpPrimaryPaymentMethod, setIsCtpPrimaryPaymentMethod, status } = useClickToPayContext();\n\n    const areFieldsNotSet = isCardInputVisible === null && isCtpPrimaryPaymentMethod === null;\n\n    useEffect(() => {\n        if (areFieldsNotSet) {\n            if (ctpState === CtpState.ShopperIdentified || ctpState === CtpState.Ready) {\n                setIsCardInputVisible(false);\n                setIsCtpPrimaryPaymentMethod(true);\n                return;\n            }\n            if (ctpState === CtpState.NotAvailable) {\n                setIsCardInputVisible(true);\n                setIsCtpPrimaryPaymentMethod(false);\n            }\n        }\n    }, [ctpState, areFieldsNotSet]);\n\n    const handleOnShowCardButtonClick = useCallback(() => {\n        setIsCardInputVisible(true);\n        setIsCtpPrimaryPaymentMethod(false);\n    }, []);\n\n    const handleButtonKeyDown = useCallback(\n        (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n                void handleOnShowCardButtonClick();\n            }\n        },\n        [handleOnShowCardButtonClick]\n    );\n\n    if (ctpState === CtpState.NotAvailable) {\n        return children();\n    }\n\n    if (ctpState === CtpState.Loading || ctpState === CtpState.ShopperIdentified) {\n        return <ClickToPayComponent />;\n    }\n\n    return (\n        <Fragment>\n            <ClickToPayComponent onDisplayCardComponent={handleOnShowCardButtonClick} />\n\n            <ContentSeparator classNames={['adyen-checkout-ctp__separator']} label={i18n.get('ctp.separatorText')} />\n\n            {isCardInputVisible ? (\n                children(!isCtpPrimaryPaymentMethod)\n            ) : (\n                <Button\n                    variant=\"secondary\"\n                    disabled={status === 'loading'}\n                    label={i18n.get('ctp.manualCardEntry')}\n                    onClick={handleOnShowCardButtonClick}\n                    onKeyDown={handleButtonKeyDown}\n                />\n            )}\n        </Fragment>\n    );\n};\n\nexport default ClickToPayHolder;\n","import ClickToPayProvider, { ClickToPayProviderProps } from '../../internal/ClickToPay/context/ClickToPayProvider';\nimport ClickToPayHolder from './ClickToPayHolder';\nimport { h } from 'preact';\n\nconst ClickToPayWrapper = ({\n    amount,\n    configuration,\n    clickToPayService,\n    setClickToPayRef,\n    onSetStatus,\n    onSubmit,\n    onError,\n    isStandaloneComponent,\n    ...props\n}: ClickToPayProviderProps) => {\n    return (\n        <ClickToPayProvider\n            isStandaloneComponent={isStandaloneComponent}\n            configuration={configuration}\n            amount={amount}\n            clickToPayService={clickToPayService}\n            setClickToPayRef={setClickToPayRef}\n            onSetStatus={onSetStatus}\n            onSubmit={onSubmit}\n            onError={onError}\n        >\n            <ClickToPayHolder>{props.children}</ClickToPayHolder>\n        </ClickToPayProvider>\n    );\n};\n\nexport default ClickToPayWrapper;\n","import { h, ComponentChildren } from 'preact';\nimport { SRPanelContext } from './SRPanelContext';\nimport { useCoreContext } from '../Context/CoreProvider';\nimport { partial } from '../../components/internal/SecuredFields/lib/utilities/commonUtils';\nimport { setSRMessagesFromErrors } from './utils';\nimport { SRPanel } from './SRPanel';\nimport { SetSRMessagesReturnObject } from './types';\nimport { StringObject } from '../../components/internal/Address/types';\n\ntype SRPanelProviderProps = {\n    srPanel: SRPanel;\n    children: ComponentChildren;\n};\n\ninterface SetSRMessagesReturnFnProps {\n    errors: {\n        [key: string]: any;\n    };\n    isValidating: boolean;\n    layout?: string[];\n    countrySpecificLabels?: StringObject;\n}\n\nexport type SetSRMessagesReturnFn = (props: SetSRMessagesReturnFnProps) => SetSRMessagesReturnObject;\n\nconst SRPanelProvider = ({ srPanel, children }: SRPanelProviderProps) => {\n    const { i18n } = useCoreContext();\n\n    // Helper fns\n    const setSRMessagesFromObjects = ({ fieldTypeMappingFn }): SetSRMessagesReturnFn => {\n        return partial(setSRMessagesFromErrors, {\n            SRPanelRef: srPanel,\n            i18n,\n            fieldTypeMappingFn\n        });\n    };\n\n    const setSRMessagesFromStrings = strs => {\n        srPanel.setMessages(strs);\n    };\n\n    const clearSRPanel = () => {\n        srPanel.setMessages(null);\n    };\n\n    const shouldMoveFocusSR = srPanel.moveFocus;\n\n    return (\n        <SRPanelContext.Provider value={{ srPanel, setSRMessagesFromObjects, setSRMessagesFromStrings, clearSRPanel, shouldMoveFocusSR }}>\n            {children}\n        </SRPanelContext.Provider>\n    );\n};\n\nexport default SRPanelProvider;\n","export enum TxVariants {\n    /** internal */\n    address = 'address',\n    bankTransfer_IBAN = 'bankTransfer_IBAN',\n    donation = 'donation',\n    personal_details = 'personal_details',\n    dropin = 'dropin',\n    /** internal */\n\n    /** Card */\n    bcmc = 'bcmc',\n    card = 'card',\n    scheme = 'scheme',\n    storedCard = 'storedCard',\n    customCard = 'customcard',\n    /** Card */\n\n    /** ThreeDS */\n    threeDS2Challenge = 'threeDS2Challenge',\n    threeDS2Fingerprint = 'threeDS2Fingerprint',\n    threeDS2DeviceFingerprint = 'threeDS2DeviceFingerprint',\n    /** ThreeDS */\n\n    /** Direct debit */\n    ach = 'ach',\n    directdebit_GB = 'directdebit_GB',\n    sepadirectdebit = 'sepadirectdebit',\n    /** Direct debit */\n\n    /** Open Invoice */\n    affirm = 'affirm',\n    afterpay = 'afterpay',\n    afterpay_default = 'afterpay_default',\n    afterpay_b2b = 'afterpay_b2b',\n    atome = 'atome',\n    facilypay_3x = 'facilypay_3x',\n    facilypay_4x = 'facilypay_4x',\n    facilypay_6x = 'facilypay_6x',\n    facilypay_10x = 'facilypay_10x',\n    facilypay_12x = 'facilypay_12x',\n    ratepay = 'ratepay',\n    ratepay_directdebit = 'ratepay_directdebit',\n    riverty = 'riverty',\n    /** Open Invoice */\n\n    /** Wallets */\n    amazonpay = 'amazonpay',\n    applepay = 'applepay',\n    cashapp = 'cashapp',\n    clicktopay = 'clicktopay',\n    googlepay = 'googlepay',\n    paypal = 'paypal',\n    paywithgoogle = 'paywithgoogle',\n    /** Wallets */\n\n    /** Voucher */\n    boletobancario = 'boletobancario',\n    boletobancario_itau = 'boletobancario_itau',\n    boletobancario_santander = 'boletobancario_santander',\n    primeiropay_boleto = 'primeiropay_boleto',\n    doku = 'doku',\n    doku_alfamart = 'doku_alfamart',\n    doku_permata_lite_atm = 'doku_permata_lite_atm',\n    doku_indomaret = 'doku_indomaret',\n    doku_atm_mandiri_va = 'doku_atm_mandiri_va',\n    doku_sinarmas_va = 'doku_sinarmas_va',\n    doku_mandiri_va = 'doku_mandiri_va',\n    doku_cimb_va = 'doku_cimb_va',\n    doku_danamon_va = 'doku_danamon_va',\n    doku_bri_va = 'doku_bri_va',\n    doku_bni_va = 'doku_bni_va',\n    doku_bca_va = 'doku_bca_va',\n    doku_wallet = 'doku_wallet',\n    oxxo = 'oxxo',\n    /** Voucher */\n\n    /** issuerList */\n    billdesk_online = 'billdesk_online',\n    billdesk_wallet = 'billdesk_wallet',\n    dotpay = 'dotpay',\n    eps = 'eps',\n    molpay_ebanking_fpx_MY = 'molpay_ebanking_fpx_MY',\n    molpay_ebanking_TH = 'molpay_ebanking_TH',\n    molpay_ebanking_VN = 'molpay_ebanking_VN',\n    onlineBanking_CZ = 'onlineBanking_CZ',\n    onlinebanking_IN = 'onlinebanking_IN',\n    onlineBanking_PL = 'onlineBanking_PL',\n    onlineBanking_SK = 'onlineBanking_SK',\n    paybybank = 'paybybank',\n    payu_IN_cashcard = 'payu_IN_cashcard',\n    payu_IN_nb = 'payu_IN_nb',\n    wallet_IN = 'wallet_IN',\n    /** issuerList */\n\n    /** Dragonpay */\n    dragonpay = 'dragonpay',\n    dragonpay_ebanking = 'dragonpay_ebanking',\n    dragonpay_otc_banking = 'dragonpay_otc_banking',\n    dragonpay_otc_non_banking = 'dragonpay_otc_non_banking',\n    dragonpay_otc_philippines = 'dragonpay_otc_philippines',\n    /** Dragonpay */\n\n    /** Econtext */\n    econtext = 'econtext',\n    econtext_atm = 'econtext_atm',\n    econtext_online = 'econtext_online',\n    econtext_seven_eleven = 'econtext_seven_eleven',\n    econtext_stores = 'econtext_stores',\n    /** Econtext */\n\n    /** Redirect */\n    giropay = 'giropay',\n    multibanco = 'multibanco',\n    redirect = 'redirect',\n    twint = 'twint',\n    vipps = 'vipps',\n    trustly = 'trustly',\n    paybybank_AIS_DD = 'paybybank_AIS_DD',\n    /** Redirect */\n\n    /** Klarna */\n    klarna = 'klarna',\n    klarna_account = 'klarna_account',\n    klarna_paynow = 'klarna_paynow',\n    klarna_b2b = 'klarna_b2b',\n    /** Klarna */\n\n    /** QRLoader */\n    bcmc_mobile = 'bcmc_mobile',\n    bcmc_mobile_QR = 'bcmc_mobile_QR',\n    pix = 'pix',\n    swish = 'swish',\n    wechatpay = 'wechatpay',\n    wechatpayQR = 'wechatpayQR',\n    promptpay = 'promptpay',\n    paynow = 'paynow',\n    duitnow = 'duitnow',\n    /** QRLoader */\n\n    /** Await */\n    blik = 'blik',\n    mbway = 'mbway',\n    ancv = 'ancv',\n    upi = 'upi', // also QR\n    upi_qr = 'upi_qr', // also QR\n    upi_collect = 'upi_collect', // also QR\n    upi_intent = 'upi_intent', // also QR\n    /** Await */\n\n    /** Giftcard */\n    giftcard = 'giftcard',\n    mealVoucher_FR = 'mealVoucher_FR',\n    mealVoucher_FR_natixis = 'mealVoucher_FR_natixis',\n    mealVoucher_FR_sodexo = 'mealVoucher_FR_sodexo',\n    mealVoucher_FR_groupeup = 'mealVoucher_FR_groupeup'\n    /** Giftcard */\n}\n","import {\n    BOLETO_SOCIAL_SECURITY_NUMBER_INVALID,\n    CREDITCARD_HOLDER_NAME_INVALID,\n    CREDITCARD_TAX_NUMBER_INVALID,\n    ERROR_FIELD_REQUIRED,\n    ERROR_INVALID_FORMAT_EXPECTS\n} from '../Errors/constants';\n\nexport const ANALYTICS_PATH = 'v3/analytics';\n\nexport const ANALYTICS_INFO_TIMER_INTERVAL = process.env.NODE_ENV === 'development' ? 5000 : 10000;\n\nexport const ANALYTICS_SEARCH_DEBOUNCE_TIME = 3000;\n\nexport const ANALYTICS_EVENT = {\n    log: 'log',\n    error: 'error',\n    info: 'info'\n};\n\nexport const ANALYTICS_ERROR_TYPE = {\n    network: 'Network',\n    implementation: 'ImplementationError',\n    internal: 'Internal',\n    apiError: 'ApiError',\n    sdkError: 'SdkError',\n    thirdParty: 'ThirdParty',\n    generic: 'Generic',\n    redirect: 'Redirect',\n    threeDS2: 'ThreeDS2'\n};\n\nexport const ANALYTICS_ERROR_CODE = {\n    redirect: '600'\n};\n\nexport const ANALYTICS_ACTION_STR = 'action';\nexport const ANALYTICS_SUBMIT_STR = 'submit';\nexport const ANALYTICS_SELECTED_STR = 'selected';\nexport const ANALYTICS_RENDERED_STR = 'rendered';\nexport const ANALYTICS_DISPLAYED_STR = 'displayed';\nexport const ANALYTICS_INPUT_STR = 'input';\n\nexport const ANALYTICS_DOWNLOAD_STR = 'download';\n\nexport const ANALYTICS_VALIDATION_ERROR_STR = 'validationError';\n\nexport const ANALYTICS_FOCUS_STR = 'focus';\nexport const ANALYTICS_UNFOCUS_STR = 'unfocus';\n\nexport const ANALYTICS_CONFIGURED_STR = 'configured';\n\nexport const ANALYTICS_QR_CODE_DOWNLOAD = 'qr_download_button';\n\nexport const ANALYTICS_INSTANT_PAYMENT_BUTTON = 'instant_payment_button';\nexport const ANALYTICS_FEATURED_ISSUER = 'featured_issuer';\nexport const ANALYTICS_LIST = 'list';\nexport const ANALYTICS_LIST_SEARCH = 'list_search';\n\nexport enum Analytics3DS2Errors {\n    ACTION_IS_MISSING_PAYMENT_DATA = '700', // Missing 'paymentData' property from threeDS2 action\n    ACTION_IS_MISSING_TOKEN = '701', // Missing 'token' property from threeDS2 action\n    TOKEN_IS_MISSING_THREEDSMETHODURL = '702', // Decoded token is missing a valid threeDSMethodURL property\n\n    /**\n     * Decoded token is missing one or more of the following properties:\n     *  fingerprint: (threeDSMethodNotificationURL | postMessageDomain | threeDSServerTransID)\n     *  challenge: (acsTransID | messageVersion | threeDSServerTransID)\n     */\n    TOKEN_IS_MISSING_OTHER_PROPS = '703',\n\n    TOKEN_DECODE_OR_PARSING_FAILED = '704', // token decoding or parsing has failed. ('not base64', 'malformed URI sequence' or 'Could not JSON parse token')\n    THREEDS2_TIMEOUT = '705', // 3DS2 process has timed out\n\n    TOKEN_IS_MISSING_ACSURL = '800', // Decoded token is missing a valid acsURL property\n    NO_TRANSSTATUS = '801', // Challenge has resulted in an error (no transStatus could be retrieved by the backend)\n    NO_DETAILS_FOR_FRICTIONLESS_OR_REFUSED = '802', // callSubmit3DS2Fingerprint has received a response indicating either a \"frictionless\" flow, or a \"refused\" response, but without a details object\n    NO_COMPONENT_FOR_ACTION = '803', // callSubmit3DS2Fingerprint cannot find a component to handle the action response\n    NO_ACTION_FOR_CHALLENGE = '804', // callSubmit3DS2Fingerprint has received a response indicating a \"challenge\" but without an action object\n    CHALLENGE_RESOLVED_WITHOUT_RESULT_PROP = '805' // The challenge process has happened, an object has been returned, parsed & accepted as legit, but the result prop on that object is either missing or doesn't have a transStatus prop\n}\n\nexport enum Analytics3DS2Events {\n    FINGERPRINT_DATA_SENT = 'fingerprintDataSentWeb',\n    FINGERPRINT_IFRAME_LOADED = 'fingerprintIframeLoaded',\n    FINGERPRINT_COMPLETED = 'fingerprintCompleted',\n    CHALLENGE_DATA_SENT = 'challengeDataSentWeb',\n    CHALLENGE_IFRAME_LOADED = 'challengeIframeLoaded',\n    CHALLENGE_COMPLETED = 'challengeCompleted'\n}\n\n/**\n * Function to map errorCodes based on translation keys to the codes expected by the analytics endpoint\n */\nexport const errorCodeMapping: Record<string, string> = {\n    [CREDITCARD_HOLDER_NAME_INVALID]: '925',\n    [CREDITCARD_TAX_NUMBER_INVALID]: '942',\n    //\n    [BOLETO_SOCIAL_SECURITY_NUMBER_INVALID]: '926',\n    //\n    [`${ERROR_FIELD_REQUIRED}.country`]: '930',\n    [`${ERROR_FIELD_REQUIRED}.street`]: '931',\n    [`${ERROR_FIELD_REQUIRED}.house_number_or_name`]: '932',\n    [`${ERROR_FIELD_REQUIRED}.postal_code`]: '933',\n    [`${ERROR_FIELD_REQUIRED}.city`]: '935',\n    [`${ERROR_FIELD_REQUIRED}.state_or_province`]: '936',\n    //\n    [`${ERROR_INVALID_FORMAT_EXPECTS}.postal_code`]: '934'\n    //\n};\n\nexport const ANALYTICS_EXPRESS_PAGES_ARRAY = ['cart', 'minicart', 'pdp', 'checkout'];\n\nexport const ALLOWED_ANALYTICS_DATA = ['applicationInfo', 'checkoutAttemptId'];\n\nexport const NO_CHECKOUT_ATTEMPT_ID = 'fetch-checkoutAttemptId-failed';\n\nexport const ANALYTIC_LEVEL = {\n    all: 'all',\n    initial: 'initial'\n};\n","import { ComponentChild, h, render } from 'preact';\nimport getProp from '../../../utils/getProp';\nimport uuid from '../../../utils/uuid';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport { ANALYTICS_RENDERED_STR, NO_CHECKOUT_ATTEMPT_ID } from '../../../core/Analytics/constants';\n\nimport type { ICore } from '../../../core/types';\nimport type { BaseElementProps, IBaseElement } from './types';\nimport type { PaymentData } from '../../../types/global-types';\nimport type { AnalyticsInitialEvent, SendAnalyticsObject } from '../../../core/Analytics/types';\nimport { off, on } from '../../../utils/listenerUtils';\n\n/**\n * Verify if the first parameter is instance of Core.\n * We do not use 'instanceof' to avoid importing the Core class directly into this class.\n * @param checkout\n */\nfunction assertIsCoreInstance(checkout: ICore): checkout is ICore {\n    if (!checkout) return false;\n    const isCoreObject = typeof checkout.initialize === 'function' && typeof checkout.createFromAction === 'function';\n    return isCoreObject;\n}\n\nabstract class BaseElement<P extends BaseElementProps> implements IBaseElement {\n    public readonly _id = `${this.constructor['type']}-${uuid()}`;\n    public readonly core: ICore;\n\n    public props: P;\n    public state: any = {};\n    public _component;\n\n    protected _node: HTMLElement = null;\n\n    protected static defaultProps = {};\n\n    constructor(checkout: ICore, props?: P) {\n        const isCoreInstance = assertIsCoreInstance(checkout);\n\n        if (!isCoreInstance) {\n            throw new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                `Trying to initialise the component '${this.constructor['type']}' without a reference to an instance of AdyenCheckout`\n            );\n        }\n\n        this.core = checkout;\n        this.buildElementProps(props);\n\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n\n    protected buildElementProps(componentProps?: P) {\n        this.props = this.formatProps({ ...this.constructor['defaultProps'], ...componentProps });\n    }\n\n    /**\n     * Executed during creation of any payment element.\n     * Gives a chance to any paymentMethod to format the props we're receiving.\n     */\n    protected formatProps(props: P) {\n        return props;\n    }\n\n    /**\n     * Executed on the `data` getter.\n     * Returns the component data necessary for the /payments request\n     */\n    protected formatData(): any {\n        return {};\n    }\n\n    /* eslint-disable-next-line */\n    protected setUpAnalytics(setUpAnalyticsObj: AnalyticsInitialEvent) {\n        return null;\n    }\n\n    /* eslint-disable-next-line */\n    protected submitAnalytics(analyticsObj?: SendAnalyticsObject) {\n        return null;\n    }\n\n    /* eslint-disable-next-line */\n    protected handleKeyPress(e: h.JSX.TargetedKeyboardEvent<HTMLInputElement>) {\n        return null;\n    }\n\n    protected setState(newState: object): void {\n        this.state = { ...this.state, ...newState };\n    }\n\n    /**\n     * Returns the component payment data ready to submit to the Checkout API\n     * Note: this does not ensure validity, check isValid first\n     */\n    public get data(): PaymentData {\n        const clientData = getProp(this.props, 'modules.risk.data');\n        const checkoutAttemptId = getProp(this.props, 'modules.analytics.getCheckoutAttemptId')?.() ?? NO_CHECKOUT_ATTEMPT_ID; // NOTE: we never expect to see this \"failed\" value, but, just in case...\n        const order = this.state.order || this.props.order;\n        const componentData = this.formatData();\n\n        if (componentData.paymentMethod && checkoutAttemptId) {\n            componentData.paymentMethod.checkoutAttemptId = checkoutAttemptId;\n        }\n\n        // Workaround, to be fixed properly\n        // Remove the firstName & lastName in the billingAddress for non Riverty components\n        // @ts-ignore type exists\n        if (this.props.type !== 'riverty' && componentData.billingAddress) {\n            const { firstName, lastName, ...rest } = componentData.billingAddress;\n            componentData.billingAddress = { ...rest };\n        }\n\n        return {\n            ...(clientData && { riskData: { clientData } }),\n            ...(order && { order: { orderData: order.orderData, pspReference: order.pspReference } }),\n            ...componentData,\n            clientStateDataIndicator: true\n        };\n    }\n\n    /**\n     * Method used to make the payment method active\n     * (Useful when there are different payment methods available and activating one PM must trigger a specific task)\n     */\n    public activate(): void {\n        return;\n    }\n\n    public render(): ComponentChild | Error {\n        // render() not implemented in the element\n        throw new Error('Payment method cannot be rendered.');\n    }\n\n    /**\n     * Mounts an element into the dom\n     * @param domNode - Node (or selector) where we will mount the payment element\n     * @returns this - the payment element instance we mounted\n     */\n    public mount(domNode: HTMLElement | string): this {\n        const node = typeof domNode === 'string' ? document.querySelector<HTMLElement>(domNode) : domNode;\n\n        if (!node) {\n            throw new Error('Component could not mount. Root node was not found.');\n        }\n\n        const setupAnalytics = !this._node;\n\n        if (this._node) {\n            this.unmount(); // new, if this._node exists then we are \"remounting\" so we first need to unmount if it's not already been done\n        }\n\n        this._node = node;\n\n        // Add listener for key press events, notably 'Enter' key presses\n        on(this._node, 'keypress', this.handleKeyPress, false);\n\n        this._component = this.render();\n\n        render(this._component, node);\n\n        // Set up analytics (once, since this._node is currently undefined) now that we have mounted and rendered\n        if (setupAnalytics) {\n            if (this.props.modules && this.props.modules.analytics) {\n                this.setUpAnalytics({\n                    containerWidth: node && node.offsetWidth,\n                    component: !this.props.isDropin ? (this.constructor['analyticsType'] ?? this.constructor['type']) : 'dropin',\n                    flavor: !this.props.isDropin ? 'components' : 'dropin'\n                }).then(() => {\n                    // Once the initial analytics set up call has been made...\n                    // ...create an analytics event  declaring that the component has been rendered\n                    // (The dropin will do this itself from DropinComponent once the PM list has rendered)\n                    if (!this.props.isDropin) {\n                        this.submitAnalytics({ type: ANALYTICS_RENDERED_STR });\n                    }\n                });\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Updates props, resets the internal state and remounts the element.\n     *\n     * @param props - props to update\n     * @returns this - the element instance\n     */\n    public update(props: Partial<P>): this {\n        this.props = this.formatProps({ ...this.props, ...props });\n        this.state = {};\n\n        return this.unmount().mount(this._node); // for new mount fny\n    }\n\n    /**\n     * Unmounts a payment element from the DOM\n     */\n    public unmount(): this {\n        // Remove listener\n        off(this._node, 'keypress', this.handleKeyPress);\n\n        if (this._node) {\n            render(null, this._node);\n        }\n\n        return this;\n    }\n\n    /**\n     * Unmounts an element and removes it from the parent instance\n     * For \"destroy\" type cleanup - when you don't intend to use the component again\n     */\n    public remove() {\n        this.unmount();\n\n        if (this.core) {\n            this.core.remove(this);\n        }\n    }\n}\n\nexport default BaseElement;\n","import { UIElementStatus } from './types';\nimport { RawPaymentResponse, PaymentResponseData, Order } from '../../../types/global-types';\nimport { IDropin } from '../../Dropin/types';\n\nconst ALLOWED_PROPERTIES = ['action', 'resultCode', 'sessionData', 'order', 'sessionResult', 'donationToken', 'error'];\n\nexport function sanitizeResponse(response: RawPaymentResponse): PaymentResponseData {\n    const removedProperties = [];\n\n    const sanitizedObject = Object.keys(response).reduce((acc, cur) => {\n        if (!ALLOWED_PROPERTIES.includes(cur)) {\n            removedProperties.push(cur);\n        } else {\n            acc[cur] = response[cur];\n        }\n        return acc;\n    }, {});\n\n    if (removedProperties.length) console.warn(`The following properties should not be passed to the client: ${removedProperties.join(', ')}`);\n\n    return sanitizedObject as PaymentResponseData;\n}\n\n/**\n * Remove not relevant properties in the final payment result object\n *\n * @param paymentResponse\n */\nexport function cleanupFinalResult(paymentResponse?: PaymentResponseData): void {\n    if (!paymentResponse) return;\n\n    delete paymentResponse.order;\n    delete paymentResponse.action;\n    if (!paymentResponse.donationToken || paymentResponse.donationToken.length === 0) {\n        delete paymentResponse.donationToken;\n    }\n}\n\nexport function resolveFinalResult(result: PaymentResponseData): [status: UIElementStatus, statusProps?: any] {\n    switch (result.resultCode) {\n        case 'Authorised':\n        case 'Received':\n            return ['success'];\n        case 'Pending':\n            return ['success'];\n        case 'Cancelled':\n        case 'Error':\n        case 'Refused':\n            return ['error'];\n        default:\n    }\n}\n\nexport function verifyPaymentDidNotFail(response: PaymentResponseData): Promise<PaymentResponseData> {\n    if (['Cancelled', 'Error', 'Refused'].includes(response.resultCode)) {\n        return Promise.reject(response);\n    }\n\n    return Promise.resolve(response);\n}\n\nexport function assertIsDropin(element: any): element is IDropin {\n    if (!element) return false;\n\n    const isDropin = typeof element.activePaymentMethod === 'object' && typeof element.closeActivePaymentMethod === 'function';\n    return isDropin;\n}\n\nexport function getRegulatoryDefaults(countryCode: string, isDropin: boolean): Record<string, any> {\n    switch (countryCode) {\n        // Finnish regulations state that no payment method can be open by default\n        case 'FI':\n            return isDropin\n                ? {\n                      openFirstPaymentMethod: false,\n                      openFirstStoredPaymentMethod: false\n                  }\n                : {};\n        default:\n            return {};\n    }\n}\n\nexport function sanitizeOrder(order: Order) {\n    if (!order || !order.orderData || !order.pspReference) return null;\n    return {\n        orderData: order.orderData,\n        pspReference: order.pspReference\n    };\n}\n","class CancelError extends Error {\n    constructor(message?: string) {\n        super(message);\n    }\n}\n\nexport default CancelError;\n","import { h } from 'preact';\nimport BaseElement from '../BaseElement/BaseElement';\nimport PayButton from '../PayButton';\nimport { assertIsDropin, cleanupFinalResult, getRegulatoryDefaults, sanitizeResponse, verifyPaymentDidNotFail } from './utils';\nimport AdyenCheckoutError, { NETWORK_ERROR } from '../../../core/Errors/AdyenCheckoutError';\nimport { hasOwnProperty } from '../../../utils/hasOwnProperty';\nimport { Resources } from '../../../core/Context/Resources';\nimport { ANALYTICS_ERROR_TYPE, ANALYTICS_EVENT, ANALYTICS_SUBMIT_STR } from '../../../core/Analytics/constants';\n\nimport type { AnalyticsInitialEvent, SendAnalyticsObject } from '../../../core/Analytics/types';\nimport type { CoreConfiguration, ICore, AdditionalDetailsData } from '../../../core/types';\nimport type { ComponentMethodsRef, PayButtonFunctionProps, UIElementProps, UIElementStatus } from './types';\nimport type { CheckoutSessionDetailsResponse, CheckoutSessionPaymentResponse } from '../../../core/CheckoutSession/types';\nimport type {\n    ActionHandledReturnObject,\n    CheckoutAdvancedFlowResponse,\n    Order,\n    PaymentAction,\n    PaymentAmount,\n    PaymentData,\n    PaymentMethodsResponse,\n    PaymentResponseData\n} from '../../../types/global-types';\nimport type { IDropin } from '../../Dropin/types';\nimport type { NewableComponent } from '../../../core/core.registry';\nimport CancelError from '../../../core/Errors/CancelError';\n\nimport './UIElement.scss';\n\nexport abstract class UIElement<P extends UIElementProps = UIElementProps> extends BaseElement<P> {\n    protected componentRef: any;\n\n    protected resources: Resources;\n\n    public elementRef: UIElement;\n\n    public static type = undefined;\n\n    /**\n     * Defines all txVariants that the Component supports (in case it support multiple ones besides the 'type' one)\n     */\n    public static txVariants: string[] = [];\n\n    constructor(checkout: ICore, props?: P) {\n        super(checkout, props);\n\n        this.core.register(this.constructor as NewableComponent);\n\n        this.submit = this.submit.bind(this);\n        this.setState = this.setState.bind(this);\n        this.onComplete = this.onComplete.bind(this);\n        this.handleAction = this.handleAction.bind(this);\n        this.handleOrder = this.handleOrder.bind(this);\n        this.handleAdditionalDetails = this.handleAdditionalDetails.bind(this);\n        this.handleResponse = this.handleResponse.bind(this);\n        this.setElementStatus = this.setElementStatus.bind(this);\n        this.submitAnalytics = this.submitAnalytics.bind(this);\n        this.makePaymentsCall = this.makePaymentsCall.bind(this);\n        this.makeAdditionalDetailsCall = this.makeAdditionalDetailsCall.bind(this);\n        this.submitUsingSessionsFlow = this.submitUsingSessionsFlow.bind(this);\n\n        this.elementRef = (props && props.elementRef) || this;\n        this.resources = this.props.modules ? this.props.modules.resources : undefined;\n\n        this.storeElementRefOnCore(this.props);\n\n        this.onEnterKeyPressed = this.onEnterKeyPressed.bind(this);\n        this.onActionHandled = this.onActionHandled.bind(this);\n    }\n\n    protected override buildElementProps(componentProps?: P) {\n        const globalCoreProps = this.core.getCorePropsForComponent();\n        const isStoredPaymentMethod = !!componentProps?.isStoredPaymentMethod;\n        const paymentMethodsResponseProps = isStoredPaymentMethod\n            ? {}\n            : this.core.paymentMethodsResponse.find(componentProps?.type || this.constructor['type']);\n\n        const finalProps = {\n            showPayButton: true,\n            ...globalCoreProps,\n            ...paymentMethodsResponseProps,\n            ...componentProps\n        };\n\n        const isDropin = assertIsDropin(this as unknown as IDropin);\n\n        this.props = this.formatProps({\n            ...this.constructor['defaultProps'], // component defaults\n            ...getRegulatoryDefaults(this.core.options.countryCode, isDropin), // regulatory defaults\n            ...finalProps // the rest (inc. merchant defined config)\n        });\n    }\n\n    protected storeElementRefOnCore(props?: P) {\n        if (!props?.isDropin) {\n            this.core.storeElementReference(this);\n        }\n    }\n\n    public isAvailable(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public setState(newState: object): void {\n        this.state = { ...this.state, ...newState };\n        this.onChange();\n    }\n\n    public showValidation(): this {\n        if (this.componentRef && this.componentRef.showValidation) this.componentRef.showValidation();\n        return this;\n    }\n\n    public setElementStatus(status: UIElementStatus, props?: any): this {\n        this.elementRef?.setStatus(status, props);\n        return this;\n    }\n\n    public setStatus(status: UIElementStatus, props?): this {\n        if (this.componentRef?.setStatus) {\n            this.componentRef.setStatus(status, props);\n        }\n        return this;\n    }\n\n    protected onChange(): void {\n        this.props.onChange?.(\n            {\n                data: this.data,\n                isValid: this.isValid,\n                errors: this.state.errors,\n                valid: this.state.valid\n            },\n            this.elementRef\n        );\n    }\n\n    // Only called once, for UIElements (including Dropin), as they are being mounted\n    protected setUpAnalytics(setUpAnalyticsObj: AnalyticsInitialEvent) {\n        const sessionId = this.props.session?.id;\n\n        return this.props.modules.analytics.setUp({\n            ...setUpAnalyticsObj,\n            ...(sessionId && { sessionId })\n        });\n    }\n\n    /**\n     * A function for all UIElements, or BaseElement, to use to create an analytics action for when it's been:\n     *  - mounted,\n     *  - a PM has been selected\n     *  - onSubmit has been called (as a result of the pay button being pressed)\n     *\n     *  In some other cases e.g. 3DS2 components, this function is overridden to allow more specific analytics actions to be created\n     */\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject, uiElementProps?) {\n        /** Work out what the component's \"type\" is:\n         * - first check for a dedicated \"analyticsType\" (currently only applies to custom-cards)\n         * - otherwise, distinguish cards from non-cards: cards will use their static type property, everything else will use props.type\n         */\n        try {\n            this.props.modules.analytics.sendAnalytics(this.getComponent(analyticsObj), analyticsObj, uiElementProps);\n        } catch (error) {\n            console.warn('Failed to submit the analytics event. Error:', error);\n        }\n    }\n\n    private getComponent({ component }: SendAnalyticsObject): string {\n        if (component) {\n            return component;\n        }\n        if (this.constructor['analyticsType']) {\n            return this.constructor['analyticsType'];\n        }\n        if (this.constructor['type'] === 'scheme' || this.constructor['type'] === 'bcmc') {\n            return this.constructor['type'];\n        }\n        return this.type;\n    }\n\n    public submit(): void {\n        if (!this.isValid) {\n            this.showValidation();\n            return;\n        }\n\n        this.makePaymentsCall()\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then(this.handleResponse)\n            .catch((e: PaymentResponseData | Error) => {\n                if (e instanceof CancelError) {\n                    this.setElementStatus('ready');\n                    return;\n                }\n                this.handleFailedResult(e as PaymentResponseData);\n            });\n    }\n\n    protected makePaymentsCall(): Promise<CheckoutAdvancedFlowResponse | CheckoutSessionPaymentResponse> {\n        this.setElementStatus('loading');\n\n        if (this.props.onSubmit) {\n            return this.submitUsingAdvancedFlow();\n        }\n\n        if (this.core.session) {\n            const beforeSubmitEvent: Promise<PaymentData> = this.props.beforeSubmit\n                ? new Promise((resolve, reject) =>\n                      this.props.beforeSubmit(this.data, this.elementRef, {\n                          resolve,\n                          reject: () => reject(new CancelError('beforeSubmitRejected'))\n                      })\n                  )\n                : Promise.resolve(this.data);\n\n            return beforeSubmitEvent.then(this.submitUsingSessionsFlow);\n        }\n\n        this.handleError(\n            new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'It can not perform /payments call. Callback \"onSubmit\" is missing or Checkout session is not available'\n            )\n        );\n    }\n\n    private async submitUsingAdvancedFlow(): Promise<CheckoutAdvancedFlowResponse> {\n        return new Promise<CheckoutAdvancedFlowResponse>((resolve, reject) => {\n            // Call analytics endpoint\n            this.submitAnalytics({ type: ANALYTICS_SUBMIT_STR });\n\n            this.props.onSubmit(\n                {\n                    data: this.data,\n                    isValid: this.isValid\n                },\n                this.elementRef,\n                { resolve, reject }\n            );\n        });\n    }\n\n    private async submitUsingSessionsFlow(data: PaymentData): Promise<CheckoutSessionPaymentResponse> {\n        this.submitAnalytics({ type: ANALYTICS_SUBMIT_STR });\n\n        try {\n            return await this.core.session.submitPayment(data);\n        } catch (error: unknown) {\n            if (error instanceof AdyenCheckoutError) {\n                this.handleError(error);\n            } else {\n                this.handleError(new AdyenCheckoutError('ERROR', 'Error when making /payments call', { cause: error }));\n            }\n\n            return Promise.reject(error);\n        }\n\n        // // Uncomment to simulate failed\n        // return {\n        //     resultCode: 'Refused',\n        //     sessionData:\n        //         'Ab02b4c0!BQABAgBKGgqfEz8uQlU4yCIOWjA8bkEwmbJ7Qt4r+x5IPXREu1rMjwNk5MDoHFNlv+MWvinS6nXIDniXgRzXCdSC4ksw9CNDBAjOa+B88wRoj/rLTieuWh/0leR88qkV24vtIkjsIsbJTDB78Pd8wX8MEDsXhaAdEIyX9E8eqxuQ3bwPbvLs1Dlgo1ZrfkQRzaNiuVM8ejRG0IWE1bGThJzY+sJvZZHvlDMXIlxhZcDoQvsMj/WwE6+nFJxBiC3oRzmvVn3AbkLQGtvwq16UUSfYbPzG9dXypJMtcrZAQYq2g/2+BSibCcmee9AXq/wij11BERrYmjbDt5NkkdUnDVgAB7pdqbnWX0A2sxBKeYtLSP2kxp+5LoU/Wty3fmcVA3VKVkHfgmIihkeL8lY++5hvHjnkzOE4tyx/sheiKS4zqoWE43TD6n8mpFskAzwMHq4G2o6vkXqvaKFEq7y/R2fVrCypenmRhkPASizpM265rKLU+L4E/C+LMHfN0LYKRMCrLr0gI2GAp+1PZLHgh0tCtiJC/zcJJtJs6sHNQxLUN+kxJuELUHOcuL3ivjG+mWteUnBENZu7KqOSZYetiWYRiyLOXDiBHqbxuQwTuO54L15VLkS/mYB20etibM1nn+fRmbo+1IJkCSalhwi5D7fSrpjbQTmAsOpJT1N8lC1MSNmAvAwG1kWL4JxYwXDKYyYASnsia2V5IjoiQUYwQUFBMTAzQ0E1MzdFQUVEODdDMjRERDUzOTA5QjgwQTc4QTkyM0UzODIzRDY4REFDQzk0QjlGRjgzMDVEQyJ98uZI4thGveOByYbomCeeP2Gy2rzs99FOBoDYVeWIUjyM+gfnW89DdJZAhxe74Tv0TnL5DRQYPCTRQPOoLbQ21NaeSho70FNE+n8XYKlVK5Ore6BoB6IVCaal5MkM27VmZPMmGflgcPx+pakx+EmRsYGdvYNImYxJYrRk3CI+l3T3ZiVpPPqebaVSLaSkEfu0iOFPjjLUhWN6QW6c18heE5vq/pcoeBf7p0Jgr9I5aBFY0avYG57BDGHzU1ZiQ9LLMTis2BA7Ap9pdNq8FVXL4fnoVHNZiiANOf3uvSknPKBID8sdOXUStA0crmO322FYjDqh1n6FG+D7+OJSayNsXIz6Zoy0eFn4HbT8nt8L2X2tdzkMayCYHXRwKh13Xyleqxt4WoEZmhwTmB3p9d1F0SylWnjcC6o/DnshJ9mMW/8D3oWS30Z7BwRODqKGVahRD0YGRzwMbVnEe5JFRfNvJZdLGl35L9632DVmuFQ0lr/8WNL/NrAJNtI6PXrZMNiza0/omPwPfe5ZYuD1Jgq59TX4h9d+3fdkArcJYL7AdoMZON1YEiWY5EzazQwtHd9yzdty9ZHPxAfuOfCh4OhbhFNp+v5YQ+PzKZ+UpM1VxV863+9XgWEURPNvX7qq1cpUSRzrSGq01QBBM3MKzRh5mAgqIdXgtl7L0EXAep0MECc7QY0/o3tW3VR8eEJGsSzrNxpFItqj0SEaIWo25dRfkl5zuw47GQrN9Qzxl2WV3A38MQPUqFtIr/71Rjkphgg49ZGWEYCwgFmm8jJc2/5qTabSGk4bzwiETCTzeydq30bUGqCwglj8CrFViAuQeTJm7dp+PYKMkUNvQRpnSXMj6Kz7rvAMzhzJgK62ltN2idqKxLC7WtivCUgejuQUvNreCYBQCaKwTwP02lZsJpGF9yw8gbyuoB+2aB7IZmgIB8GP4qVQ/ht5B9z/FLohK/8cSPV/4i32SNNdcwhV',\n        //     sessionResult:\n        //         'X3XtfGC7!H4sIAAAAAAAA/6tWykxRslJyDjaxNDMyM3E2MXIyNDUys3RU0lHKTS1KzkjMK3FMTs4vzSsBKgtJLS7xhYo6Z6QmZ+eXlgAVFpcklpQWA+WLUtNKi1NTlGoBMEEbz1cAAAA=iMsCaEJ5LcnsqIUtmNxjm8HtfQ8gZW8JewEU3wHz4qg='\n        // };\n    }\n\n    protected onComplete(state): void {\n        if (this.props.onComplete) this.props.onComplete(state, this.elementRef);\n    }\n\n    protected handleError = (error: AdyenCheckoutError): void => {\n        /**\n         * Set status using elementRef, which:\n         * - If Drop-in, will set status for Dropin component, and then it will propagate the new status for the active payment method component\n         * - If Component, it will set its own status\n         */\n        this.setElementStatus('ready');\n\n        if (error.name === NETWORK_ERROR && error.options.code) {\n            this.submitAnalytics({ type: ANALYTICS_EVENT.error, errorType: ANALYTICS_ERROR_TYPE.apiError, code: error.options.code });\n        }\n\n        if (this.props.onError) {\n            this.props.onError(error, this.elementRef);\n        }\n    };\n\n    protected handleAdditionalDetails(state: AdditionalDetailsData): void {\n        this.makeAdditionalDetailsCall(state)\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then(this.handleResponse)\n            .catch(this.handleFailedResult);\n    }\n\n    private makeAdditionalDetailsCall(state: AdditionalDetailsData): Promise<CheckoutSessionDetailsResponse | CheckoutAdvancedFlowResponse> {\n        if (this.props.onAdditionalDetails) {\n            return new Promise<CheckoutAdvancedFlowResponse>((resolve, reject) => {\n                this.props.onAdditionalDetails(state, this.elementRef, { resolve, reject });\n            });\n        }\n\n        if (this.core.session) {\n            return this.submitAdditionalDetailsUsingSessionsFlow(state.data);\n        }\n\n        this.handleError(\n            new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'It can not perform /payments/details call. Callback \"onAdditionalDetails\" is missing or Checkout session is not available'\n            )\n        );\n    }\n\n    private async submitAdditionalDetailsUsingSessionsFlow(data: any): Promise<CheckoutSessionDetailsResponse> {\n        try {\n            return await this.core.session.submitDetails(data);\n        } catch (error: unknown) {\n            if (error instanceof AdyenCheckoutError) this.handleError(error);\n            else this.handleError(new AdyenCheckoutError('ERROR', 'Error when making /details call', { cause: error }));\n\n            return Promise.reject(error);\n        }\n    }\n\n    public handleAction(action: PaymentAction, props = {}): UIElement | null {\n        if (!action || !action.type) {\n            if (hasOwnProperty(action, 'action') && hasOwnProperty(action, 'resultCode')) {\n                throw new Error(\n                    'handleAction::Invalid Action - the passed action object itself has an \"action\" property and ' +\n                        'a \"resultCode\": have you passed in the whole response object by mistake?'\n                );\n            }\n            throw new Error('handleAction::Invalid Action - the passed action object does not have a \"type\" property');\n        }\n\n        const paymentAction = this.core.createFromAction(action, {\n            ...this.elementRef.props,\n            ...props,\n            onAdditionalDetails: this.handleAdditionalDetails\n        });\n\n        if (paymentAction) {\n            this.unmount();\n            return paymentAction.mount(this._node);\n        }\n\n        return null;\n    }\n\n    protected onActionHandled(actionHandledObj: ActionHandledReturnObject) {\n        this.props?.onActionHandled?.({ originalAction: this.props.originalAction, ...actionHandledObj });\n    }\n\n    protected handleOrder = (response: PaymentResponseData): void => {\n        const { order } = response;\n\n        const updateCorePromise = this.core.session ? this.core.update({ order }) : this.handleAdvanceFlowPaymentMethodsUpdate(order);\n\n        void updateCorePromise.then(() => {\n            this.props.onOrderUpdated?.({ order });\n        });\n    };\n\n    /**\n     * Handles when the payment fails. The payment fails when:\n     * - adv flow: the merchant rejects the payment due to a critical error\n     * - adv flow: the merchant resolves the payment with a failed resultCode\n     * - sessions: a network error occurs when making the payment\n     * - sessions: the payment fails with a failed resultCode\n     *\n     * @param result\n     */\n    protected handleFailedResult = (result?: PaymentResponseData): void => {\n        if (assertIsDropin(this.elementRef)) {\n            this.elementRef.displayFinalAnimation('error');\n        }\n\n        cleanupFinalResult(result);\n        this.props.onPaymentFailed?.(result, this.elementRef);\n    };\n\n    protected handleSuccessResult = (result: PaymentResponseData): void => {\n        if (assertIsDropin(this.elementRef)) {\n            this.elementRef.displayFinalAnimation('success');\n        }\n\n        cleanupFinalResult(result);\n        this.props.onPaymentCompleted?.(result, this.elementRef);\n    };\n\n    /**\n     * Handles a /payments or /payments/details response.\n     * The component will handle automatically actions, orders, and final results.\n     *\n     * Expected to be called after sanitizeResponse has been run on the raw payment response\n     *\n     * @param response -\n     */\n    protected handleResponse(response: PaymentResponseData): void {\n        if (response.action) {\n            this.elementRef.handleAction(response.action);\n            return;\n        }\n\n        if (response.order?.remainingAmount?.value > 0) {\n            // we don't want to call elementRef here, use the component handler\n            // we do this way so the logic on handlingOrder is associated with payment method\n            this.handleOrder(response);\n            return;\n        }\n\n        this.handleSuccessResult(response);\n    }\n\n    protected handleKeyPress(e: h.JSX.TargetedKeyboardEvent<HTMLInputElement> | KeyboardEvent) {\n        if (e.key === 'Enter' || e.code === 'Enter') {\n            e.preventDefault(); // Prevent <form> submission if Component is placed inside a form\n\n            this.onEnterKeyPressed(document?.activeElement, this);\n        }\n    }\n\n    /**\n     * Handle Enter key pressed from a UIElement (called via handleKeyPress)\n     * @param obj\n     */\n    protected onEnterKeyPressed(activeElement: Element, component: UIElement) {\n        if (this.props.onEnterKeyPressed) {\n            this.props.onEnterKeyPressed(activeElement, component);\n        } else {\n            (activeElement as HTMLElement).blur();\n            this.submit();\n        }\n    }\n\n    /**\n     * Call update on parent instance\n     * This function exist to make safe access to the protected _parentInstance\n     * @param options - CoreOptions\n     */\n    public updateParent(options: CoreConfiguration = {}): Promise<ICore> {\n        return this.elementRef.core.update(options);\n    }\n\n    public setComponentRef = (ref: ComponentMethodsRef) => {\n        this.componentRef = ref;\n    };\n\n    /**\n     * Get the current validation status of the element\n     */\n    public get isValid(): boolean {\n        return false;\n    }\n\n    /**\n     * Get the element icon URL for the current environment\n     */\n\n    public get icon(): string {\n        const type = this.props.paymentMethodType || this.type;\n        return this.props.icon ?? this.resources.getImage()(type);\n    }\n\n    /**\n     * Get the element's displayable name\n     */\n    public get displayName(): string {\n        const paymentMethodFromResponse = this.core.paymentMethodsResponse?.paymentMethods?.find(pm => pm.type === this.type);\n        return this.props.name || paymentMethodFromResponse?.name || this.type;\n    }\n\n    /**\n     * Get the element accessible name, used in the aria-label of the button that controls selected payment method\n     */\n    public get accessibleName(): string {\n        return this.displayName;\n    }\n\n    /**\n     * Used to display the second line of a payment method item\n     */\n    get additionalInfo(): string {\n        return null;\n    }\n\n    /**\n     * Return the type of an element\n     */\n    public get type(): string {\n        return this.props.type || this.constructor['type'];\n    }\n\n    /**\n     * Get the payButton component for the current element\n     */\n    protected payButton = (props: PayButtonFunctionProps) => {\n        return <PayButton {...props} amount={this.props.amount} secondaryAmount={this.props.secondaryAmount} onClick={this.submit} />;\n    };\n\n    /**\n     * Used in the Partial Orders flow.\n     * When the Order is updated, the merchant can request new payment methods based on the new remaining amount\n     *\n     * @private\n     */\n    protected async handleAdvanceFlowPaymentMethodsUpdate(order: Order | null, amount?: PaymentAmount) {\n        return new Promise<void | PaymentMethodsResponse>((resolve, reject) => {\n            if (!this.props.onPaymentMethodsRequest) {\n                return resolve();\n            }\n\n            this.props.onPaymentMethodsRequest(\n                {\n                    ...(order && {\n                        order: {\n                            orderData: order.orderData,\n                            pspReference: order.pspReference\n                        }\n                    }),\n                    locale: this.core.options.locale\n                },\n                { resolve, reject }\n            );\n        })\n            .catch(error => {\n                this.handleError(\n                    new AdyenCheckoutError(\n                        'IMPLEMENTATION_ERROR',\n                        'Something failed during payment methods update or onPaymentMethodsRequest was not implemented',\n                        {\n                            cause: error\n                        }\n                    )\n                );\n            })\n            .then(paymentMethodsResponse => {\n                // in the case of the session flow we get order, amount, countryCode and shopperLocale from initialize()\n                // apply the same logic here for order and amount\n                // in the future it might be worth moving this logic to be performed by the core on update()\n                // it would make this more consistent\n                return this.core.update({\n                    ...(paymentMethodsResponse && { paymentMethodsResponse }),\n                    order,\n                    amount: order ? order.remainingAmount : amount\n                });\n            });\n    }\n}\n\nexport default UIElement;\n","import { h } from 'preact';\nimport CardInput from './components/CardInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport { BinLookupResponse, CardElementData, CardConfiguration } from './types';\nimport triggerBinLookUp from '../internal/SecuredFields/binLookup/triggerBinLookUp';\nimport { CardBinLookupData, CardConfigSuccessData, CardFocusData } from '../internal/SecuredFields/lib/types';\nimport { fieldTypeToSnakeCase } from '../internal/SecuredFields/utils';\nimport { reject } from '../../utils/commonUtils';\nimport { hasValidInstallmentsObject } from './components/CardInput/utils';\nimport createClickToPayService from '../internal/ClickToPay/services/create-clicktopay-service';\nimport { ClickToPayCheckoutPayload, IClickToPayService } from '../internal/ClickToPay/services/types';\nimport ClickToPayWrapper from './components/ClickToPayWrapper';\nimport { ComponentFocusObject } from '../../types/global-types';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport { TxVariants } from '../tx-variants';\nimport type { PayButtonFunctionProps, UIElementStatus } from '../internal/UIElement/types';\nimport UIElement from '../internal/UIElement';\nimport PayButton from '../internal/PayButton';\nimport type { ICore } from '../../core/types';\nimport {\n    ANALYTICS_FOCUS_STR,\n    ANALYTICS_CONFIGURED_STR,\n    ANALYTICS_UNFOCUS_STR,\n    ANALYTICS_VALIDATION_ERROR_STR,\n    ANALYTICS_RENDERED_STR\n} from '../../core/Analytics/constants';\nimport { ALL_SECURED_FIELDS } from '../internal/SecuredFields/lib/constants';\nimport { FieldErrorAnalyticsObject, SendAnalyticsObject } from '../../core/Analytics/types';\nimport { hasOwnProperty } from '../../utils/hasOwnProperty';\nimport AdyenCheckoutError, { IMPLEMENTATION_ERROR } from '../../core/Errors/AdyenCheckoutError';\nimport { getErrorMessageFromCode } from '../../core/Errors/utils';\nimport { SF_ErrorCodes } from '../../core/Errors/constants';\nimport CardInputDefaultProps from './components/CardInput/defaultProps';\n\nexport class CardElement extends UIElement<CardConfiguration> {\n    public static type = TxVariants.scheme;\n\n    private readonly clickToPayService: IClickToPayService | null;\n\n    /**\n     * Reference to the 'ClickToPayComponent'\n     */\n    private clickToPayRef = null;\n\n    constructor(checkout: ICore, props?: CardConfiguration) {\n        super(checkout, props);\n\n        if (props && !props._disableClickToPay) {\n            this.clickToPayService = createClickToPayService(this.props.configuration, this.props.clickToPayConfiguration, this.props.environment);\n            void this.clickToPayService?.initialize();\n        }\n    }\n\n    protected static defaultProps = {\n        showFormInstruction: true,\n        _disableClickToPay: false,\n        doBinLookup: true,\n        // Merge most of CardInput's defaultProps\n        ...reject(['type', 'setComponentRef']).from(CardInputDefaultProps)\n    };\n\n    public setStatus(status: UIElementStatus, props?): this {\n        if (this.componentRef?.setStatus) {\n            this.componentRef.setStatus(status, props);\n        }\n        if (this.clickToPayRef?.setStatus) {\n            this.clickToPayRef.setStatus(status, props);\n        }\n        return this;\n    }\n\n    private setClickToPayRef = ref => {\n        this.clickToPayRef = ref;\n    };\n\n    formatProps(props: CardConfiguration): CardConfiguration {\n        // The value from a session should be used, before falling back to the merchant configuration\n        const enableStoreDetails = props.session?.configuration?.enableStoreDetails ?? props.enableStoreDetails;\n\n        const isZeroAuth = props.amount?.value === 0;\n        const showStoreDetailsCheckbox = isZeroAuth ? false : enableStoreDetails;\n\n        const storedCardID = props.storedPaymentMethodId || props.id; // check if we've been passed a (checkout) processed storedCard or one that merchant has pulled from the PMs response\n        const isEcommerceStoredCard = storedCardID && props?.supportedShopperInteractions?.includes('Ecommerce'); // If we have a storedCard does it support Ecommerce (it might not if the merchant has pulled it from the PMs response)\n\n        // If we have a storedPM but it doesn't support Ecommerce - we can't make a storedCard component from it\n        if (storedCardID && !isEcommerceStoredCard) {\n            // TODO - Decide if an error is too severe? Would a console.warning suffice?\n            throw new AdyenCheckoutError(\n                IMPLEMENTATION_ERROR,\n                'You are trying to create a storedCard from a stored PM that does not support Ecommerce interactions'\n            );\n        }\n\n        return {\n            ...props,\n            // Mismatch between hasHolderName & holderNameRequired which can mean card can never be valid\n            holderNameRequired: !props.hasHolderName ? false : props.holderNameRequired,\n            // False for *stored* BCMC cards & if merchant explicitly wants to hide the CVC field\n            hasCVC: !((props.brand && props.brand === 'bcmc') || props.hideCVC),\n            // billingAddressRequired only available for non-stored cards\n            billingAddressRequired: props.storedPaymentMethodId ? false : props.billingAddressRequired,\n            // edge case where merchant has defined both an onAddressLookup callback AND set billingAddressMode: 'partial' - which leads to some strange behaviour in the address UI\n            billingAddressMode: props.onAddressLookup ? CardInputDefaultProps.billingAddressMode : props.billingAddressMode,\n            /** props.brand will be specified in the case of a StoredCard or a Bancontact component, for a regular Card we default it to 'card' */\n            brand: props.brand ?? TxVariants.card,\n            countryCode: props.countryCode ? props.countryCode.toLowerCase() : null,\n            // Required for transition period (until configuration object becomes the norm)\n            // - if merchant has defined value directly in props, use this instead\n            configuration: {\n                ...props.configuration,\n                socialSecurityNumberMode: props.configuration?.socialSecurityNumberMode ?? 'auto'\n            },\n            brandsConfiguration: props.brandsConfiguration || props.configuration?.brandsConfiguration || {},\n            icon: props.icon || props.configuration?.icon,\n            // installmentOptions of a session should be used before falling back to the merchant configuration\n            installmentOptions: props.session?.configuration?.installmentOptions || props.installmentOptions,\n            enableStoreDetails,\n            showStoreDetailsCheckbox,\n            /**\n             * Click to Pay configuration\n             * - If email is set explicitly in the configuration, then it can override the one used in the session creation\n             */\n            clickToPayConfiguration: {\n                ...props.clickToPayConfiguration,\n                disableOtpAutoFocus: props.clickToPayConfiguration?.disableOtpAutoFocus || false,\n                shopperEmail: props.clickToPayConfiguration?.shopperEmail || this.core.options?.session?.shopperEmail,\n                telephoneNumber: props.clickToPayConfiguration?.telephoneNumber || this.core.options?.session?.telephoneNumber,\n                locale: props.clickToPayConfiguration?.locale || props.i18n?.locale?.replace('-', '_')\n            },\n            ...(storedCardID && { storedPaymentMethodId: storedCardID })\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData(): CardElementData {\n        /**\n         *  this.state.selectedBrandValue will be set when:\n         *  - /binLookup detects a single brand,\n         *  - when /binLookup detects a dual-branded card and the shopper makes a brand selection\n         *  - or, in the case of a storedCard\n         */\n        const cardBrand = this.state.selectedBrandValue;\n\n        return {\n            paymentMethod: {\n                type: CardElement.type,\n                ...this.state.data,\n                ...(this.props.storedPaymentMethodId && {\n                    storedPaymentMethodId: this.props.storedPaymentMethodId,\n                    holderName: this.props.holderName ?? ''\n                }),\n                ...(cardBrand && { brand: cardBrand }),\n                ...(this.props.fundingSource && { fundingSource: this.props.fundingSource })\n            },\n            ...(this.state.billingAddress && { billingAddress: this.state.billingAddress }),\n            ...(this.state.socialSecurityNumber && { socialSecurityNumber: this.state.socialSecurityNumber }),\n            ...this.storePaymentMethodPayload,\n            ...(hasValidInstallmentsObject(this.state.installments) && { installments: this.state.installments }),\n            browserInfo: this.browserInfo,\n            origin: !!window && window.location.origin\n        };\n    }\n\n    updateStyles(stylesObj) {\n        if (this.componentRef?.updateStyles) this.componentRef.updateStyles(stylesObj);\n        return this;\n    }\n\n    setFocusOn(fieldName) {\n        if (this.componentRef?.setFocusOn) this.componentRef.setFocusOn(fieldName);\n        return this;\n    }\n\n    public onBrand = event => {\n        this.props.onBrand?.(event);\n    };\n\n    processBinLookupResponse(binLookupResponse: BinLookupResponse, isReset = false) {\n        if (this.componentRef?.processBinLookupResponse) this.componentRef.processBinLookupResponse(binLookupResponse, isReset);\n        return this;\n    }\n\n    handleUnsupportedCard(errObj) {\n        if (this.componentRef?.handleUnsupportedCard) this.componentRef.handleUnsupportedCard(errObj);\n        return this;\n    }\n\n    private handleClickToPaySubmit = (payload: ClickToPayCheckoutPayload) => {\n        this.setState({ data: { ...payload }, valid: {}, errors: {}, isValid: true });\n        this.submit();\n    };\n\n    onBinLookup(obj: CardBinLookupData) {\n        // Handler for regular card comp doesn't need this 'raw' data or to know about 'resets'\n        if (!obj.isReset) {\n            const nuObj = reject('supportedBrandsRaw').from(obj);\n            this.props.onBinLookup?.(nuObj);\n        }\n    }\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject) {\n        const { type } = analyticsObj;\n\n        if (type === ANALYTICS_RENDERED_STR || type === ANALYTICS_CONFIGURED_STR) {\n            // Check if it's a storedCard\n            if (this.constructor['type'] === 'scheme') {\n                if (hasOwnProperty(this.props, 'supportedShopperInteractions')) {\n                    analyticsObj.isStoredPaymentMethod = true;\n                    analyticsObj.brand = this.props.brand;\n                }\n            }\n        }\n\n        super.submitAnalytics(analyticsObj, this.props);\n    }\n\n    private onConfigSuccess = (obj: CardConfigSuccessData) => {\n        this.submitAnalytics({\n            type: ANALYTICS_CONFIGURED_STR\n        });\n\n        this.props.onConfigSuccess?.(obj);\n    };\n\n    private onFocus = (obj: ComponentFocusObject) => {\n        this.submitAnalytics({\n            type: ANALYTICS_FOCUS_STR,\n            target: fieldTypeToSnakeCase(obj.fieldType)\n        });\n\n        // Call merchant defined callback\n        if (ALL_SECURED_FIELDS.includes(obj.fieldType)) {\n            this.props.onFocus?.(obj.event as CardFocusData);\n        } else {\n            this.props.onFocus?.(obj);\n        }\n    };\n\n    private onBlur = (obj: ComponentFocusObject) => {\n        this.submitAnalytics({\n            type: ANALYTICS_UNFOCUS_STR,\n            target: fieldTypeToSnakeCase(obj.fieldType)\n        });\n\n        // Call merchant defined callback\n        if (ALL_SECURED_FIELDS.includes(obj.fieldType)) {\n            this.props.onBlur?.(obj.event as CardFocusData);\n        } else {\n            this.props.onBlur?.(obj);\n        }\n    };\n\n    private onValidationErrorAnalytics = (obj: FieldErrorAnalyticsObject) => {\n        this.submitAnalytics({\n            type: ANALYTICS_VALIDATION_ERROR_STR,\n            target: fieldTypeToSnakeCase(obj.fieldType),\n            validationErrorCode: obj.errorCode,\n            validationErrorMessage: getErrorMessageFromCode(obj.errorCode, SF_ErrorCodes)\n        });\n    };\n\n    public onBinValue = triggerBinLookUp(this);\n\n    get storePaymentMethodPayload() {\n        const isStoredCard = this.props.storedPaymentMethodId?.length > 0;\n        if (isStoredCard) {\n            return {};\n        }\n\n        /**\n         * For regular card, zero auth payments, we store the payment method, *if* the configuration says we should:\n         *  - For sessions, this means if the session has been created with storePaymentMethodMode: 'askForConsent'\n         *  - For the advanced flow, this means if the merchant has still set enableStoreDetails: true\n         *\n         * What we are doing is.. if for a normal payment we would show the \"Save for my next payment\" checkbox,\n         * for a zero-auth payment we effectively click the checkbox on behalf of the shopper.\n         */\n        const isZeroAuth = this.props.amount?.value === 0;\n        if (isZeroAuth) {\n            return this.props.enableStoreDetails ? { storePaymentMethod: true } : {};\n        }\n\n        // For regular card, non-zero auth payments, we store the payment method based on the checkbox value.\n        const includeStorePaymentMethod = this.props.showStoreDetailsCheckbox && typeof this.state.storePaymentMethod !== 'undefined';\n        return includeStorePaymentMethod ? { storePaymentMethod: Boolean(this.state.storePaymentMethod) } : {};\n    }\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    get icon() {\n        return this.props.icon ?? this.resources.getImage()(this.props.brand);\n    }\n\n    get brands(): { icon: any; name: string }[] {\n        const { brands, brandsConfiguration } = this.props;\n        if (brands) {\n            return brands.map(brand => {\n                const brandIcon = brandsConfiguration[brand]?.icon ?? this.props.modules.resources.getImage()(brand);\n                return { icon: brandIcon, name: brand };\n            });\n        }\n\n        return [];\n    }\n\n    get displayName(): string {\n        if (this.props.storedPaymentMethodId) {\n            return `•••• ${this.props.lastFour}`;\n        }\n\n        return this.props.name || CardElement.type;\n    }\n\n    get accessibleName(): string {\n        // Use display name, unless it's a stored payment method, there inform user\n        return (\n            (this.props.name || CardElement.type) +\n            (this.props.storedPaymentMethodId\n                ? ' ' + this.props.i18n.get('creditCard.storedCard.description.ariaLabel').replace('%@', this.props.lastFour)\n                : '')\n        );\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n\n    protected override payButton = (props: PayButtonFunctionProps) => {\n        const isZeroAuth = this.props.amount?.value === 0;\n        const isStoredCard = this.props.storedPaymentMethodId?.length > 0;\n        return (\n            <PayButton\n                {...props}\n                amount={this.props.amount}\n                secondaryAmount={this.props.secondaryAmount}\n                label={isZeroAuth && !isStoredCard ? this.props.i18n.get('payButton.saveDetails') : ''}\n                onClick={this.submit}\n            />\n        );\n    };\n\n    private renderCardInput(isCardPrimaryInput = true): h.JSX.Element {\n        return (\n            <CardInput\n                setComponentRef={this.setComponentRef}\n                {...this.props}\n                {...this.state}\n                onChange={this.setState}\n                onSubmit={this.submit}\n                handleKeyPress={this.handleKeyPress}\n                payButton={this.payButton}\n                onBrand={this.onBrand}\n                onBinValue={this.onBinValue}\n                brand={this.props.brand}\n                brandsIcons={this.brands}\n                isPayButtonPrimaryVariant={isCardPrimaryInput}\n                resources={this.resources}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onValidationErrorAnalytics={this.onValidationErrorAnalytics}\n                onConfigSuccess={this.onConfigSuccess}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                    <ClickToPayWrapper\n                        amount={this.props.amount}\n                        configuration={this.props.clickToPayConfiguration}\n                        clickToPayService={this.clickToPayService}\n                        isStandaloneComponent={false}\n                        setClickToPayRef={this.setClickToPayRef}\n                        onSetStatus={this.setElementStatus}\n                        onSubmit={this.handleClickToPaySubmit}\n                        onError={this.handleError}\n                    >\n                        {isCardPrimaryInput => this.renderCardInput(isCardPrimaryInput)}\n                    </ClickToPayWrapper>\n                </SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n\nexport default CardElement;\n","import { CardElement } from './Card';\nimport { CardElementData, CardConfiguration } from './types';\nimport { CVC_POLICY_HIDDEN } from '../internal/SecuredFields/lib/constants';\nimport { TxVariants } from '../tx-variants';\nimport type { ICore } from '../../core/types';\n\nclass BancontactElement extends CardElement {\n    public static type = TxVariants.bcmc;\n\n    constructor(checkout: ICore, props?: CardConfiguration) {\n        super(checkout, props);\n    }\n\n    protected static defaultProps = {\n        ...CardElement.defaultProps,\n        brands: ['bcmc', 'maestro', 'visa']\n    };\n\n    formatData(): CardElementData {\n        const data = super.formatData();\n        data.paymentMethod.type = this.constructor['type'];\n        return data;\n    }\n\n    /**\n     * Now that the Bancontact (BCMC) Card component can accept a number dual branded with Visa (which requires a CVC) it has to be handled differently\n     * at creation time (no automatic removing of the CVC securedField).\n     * At the same time we can't treat it as a regular 'card' component - because it needs to hide the CVC field at at startup,\n     * as well as show the BCMC logo in the number field and ignore any of the internal, regEx driven, brand detection.\n     */\n    formatProps(props: CardConfiguration) {\n        return {\n            ...super.formatProps(props),\n            /**\n             * Force type (only for the Dropin is type automatically set to 'bcmc')\n             * - this will bypass the regEx brand detection that SF normally tries to carry out when the first few digits are entered in the PAN\n             */\n            type: TxVariants.bcmc,\n            brand: TxVariants.bcmc,\n            cvcPolicy: CVC_POLICY_HIDDEN\n        };\n    }\n\n    // Disable internal event.emit() for Bancontact\n    public onBrand = event => {\n        if (this.props.onBrand) this.props.onBrand(event);\n    };\n}\n\nexport default BancontactElement;\n","import { h } from 'preact';\nimport { useState, useEffect, useRef, useMemo } from 'preact/hooks';\nimport Language from '../../../language/Language';\nimport SecuredFieldsProvider from '../../internal/SecuredFields/SFP/SecuredFieldsProvider';\nimport { SFPState } from '../../internal/SecuredFields/SFP/types';\nimport { BinLookupResponse, CardBrandsConfiguration } from '../../Card/types';\nimport SFExtensions from '../../internal/SecuredFields/binLookup/extensions';\nimport { StylesObject } from '../../internal/SecuredFields/lib/types';\nimport { Resources } from '../../../core/Context/Resources';\nimport { Placeholders, SFError } from '../../Card/components/CardInput/types';\nimport { ValidationError } from '../types';\n\ninterface SecuredFieldsProps {\n    autoFocus?: boolean;\n    brand?: string;\n    brands?: string[];\n    brandsConfiguration?: CardBrandsConfiguration;\n    clientKey?: string;\n    countryCode?: string;\n    forceCompat?: boolean;\n    i18n: Language;\n    implementationType?: string;\n    keypadFix?: boolean;\n    loadingContext?: string;\n    legacyInputMode?: boolean;\n    minimumExpiryDate?: string;\n    onAdditionalSFConfig?: () => {};\n    onAdditionalSFRemoved?: () => {};\n    onAllValid?: () => {};\n    onAutoComplete?: () => {};\n    onBinValue?: () => {};\n    onBrand?: () => {};\n    onConfigSuccess?: () => {};\n    onChange: (data) => void;\n    handleKeyPress?: (obj: KeyboardEvent) => void;\n    onError?: () => {};\n    onFieldValid?: () => {};\n    onFocus?: (e) => {};\n    onLoad?: () => {};\n    placeholders?: Placeholders;\n    rootNode: HTMLElement;\n    resources: Resources;\n    showWarnings?: boolean;\n    styles?: StylesObject;\n    trimTrailingSeparator?: boolean;\n    type: string;\n    maskSecurityCode?: boolean;\n}\n\nconst defaultProps = {\n    onChange: () => {},\n    onError: () => {},\n    onValidationError: () => {}\n};\n\nfunction CustomCardInput(props: SecuredFieldsProps) {\n    const sfp = useRef(null);\n\n    const [errors, setErrors] = useState({});\n    const [valid, setValid] = useState({});\n    const [data, setData] = useState({});\n\n    const [isSfpValid, setIsSfpValid] = useState(false);\n\n    const [issuingCountryCode, setIssuingCountryCode] = useState(null);\n\n    const [dualBrandSelectElements, setDualBrandSelectElements] = useState([]);\n    const [selectedBrandValue, setSelectedBrandValue] = useState('');\n\n    const handleSecuredFieldsChange = (sfState: SFPState): void => {\n        setData({ ...data, ...sfState.data });\n        setErrors({ ...errors, ...sfState.errors });\n        setValid({ ...valid, ...sfState.valid });\n\n        setIsSfpValid(sfState.isSfpValid);\n    };\n\n    // Farm the handlers for binLookup related functionality out to another 'extensions' file\n    const extensions = useMemo(\n        () =>\n            SFExtensions(\n                props,\n                { sfp },\n                { dualBrandSelectElements, setDualBrandSelectElements, setSelectedBrandValue, issuingCountryCode, setIssuingCountryCode }\n            ),\n        [dualBrandSelectElements, issuingCountryCode]\n    );\n\n    /**\n     * EXPECTED METHODS ON SecuredFields.this\n     */\n    this.processBinLookupResponse = (binLookupResponse: BinLookupResponse, isReset: boolean) => {\n        extensions.processBinLookup(binLookupResponse, isReset);\n    };\n\n    this.dualBrandingChangeHandler = extensions.handleDualBrandSelection;\n\n    /**\n     * EFFECT HOOKS\n     */\n    useEffect(() => {\n        // componentDidMount\n        this.setFocusOn = sfp.current.setFocusOn;\n        this.updateStyles = sfp.current.updateStyles;\n        this.showValidation = sfp.current.showValidation;\n        this.handleUnsupportedCard = sfp.current.handleUnsupportedCard;\n\n        // componentWillUnmount\n        return () => {\n            sfp.current.destroy();\n        };\n    }, []);\n\n    /**\n     * Main 'componentDidUpdate' handler\n     */\n    useEffect(() => {\n        const sfStateErrorsObj = sfp.current.mapErrorsToValidationRuleResult();\n\n        const mappedErrors = { ...errors, ...sfStateErrorsObj }; // maps sfErrors\n\n        props.onChange({\n            data,\n            valid,\n            errors: mappedErrors,\n            isValid: isSfpValid,\n            selectedBrandValue\n        });\n\n        // Create an array of Validation error objects and send to callback\n        if (Object.keys(mappedErrors).length) {\n            const validationErrors: ValidationError[] = Object.entries(mappedErrors).map(([fieldType, error]) => {\n                const valErr: ValidationError = {\n                    fieldType,\n                    ...(error ? (error as SFError) : { error: '', rootNode: this.props.rootNode })\n                };\n                return valErr;\n            });\n            this.props.onValidationError?.(validationErrors);\n        }\n    }, [data, valid, errors, selectedBrandValue]);\n\n    /**\n     * RENDER\n     */\n    // prettier-ignore\n    return (\n        <SecuredFieldsProvider\n            ref={sfp}\n            {...extractPropsForSFP(props)}\n            type={props.brand}\n            onChange={handleSecuredFieldsChange}\n            render={() => null}\n        />\n    );\n}\n\nCustomCardInput.defaultProps = defaultProps;\n\nexport default CustomCardInput;\n\nconst extractPropsForSFP = (props: SecuredFieldsProps) => {\n    return {\n        autoFocus: props.autoFocus,\n        brands: props.brands,\n        brandsConfiguration: props.brandsConfiguration,\n        clientKey: props.clientKey,\n        forceCompat: props.forceCompat,\n        // countryCode: props.countryCode, // only used for korean cards when koreanAuthenticationRequired is true\n        i18n: props.i18n,\n        implementationType: props.implementationType,\n        keypadFix: props.keypadFix,\n        legacyInputMode: props.legacyInputMode,\n        loadingContext: props.loadingContext,\n        minimumExpiryDate: props.minimumExpiryDate,\n        onAdditionalSFConfig: props.onAdditionalSFConfig,\n        onAdditionalSFRemoved: props.onAdditionalSFRemoved,\n        onAllValid: props.onAllValid,\n        onAutoComplete: props.onAutoComplete,\n        onBinValue: props.onBinValue,\n        onBrand: props.onBrand,\n        // onChange // set directly\n        onConfigSuccess: props.onConfigSuccess,\n        handleKeyPress: props.handleKeyPress,\n        onError: props.onError,\n        onFieldValid: props.onFieldValid,\n        onFocus: props.onFocus,\n        onLoad: props.onLoad,\n        // render // set directly\n        rootNode: props.rootNode,\n        showWarnings: props.showWarnings,\n        styles: props.styles,\n        trimTrailingSeparator: props.trimTrailingSeparator,\n        resources: props.resources,\n        maskSecurityCode: props.maskSecurityCode,\n        placeholders: props.placeholders\n    };\n};\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement';\nimport CustomCardInput from './CustomCardInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport triggerBinLookUp from '../internal/SecuredFields/binLookup/triggerBinLookUp';\nimport { CardBinLookupData, CardFocusData } from '../internal/SecuredFields/lib/types';\nimport { BrandObject } from '../Card/types';\nimport { getCardImageUrl, fieldTypeToSnakeCase } from '../internal/SecuredFields/utils';\nimport { TxVariants } from '../tx-variants';\nimport { CustomCardConfiguration } from './types';\nimport { ANALYTICS_FOCUS_STR, ANALYTICS_UNFOCUS_STR } from '../../core/Analytics/constants';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\n\nexport class CustomCard extends UIElement<CustomCardConfiguration> {\n    public static type = TxVariants.customCard;\n\n    public static analyticsType = 'custom-scheme';\n\n    protected static defaultProps = {\n        onBinLookup: () => {},\n        brandsConfiguration: {}\n    };\n\n    private brand = TxVariants.card;\n\n    formatProps(props: CustomCardConfiguration) {\n        return {\n            ...props,\n            type: TxVariants.customCard\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        const sfBrand = this.state.selectedBrandValue;\n        return {\n            paymentMethod: {\n                type: 'scheme',\n                ...this.state.data,\n                ...(sfBrand && { brand: sfBrand })\n            },\n            browserInfo: this.browserInfo,\n            origin: !!window && window.location.origin\n        };\n    }\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject) {\n        super.submitAnalytics(analyticsObj, this.props);\n    }\n\n    updateStyles(stylesObj) {\n        if (this.componentRef?.updateStyles) this.componentRef.updateStyles(stylesObj);\n        return this;\n    }\n\n    setFocusOn(frame) {\n        if (this.componentRef?.setFocusOn) this.componentRef.setFocusOn(frame);\n        return this;\n    }\n\n    processBinLookupResponse(binLookupResponse) {\n        if (this.componentRef?.processBinLookupResponse) this.componentRef.processBinLookupResponse(binLookupResponse);\n        return this;\n    }\n\n    dualBrandingChangeHandler(e: Event | string) {\n        if (this.componentRef?.dualBrandingChangeHandler) this.componentRef.dualBrandingChangeHandler(e);\n        return this;\n    }\n\n    handleUnsupportedCard(errObj) {\n        if (this.componentRef?.handleUnsupportedCard) this.componentRef.handleUnsupportedCard(errObj);\n        return this;\n    }\n\n    onBinLookup(obj: CardBinLookupData) {\n        const nuObj = { ...obj };\n        nuObj.rootNode = this._node;\n\n        if (!nuObj.isReset) {\n            // Add brandImage urls, first checking if the merchant has configured their own one for the brand\n            nuObj.supportedBrandsRaw = obj.supportedBrandsRaw?.map((item: BrandObject) => {\n                item.brandImageUrl = this.props.brandsConfiguration[item.brand]?.icon ?? getCardImageUrl(item.brand, this.resources);\n                return item;\n            });\n        }\n\n        this.props.onBinLookup(nuObj);\n    }\n\n    public onBinValue = triggerBinLookUp(this);\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n\n    private onFocus = (obj: CardFocusData) => {\n        this.submitAnalytics({\n            type: obj.focus === true ? ANALYTICS_FOCUS_STR : ANALYTICS_UNFOCUS_STR,\n            target: fieldTypeToSnakeCase(obj.fieldType)\n        });\n\n        // Call merchant defined callback\n        this.props.onFocus?.(obj);\n    };\n\n    protected onEnterKeyPressed = (activeElement: Element, component: UIElement) => {\n        this.props.onEnterKeyPressed?.(activeElement, component);\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <CustomCardInput\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    {...this.state}\n                    handleKeyPress={this.handleKeyPress}\n                    rootNode={this._node}\n                    onChange={this.setState}\n                    onBinValue={this.onBinValue}\n                    implementationType={'custom'}\n                    resources={this.resources}\n                    brand={this.brand}\n                    onFocus={this.onFocus}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default CustomCard;\n","import { Component, h } from 'preact';\nimport classNames from 'classnames';\n\ninterface ThreeDS2FormProps {\n    name: string;\n    action: string;\n    target: string;\n    inputName: string;\n    inputValue: string;\n    onFormSubmit: (msg: string) => void;\n}\n\nexport default class ThreeDS2Form extends Component<ThreeDS2FormProps> {\n    protected formEl;\n\n    componentDidMount() {\n        this.formEl.submit();\n        this.props.onFormSubmit(`${this.props.inputName} sent`);\n    }\n\n    render({ name, action, target, inputName, inputValue }) {\n        return (\n            <form\n                ref={ref => {\n                    this.formEl = ref;\n                }}\n                method=\"POST\"\n                className={classNames(['adyen-checkout__threeds2__form', `adyen-checkout__threeds2__form--${name}`])}\n                name={name}\n                action={action}\n                target={target}\n                style={{ display: 'none' }}\n            >\n                <input name={inputName} value={inputValue} />\n            </form>\n        );\n    }\n}\n","/**\n * Centralised window.postMessage processing function used in 3DS2 components and also by the deviceFingerprinting process\n * NOTE: this latter use case means that while the deviceFingerprinting is still completing this component is also listening to\n *  securedFields related postMessaging\n *\n * @param domain - expected domain for the postMesssage to have originated from\n * @param resolve - the resolve function from the Promise that called this function\n * @param reject - the reject function from the Promise that called this function\n * @param parseErrorObj - an error object to log in the case of unparseable data (albeit from a valid origin)\n * @param expectedType - string to check that the passed data has the expected type\n */\nimport { hasOwnProperty } from './hasOwnProperty';\nimport { PostMsgParseErrorObject } from '../components/ThreeDS2/types';\n\nconst getProcessMessageHandler =\n    (domain: string, resolve: Function, reject: Function, expectedType: string): Function =>\n    event => {\n        const parseErrorObj: PostMsgParseErrorObject = {};\n        const origin = event.origin || event.originalEvent?.origin;\n\n        if (origin !== domain) {\n            return 'Message was not sent from the expected domain';\n        }\n\n        if (typeof event.data !== 'string') {\n            return 'Event data was not of type string';\n        }\n\n        if (!event.data.length) {\n            return 'Invalid event data string';\n        }\n\n        // Try to parse the data\n        try {\n            const feedbackObj = JSON.parse(event.data);\n            if (hasOwnProperty(feedbackObj, 'type') && feedbackObj.type === expectedType) {\n                resolve(feedbackObj);\n            } else {\n                // Silent fail - applies when RiskModule device fingerprinting is ongoing and this handler is picking up securedFields traffic\n                return 'Event data was not of expected type';\n            }\n        } catch (e) {\n            parseErrorObj.type = `${expectedType}-JSON-parse-error`;\n            parseErrorObj.comment = 'failed to JSON parse event.data';\n            parseErrorObj.extraInfo = `event.data = ${event.data}`;\n            parseErrorObj.eventDataRaw = event.data;\n\n            // TODO - decide whether to console.log/debug/error &/or call the merchant defined onError callback\n            console.debug('get-process-message-handler::CATCH::Un-parseable JSON:: parseErrorObj=', parseErrorObj);\n\n            return false;\n        }\n\n        return true;\n    };\n\nexport default getProcessMessageHandler;\n","import { ThreeDS2FlowObject } from './types';\n\nexport const THREEDS2_FINGERPRINT = 'threeDS2Fingerprint';\nexport const THREEDS2_FINGERPRINT_ERROR = '3DS2Fingerprint_Error';\nexport const THREEDS2_FINGERPRINT_SUBMIT = 'callSubmit3DS2Fingerprint_Response';\nexport const THREEDS2_CHALLENGE = 'threeDS2Challenge';\nexport const THREEDS2_CHALLENGE_ERROR = '3DS2Challenge_Error';\n\nexport const THREEDS2_ERROR = 'threeDS2Error';\nexport const THREEDS2_FULL = 'threeDS2';\nexport const THREEDS2_NUM = '3DS2';\n\nexport const MISSING_TOKEN_IN_ACTION_MSG = 'Missing \"token\" property from threeDS2 action';\n\nexport const DEFAULT_CHALLENGE_WINDOW_SIZE = '02';\n\nexport const THREEDS_METHOD_TIMEOUT = 10000;\nexport const CHALLENGE_TIMEOUT = 600000;\n\nexport const TIMEOUT = 'timeout';\n\nexport const CHALLENGE_TIMEOUT_REJECT_OBJECT: ThreeDS2FlowObject = {\n    result: {\n        transStatus: 'U'\n    },\n    type: 'challengeResult',\n    errorCode: TIMEOUT\n};\n\nexport const FAILED_METHOD_STATUS_RESOLVE_OBJECT: ThreeDS2FlowObject = {\n    result: {\n        threeDSCompInd: 'N'\n    },\n    type: 'fingerPrintResult'\n};\n\nexport const FAILED_METHOD_STATUS_RESOLVE_OBJECT_TIMEOUT: ThreeDS2FlowObject = {\n    result: {\n        threeDSCompInd: 'N'\n    },\n    type: 'fingerPrintResult',\n    errorCode: TIMEOUT\n};\n\n// Re. EMV 3-D Specification: EMVCo_3DS_Spec_210_1017.pdf\nexport const CHALLENGE_WINDOW_SIZES = {\n    '01': ['250px', '400px'],\n    '02': ['390px', '400px'],\n    '03': ['500px', '600px'],\n    '04': ['600px', '400px'],\n    '05': ['100%', '100%']\n};\n","/**\n *  Used to retrieve the origin from a url\n *\n *  @remarks\n *  Uses a regex to get origin (can't handle localhost origins)\n *\n *  @param url - URL\n *  @returns The origin of the url\n */\nexport const getOrigin = (url: string): string => {\n    const originRegex = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n    const matches = originRegex.exec(url);\n\n    if (!matches) return null;\n\n    const [, protocol, separator, host, port] = matches;\n\n    if (!protocol || !separator || !host) return null;\n\n    return `${protocol}:${separator}${host}${port ? `:${port}` : ''}`;\n};\n\nexport default getOrigin;\n","import { DecodeObject } from '../types/global-types';\n\nexport const NOT_BASE64_ERROR = 'not base64';\nexport const BASE64_MALFORMED_URI_ERROR = 'malformed URI sequence';\n\nconst b64DecodeUnicode = str =>\n    /**\n     * The \"Unicode Problem\" Since DOMStrings are 16-bit-encoded strings:\n     * In most browsers calling window.btoa on a Unicode string will cause\n     * a Character Out Of Range exception if a character exceeds the range\n     * of a 8-bit ASCII-encoded character.\n     * This method solves the problem\n     */\n    decodeURIComponent(Array.prototype.map.call(window.atob(str), c => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`).join(''));\n\n/**\n * @internal\n */\nconst base64 = {\n    decode: (pData: string): DecodeObject => {\n        if (!base64.isBase64(pData)) {\n            return {\n                success: false,\n                error: NOT_BASE64_ERROR\n            };\n        }\n\n        try {\n            const data = b64DecodeUnicode(pData);\n            return {\n                success: true,\n                data\n            };\n        } catch (e) {\n            return {\n                success: false,\n                error: BASE64_MALFORMED_URI_ERROR\n            };\n        }\n    },\n\n    encode: pData => window.btoa(pData),\n\n    isBase64: pDataStr => {\n        if (!pDataStr) {\n            return false;\n        }\n\n        if (pDataStr.length % 4) {\n            return false;\n        }\n\n        try {\n            return window.btoa(window.atob(pDataStr)) === pDataStr;\n        } catch (e) {\n            return false;\n        }\n    }\n};\n\nexport default base64;\n","import { CHALLENGE_WINDOW_SIZES, DEFAULT_CHALLENGE_WINDOW_SIZE } from '../constants';\nimport { getOrigin } from '../../../utils/getOrigin';\nimport base64 from '../../../utils/base64';\nimport { ChallengeData, ThreeDS2Token, FingerPrintData, ResultObject, FingerprintResolveData, ChallengeResolveData } from '../types';\nimport { pick } from '../../../utils/commonUtils';\nimport { DecodeObject } from '../../../types/global-types';\nimport { ErrorObject } from '../../../core/Errors/types';\n\n/**\n * Check if we have been passed an ErrorObject because either base64 decoding or JSON.parse failed\n * @param obj -\n */\nexport const isErrorObject = (obj: ErrorObject | ThreeDS2Token): boolean => {\n    return 'success' in obj && !obj.success;\n};\n\nexport const decodeAndParseToken = (token: string): ThreeDS2Token | ErrorObject => {\n    const decodedToken: DecodeObject = base64.decode(token);\n    if (decodedToken.success) {\n        try {\n            return JSON.parse(decodedToken.data) as ThreeDS2Token;\n        } catch (e) {\n            return {\n                success: false,\n                error: 'Could not JSON parse token'\n            };\n        }\n    }\n\n    // base64.decode failed - object will contain error msg: 'not base64' or 'malformed URI sequence'\n    return decodedToken as ErrorObject;\n};\n\n/**\n * Performs JSON.stringify on passed object & and base64 encodes result\n * @param obj -\n * @returns encoded result\n */\nexport const encodeObject = obj => {\n    if (!obj || !Object.keys(obj).length) {\n        throw new Error('No (populated) data object to encode');\n    }\n    return base64.encode(JSON.stringify(obj));\n};\n\n/**\n * Accepts a size string for the challenge window & returns it if it is valid else returns a default value\n * @param sizeStr - the size string to check the validity of\n * @returns a valid size string\n */\nexport const validateChallengeWindowSize = (sizeStr: string): string => {\n    const sizeString = sizeStr.length === 1 ? `0${sizeStr}` : sizeStr;\n    const hasSize = Object.prototype.hasOwnProperty.call(CHALLENGE_WINDOW_SIZES, sizeString);\n    return hasSize ? sizeString : DEFAULT_CHALLENGE_WINDOW_SIZE;\n};\n\n/**\n * Accepts a size string for the challenge window & returns the corresponding array of w/h values\n * @param sizeStr -\n */\nexport const getChallengeWindowSize = (sizeStr: string): string[] => CHALLENGE_WINDOW_SIZES[validateChallengeWindowSize(sizeStr)];\n\n/**\n *  prepareChallengeData\n *\n *  Requires an object containing the challenge parameters:\n *  @param token - challengeToken string received from /submitThreeDS2Fingerprint, /details or /payments call: contains acsTransID, acsURL, messageVersion,\n *     threeDSNotificationURL and threeDSServerTransID\n *  @param size - one of five possible challenge window sizes\n */\nexport const prepareChallengeData = ({ token, size }): ChallengeData | ErrorObject => {\n    const decodedChallengeToken = decodeAndParseToken(token);\n\n    if (isErrorObject(decodedChallengeToken)) {\n        return decodedChallengeToken as ErrorObject;\n    }\n\n    const { acsTransID, acsURL, messageVersion, threeDSNotificationURL, threeDSServerTransID } = decodedChallengeToken as ThreeDS2Token;\n    const notificationURLOrigin = getOrigin(threeDSNotificationURL);\n\n    return {\n        acsURL,\n        cReqData: {\n            acsTransID,\n            messageVersion,\n            threeDSServerTransID,\n            messageType: 'CReq',\n            challengeWindowSize: validateChallengeWindowSize(size)\n        },\n        iframeSizeArr: getChallengeWindowSize(size),\n        postMessageDomain: notificationURLOrigin\n    } as ChallengeData;\n};\n\n/**\n *  prepareFingerPrintData\n *\n *  Requires an object containing the fingerprint parameters:\n *  @param token - fingerprintToken string received from /payments call: contains threeDSMethodNotificationURL, threeDSMethodUrl and\n *     threeDSServerTransID\n *  @param notificationURL - the URL that the final notification is expected to be postMessaged from.\n *\n *  NOTE: we don't expect merchants to alter the default by passing in a notificationURL of their own via props;\n *  and if 3DS2 is being done via createFromAction or handleAction we won't accept it.\n *  But if the merchant is using checkout.create('threeDS2DeviceFingerprint') we still support the fact that they might want to set their own\n *  notificationURL (aka threeDSMethodNotificationURL)\n */\nexport const prepareFingerPrintData = ({ token, notificationURL }): FingerPrintData | ErrorObject => {\n    const decodedFingerPrintToken = decodeAndParseToken(token);\n\n    if (isErrorObject(decodedFingerPrintToken)) {\n        return decodedFingerPrintToken as ErrorObject;\n    }\n\n    const { threeDSMethodNotificationURL, threeDSMethodUrl: threeDSMethodURL, threeDSServerTransID } = decodedFingerPrintToken as ThreeDS2Token;\n    const receivedNotificationURL = notificationURL || threeDSMethodNotificationURL;\n    const notificationURLOrigin = getOrigin(receivedNotificationURL);\n\n    return {\n        threeDSServerTransID,\n        threeDSMethodURL,\n        threeDSMethodNotificationURL: receivedNotificationURL,\n        postMessageDomain: notificationURLOrigin\n    } as FingerPrintData;\n};\n\nexport const createFingerprintResolveData = (dataKey: string, resultObj: ResultObject, paymentData: string): FingerprintResolveData => ({\n    data: {\n        [dataKey]: encodeObject({ threeDSCompInd: resultObj.threeDSCompInd }),\n        paymentData\n    }\n});\n\n// Old 3DS2 flow\nexport const createOldFingerprintResolveData = (dataKey: string, resultObj: ResultObject, paymentData: string): any => ({\n    data: {\n        details: { 'threeds2.fingerprint': encodeObject(resultObj) },\n        paymentData\n    }\n});\n\nexport const createChallengeResolveData = (dataKey: string, transStatus: string, authorisationToken: string): ChallengeResolveData => ({\n    data: {\n        details: { [dataKey]: encodeObject({ transStatus, authorisationToken }) }\n    }\n});\n\n// Needed for old 3DS2 flow & threeds2InMDFlow\nexport const createOldChallengeResolveData = (dataKey: string, transStatus: string, authorisationToken: string): any => ({\n    data: {\n        details: { 'threeds2.challengeResult': encodeObject({ transStatus }) },\n        paymentData: authorisationToken\n    }\n});\n\n/**\n *\n * Takes a string and encodes it as a base64url string\n * (https://en.wikipedia.org/wiki/Base64#URL_applications)\n * (See also https://tools.ietf.org/html/rfc7515)\n *\n * @example\n * ```\n * const jsonStr = JSON.stringify( {name:'john', surname:'smith'} );\n * const base64url = encodeBase64URL(jsonStr);\n * ```\n *\n * @param dataStr - data, as a string, to be encoded\n *\n * @returns base64URL - a base64url encoded string\n */\nexport const encodeBase64URL = (dataStr: string): string => {\n    const base64Data = window.btoa(dataStr);\n    let base64url = base64Data.split('=')[0]; // Remove any trailing '='s\n\n    base64url = base64url.replace(/\\+/g, '-'); // 62nd char of encoding\n    base64url = base64url.replace(/\\//g, '_'); // 63rd char of encoding\n\n    return base64url;\n};\n\nconst fingerprintFlowPropsDropin = ['elementRef'];\n\n/**\n *  Must contain all props needed for the challenge stage since, in the new 3DS2 flow, the fingerprint component will be the \"component\" reference\n *  if the /submitThreeDS2Fingerprint response dictates we \"handleAction\" to create a challenge\n */\nconst fingerprintFlowProps = ['createFromAction', 'onAdditionalDetails'];\n\n/**\n * Add props specifically needed for the type of 3DS2 flow: fingerprint or challenge\n *\n * @param actionSubtype - 3DS2 flow type: fingerprint or challenge\n * @param props - object from which to extract particular properties\n */\nexport const get3DS2FlowProps = (actionSubtype, props) => {\n    if (actionSubtype === 'fingerprint') {\n        // elementRef exists when the fingerprint component is created from the Dropin\n        const fingerprintProps = props.elementRef ? fingerprintFlowPropsDropin : fingerprintFlowProps;\n        const rtnObj = pick(fingerprintProps).from(props);\n        rtnObj.showSpinner = !props.isDropin;\n        rtnObj.statusType = 'loading';\n        return rtnObj;\n    }\n\n    // Challenge\n    return {\n        statusType: 'custom',\n        i18n: props.i18n\n    };\n};\n","/**\n * Tests if a passed promise settles before a certain amount of time has elapsed\n *\n * @param ms - number of milliseconds the passed promise has to settle\n * @param promise - the passed promise\n * @param timeOutObject - the object that the promiseTimeout will reject with if the passed promise doesn't settle in time\n */\nconst promiseTimeout = (ms: number, promise: Promise<any>, timeOutObject: object) => {\n    let timer;\n\n    const promiseTimer: Promise<any> = new Promise((resolve, reject): void => {\n        // Create a timeout to reject promise if not resolved\n        timer = setTimeout((): void => {\n            reject(timeOutObject);\n        }, ms);\n\n        promise\n            .then((res): void => {\n                clearTimeout(timer);\n                resolve(res);\n            })\n            .catch((err): void => {\n                clearTimeout(timer);\n                reject(err);\n            });\n    });\n\n    const cancelTimer = (): void => {\n        clearTimeout(timer);\n    };\n\n    return {\n        promise: promiseTimer,\n        cancel: cancelTimer\n    };\n};\n\nexport default promiseTimeout;\n","import { Component, h } from 'preact';\nimport classNames from 'classnames';\nimport Iframe from '../../../internal/IFrame';\nimport Spinner from '../../../internal/Spinner';\nimport ThreeDS2Form from '../Form';\nimport getProcessMessageHandler from '../../../../utils/get-process-message-handler';\nimport { encodeBase64URL } from '../utils';\nimport promiseTimeout from '../../../../utils/promiseTimeout';\nimport { CHALLENGE_TIMEOUT, CHALLENGE_TIMEOUT_REJECT_OBJECT, THREEDS2_NUM } from '../../constants';\nimport { DoChallenge3DS2Props, DoChallenge3DS2State } from './types';\nimport { ThreeDS2FlowObject } from '../../types';\n\nconst iframeName = 'threeDSIframe';\n\nclass DoChallenge3DS2 extends Component<DoChallenge3DS2Props, DoChallenge3DS2State> {\n    private processMessageHandler;\n    private challengePromise: { cancel: () => void; promise: Promise<any> };\n\n    constructor(props) {\n        super(props);\n\n        /**\n         * Create and Base64Url encode a JSON object containing the serverTransactionID & threeDSMethodNotificationURL\n         */\n        const jsonStr = JSON.stringify(this.props.cReqData);\n        const base64URLencodedData = encodeBase64URL(jsonStr);\n        this.state = { base64URLencodedData, status: 'init' };\n    }\n\n    private iframeCallback = () => {\n        this.setState({ status: 'iframeLoaded' });\n        // On Test - actually calls-back 3 times: once for challenge screen, once again as challenge.html reloads after the challenge is submitted, and once for redirect to threeDSNotificationURL.\n        // But for the purposes of calling the merchant defined onActionHandled callback - we only want to do it once\n        if (this.state.status === 'init') {\n            this.props.onActionHandled?.({ componentType: '3DS2Challenge', actionDescription: `${THREEDS2_NUM} challenge iframe loaded` });\n        }\n    };\n\n    private get3DS2ChallengePromise(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            /**\n             * Listen for postMessage responses from the notification url\n             */\n            this.processMessageHandler = getProcessMessageHandler(this.props.postMessageDomain, resolve, reject, 'challengeResult');\n\n            window.addEventListener('message', this.processMessageHandler);\n        });\n    }\n\n    componentDidMount() {\n        // Render challenge\n        this.challengePromise = promiseTimeout(CHALLENGE_TIMEOUT, this.get3DS2ChallengePromise(), CHALLENGE_TIMEOUT_REJECT_OBJECT);\n        this.challengePromise.promise\n            .then((resolveObject: ThreeDS2FlowObject) => {\n                window.removeEventListener('message', this.processMessageHandler);\n                this.props.onCompleteChallenge(resolveObject);\n            })\n            /** Catch, for when Challenge times-out */\n            .catch((rejectObject: ThreeDS2FlowObject) => {\n                window.removeEventListener('message', this.processMessageHandler);\n                this.props.onErrorChallenge(rejectObject);\n            });\n    }\n\n    componentWillUnmount() {\n        if (this.challengePromise) this.challengePromise.cancel();\n        window.removeEventListener('message', this.processMessageHandler);\n    }\n\n    render({ acsURL, cReqData, iframeSizeArr, onFormSubmit }, { base64URLencodedData, status }) {\n        const [width, height] = iframeSizeArr;\n\n        return (\n            <div\n                className={classNames([\n                    'adyen-checkout__threeds2__challenge',\n                    `adyen-checkout__threeds2__challenge--${cReqData.challengeWindowSize}`\n                ])}\n            >\n                {status !== 'iframeLoaded' && <Spinner />}\n\n                <Iframe name={iframeName} width={width} height={height} callback={this.iframeCallback} />\n                <ThreeDS2Form\n                    name={'cReqForm'}\n                    action={acsURL}\n                    target={iframeName}\n                    inputName={'creq'}\n                    inputValue={base64URLencodedData}\n                    onFormSubmit={onFormSubmit}\n                />\n            </div>\n        );\n    }\n}\n\nexport default DoChallenge3DS2;\n","import { Component, h } from 'preact';\nimport DoChallenge3DS2 from './DoChallenge3DS2';\nimport { createChallengeResolveData, prepareChallengeData, createOldChallengeResolveData, isErrorObject } from '../utils';\nimport { PrepareChallenge3DS2Props, PrepareChallenge3DS2State, StatusErrorInfoObject } from './types';\nimport { ChallengeData, ResultObject, ThreeDS2FlowObject, ErrorCodeObject } from '../../types';\nimport '../../ThreeDS2.scss';\nimport Img from '../../../internal/Img';\nimport './challenge.scss';\nimport { hasOwnProperty } from '../../../../utils/hasOwnProperty';\nimport useImage from '../../../../core/Context/useImage';\nimport AdyenCheckoutError, { ERROR } from '../../../../core/Errors/AdyenCheckoutError';\nimport { SendAnalyticsObject } from '../../../../core/Analytics/types';\nimport {\n    THREEDS2_CHALLENGE,\n    THREEDS2_CHALLENGE_ERROR,\n    THREEDS2_FULL,\n    THREEDS2_NUM,\n    MISSING_TOKEN_IN_ACTION_MSG,\n    THREEDS2_ERROR\n} from '../../constants';\nimport { isValidHttpUrl } from '../../../../utils/isValidURL';\nimport { ANALYTICS_ERROR_TYPE, Analytics3DS2Errors, Analytics3DS2Events } from '../../../../core/Analytics/constants';\nimport { ErrorObject } from '../../../../core/Errors/types';\n\nclass PrepareChallenge3DS2 extends Component<PrepareChallenge3DS2Props, PrepareChallenge3DS2State> {\n    public static defaultProps = {\n        onComplete: () => {},\n        onError: () => {},\n        isMDFlow: false\n    };\n\n    constructor(props) {\n        super(props);\n\n        if (this.props.token) {\n            const challengeData: ChallengeData | ErrorObject = prepareChallengeData({\n                token: this.props.token,\n                size: this.props.challengeWindowSize || this.props.size // TODO confirm that this.props.size is legacy and can be removed\n            });\n\n            this.state = {\n                status: 'init',\n                challengeData: challengeData as ChallengeData\n            };\n        } else {\n            // Will be picked up in componentDidMount\n            this.state = { challengeData: { success: false, error: MISSING_TOKEN_IN_ACTION_MSG } };\n\n            console.debug(`${THREEDS2_CHALLENGE_ERROR}: ${MISSING_TOKEN_IN_ACTION_MSG}`);\n        }\n    }\n\n    public onFormSubmit = (msg: string) => {\n        this.props.onSubmitAnalytics({\n            type: THREEDS2_FULL,\n            message: msg,\n            subtype: Analytics3DS2Events.CHALLENGE_DATA_SENT\n        });\n    };\n\n    componentDidMount() {\n        const hasChallengeData = !isErrorObject(this.state.challengeData);\n\n        if (hasChallengeData) {\n            const shouldAllowHttpDomains =\n                /** Allow http urls if in development and testing against localhost:8080 */\n                (process.env.NODE_ENV === 'development' && process.env.__CLIENT_ENV__?.indexOf('localhost:8080') > -1) ||\n                /**\n                 * Allows the checkoutshopper demo on localhost:8080 to work -\n                 *  requires a configuration in localhost of environment: 'test', _environmentUrls: {api: 'http://localhost:8080/'}\n                 */\n                (this.props.environment === 'test' && this.props._environmentUrls?.api?.includes('http://localhost:8080'));\n\n            /**\n             * Check the structure of the created challengeData\n             */\n            const { acsURL } = this.state.challengeData as ChallengeData;\n            const hasValidAcsURL = isValidHttpUrl(acsURL, shouldAllowHttpDomains);\n\n            // Only render component if we have an acsURL.\n            if (!hasValidAcsURL) {\n                // Set UI error & call onError callback\n                this.setError(\n                    {\n                        errorInfo: `${Analytics3DS2Errors.TOKEN_IS_MISSING_ACSURL}: ${this.props.i18n.get('err.gen.9102')}` //\n                    },\n                    true\n                );\n\n                // Send error to analytics endpoint // TODO - check logs to see if this *ever* happens\n                const errorCodeObject: SendAnalyticsObject = {\n                    type: THREEDS2_ERROR,\n                    code: Analytics3DS2Errors.TOKEN_IS_MISSING_ACSURL,\n                    errorType: ANALYTICS_ERROR_TYPE.apiError,\n                    message: `${THREEDS2_CHALLENGE_ERROR}: Decoded token is missing a valid acsURL property`\n                    // metadata: { acsURL } // NEW TODO - check acsURL isn't secret\n                };\n                this.props.onSubmitAnalytics(errorCodeObject);\n\n                console.debug('### PrepareChallenge3DS2::exiting:: no valid acsURL');\n                return;\n            }\n\n            const { acsTransID, messageVersion, threeDSServerTransID } = (this.state.challengeData as ChallengeData).cReqData;\n\n            // Only render component if we have a acsTransID, messageVersion & threeDSServerTransID\n            if (!acsTransID || !messageVersion || !threeDSServerTransID) {\n                // Set UI error & call onError callback\n                this.setError(\n                    {\n                        errorInfo: `${Analytics3DS2Errors.TOKEN_IS_MISSING_OTHER_PROPS}: ${this.props.i18n.get('err.gen.9102')}`\n                        // errorObj: this.state.challengeData // TODO Decide if we want to expose this data\n                    },\n                    true\n                );\n\n                // Send error to analytics endpoint // TODO - check logs to see if this *ever* happens\n                this.props.onSubmitAnalytics({\n                    type: THREEDS2_ERROR,\n                    code: Analytics3DS2Errors.TOKEN_IS_MISSING_OTHER_PROPS,\n                    errorType: ANALYTICS_ERROR_TYPE.apiError,\n                    message: `${THREEDS2_CHALLENGE_ERROR}: Decoded token is missing one or more of the following properties (acsTransID | messageVersion | threeDSServerTransID)`\n                } as SendAnalyticsObject);\n\n                console.debug(\n                    '### PrepareChallenge3DS2::exiting:: missing one or more of the following properties (acsTransID | messageVersion | threeDSServerTransID)'\n                );\n                return;\n            }\n\n            // Proceed to allow component to render\n            this.setState({ status: 'performingChallenge' });\n            //\n        } else {\n            const errorMsg: string = (this.state.challengeData as ErrorObject).error;\n\n            const errorCode =\n                errorMsg.indexOf(MISSING_TOKEN_IN_ACTION_MSG) > -1\n                    ? Analytics3DS2Errors.ACTION_IS_MISSING_TOKEN\n                    : Analytics3DS2Errors.TOKEN_DECODE_OR_PARSING_FAILED;\n\n            // Set UI error & call onError callback\n            this.setError(\n                {\n                    errorInfo:\n                        errorMsg.indexOf(MISSING_TOKEN_IN_ACTION_MSG) > -1\n                            ? `${Analytics3DS2Errors.ACTION_IS_MISSING_TOKEN}: ${this.props.i18n.get('err.gen.9102')}`\n                            : `${Analytics3DS2Errors.TOKEN_DECODE_OR_PARSING_FAILED}: ${this.props.i18n.get('err.gen.9102')}`\n                    // errorObj: this.state.challengeData // TODO Decide if we want to expose this data\n                },\n                true\n            );\n\n            // Send error to analytics endpoint // TODO - check logs to see if the base64 decoding errors *ever* happen\n            this.props.onSubmitAnalytics({\n                type: THREEDS2_ERROR,\n                code: errorCode,\n                errorType: ANALYTICS_ERROR_TYPE.apiError,\n                message: `${THREEDS2_CHALLENGE_ERROR}: ${errorMsg}` // can be: 'Missing \"token\" property from threeDS2 action', 'not base64', 'malformed URI sequence' or 'Could not JSON parse token'\n            });\n\n            console.debug('### PrepareChallenge3DS2::exiting:: no challengeData');\n        }\n    }\n\n    setStatusComplete(resultObj: ResultObject, errorCodeObject: ErrorCodeObject = null) {\n        this.setState({ status: 'complete' }, () => {\n            /**\n             * Create the data in the way that the /details endpoint expects.\n             *  This is different for the flow triggered by the threeds2InMDFlow process than for the new, v67, 'threeDS2' action\n             */\n            const resolveDataFunction = this.props.isMDFlow ? createOldChallengeResolveData : createChallengeResolveData;\n            const data = resolveDataFunction(this.props.dataKey, resultObj.transStatus, this.props.paymentData);\n\n            if (errorCodeObject) {\n                console.debug('### PrepareChallenge3DS2::errorCodeObject::', errorCodeObject);\n            }\n\n            let analyticsObject: SendAnalyticsObject;\n\n            /** Are we in an \"error\" i.e. timeout or no transStatus, scenario? If so, submit analytics about it */\n            const finalResObject = errorCodeObject ? errorCodeObject : resultObj;\n            if (finalResObject.errorCode) {\n                const errorTypeAndCode = {\n                    code: finalResObject.errorCode === 'timeout' ? Analytics3DS2Errors.THREEDS2_TIMEOUT : Analytics3DS2Errors.NO_TRANSSTATUS,\n                    errorType: finalResObject.errorCode === 'timeout' ? ANALYTICS_ERROR_TYPE.network : ANALYTICS_ERROR_TYPE.apiError\n                };\n\n                // Challenge process has timed out,\n                // or, It's an error reported by the backend 'cos no transStatus could be retrieved // TODO - check logs to see if this *ever* happens\n                analyticsObject = {\n                    type: THREEDS2_ERROR,\n                    message: (finalResObject as ErrorCodeObject).message,\n                    ...errorTypeAndCode\n                };\n\n                // Send error to analytics endpoint\n                this.props.onSubmitAnalytics(analyticsObject);\n            }\n\n            /** Calculate \"result\" for analytics */\n            let result: string;\n\n            switch (resultObj?.transStatus) {\n                case 'Y':\n                    result = 'success';\n                    break;\n                case 'N':\n                    result = 'failed';\n                    break;\n                case 'U':\n                    result = !errorCodeObject ? 'cancelled' : 'timeout';\n                    break;\n                default:\n            }\n            if (resultObj?.errorCode) {\n                result = 'noTransStatus';\n            }\n\n            /** Create log object - the process is completed, one way or another */\n            analyticsObject = {\n                type: THREEDS2_FULL,\n                message: `${THREEDS2_NUM} challenge has completed`,\n                subtype: Analytics3DS2Events.CHALLENGE_COMPLETED,\n                result\n            };\n\n            // Send log to analytics endpoint\n            this.props.onSubmitAnalytics(analyticsObject);\n\n            /**\n             * Equals call to onAdditionalDetails (except for in 3DS2InMDFlow)\n             */\n            this.props.onComplete(data);\n        });\n    }\n\n    /**\n     * Display error in the UI,\n     * and, optionally, decide whether to send any of these errors to the merchant defined onError callback\n     *\n     * @param errorInfoObj -\n     * @param isFatal -\n     */\n    setError(errorInfoObj: StatusErrorInfoObject, isFatal: boolean) {\n        this.setState({ status: 'error', errorInfo: errorInfoObj.errorInfo });\n\n        // Decide whether to call this.props.onError\n        if (isFatal) {\n            this.props.onError(new AdyenCheckoutError(ERROR, errorInfoObj.errorInfo, { cause: errorInfoObj.errorObj }));\n        }\n    }\n\n    render(_, { challengeData }) {\n        const getImage = useImage();\n        if (this.state.status === 'performingChallenge') {\n            return (\n                <DoChallenge3DS2\n                    onCompleteChallenge={(challenge: ThreeDS2FlowObject) => {\n                        let errorCodeObject: ErrorCodeObject = null;\n\n                        // Challenge has resulted in an error (no transStatus could be retrieved) - but we still treat this as a valid scenario\n                        if (hasOwnProperty(challenge.result, 'errorCode') && challenge.result.errorCode.length) {\n                            // Tell the merchant there's been an error\n                            errorCodeObject = {\n                                errorCode: challenge.result.errorCode,\n                                message: `${THREEDS2_CHALLENGE_ERROR}: ${\n                                    challenge.result.errorDescription ? challenge.result.errorDescription : 'no transStatus could be retrieved'\n                                }`\n                            };\n\n                            /**\n                             * NOTE: we can now use this.props.isMDFlow to decide if we want to send any of these errors to the onError handler\n                             *  - this is problematic in the regular flow since merchants tend to treat any calls to their onError handler as 'fatal',\n                             *   but in the MDFlow we control what the onError handler does.\n                             */\n                            if (this.props.isMDFlow) {\n                                this.props.onError(\n                                    new AdyenCheckoutError(\n                                        ERROR,\n                                        `${THREEDS2_CHALLENGE_ERROR}: ${\n                                            challenge.result.errorDescription\n                                                ? challenge.result.errorDescription\n                                                : 'no transStatus could be retrieved'\n                                        }`,\n                                        { cause: challenge.result.errorCode }\n                                    )\n                                );\n                            }\n                        }\n\n                        /**\n                         * An object has been returned, parsed & accepted as legit (according to the rules in getProcessMessageHandler),\n                         * but the result prop on that object is missing\n                         */\n                        if (!challenge.result) {\n                            this.setError(\n                                {\n                                    errorInfo: `${THREEDS2_CHALLENGE_ERROR}:  ${this.props.i18n.get('3ds.chal.805', {\n                                        values: { result: '\"result\"' }\n                                    })}`,\n                                    errorObj: challenge as unknown as ErrorObject\n                                },\n                                true\n                            );\n\n                            // Send error to analytics endpoint\n                            this.props.onSubmitAnalytics({\n                                type: THREEDS2_ERROR,\n                                code: Analytics3DS2Errors.CHALLENGE_RESOLVED_WITHOUT_RESULT_PROP,\n                                errorType: ANALYTICS_ERROR_TYPE.apiError,\n                                message: `${THREEDS2_CHALLENGE_ERROR}: challenge resolved without a \"result\" object`\n                            });\n\n                            console.debug('### PrepareChallenge3DS2::exiting:: challenge resolved without a \"result\" object');\n\n                            return;\n                        }\n\n                        // Proceed with call to onAdditionalDetails (except for in 3DS2InMDFlow)\n                        this.setStatusComplete(challenge.result, errorCodeObject);\n                    }}\n                    onErrorChallenge={(challenge: ThreeDS2FlowObject) => {\n                        /**\n                         * Called when challenge times-out (which is still a valid scenario)...\n                         */\n                        if (hasOwnProperty(challenge, 'errorCode')) {\n                            const timeoutObject: ErrorCodeObject = {\n                                errorCode: challenge.errorCode,\n                                message: `${THREEDS2_CHALLENGE}: ${challenge.errorCode}`\n                            };\n\n                            // see comment in onCompleteChallenge code block\n                            if (this.props.isMDFlow) {\n                                this.props.onError(\n                                    new AdyenCheckoutError(ERROR, `${THREEDS2_CHALLENGE_ERROR}: '3DS2 challenge timed out'`, {\n                                        cause: challenge.errorCode\n                                    })\n                                );\n                            }\n\n                            this.setStatusComplete(challenge.result, timeoutObject);\n                            return;\n                        }\n                    }}\n                    {...challengeData}\n                    onActionHandled={this.props.onActionHandled}\n                    onFormSubmit={this.onFormSubmit}\n                />\n            );\n        }\n\n        if (this.state.status === 'error') {\n            return (\n                <div className=\"adyen-checkout__threeds2-challenge-error\">\n                    <Img\n                        className=\"adyen-checkout__status__icon adyen-checkout__status__icon--error\"\n                        src={getImage({\n                            imageFolder: 'components/'\n                        })('error')}\n                        alt={''}\n                    />\n                    <div className=\"adyen-checkout__status__text\">\n                        {this.state.errorInfo ? this.state.errorInfo : this.props.i18n.get('error.message.unknown')}\n                    </div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default PrepareChallenge3DS2;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport PrepareChallenge from './components/Challenge';\nimport { DEFAULT_CHALLENGE_WINDOW_SIZE, THREEDS2_CHALLENGE, THREEDS2_CHALLENGE_ERROR, THREEDS2_ERROR, THREEDS2_FULL } from './constants';\nimport { existy } from '../../utils/commonUtils';\nimport { hasOwnProperty } from '../../utils/hasOwnProperty';\nimport { TxVariants } from '../tx-variants';\nimport { ThreeDS2ChallengeConfiguration } from './types';\nimport AdyenCheckoutError, { API_ERROR } from '../../core/Errors/AdyenCheckoutError';\nimport { ANALYTICS_ERROR_TYPE, Analytics3DS2Errors, ANALYTICS_RENDERED_STR, Analytics3DS2Events } from '../../core/Analytics/constants';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { ActionHandledReturnObject } from '../../types/global-types';\n\nclass ThreeDS2Challenge extends UIElement<ThreeDS2ChallengeConfiguration> {\n    public static type = TxVariants.threeDS2Challenge;\n\n    public static defaultProps = {\n        dataKey: 'threeDSResult',\n        size: DEFAULT_CHALLENGE_WINDOW_SIZE,\n        type: THREEDS2_CHALLENGE\n    };\n\n    protected submitAnalytics = (aObj: SendAnalyticsObject) => {\n        if (aObj.type === ANALYTICS_RENDERED_STR) return; // suppress the rendered event (it will have the same timestamp as the \"creq sent\" event)\n\n        super.submitAnalytics(aObj);\n    };\n\n    protected onActionHandled = (rtnObj: ActionHandledReturnObject) => {\n        this.submitAnalytics({\n            type: THREEDS2_FULL,\n            message: rtnObj.actionDescription,\n            subtype: Analytics3DS2Events.CHALLENGE_IFRAME_LOADED\n        });\n\n        super.onActionHandled(rtnObj);\n    };\n\n    onComplete(state) {\n        /**\n         * Equals a call to onAdditionalDetails (as set in actionTypes.ts) for the regular, \"native\" flow.\n         * However, if the action to create this component came from the 3DS2InMDFlow process it will instead equal a call to the onComplete callback\n         * (as defined in the 3DS2InMDFlow and passed in as a config prop).\n         */\n        if (state) super.onComplete(state);\n        this.unmount(); // re. fixing issue around back to back challenge calls\n    }\n\n    render() {\n        // existy used because threeds2InMDFlow will send empty string for paymentData and we should be allowed to proceed with this\n        if (!existy(this.props.paymentData)) {\n            /**\n             *   The presence of props.isMDFlow indicates the action to create this component came from the threeds2InMDFlow process which passes (an empty) paymentsData.\n             *   The regular, \"native\" flow uses the authorisationToken from the 3DS2 action, which actionTypes.ts assigns to a property called paymentData\n             */\n            const dataTypeForError = hasOwnProperty(this.props, 'isMDFlow') ? 'paymentData' : 'authorisationToken';\n\n            this.props.onError(new AdyenCheckoutError(API_ERROR, `No ${dataTypeForError} received. 3DS2 Challenge cannot proceed`));\n\n            this.submitAnalytics({\n                type: THREEDS2_ERROR,\n                code: Analytics3DS2Errors.ACTION_IS_MISSING_PAYMENT_DATA,\n                errorType: ANALYTICS_ERROR_TYPE.apiError,\n                message: `${THREEDS2_CHALLENGE_ERROR}: Missing 'paymentData' property from threeDS2 action`\n            });\n\n            return null;\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <PrepareChallenge\n                    {...this.props}\n                    onComplete={this.onComplete}\n                    onSubmitAnalytics={this.submitAnalytics}\n                    isMDFlow={this.props.paymentData.length < 15}\n                    onActionHandled={this.onActionHandled}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default ThreeDS2Challenge;\n","import { Component, h } from 'preact';\nimport Iframe from '../../../internal/IFrame';\nimport Spinner from '../../../internal/Spinner';\nimport ThreeDS2Form from '../Form';\nimport promiseTimeout from '../../../../utils/promiseTimeout';\nimport getProcessMessageHandler from '../../../../utils/get-process-message-handler';\nimport { THREEDS_METHOD_TIMEOUT, FAILED_METHOD_STATUS_RESOLVE_OBJECT_TIMEOUT, THREEDS2_NUM } from '../../constants';\nimport { encodeBase64URL } from '../utils';\nimport { DoFingerprint3DS2Props, DoFingerprint3DS2State } from './types';\n\nconst iframeName = 'threeDSMethodIframe';\n\n/**\n * Create and Base64URL encode a JSON object containing the serverTransactionID & threeDSMethodNotificationURL.\n * This Base64URL string will be added to the <form> in the ThreeDS2Form component.\n * The ThreeDS2Form component will submit the <form> when it mounts, using the ThreeDS2Iframe as the <form> target.\n * getProcessMessageHandler will listen for the postMessage response from the notificationURL and will settle the\n * promise accordingly causing this component to call the appropriate callback.\n * The callbacks exist in the parent component: ThreeDS2DeviceFingerprint where they ultimately call the onComplete\n * function passed as a prop when checkout.create('threeDS2DeviceFingerprint') is called.\n */\nclass DoFingerprint3DS2 extends Component<DoFingerprint3DS2Props, DoFingerprint3DS2State> {\n    private processMessageHandler;\n    private fingerPrintPromise: any;\n    public static defaultProps = {\n        showSpinner: true\n    };\n\n    constructor(props) {\n        super(props);\n\n        /**\n         * Create and Base64URL encode a JSON object\n         */\n        const { threeDSServerTransID, threeDSMethodNotificationURL } = this.props;\n\n        const jsonStr = JSON.stringify({\n            threeDSServerTransID,\n            threeDSMethodNotificationURL\n        });\n        const base64URLencodedData = encodeBase64URL(jsonStr);\n        this.state = { base64URLencodedData };\n    }\n\n    get3DS2MethodPromise() {\n        return new Promise((resolve, reject) => {\n            /**\n             * Listen for postMessage responses from the notification url\n             */\n            this.processMessageHandler = getProcessMessageHandler(this.props.postMessageDomain, resolve, reject, 'fingerPrintResult');\n\n            window.addEventListener('message', this.processMessageHandler);\n        });\n    }\n\n    componentDidMount() {\n        // Check 3DS2 Device fingerprint\n        this.fingerPrintPromise = promiseTimeout(THREEDS_METHOD_TIMEOUT, this.get3DS2MethodPromise(), FAILED_METHOD_STATUS_RESOLVE_OBJECT_TIMEOUT);\n        this.fingerPrintPromise.promise\n            .then(resolveObject => {\n                window.removeEventListener('message', this.processMessageHandler);\n                this.props.onCompleteFingerprint(resolveObject);\n            })\n            .catch(rejectObject => {\n                window.removeEventListener('message', this.processMessageHandler);\n                this.props.onErrorFingerprint(rejectObject);\n            });\n    }\n\n    componentWillUnmount() {\n        if (this.fingerPrintPromise) this.fingerPrintPromise.cancel();\n        window.removeEventListener('message', this.processMessageHandler);\n    }\n\n    render({ threeDSMethodURL, onActionHandled, onFormSubmit }, { base64URLencodedData }) {\n        return (\n            <div className=\"adyen-checkout__3ds2-device-fingerprint\">\n                {this.props.showSpinner && <Spinner />}\n                <div style={{ display: 'none' }}>\n                    <Iframe\n                        name={iframeName}\n                        callback={() => {\n                            onActionHandled?.({ componentType: '3DS2Fingerprint', actionDescription: `${THREEDS2_NUM} fingerprint iframe loaded` });\n                        }}\n                    />\n                    <ThreeDS2Form\n                        name={'threeDSMethodForm'}\n                        action={threeDSMethodURL}\n                        target={iframeName}\n                        inputName={'threeDSMethodData'}\n                        inputValue={base64URLencodedData}\n                        onFormSubmit={onFormSubmit}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DoFingerprint3DS2;\n","import { Component, h } from 'preact';\nimport DoFingerprint3DS2 from './DoFingerprint3DS2';\nimport { createFingerprintResolveData, createOldFingerprintResolveData, isErrorObject, prepareFingerPrintData } from '../utils';\nimport { PrepareFingerprint3DS2Props, PrepareFingerprint3DS2State } from './types';\nimport { FingerPrintData, ResultObject, ErrorCodeObject } from '../../types';\nimport { ErrorObject } from '../../../../core/Errors/types';\nimport { SendAnalyticsObject } from '../../../../core/Analytics/types';\nimport { isValidHttpUrl } from '../../../../utils/isValidURL';\nimport {\n    THREEDS2_FULL,\n    THREEDS2_FINGERPRINT,\n    THREEDS2_FINGERPRINT_ERROR,\n    THREEDS2_NUM,\n    MISSING_TOKEN_IN_ACTION_MSG,\n    THREEDS2_ERROR,\n    TIMEOUT\n} from '../../constants';\nimport { ANALYTICS_ERROR_TYPE, Analytics3DS2Errors, Analytics3DS2Events } from '../../../../core/Analytics/constants';\n\nclass PrepareFingerprint3DS2 extends Component<PrepareFingerprint3DS2Props, PrepareFingerprint3DS2State> {\n    public static type = 'scheme';\n\n    public static defaultProps = {\n        onComplete: () => {},\n        onError: () => {},\n        paymentData: '',\n        showSpinner: true,\n        isMDFlow: false\n    };\n\n    constructor(props) {\n        super(props);\n\n        const { token, notificationURL } = this.props; // See comments on prepareFingerPrintData regarding notificationURL\n\n        if (token) {\n            const fingerPrintData: FingerPrintData | ErrorObject = prepareFingerPrintData({ token, notificationURL });\n\n            this.state = {\n                status: 'init',\n                fingerPrintData: fingerPrintData as FingerPrintData\n            };\n        } else {\n            // Will be picked up in componentDidMount\n            this.state = { fingerPrintData: { success: false, error: MISSING_TOKEN_IN_ACTION_MSG } };\n\n            console.debug(`${THREEDS2_FINGERPRINT_ERROR}: ${MISSING_TOKEN_IN_ACTION_MSG}`);\n        }\n    }\n\n    public onFormSubmit = (msg: string) => {\n        this.props.onSubmitAnalytics({\n            type: THREEDS2_FULL,\n            message: msg,\n            subtype: Analytics3DS2Events.FINGERPRINT_DATA_SENT\n        });\n    };\n\n    componentDidMount() {\n        const hasFingerPrintData = !isErrorObject(this.state.fingerPrintData);\n\n        if (hasFingerPrintData) {\n            const shouldAllowHttpDomains =\n                /** Allow http urls if in development and testing against localhost:8080 */\n                (process.env.NODE_ENV === 'development' && process.env.__CLIENT_ENV__?.indexOf('localhost:8080') > -1) ||\n                /**\n                 * Allows the checkoutshopper demo on localhost:8080 to work -\n                 *  requires a configuration in localhost of environment: 'test', _environmentUrls: {api: 'http://localhost:8080/'}\n                 */\n                (this.props.environment === 'test' && this.props._environmentUrls?.api?.includes('http://localhost:8080'));\n\n            /**\n             * Check the structure of the created fingerPrintData\n             */\n            const { threeDSMethodURL, threeDSMethodNotificationURL, postMessageDomain, threeDSServerTransID } = this.state\n                .fingerPrintData as FingerPrintData;\n\n            const hasValid3DSMethodURL = isValidHttpUrl(threeDSMethodURL, shouldAllowHttpDomains);\n\n            // Only render component if we have a threeDSMethodURL. Otherwise, exit with threeDSCompInd: 'U'\n            if (!hasValid3DSMethodURL) {\n                this.setStatusComplete(\n                    { threeDSCompInd: 'U' },\n                    {\n                        errorCode: Analytics3DS2Errors.TOKEN_IS_MISSING_THREEDSMETHODURL,\n                        message: `${THREEDS2_FINGERPRINT_ERROR}: Decoded token is missing a valid threeDSMethodURL property`\n                    }\n                );\n\n                /**\n                 * NOTE: we can now use this.props.isMDFlow to decide if we want to send any of these errors to the onError handler\n                 *  - this is problematic in the regular flow since merchants tend to treat any calls to their onError handler as 'fatal',\n                 *   but in the MDFlow we control what the onError handler does.\n                 */\n                // if (this.props.isMDFlow) {}\n\n                console.debug('### PrepareFingerprint3DS2::exiting:: no valid threeDSMethodURL');\n                return;\n            }\n\n            const hasValid3DSMethodNotificationURL = isValidHttpUrl(threeDSMethodNotificationURL, shouldAllowHttpDomains);\n            const hasValidPostMessageDomain = isValidHttpUrl(postMessageDomain, shouldAllowHttpDomains);\n            const hasTransServerID = threeDSServerTransID?.length;\n\n            if (!hasValid3DSMethodNotificationURL || !hasValidPostMessageDomain || !hasTransServerID) {\n                /**\n                 * NOTE: EMVCo_3DS_CoreSpec_v2.3.1_20220831.pdf states that we should return: threeDSCompInd: 'N'\n                 * when the fingerprinting process \"Did not run or did not successfully complete\"\n                 */\n                this.setStatusComplete(\n                    { threeDSCompInd: 'N' },\n                    {\n                        errorCode: Analytics3DS2Errors.TOKEN_IS_MISSING_OTHER_PROPS,\n                        message: `${THREEDS2_FINGERPRINT_ERROR}: Decoded token is missing one or more of the following properties (threeDSMethodNotificationURL | postMessageDomain | threeDSServerTransID)`\n                    }\n                );\n\n                console.debug(\n                    '### PrepareFingerprint3DS2::exiting:: Decoded token is missing one or more of the following properties (threeDSMethodNotificationURL | postMessageDomain | threeDSServerTransID)'\n                );\n\n                return;\n            }\n\n            // Proceed to allow component to render\n            this.setState({ status: 'retrievingFingerPrint' });\n            //\n        } else {\n            // Only render component if we have fingerPrintData. Otherwise, complete with threeDSCompInd: 'N'\n\n            const errorMsg: string = (this.state.fingerPrintData as ErrorObject).error;\n\n            const errorCode =\n                errorMsg.indexOf(MISSING_TOKEN_IN_ACTION_MSG) > -1\n                    ? Analytics3DS2Errors.ACTION_IS_MISSING_TOKEN\n                    : Analytics3DS2Errors.TOKEN_DECODE_OR_PARSING_FAILED;\n\n            this.setStatusComplete(\n                { threeDSCompInd: 'N' },\n                {\n                    errorCode,\n                    message: `${THREEDS2_FINGERPRINT_ERROR}: ${errorMsg}` // can be: 'Missing \"token\" property from threeDS2 action', 'not base64', 'malformed URI sequence' or 'Could not JSON parse token'\n                }\n            );\n\n            console.debug('### PrepareFingerprint3DS2:: token does not exist or could not be base64 decoded &/or JSON.parsed');\n        }\n    }\n\n    setStatusComplete(resultObj: ResultObject, errorCodeObject: ErrorCodeObject = null) {\n        this.setState({ status: 'complete' }, () => {\n            /**\n             * Create the data in the way that the /details endpoint expects.\n             *  This is different for the flow triggered by the threeds2InMDFlow process than for the new, v67, 'threeDS2' action\n             */\n            const resolveDataFunction = this.props.isMDFlow ? createOldFingerprintResolveData : createFingerprintResolveData;\n            const data = resolveDataFunction(this.props.dataKey, resultObj, this.props.paymentData);\n\n            let analyticsObject: SendAnalyticsObject;\n\n            /** Are we in an error scenario? If so, submit analytics about it */\n            const finalResObject = errorCodeObject ? errorCodeObject : resultObj;\n            if (finalResObject.errorCode) {\n                const errorTypeAndCode = {\n                    code: finalResObject.errorCode === TIMEOUT ? Analytics3DS2Errors.THREEDS2_TIMEOUT : finalResObject.errorCode,\n                    errorType: finalResObject.errorCode === TIMEOUT ? ANALYTICS_ERROR_TYPE.network : ANALYTICS_ERROR_TYPE.apiError\n                };\n\n                /**\n                 * Timeout or data parsing problems:\n                 *\n                 * (threeDSCompInd:\"U\"):\n                 *   - Decoded token is missing a valid threeDSMethodURL property,\n                 *  or, (threeDSCompInd:\"N\"):\n                 *   - Fingerprint process has timed out,\n                 *  also, (threeDSCompInd:\"N\"):\n                 *   - Missing \"token\" property from threeDS2 action\n                 *   - or, decoded token is missing one or more of the following properties (threeDSMethodNotificationURL | postMessageDomain | threeDSServerTransID)\n                 *   - or, token could not be base64 decoded &/or JSON.parsed\n                 */\n                analyticsObject = {\n                    type: THREEDS2_ERROR,\n                    message: (finalResObject as ErrorCodeObject).message,\n                    ...errorTypeAndCode\n                };\n\n                // Send error to analytics endpoint\n                this.props.onSubmitAnalytics(analyticsObject);\n            }\n\n            /** Calculate \"result\" for analytics */\n            let result: string;\n\n            switch (resultObj?.threeDSCompInd) {\n                case 'Y':\n                    result = 'success';\n                    break;\n                case 'N': {\n                    if (!errorCodeObject) {\n                        result = 'failed'; // 'failed' is the result returned from the threeDSMethodURL\n                    } else {\n                        result = errorCodeObject.errorCode === TIMEOUT ? TIMEOUT : 'failedInternal'; // timed-out; or, 'failed' as a result of internal checks\n                    }\n                    break;\n                }\n                case 'U':\n                    result = 'noThreeDSMethodURL';\n                    break;\n                default:\n            }\n\n            /**\n             * The fingerprint process is completed, one way or another.\n             * The resultObj will be {threeDSCompInd:\"Y\"} in the case of success,\n             * else {threeDSCompInd:\"U\"} or {threeDSCompInd:\"N\"} - if we've had some kind of timeout or data parsing problem (as described above)\n             */\n            analyticsObject = {\n                type: THREEDS2_FULL,\n                message: `${THREEDS2_NUM} fingerprinting has completed`,\n                subtype: Analytics3DS2Events.FINGERPRINT_COMPLETED,\n                result\n            };\n\n            // Send log to analytics endpoint\n            this.props.onSubmitAnalytics(analyticsObject);\n\n            /**\n             * Equals call to callSubmit3DS2Fingerprint (except for in 3DS2InMDFlow)\n             */\n            this.props.onComplete(data);\n        });\n    }\n\n    render({ showSpinner }, { status, fingerPrintData }) {\n        if (status === 'retrievingFingerPrint') {\n            return (\n                <DoFingerprint3DS2\n                    onCompleteFingerprint={fingerprint => {\n                        this.setStatusComplete(fingerprint.result);\n                    }}\n                    onErrorFingerprint={fingerprint => {\n                        /**\n                         * Called when fingerprint times-out (which is still a valid scenario)...\n                         */\n                        const timeoutObject: ErrorCodeObject = {\n                            errorCode: fingerprint.errorCode, // 'timeout'\n                            message: `${THREEDS2_FINGERPRINT}: ${fingerprint.errorCode}`\n                        };\n\n                        this.setStatusComplete(fingerprint.result, timeoutObject); // fingerprint.result = threeDSCompInd: 'N'\n                    }}\n                    showSpinner={showSpinner}\n                    {...fingerPrintData}\n                    onActionHandled={this.props.onActionHandled}\n                    onFormSubmit={this.onFormSubmit}\n                />\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default PrepareFingerprint3DS2;\n","export const API_VERSION = 'v1';\n\n// Same error code will be sent to the analytics\nexport const API_ERROR_CODE = {\n    makePayments: '620',\n    submitPaymentDetails: '621',\n    submitThreeDS2Fingerprint: '622',\n    createOrder: '623'\n};\n","import { httpPost } from '../../core/Services/http';\nimport { pick } from '../../utils/commonUtils';\nimport { ThreeDS2FingerprintResponse } from './types';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { THREEDS2_ERROR, THREEDS2_FINGERPRINT_SUBMIT } from './constants';\nimport { ANALYTICS_ERROR_TYPE, Analytics3DS2Errors } from '../../core/Analytics/constants';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\nimport { API_ERROR_CODE } from '../../core/Services/sessions/constants';\n\n/**\n * ThreeDS2DeviceFingerprint, onComplete, calls a new, internal, endpoint which\n * behaves like the /details endpoint but doesn't require the same credentials\n */\nexport default function callSubmit3DS2Fingerprint({ data }): void {\n    httpPost<ThreeDS2FingerprintResponse>(\n        {\n            path: `v1/submitThreeDS2Fingerprint?token=${this.props.clientKey}`,\n            loadingContext: this.props.loadingContext,\n            errorLevel: 'fatal',\n            errorCode: API_ERROR_CODE.submitThreeDS2Fingerprint\n        },\n        {\n            ...data\n        }\n    )\n        .then(resData => {\n            let analyticsErrorObject: SendAnalyticsObject;\n\n            /**\n             * Frictionless (no challenge) flow OR \"refused\" flow\n             */\n            if (resData.type === 'completed') {\n                const { details } = resData;\n\n                if (!resData.details) {\n                    console.debug(\n                        'Handled Error::callSubmit3DS2Fingerprint::FAILED:: no details object in a response indicating either a \"frictionless\" flow, or a \"refused\" response. resData=',\n                        resData\n                    );\n\n                    analyticsErrorObject = {\n                        type: THREEDS2_ERROR,\n                        code: Analytics3DS2Errors.NO_DETAILS_FOR_FRICTIONLESS_OR_REFUSED,\n                        errorType: ANALYTICS_ERROR_TYPE.apiError,\n                        message: `${THREEDS2_FINGERPRINT_SUBMIT}: no details object in a response indicating either a \"frictionless\" flow, or a \"refused\" response`\n                    };\n\n                    this.submitAnalytics(analyticsErrorObject);\n                    return;\n                }\n\n                return this.onComplete({ data: { details } });\n            }\n\n            /**\n             * If we don't have a type: \"completed\", then we expect an action, because we must be in a Challenge or Redirect flow\n             */\n            if (!resData.action) {\n                console.debug(\n                    'Handled Error::callSubmit3DS2Fingerprint::FAILED:: no action object in a response indicating a \"challenge\". resData=',\n                    resData\n                );\n\n                analyticsErrorObject = {\n                    type: THREEDS2_ERROR,\n                    code: Analytics3DS2Errors.NO_ACTION_FOR_CHALLENGE,\n                    errorType: ANALYTICS_ERROR_TYPE.apiError,\n                    message: `${THREEDS2_FINGERPRINT_SUBMIT}: no action object in a response indicating a \"challenge\" flow`\n                };\n                this.submitAnalytics(analyticsErrorObject);\n                return;\n            }\n\n            // elementRef exists when the fingerprint component is created from the Dropin\n            const actionHandler = this.props.elementRef ?? this;\n\n            /**\n             * We have an action but do we have a way to handle it?\n             * TODO - check logs: do we ever *not* have an actionHandler?\n             */\n            if (!actionHandler) {\n                console.debug('Handled Error::callSubmit3DS2Fingerprint::FAILED:: no actionHandler');\n\n                analyticsErrorObject = {\n                    type: THREEDS2_ERROR,\n                    code: Analytics3DS2Errors.NO_COMPONENT_FOR_ACTION,\n                    errorType: ANALYTICS_ERROR_TYPE.sdkError,\n                    message: `${THREEDS2_FINGERPRINT_SUBMIT}: no component defined to handle the action response`\n                };\n                this.submitAnalytics(analyticsErrorObject);\n                return;\n            }\n\n            /**\n             * Challenge flow\n             */\n            if (resData.action?.type === 'threeDS2') {\n                // Ensure challengeWindowSize is propagated if there was a (merchant defined) handleAction call proceeding this one that had it set as an option\n                return actionHandler.handleAction(resData.action, pick('challengeWindowSize').from(this.props));\n            }\n\n            /**\n             * Redirect flow (usecase: we thought we could do 3DS2 but it turns out we can't)\n             * TODO - check logs: does this ever happen, anymore?\n             */\n            if (resData.action?.type === 'redirect') {\n                return actionHandler.handleAction(resData.action);\n            }\n        })\n        .catch((error: AdyenCheckoutError) => {\n            this.handleError(error);\n        });\n}\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport PrepareFingerprint from './components/DeviceFingerprint';\nimport callSubmit3DS2Fingerprint from './callSubmit3DS2Fingerprint';\nimport { existy } from '../../utils/commonUtils';\nimport { TxVariants } from '../tx-variants';\nimport { ThreeDS2DeviceFingerprintConfiguration } from './types';\nimport AdyenCheckoutError, { API_ERROR } from '../../core/Errors/AdyenCheckoutError';\nimport { ANALYTICS_ERROR_TYPE, Analytics3DS2Errors, ANALYTICS_RENDERED_STR, Analytics3DS2Events } from '../../core/Analytics/constants';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\nimport { THREEDS2_ERROR, THREEDS2_FINGERPRINT, THREEDS2_FINGERPRINT_ERROR, THREEDS2_FULL } from './constants';\nimport { ActionHandledReturnObject } from '../../types/global-types';\n\nclass ThreeDS2DeviceFingerprint extends UIElement<ThreeDS2DeviceFingerprintConfiguration> {\n    public static type = TxVariants.threeDS2Fingerprint;\n\n    public static defaultProps = {\n        dataKey: 'fingerprintResult',\n        type: THREEDS2_FINGERPRINT\n    };\n\n    private callSubmit3DS2Fingerprint = callSubmit3DS2Fingerprint.bind(this); // New 3DS2 flow\n\n    protected submitAnalytics = (aObj: SendAnalyticsObject) => {\n        if (aObj.type === ANALYTICS_RENDERED_STR) return; // suppress the rendered event (it will have the same timestamp as the \"threeDSMethodData sent\" event)\n\n        super.submitAnalytics(aObj);\n    };\n\n    protected onActionHandled = (rtnObj: ActionHandledReturnObject) => {\n        this.submitAnalytics({\n            type: THREEDS2_FULL,\n            message: rtnObj.actionDescription,\n            subtype: Analytics3DS2Events.FINGERPRINT_IFRAME_LOADED\n        });\n        super.onActionHandled(rtnObj);\n    };\n\n    onComplete(state) {\n        super.onComplete(state);\n        this.unmount(); // re. fixing issue around back to back fingerprinting calls\n    }\n\n    render() {\n        /**\n         * In the regular components (aka \"native\") flow we can't proceed because something has gone wrong with the payment if paymentData is missing from the threeDS2 action.\n         * In the MDFlow the paymentData is always present (albeit an empty string, which is why we use 'existy' since we should be allowed to proceed with this)\n         */\n        if (!existy(this.props.paymentData)) {\n            this.props.onError(new AdyenCheckoutError(API_ERROR, `No paymentData received. 3DS2 Fingerprint cannot proceed`));\n\n            // TODO - check logs to see if this *ever* happens\n            this.submitAnalytics({\n                type: THREEDS2_ERROR,\n                code: Analytics3DS2Errors.ACTION_IS_MISSING_PAYMENT_DATA,\n                errorType: ANALYTICS_ERROR_TYPE.apiError,\n                message: `${THREEDS2_FINGERPRINT_ERROR}: Missing 'paymentData' property from threeDS2 action`\n            });\n\n            return null;\n        }\n\n        /**\n         * this.props.isMDFlow indicates the action to create this component came from the 3DS2InMDFlow process and upon completion should call the\n         * passed onComplete callback (as defined in the 3DS2InMDFlow) instead of the /submitThreeDS2Fingerprint endpoint for the regular, \"native\" flow\n         */\n        return (\n            <PrepareFingerprint\n                {...this.props}\n                onComplete={this.props.isMDFlow ? this.onComplete : this.callSubmit3DS2Fingerprint}\n                onSubmitAnalytics={this.submitAnalytics}\n                isMDFlow={this.props.paymentData.length < 15}\n                onActionHandled={this.onActionHandled}\n            />\n        );\n    }\n}\n\nexport default ThreeDS2DeviceFingerprint;\n","import { h } from 'preact';\nimport classNames from 'classnames';\nimport Field from '../../../../internal/FormFields/Field';\nimport DataSfSpan from '../../../../Card/components/CardInput/components/DataSfSpan';\nimport { alternativeLabelContent } from '../../../../Card/components/CardInput/components/FieldLabelAlternative';\nimport { capitalizeFirstLetter } from '../../../../../utils/textUtils';\n\nconst AchSFInput = ({ id, dataInfo, className = '', label, focused, filled, errorMessage = '', isValid = false, onFocusField, dir }) => {\n    const capitalisedId = capitalizeFirstLetter(id);\n    const encryptedIdStr = `encrypted${capitalisedId}`;\n\n    return (\n        <Field\n            label={label}\n            focused={focused}\n            filled={filled}\n            classNameModifiers={[id]}\n            onFocusField={() => onFocusField(encryptedIdStr)}\n            errorMessage={errorMessage}\n            isValid={isValid}\n            className={className}\n            dir={dir}\n            name={id}\n            contextVisibleToScreenReader={false}\n            useLabelElement={false}\n            renderAlternativeToLabel={alternativeLabelContent}\n        >\n            <DataSfSpan\n                encryptedFieldType={encryptedIdStr}\n                data-info={dataInfo}\n                className={classNames({\n                    'adyen-checkout__input': true,\n                    'adyen-checkout__input--large': true,\n                    'adyen-checkout__input--error': errorMessage.length,\n                    'adyen-checkout__input--focus': focused,\n                    'adyen-checkout__input--valid': isValid\n                })}\n            />\n        </Field>\n    );\n};\n\nexport default AchSFInput;\n","import { h } from 'preact';\nimport AchSFInput from './AchSFInput';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\n\nconst AchSecuredFields = ({ focusedElement, onFocusField, errors, valid }) => {\n    const { i18n } = useCoreContext();\n\n    return (\n        <div className=\"adyen-checkout__ach-sf__form adyen-checkout__field-wrapper\">\n            <AchSFInput\n                id=\"bankAccountNumber\"\n                focused={focusedElement === 'encryptedBankAccountNumber'}\n                isValid={!!valid.encryptedBankAccountNumber}\n                label={i18n.get('ach.bankAccountNumber.label')}\n                onFocusField={onFocusField}\n                filled={!!errors.encryptedBankAccountNumber || !!valid.encryptedBankAccountNumber}\n                errorMessage={!!errors.encryptedBankAccountNumber && i18n.get(errors.encryptedBankAccountNumber)}\n                dataInfo='{\"length\":\"4-17\"}'\n                className={'adyen-checkout__field--50'}\n                dir={'ltr'}\n            />\n            <AchSFInput\n                id=\"bankLocationId\"\n                focused={focusedElement === 'encryptedBankLocationId'}\n                isValid={!!valid.encryptedBankLocationId}\n                label={i18n.get('ach.bankLocationId.label')}\n                onFocusField={onFocusField}\n                filled={!!errors.encryptedBankLocationId || !!valid.encryptedBankLocationId}\n                errorMessage={!!errors.encryptedBankLocationId && i18n.get(errors.encryptedBankLocationId)}\n                dataInfo='{\"length\":9}'\n                className={'adyen-checkout__field--50'}\n                dir={'ltr'}\n            />\n        </div>\n    );\n};\n\nexport default AchSecuredFields;\n","export default {\n    type: 'ach',\n\n    // Settings\n    hasHolderName: true,\n    holderNameRequired: true,\n    billingAddressRequired: true,\n    billingAddressAllowedCountries: ['US', 'PR'],\n    showContextualElement: false,\n\n    // Events\n    onLoad: () => {},\n    onConfigSuccess: () => {},\n    onAllValid: () => {},\n    onFieldValid: () => {},\n    onError: () => {},\n    onBlur: () => {},\n    onFocus: () => {},\n    onChange: () => {},\n\n    // Values\n    holderName: '',\n    data: {\n        holderName: '',\n        billingAddress: {}\n    },\n\n    // Customization\n    styles: {},\n    placeholders: {}\n};\n","export default {\n    base: {}\n};\n","import { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport classNames from 'classnames';\nimport AchSecuredFields from './components/AchSecuredFields';\nimport SecuredFieldsProvider from '../../../internal/SecuredFields/SFP/SecuredFieldsProvider';\nimport Field from '../../../internal/FormFields/Field';\nimport LoadingWrapper from '../../../internal/LoadingWrapper/LoadingWrapper';\nimport defaultProps from './defaultProps';\nimport defaultStyles from './defaultStyles';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport './AchInput.scss';\nimport { ACHInputDataState, ACHInputProps, ACHInputStateError, ACHInputStateValid } from './types';\nimport StoreDetails from '../../../internal/StoreDetails';\nimport InputText from '../../../internal/FormFields/InputText';\nimport FormInstruction from '../../../internal/FormInstruction';\nimport { ComponentMethodsRef } from '../../../internal/UIElement/types';\nimport RadioGroup from '../../../internal/FormFields/RadioGroup';\n\nfunction validateHolderName(holderName, holderNameRequired = false) {\n    if (holderNameRequired) {\n        return !!holderName && typeof holderName === 'string' && holderName.trim().length > 0;\n    }\n    return true;\n}\n\nfunction AchInput(props: ACHInputProps) {\n    const { i18n } = useCoreContext();\n\n    const holderNameIsValid = props.hasHolderName && (!!props.holderName || !!props.data.holderName);\n\n    const [errors, setErrors] = useState<ACHInputStateError>({});\n    const [valid, setValid] = useState<ACHInputStateValid>({\n        ...(props.holderNameRequired && { holderName: holderNameIsValid })\n    });\n\n    const [data, setData] = useState<ACHInputDataState>({\n        bankAccountType: 'checking',\n        ...(props.hasHolderName && { holderName: props.holderName || props.data.holderName })\n    });\n\n    const [isSfpValid, setIsSfpValid] = useState(false);\n    const [focusedElement, setFocusedElement] = useState('');\n    const [storePaymentMethod, setStorePaymentMethod] = useState(false);\n\n    const handleFocus = e => {\n        const isFocused = e.focus === true;\n\n        setFocusedElement(e.currentFocusObject);\n\n        if (isFocused) {\n            props.onFocus(e);\n        } else {\n            props.onBlur(e);\n        }\n    };\n\n    const handleHolderName = e => {\n        const holderName = e.target.value;\n\n        setData({ ...data, holderName });\n        setErrors({ ...errors, holderName: props.holderNameRequired ? !validateHolderName(holderName) : false });\n        setValid({ ...valid, holderName: props.holderNameRequired ? validateHolderName(holderName, props.holderNameRequired) : true });\n    };\n\n    const handleBankAccountType = e => {\n        const bankAccountType = e.target.value;\n\n        setData({ ...data, bankAccountType });\n    };\n\n    const handleSecuredFieldsChange = newState => {\n        const sfState = newState;\n\n        const tempHolderName = sfState.autoCompleteName ? sfState.autoCompleteName : data.holderName;\n\n        setData({ ...data, ...sfState.data, holderName: tempHolderName });\n        setErrors({ ...errors, ...sfState.errors });\n        setValid({\n            ...valid,\n            ...sfState.valid,\n            holderName: props.holderNameRequired ? validateHolderName(tempHolderName, props.holderNameRequired) : true\n        });\n\n        setIsSfpValid(sfState.isSfpValid);\n    };\n\n    // Refs\n    const sfp = useRef(null);\n\n    const [status, setStatus] = useState('ready');\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const achRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(achRef.current).length) {\n        props.setComponentRef?.(achRef.current);\n    }\n\n    achRef.current.showValidation = () => {\n        // Validate SecuredFields\n        sfp.current.showValidation();\n\n        // Validate holderName\n        if (props.holderNameRequired && !valid.holderName) {\n            setErrors({ ...errors, holderName: true });\n        }\n    };\n\n    achRef.current.setStatus = setStatus;\n\n    useEffect(() => {\n        this.setFocusOn = sfp.current.setFocusOn;\n        this.updateStyles = sfp.current.updateStyles;\n\n        return () => {\n            sfp.current.destroy();\n        };\n    }, []);\n\n    // Run when state.data, -errors or -valid change\n    useEffect(() => {\n        // Validate whole component i.e holderName + securedFields\n        const holderNameValid = validateHolderName(data.holderName, props.holderNameRequired);\n        const sfpValid = isSfpValid;\n\n        const isValid = sfpValid && holderNameValid;\n\n        props.onChange({ data, isValid, storePaymentMethod });\n    }, [data, valid, errors, storePaymentMethod]);\n\n    return (\n        <div className=\"adyen-checkout__ach\">\n            <FormInstruction />\n\n            <SecuredFieldsProvider\n                ref={sfp}\n                {...extractPropsForSFP(props)}\n                styles={{ ...defaultStyles, ...props.styles }}\n                onChange={handleSecuredFieldsChange}\n                onFocus={handleFocus}\n                render={({ setRootNode, setFocusOn }, sfpState) => (\n                    <div ref={setRootNode} className=\"adyen-checkout__ach-input sf-input__wrapper\">\n                        <LoadingWrapper status={sfpState.status}>\n                            <div className={classNames(['adyen-checkout__fieldset', 'adyen-checkout__fieldset--ach'])}>\n                                {<div className=\"adyen-checkout__fieldset__title\">{i18n.get('ach.bankAccount')}</div>}\n\n                                <Field classNameModifiers={['bankAccountType', 'no-borders']} name={'bankAccountType'} useLabelElement={false}>\n                                    <RadioGroup\n                                        name={'bankAccountType'}\n                                        value={data.bankAccountType}\n                                        items={[\n                                            { id: 'checking', name: i18n.get('ach.checking') },\n                                            { id: 'savings', name: i18n.get('ach.savings') }\n                                        ]}\n                                        onChange={handleBankAccountType}\n                                        required={true}\n                                        style={'button'}\n                                    />\n                                </Field>\n\n                                {props.hasHolderName && (\n                                    <Field\n                                        label={i18n.get('ach.accountHolderNameField.title')}\n                                        className={'adyen-checkout__pm__holderName'}\n                                        errorMessage={!!errors.holderName && i18n.get('ach.accountHolderNameField.invalid')}\n                                        showContextualElement={props.showContextualElement}\n                                        contextualText={i18n.get('ach.accountHolderNameField.contextualText')}\n                                        isValid={!!valid.holderName}\n                                        name={'holderName'}\n                                    >\n                                        <InputText\n                                            className=\"adyen-checkout__pm__holderName__input adyen-checkout__input\"\n                                            placeholder={props?.placeholders?.holderName}\n                                            value={data.holderName}\n                                            required={props.holderNameRequired}\n                                            onInput={handleHolderName}\n                                        />\n                                    </Field>\n                                )}\n\n                                <AchSecuredFields\n                                    focusedElement={focusedElement}\n                                    onFocusField={setFocusOn}\n                                    errors={sfpState.errors}\n                                    valid={sfpState.valid}\n                                />\n                            </div>\n\n                            {props.enableStoreDetails && <StoreDetails onChange={setStorePaymentMethod} />}\n                        </LoadingWrapper>\n                    </div>\n                )}\n            />\n            {props.showPayButton && props.payButton({ status, label: i18n.get('confirmPurchase') })}\n        </div>\n    );\n}\n\nAchInput.defaultProps = defaultProps;\n\nexport default AchInput;\n\nconst extractPropsForSFP = (props: ACHInputProps) => {\n    return {\n        autoFocus: props.autoFocus,\n        clientKey: props.clientKey,\n        i18n: props.i18n,\n        keypadFix: props.keypadFix,\n        legacyInputMode: props.legacyInputMode,\n        loadingContext: props.loadingContext,\n        onAllValid: props.onAllValid,\n        onConfigSuccess: props.onConfigSuccess,\n        onError: props.onError,\n        onFieldValid: props.onFieldValid,\n        onFocus: props.onFocus,\n        onLoad: props.onLoad,\n        showWarnings: props.showWarnings,\n        styles: props.styles,\n        type: props.type,\n        forceCompat: props.forceCompat,\n        resources: props.resources,\n        placeholders: props.placeholders,\n        handleKeyPress: props.handleKeyPress\n    };\n};\n","import { h, Fragment } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { useState } from 'preact/hooks';\nimport { PaymentAmount } from '../../../types';\n\n// TODO this should ideally be remove but we need let prop propagate down\n//  probably not worth changing this behaviour now\nexport interface RedirectButtonProps {\n    label?: string;\n    icon?: string;\n    payButton: Function;\n    onSubmit: Function;\n    amount?: PaymentAmount;\n    name: string;\n    showPayButton: boolean;\n    ref?: any;\n}\n\nfunction RedirectButton({ label = null, icon = null, payButton, onSubmit, amount = null, name, showPayButton, ...props }: RedirectButtonProps) {\n    const { i18n } = useCoreContext();\n    const [status, setStatus] = useState('ready');\n\n    this.setStatus = newStatus => {\n        setStatus(newStatus);\n    };\n\n    const payButtonLabel = () => {\n        const isZeroAuth = amount && {}.hasOwnProperty.call(amount, 'value') && amount.value === 0;\n        if (isZeroAuth) return `${i18n.get('preauthorizeWith')} ${name}`;\n        return `${i18n.get('continueTo')} ${name}`;\n    };\n\n    if (!showPayButton) {\n        return;\n    }\n\n    return (\n        <Fragment>\n            {payButton({\n                ...props,\n                status,\n                icon,\n                classNameModifiers: ['standalone'],\n                label: label || payButtonLabel(),\n                onClick: onSubmit\n            })}\n        </Fragment>\n    );\n}\n\nexport default RedirectButton;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport AchInput from './components/AchInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectButton from '../internal/RedirectButton';\nimport { AchConfiguration } from './types';\nimport { TxVariants } from '../tx-variants';\n\nexport class AchElement extends UIElement<AchConfiguration> {\n    public static type = TxVariants.ach;\n\n    formatProps(props: AchConfiguration) {\n        return {\n            ...props,\n            // Fix mismatch between passed hasHolderName & holderNameRequired props\n            // (when holderNameRequired = true, but hasHolderName = false - which means component will never be valid)\n            holderNameRequired: props.hasHolderName ?? props.holderNameRequired\n            // TODO - if it turns out that hasHolderName & holderNameRequired are not configurable by the merchant\n            //  then we will need to force these properties to true\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        const recurringPayment = !!this.props.storedPaymentMethodId;\n\n        // Map holderName to ownerName\n        const paymentMethod = {\n            type: AchElement.type,\n            ...this.state.data,\n            ownerName: this.state.data?.holderName,\n            ...(recurringPayment && { storedPaymentMethodId: this.props.storedPaymentMethodId })\n        };\n\n        delete paymentMethod.holderName;\n\n        return {\n            paymentMethod,\n            ...(this.state.storePaymentMethod && { storePaymentMethod: this.state.storePaymentMethod })\n        };\n    }\n\n    updateStyles(stylesObj) {\n        if (this.componentRef && this.componentRef.updateStyles) this.componentRef.updateStyles(stylesObj);\n        return this;\n    }\n\n    setFocusOn(fieldName) {\n        if (this.componentRef && this.componentRef.setFocusOn) this.componentRef.setFocusOn(fieldName);\n        return this;\n    }\n\n    get isValid() {\n        if (this.props.storedPaymentMethodId) {\n            return true;\n        }\n\n        return !!this.state.isValid;\n    }\n\n    get displayName() {\n        if (this.props.storedPaymentMethodId && this.props.bankAccountNumber) {\n            // get lastFour from bankAccountNumber, value comes from storedPaymentMethods\n            return `•••• ${this.props.bankAccountNumber.slice(-4)}`;\n        }\n        return this.props.name;\n    }\n\n    get additionalInfo() {\n        return this.props.storedPaymentMethodId ? this.props.i18n.get('ach.savedBankAccount') : '';\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.storedPaymentMethodId ? (\n                    <RedirectButton\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        amount={this.props.amount}\n                        payButton={this.payButton}\n                        onSubmit={this.submit}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                ) : (\n                    <AchInput\n                        setComponentRef={this.setComponentRef}\n                        handleKeyPress={this.handleKeyPress}\n                        {...this.props}\n                        onChange={this.setState}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                        resources={this.resources}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default AchElement;\n","import { h } from 'preact';\nimport Field from '../Field';\nimport Checkbox from '../Checkbox';\n\nexport default function ConsentCheckbox({ errorMessage, label, onChange, i18n, ...props }) {\n    return (\n        <Field classNameModifiers={['consentCheckbox']} errorMessage={errorMessage} i18n={i18n} name={'consentCheckbox'} useLabelElement={false}>\n            <Checkbox\n                name={'consentCheckbox'}\n                classNameModifiers={[...(props.classNameModifiers ??= []), 'consentCheckbox']}\n                onInput={onChange}\n                value={props?.data?.consentCheckbox}\n                label={label}\n                checked={props.checked}\n            />\n        </Field>\n    );\n}\n","import { FormatterFn } from './types';\n\n// Removes all non-digits\nexport const digitsOnlyFormatter: FormatterFn = (value: string) => {\n    return value.replace(/[^0-9]/g, '');\n};\n\nexport const capitalizeFirstLetter = (str: string): string => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","/**\n * Email regex follows https://en.wikipedia.org/wiki/Email_address.\n * It checks that the email address starts with a local part that includes letters, digits, and some special characters, optionally separated by periods.\n * Alternatively, the local part can be enclosed in quotes and include any characters except a new line.\n * This is followed by an `@` symbol and a domain name or an IP address enclosed in square brackets.\n * The domain name consists of one or more words separated by periods, where each word can include letters, digits, and hyphens. The top-level domain must consist of two or more letters.\n */\nexport const email =\n    /^(([a-z0-9!#$%&'*+\\-/=?^_`{|}~]+(\\.[a-z0-9!#$%&'*+\\-/=?^_`{|}~]+)*)|(\".+\"))@((\\[((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\\b){4}])|([a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*\\.([a-z]{2,})))$/i;\n\n/**\n * Telephone number regex\n */\nexport const telephoneNumber = /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s./0-9]*$/;\n","/**\n * Returns either the date input is supported or not in the current browser\n */\nconst checkDateInputSupport = (): boolean => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'date');\n    return input.type === 'date';\n};\n\n/**\n * Returns a formatted date\n * @param value -\n * @example\n * formatDate('22111990');\n * // '22/11/1990'\n */\nconst formatDate = (value: string): string => {\n    const date = value\n        .replace(/\\D|\\s/g, '') // Digits only\n        .replace(/^(00)(.*)?/, '01$2') // 00 -> 01\n        .replace(/^(3[2-9])(.*)?/, '0$1$2') // 34 -> 03/04\n        .replace(/^([4-9])(.*)?/, '0$1') // 4 -> 04\n        .replace(/^([0-9]{2})(00)(.*)?/, '$101') // 01/00 -> 01/01\n        .replace(/^(3[01])(02)(.*)?/, '29$2') // Force up to day 29 for Feb\n        .replace(/^([0-9]{2})([2-9]|1[3-9])(.*)?/, '$10$2') // 01/4 -> 01/04\n        .replace(/^([0-9]{2})([0-9]{2})([0-9])/, '$1/$2/$3') // 22111990 -> 22/11/1990\n        .replace(/^([0-9]{2})([0-9])/, '$1/$2'); // 2211 -> 22/11\n\n    const [day = '', month = '', year = ''] = date.split('/');\n\n    // Check leap year\n    if (year.length === 4 && day === '29' && month === '02' && (Number(year) % 4 !== 0 || (year.substr(2, 2) === '00' && Number(year) % 400 !== 0))) {\n        return date.replace(/^29/, '28');\n    }\n\n    return date;\n};\n\n/**\n * Receives a formatted date and returns it as the API expects it\n * @param value -\n * @example\n * unformatDate('22/11/1990');\n * // '1990-11-22'\n */\nconst unformatDate = (value = ''): string => {\n    if (value.indexOf('/') === -1) return value;\n    const [day = '', month = '', year = ''] = value.split('/');\n    if (!day || !month || !year) return null;\n    return `${year}-${month}-${day}`;\n};\n\nexport { checkDateInputSupport, formatDate, unformatDate };\n","import { ValidatorRule } from './types';\nimport { isEmpty } from '../validator-utils';\nimport { ERROR_FIELD_INVALID, ERROR_FIELD_REQUIRED } from '../../core/Errors/constants';\nimport { email, telephoneNumber } from '../regex';\nimport { unformatDate } from '../../components/internal/FormFields/InputDate/utils';\n\nconst isPhoneValid = (value: string, validationRule: ValidatorRule): boolean | null => {\n    if (isEmpty(value)) {\n        validationRule.errorMessage = ERROR_FIELD_REQUIRED;\n        return null;\n    }\n    validationRule.errorMessage = ERROR_FIELD_INVALID;\n    return telephoneNumber.test(value);\n};\n\nconst isEmailValid = (value: string, validationRule: ValidatorRule): boolean | null => {\n    if (isEmpty(value)) {\n        validationRule.errorMessage = ERROR_FIELD_REQUIRED;\n        return null;\n    }\n    validationRule.errorMessage = ERROR_FIELD_INVALID;\n    return value.length >= 6 && value.length <= 320 && email.test(value);\n};\n\nconst isDateOfBirthValid = (value: string, validationRule: ValidatorRule): boolean | null => {\n    if (!value) {\n        validationRule.errorMessage = ERROR_FIELD_REQUIRED;\n        return false;\n    }\n    validationRule.errorMessage = 'dateOfBirth.invalid';\n    const rawValue = unformatDate(value);\n    const ageDiff = Date.now() - Date.parse(rawValue);\n    const age = new Date(ageDiff).getFullYear() - 1970;\n    return age >= 18;\n};\n\nconst phoneNumberRule: ValidatorRule = {\n    validate: value => isPhoneValid(value, phoneNumberRule),\n    modes: ['blur']\n};\n\nconst emailRule: ValidatorRule = {\n    validate: value => isEmailValid(value, emailRule),\n    modes: ['blur']\n};\n\nconst dateOfBirthRule: ValidatorRule = {\n    validate: value => isDateOfBirthValid(value, dateOfBirthRule),\n    modes: ['blur']\n};\n\nexport const validationRules = { phoneNumberRule, emailRule, dateOfBirthRule };\n","import { ValidatorRules } from '../../../utils/Validator/types';\nimport { digitsOnlyFormatter } from '../../../utils/Formatters/formatters';\nimport { validationRules } from '../../../utils/Validator/defaultRules';\n\nconst bankAccountNumberRegEx = /^(\\d){1,8}$/;\nconst bankLocationIdRegEx = /^(\\d){6}$/;\n\nexport const bacsValidationRules: ValidatorRules = {\n    bankAccountNumber: {\n        modes: ['blur', 'input'],\n        validate: value => !!value && bankAccountNumberRegEx.test(value)\n    },\n    bankLocationId: [\n        {\n            modes: ['input'],\n            validate: value => !!value && /^(\\d){1,6}$/.test(value)\n        },\n        {\n            modes: ['blur'],\n            validate: value => !!value && bankLocationIdRegEx.test(value)\n        }\n    ],\n    amountConsentCheckbox: {\n        modes: ['blur'],\n        validate: value => !!value\n    },\n    accountConsentCheckbox: {\n        modes: ['blur'],\n        validate: value => !!value\n    },\n    shopperEmail: validationRules.emailRule,\n    default: {\n        modes: ['blur'],\n        validate: value => !!value && value.length > 0\n    }\n};\n\nexport const bacsFormatters = {\n    bankAccountNumber: digitsOnlyFormatter,\n    bankLocationId: digitsOnlyFormatter\n};\n","import { ERROR_FIELD_INVALID, ERROR_FIELD_REQUIRED } from '../core/Errors/constants';\n\nexport const getErrorMessage = (i18n, error, label?: string): string | boolean => {\n    if (error?.errorMessage) {\n        const errorKey = error.errorMessage;\n        const shouldBuildErrorMessage = [ERROR_FIELD_REQUIRED, ERROR_FIELD_INVALID].includes(errorKey);\n        // Build the error msg: Enter the [label name] or Enter a valid [label name]\n        const options = { values: { label: label?.toLowerCase() ?? '' } };\n        return shouldBuildErrorMessage ? i18n.get(errorKey, options) : i18n.get(errorKey);\n    }\n\n    return !!error;\n};\n","import { h } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport classNames from 'classnames';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Field from '../../internal/FormFields/Field';\nimport ConsentCheckbox from '../../internal/FormFields/ConsentCheckbox';\nimport { bacsValidationRules, bacsFormatters } from './validate';\nimport { BacsDataState, BacsInputProps } from './types';\nimport './BacsInput.scss';\n\nimport useForm from '../../../utils/useForm';\nimport useImage from '../../../core/Context/useImage';\nimport InputText from '../../internal/FormFields/InputText';\nimport InputEmail from '../../internal/FormFields/InputEmail';\nimport FormInstruction from '../../internal/FormInstruction';\nimport { getErrorMessage } from '../../../utils/getErrorMessage';\nimport { PREFIX } from '../../internal/Icon/constants';\n\nconst ENTER_STATE = 'enter-data';\nconst CONFIRM_STATE = 'confirm-data';\n\nfunction BacsInput(props: BacsInputProps) {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm<BacsDataState>({\n        schema: ['holderName', 'bankAccountNumber', 'bankLocationId', 'shopperEmail', 'amountConsentCheckbox', 'accountConsentCheckbox'],\n        defaultData: props.data,\n        formatters: bacsFormatters,\n        rules: bacsValidationRules\n    });\n\n    const [status, setStatus] = useState(ENTER_STATE);\n    this.setStatus = setStatus;\n    this.showValidation = triggerValidation;\n\n    const handlePayButton = () => {\n        if (!isValid) return this.showValidation();\n\n        if (status === ENTER_STATE) {\n            return this.setStatus(CONFIRM_STATE);\n        } else if (status === CONFIRM_STATE) {\n            return props.onSubmit();\n        }\n    };\n\n    const handleEdit = () => {\n        return this.setStatus(ENTER_STATE);\n    };\n\n    useEffect(() => {\n        props.onChange({ data, valid, errors, isValid });\n    }, [data, valid, errors, isValid]);\n\n    return (\n        <div\n            className={classNames({\n                'adyen-checkout__bacs': true,\n                'adyen-checkout__bacs--confirm': status === CONFIRM_STATE || status === 'loading'\n            })}\n        >\n            <FormInstruction />\n\n            {status == CONFIRM_STATE && (\n                <div\n                    className={classNames({\n                        'adyen-checkout__bacs--edit': true,\n                        'adyen-checkout__bacs--edit-dropin': props.isDropin\n                    })}\n                >\n                    <InputText\n                        name={'bacsEdit'}\n                        className={'adyen-checkout__bacs--edit-button'}\n                        value={i18n.get('edit')}\n                        aria-label={i18n.get('edit')}\n                        readonly={true}\n                        onClick={handleEdit}\n                    />\n                </div>\n            )}\n\n            <Field\n                className={classNames({\n                    'adyen-checkout__bacs--holder-name': true,\n                    'adyen-checkout__field--inactive': status === CONFIRM_STATE || status === 'loading'\n                })}\n                label={i18n.get('bacs.accountHolderName')}\n                errorMessage={errors.holderName ? i18n.get('bacs.accountHolderName.invalid') : false}\n                isValid={valid.holderName}\n                name={'accountHolderName'}\n                i18n={i18n}\n            >\n                <InputText\n                    name={'bacs.accountHolderName'}\n                    className={'adyen-checkout__bacs-input--holder-name'}\n                    placeholder={props.placeholders.holderName}\n                    value={data.holderName}\n                    aria-invalid={!valid.holderName}\n                    aria-label={i18n.get('bacs.accountHolderName')}\n                    aria-required={'true'}\n                    required={true}\n                    readonly={status === CONFIRM_STATE || status === 'loading'}\n                    autocorrect={'off'}\n                    onBlur={handleChangeFor('holderName', 'blur')}\n                    onInput={handleChangeFor('holderName', 'input')}\n                />\n            </Field>\n\n            <div className=\"adyen-checkout__bacs__num-id adyen-checkout__field-wrapper\">\n                <Field\n                    errorMessage={!!errors.bankAccountNumber && i18n.get('bacs.accountNumber.invalid')}\n                    label={i18n.get('bacs.accountNumber')}\n                    className={classNames({\n                        'adyen-checkout__bacs--bank-account-number': true,\n                        'adyen-checkout__field--inactive': status === CONFIRM_STATE || status === 'loading'\n                    })}\n                    classNameModifiers={['col-70']}\n                    isValid={valid.bankAccountNumber}\n                    name={'bankAccountNumber'}\n                    i18n={i18n}\n                >\n                    <InputText\n                        value={data.bankAccountNumber}\n                        className={'adyen-checkout__bacs-input--bank-account-number'}\n                        placeholder={props.placeholders.bankAccountNumber}\n                        aria-invalid={!valid.bankAccountNumber}\n                        aria-label={i18n.get('bacs.accountNumber')}\n                        aria-required={'true'}\n                        required={true}\n                        readonly={status === CONFIRM_STATE || status === 'loading'}\n                        autocorrect={'off'}\n                        onBlur={handleChangeFor('bankAccountNumber', 'blur')}\n                        onInput={handleChangeFor('bankAccountNumber', 'input')}\n                    />\n                </Field>\n\n                <Field\n                    errorMessage={!!errors.bankLocationId && i18n.get('bacs.bankLocationId.invalid')}\n                    label={i18n.get('bacs.bankLocationId')}\n                    className={classNames({\n                        'adyen-checkout__bacs--bank-location-id': true,\n                        'adyen-checkout__field--inactive': status === CONFIRM_STATE || status === 'loading'\n                    })}\n                    classNameModifiers={['col-30']}\n                    isValid={valid.bankLocationId}\n                    name={'bankLocationId'}\n                    i18n={i18n}\n                >\n                    <InputText\n                        value={data.bankLocationId}\n                        className={'adyen-checkout__bacs-input--bank-location-id'}\n                        placeholder={props.placeholders.bankLocationId}\n                        aria-invalid={!valid.bankLocationId}\n                        aria-label={i18n.get('bacs.bankLocationId')}\n                        aria-required={'true'}\n                        required={true}\n                        readonly={status === CONFIRM_STATE || status === 'loading'}\n                        autocorrect={'off'}\n                        onBlur={handleChangeFor('bankLocationId', 'blur')}\n                        onInput={handleChangeFor('bankLocationId', 'input')}\n                    />\n                </Field>\n            </div>\n\n            <Field\n                errorMessage={getErrorMessage(i18n, errors.shopperEmail, i18n.get('shopperEmail'))}\n                label={i18n.get('shopperEmail')}\n                className={classNames({\n                    'adyen-checkout__bacs--shopper-email': true,\n                    'adyen-checkout__field--inactive': status === CONFIRM_STATE || status === 'loading'\n                })}\n                isValid={valid.shopperEmail}\n                name={'emailAddress'}\n                i18n={i18n}\n            >\n                <InputEmail\n                    value={data.shopperEmail}\n                    name={'shopperEmail'}\n                    className={'adyen-checkout__bacs-input--shopper-email'}\n                    classNameModifiers={['large']}\n                    placeholder={props.placeholders.shopperEmail}\n                    spellcheck={false}\n                    aria-invalid={!valid.shopperEmail}\n                    aria-label={i18n.get('shopperEmail')}\n                    aria-required={'true'}\n                    required={true}\n                    readonly={status === CONFIRM_STATE || status === 'loading'}\n                    autocorrect={'off'}\n                    onInput={handleChangeFor('shopperEmail', 'input')}\n                    onBlur={handleChangeFor('shopperEmail', 'blur')}\n                />\n            </Field>\n\n            {status === ENTER_STATE && (\n                <ConsentCheckbox\n                    classNameModifiers={['amountConsentCheckbox']}\n                    errorMessage={!!errors.amountConsentCheckbox}\n                    label={i18n.get('bacs.consent.amount')}\n                    onChange={handleChangeFor('amountConsentCheckbox')}\n                    checked={!!data.amountConsentCheckbox}\n                    i18n={i18n}\n                />\n            )}\n\n            {status === ENTER_STATE && (\n                <ConsentCheckbox\n                    classNameModifiers={['accountConsentCheckbox']}\n                    errorMessage={!!errors.accountConsentCheckbox}\n                    label={i18n.get('bacs.consent.account')}\n                    onChange={handleChangeFor('accountConsentCheckbox')}\n                    checked={!!data.accountConsentCheckbox}\n                    i18n={i18n}\n                />\n            )}\n\n            {props.showPayButton &&\n                props.payButton({\n                    status,\n                    label:\n                        status === ENTER_STATE\n                            ? i18n.get('continue')\n                            : `${i18n.get('bacs.confirm')} ${\n                                  !!props.amount?.value && !!props.amount?.currency ? i18n.amount(props.amount.value, props.amount.currency) : ''\n                              }`,\n                    icon: getImage({ imageFolder: 'components/' })(`${PREFIX}lock`),\n                    onClick: handlePayButton\n                })}\n        </div>\n    );\n}\n\nBacsInput.defaultProps = {\n    data: {},\n    placeholders: {}\n};\n\nexport default BacsInput;\n","export function copyToClipboard(value) {\n    function createInput(text): HTMLInputElement {\n        const textArea = document.createElement('textArea');\n        (textArea as HTMLInputElement).readOnly = true;\n        (textArea as HTMLInputElement).value = text;\n        document.body.appendChild(textArea);\n        return textArea as HTMLInputElement;\n    }\n\n    const copyInput = createInput(value);\n\n    if (window.navigator.userAgent.match(/ipad|iphone/i)) {\n        const range = document.createRange();\n        range.selectNodeContents(copyInput);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n        copyInput.setSelectionRange(0, 999999);\n    } else {\n        copyInput.select();\n    }\n\n    document.execCommand('copy');\n\n    document.body.removeChild(copyInput);\n}\n\nexport default copyToClipboard;\n","import { h } from 'preact';\nimport classNames from 'classnames';\nimport Button from '../Button';\nimport { copyToClipboard } from '../../../utils/clipboard';\n\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport './Voucher.scss';\nimport { VoucherProps } from './types';\nimport useImage from '../../../core/Context/useImage';\nimport { PREFIX } from '../Icon/constants';\n\nexport default function Voucher({ voucherDetails = [], className = '', ...props }: VoucherProps) {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    props.onActionHandled?.({ componentType: props.paymentMethodType, actionDescription: 'voucher-presented' });\n\n    return (\n        <div className={classNames('adyen-checkout__voucher-result', `adyen-checkout__voucher-result--${props.paymentMethodType}`, className)}>\n            <div className=\"adyen-checkout__voucher-result__top\">\n                <div className=\"adyen-checkout__voucher-result__image\">\n                    {!!props.imageUrl && (\n                        <span className=\"adyen-checkout__voucher-result__image__wrapper\">\n                            <img alt={props.paymentMethodType} className=\"adyen-checkout__voucher-result__image__brand\" src={props.imageUrl} />\n                        </span>\n                    )}\n\n                    {!!props.issuerImageUrl && (\n                        <span className=\"adyen-checkout__voucher-result__image__wrapper\">\n                            <img alt={props.paymentMethodType} className=\"adyen-checkout__voucher-result__image__issuer\" src={props.issuerImageUrl} />\n                        </span>\n                    )}\n                </div>\n\n                <div className=\"adyen-checkout__voucher-result__introduction\">\n                    {props.introduction}{' '}\n                    {props.instructionsUrl && (\n                        <a\n                            className=\"adyen-checkout-link adyen-checkout-link--voucher-result-instructions\"\n                            href={props.instructionsUrl}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {i18n.get('voucher.readInstructions')} ›\n                        </a>\n                    )}\n                </div>\n\n                {props.amount && (\n                    <div className=\"adyen-checkout__voucher-result__amount\">\n                        {props.amount}\n\n                        {props.surcharge && (\n                            <span className=\"adyen-checkout__voucher-result__surcharge\">\n                                ({i18n.get('voucher.surcharge').replace('%@', props.surcharge)})\n                            </span>\n                        )}\n                    </div>\n                )}\n            </div>\n\n            {props.reference && (\n                <div className=\"adyen-checkout__voucher-result__separator\">\n                    <div className=\"adyen-checkout__voucher-result__separator__inner\" />\n                    <div className=\"adyen-checkout__voucher-result__code__label\">\n                        <span className=\"adyen-checkout__voucher-result__code__label__text\">{i18n.get('voucher.paymentReferenceLabel')}</span>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"adyen-checkout__voucher-result__bottom\">\n                {props.reference && (\n                    <div className=\"adyen-checkout__voucher-result__code\">\n                        {props.barcode && (\n                            <img\n                                alt={i18n.get('voucher.paymentReferenceLabel')}\n                                className=\"adyen-checkout__voucher-result__code__barcode\"\n                                src={props.barcode}\n                            />\n                        )}\n                        <span>{props.reference}</span>\n                    </div>\n                )}\n\n                {(!!props.downloadUrl || !!props.copyBtn) && (\n                    <ul className=\"adyen-checkout__voucher-result__actions\">\n                        {!!props.copyBtn && (\n                            <li className=\"adyen-checkout__voucher-result__actions__item\">\n                                <Button\n                                    inline\n                                    variant=\"action\"\n                                    onClick={(e, { complete }) => {\n                                        copyToClipboard(props.reference);\n                                        complete();\n                                    }}\n                                    icon={getImage({ imageFolder: 'components/' })(`${PREFIX}copy`)}\n                                    label={i18n.get('button.copy')}\n                                />\n                            </li>\n                        )}\n\n                        {!!props.downloadUrl && (\n                            <li className=\"adyen-checkout__voucher-result__actions__item\">\n                                <Button\n                                    inline\n                                    variant=\"action\"\n                                    href={props.downloadUrl}\n                                    icon={getImage({ imageFolder: 'components/' })(`${PREFIX}download`)}\n                                    label={props.downloadButtonText || i18n.get('button.download')}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                />\n                            </li>\n                        )}\n                    </ul>\n                )}\n\n                <ul className=\"adyen-checkout__voucher-result__details\">\n                    {voucherDetails\n                        .filter(({ label, value }) => !!label && !!value)\n                        .map(({ label, value }, index) => (\n                            <li key={index} className=\"adyen-checkout__voucher-result__details__item\">\n                                <span className=\"adyen-checkout__voucher-result__details__label\">{label}</span>\n                                <span className=\"adyen-checkout__voucher-result__details__value\">{value}</span>\n                            </li>\n                        ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n","import { CommonVoucherProps } from './types';\n\nexport const extractCommonPropsForVoucher = ({ props, i18n, introKey, getImage }): CommonVoucherProps => {\n    const { paymentMethodType, onActionHandled, totalAmount, reference } = props;\n\n    return {\n        // occur in all vouchers\n        paymentMethodType,\n        introduction: i18n.get(introKey),\n        imageUrl: getImage(paymentMethodType),\n        onActionHandled,\n        // occurs in 7/8 vouchers\n        ...(totalAmount ? { amount: i18n.amount(totalAmount.value, totalAmount.currency) } : {}),\n        // occurs in 6/8 vouchers\n        ...(reference ? { reference } : {})\n    };\n};\n","import { h } from 'preact';\n\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Voucher from '../../internal/Voucher';\nimport '../../internal/Voucher/Voucher.scss';\nimport './BacsResult.scss';\nimport useImage from '../../../core/Context/useImage';\nimport { extractCommonPropsForVoucher } from '../../internal/Voucher/utils';\n\nconst BacsResult = props => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    return (\n        <Voucher\n            {...extractCommonPropsForVoucher({ props, i18n, introKey: 'bacs.result.introduction', getImage: getImage() })}\n            downloadUrl={props.url}\n            downloadButtonText={i18n.get('download.pdf')}\n        />\n    );\n};\n\nexport default BacsResult;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport BacsInput from './components/BacsInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport BacsResult from './components/BacsResult';\nimport PayButton from '../internal/PayButton';\nimport { TxVariants } from '../tx-variants';\nimport { VoucherConfiguration } from '../internal/Voucher/types';\nimport { BacsElementData } from './types';\n\nclass BacsElement extends UIElement<VoucherConfiguration> {\n    public static type = TxVariants.directdebit_GB;\n\n    formatData(): BacsElementData {\n        return {\n            paymentMethod: {\n                type: BacsElement.type,\n                ...(this.state.data?.holderName && { holderName: this.state.data.holderName }),\n                ...(this.state.data?.bankAccountNumber && { bankAccountNumber: this.state.data.bankAccountNumber }),\n                ...(this.state.data?.bankLocationId && { bankLocationId: this.state.data.bankLocationId })\n            },\n            ...(this.state.data?.shopperEmail && { shopperEmail: this.state.data.shopperEmail })\n        };\n    }\n\n    get isValid(): boolean {\n        return !!this.state.isValid;\n    }\n\n    public payButton = props => {\n        return <PayButton amount={this.props.amount} onClick={this.submit} {...props} />;\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.url ? (\n                    <BacsResult\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        icon={this.icon}\n                        url={this.props.url}\n                        paymentMethodType={this.props.paymentMethodType}\n                        onActionHandled={this.onActionHandled}\n                        // originalAction={this.props.originalAction}\n                    />\n                ) : (\n                    <BacsInput\n                        // @ts-ignore ref is internal from the Component\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        {...this.props}\n                        onChange={this.setState}\n                        payButton={this.payButton}\n                        onSubmit={this.submit}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default BacsElement;\n","/**\n * @internal\n * IBAN Countries, length, structure and examples\n */\nconst countries = {\n    AD: {\n        length: 24,\n        structure: 'F04F04A12',\n        example: 'AD9912345678901234567890'\n    },\n    AE: {\n        length: 23,\n        structure: 'F03F16',\n        example: 'AE993331234567890123456'\n    },\n    AL: {\n        length: 28,\n        structure: 'F08A16',\n        example: 'AL47212110090000000235698741'\n    },\n    AT: {\n        length: 20,\n        structure: 'F05F11',\n        example: 'AT611904300234573201'\n    },\n    AZ: {\n        length: 28,\n        structure: 'U04A20',\n        example: 'AZ21NABZ00000000137010001944'\n    },\n    BA: {\n        length: 20,\n        structure: 'F03F03F08F02',\n        example: 'BA391290079401028494'\n    },\n    BE: {\n        length: 16,\n        structure: 'F03F07F02',\n        example: 'BE68 5390 0754 7034'\n    },\n    BG: {\n        length: 22,\n        structure: 'U04F04F02A08',\n        example: 'BG80BNBG96611020345678'\n    },\n    BH: {\n        length: 22,\n        structure: 'U04A14',\n        example: 'BH67BMAG00001299123456'\n    },\n    BR: {\n        length: 29,\n        structure: 'F08F05F10U01A01',\n        example: 'BR9700360305000010009795493P1'\n    },\n    CH: {\n        length: 21,\n        structure: 'F05A12',\n        example: 'CH9300762011623852957'\n    },\n    CR: {\n        length: 22,\n        structure: 'F04F14',\n        example: 'CR72012300000171549015'\n    },\n    CY: {\n        length: 28,\n        structure: 'F03F05A16',\n        example: 'CY17002001280000001200527600'\n    },\n    CZ: {\n        length: 24,\n        structure: 'F04F06F10',\n        example: 'CZ6508000000192000145399'\n    },\n    DE: {\n        length: 22,\n        structure: 'F08F10',\n        example: 'DE00123456789012345678'\n    },\n    DK: {\n        length: 18,\n        structure: 'F04F09F01',\n        example: 'DK5000400440116243'\n    },\n    DO: {\n        length: 28,\n        structure: 'U04F20',\n        example: 'DO28BAGR00000001212453611324'\n    },\n    EE: {\n        length: 20,\n        structure: 'F02F02F11F01',\n        example: 'EE382200221020145685'\n    },\n    ES: {\n        length: 24,\n        structure: 'F04F04F01F01F10',\n        example: 'ES9121000418450200051332'\n    },\n    FI: {\n        length: 18,\n        structure: 'F06F07F01',\n        example: 'FI2112345600000785'\n    },\n    FO: {\n        length: 18,\n        structure: 'F04F09F01',\n        example: 'FO6264600001631634'\n    },\n    FR: {\n        length: 27,\n        structure: 'F05F05A11F02',\n        example: 'FR1420041010050500013M02606'\n    },\n    GB: {\n        length: 22,\n        structure: 'U04F06F08',\n        example: 'GB29NWBK60161331926819'\n    },\n    GE: {\n        length: 22,\n        structure: 'U02F16',\n        example: 'GE29NB0000000101904917'\n    },\n    GI: {\n        length: 23,\n        structure: 'U04A15',\n        example: 'GI75NWBK000000007099453'\n    },\n    GL: {\n        length: 18,\n        structure: 'F04F09F01',\n        example: 'GL8964710001000206'\n    },\n    GR: {\n        length: 27,\n        structure: 'F03F04A16',\n        example: 'GR1601101250000000012300695'\n    },\n    GT: {\n        length: 28,\n        structure: 'A04A20',\n        example: 'GT82TRAJ01020000001210029690'\n    },\n    HR: {\n        length: 21,\n        structure: 'F07F10',\n        example: 'HR1210010051863000160'\n    },\n    HU: {\n        length: 28,\n        structure: 'F03F04F01F15F01',\n        example: 'HU42117730161111101800000000'\n    },\n    IE: {\n        length: 22,\n        structure: 'U04F06F08',\n        example: 'IE29AIBK93115212345678'\n    },\n    IL: {\n        length: 23,\n        structure: 'F03F03F13',\n        example: 'IL620108000000099999999'\n    },\n    IS: {\n        length: 26,\n        structure: 'F04F02F06F10',\n        example: 'IS140159260076545510730339'\n    },\n    IT: {\n        length: 27,\n        structure: 'U01F05F05A12',\n        example: 'IT60X0542811101000000123456'\n    },\n    KW: {\n        length: 30,\n        structure: 'U04A22',\n        example: 'KW81CBKU0000000000001234560101'\n    },\n    KZ: {\n        length: 20,\n        structure: 'F03A13',\n        example: 'KZ86125KZT5004100100'\n    },\n    LB: {\n        length: 28,\n        structure: 'F04A20',\n        example: 'LB62099900000001001901229114'\n    },\n    LC: {\n        length: 32,\n        structure: 'U04F24',\n        example: 'LC07HEMM000100010012001200013015'\n    },\n    LI: {\n        length: 21,\n        structure: 'F05A12',\n        example: 'LI21088100002324013AA'\n    },\n    LT: {\n        length: 20,\n        structure: 'F05F11',\n        example: 'LT121000011101001000'\n    },\n    LU: {\n        length: 20,\n        structure: 'F03A13',\n        example: 'LU280019400644750000'\n    },\n    LV: {\n        length: 21,\n        structure: 'U04A13',\n        example: 'LV80BANK0000435195001'\n    },\n    MC: {\n        length: 27,\n        structure: 'F05F05A11F02',\n        example: 'MC5811222000010123456789030'\n    },\n    MD: {\n        length: 24,\n        structure: 'U02A18',\n        example: 'MD24AG000225100013104168'\n    },\n    ME: {\n        length: 22,\n        structure: 'F03F13F02',\n        example: 'ME25505000012345678951'\n    },\n    MK: {\n        length: 19,\n        structure: 'F03A10F02',\n        example: 'MK07250120000058984'\n    },\n    MR: {\n        length: 27,\n        structure: 'F05F05F11F02',\n        example: 'MR1300020001010000123456753'\n    },\n    MT: {\n        length: 31,\n        structure: 'U04F05A18',\n        example: 'MT84MALT011000012345MTLCAST001S'\n    },\n    MU: {\n        length: 30,\n        structure: 'U04F02F02F12F03U03',\n        example: 'MU17BOMM0101101030300200000MUR'\n    },\n    NL: {\n        length: 18,\n        structure: 'U04F10',\n        example: 'NL99BANK0123456789'\n    },\n    NO: {\n        length: 15,\n        structure: 'F04F06F01',\n        example: 'NO9386011117947'\n    },\n    PK: {\n        length: 24,\n        structure: 'U04A16',\n        example: 'PK36SCBL0000001123456702'\n    },\n    PL: {\n        length: 28,\n        structure: 'F08F16',\n        example: 'PL00123456780912345678901234'\n    },\n    PS: {\n        length: 29,\n        structure: 'U04A21',\n        example: 'PS92PALS000000000400123456702'\n    },\n    PT: {\n        length: 25,\n        structure: 'F04F04F11F02',\n        example: 'PT50000201231234567890154'\n    },\n    RO: {\n        length: 24,\n        structure: 'U04A16',\n        example: 'RO49AAAA1B31007593840000'\n    },\n    RS: {\n        length: 22,\n        structure: 'F03F13F02',\n        example: 'RS35260005601001611379'\n    },\n    SA: {\n        length: 24,\n        structure: 'F02A18',\n        example: 'SA0380000000608010167519'\n    },\n    SE: {\n        length: 24,\n        structure: 'F03F16F01',\n        example: 'SE4550000000058398257466'\n    },\n    SI: {\n        length: 19,\n        structure: 'F05F08F02',\n        example: 'SI56263300012039086'\n    },\n    SK: {\n        length: 24,\n        structure: 'F04F06F10',\n        example: 'SK3112000000198742637541'\n    },\n    SM: {\n        length: 27,\n        structure: 'U01F05F05A12',\n        example: 'SM86U0322509800000000270100'\n    },\n    ST: {\n        length: 25,\n        structure: 'F08F11F02',\n        example: 'ST68000100010051845310112'\n    },\n    TL: {\n        length: 23,\n        structure: 'F03F14F02',\n        example: 'TL380080012345678910157'\n    },\n    TN: {\n        length: 24,\n        structure: 'F02F03F13F02',\n        example: 'TN5910006035183598478831'\n    },\n    TR: {\n        length: 26,\n        structure: 'F05F01A16',\n        example: 'TR330006100519786457841326'\n    },\n    VG: {\n        length: 24,\n        structure: 'U04F16',\n        example: 'VG96VPVG0000012345678901'\n    },\n    XK: {\n        length: 20,\n        structure: 'F04F10F02',\n        example: 'XK051212012345678906'\n    },\n    AO: {\n        length: 25,\n        structure: 'F21',\n        example: 'AO69123456789012345678901'\n    },\n    BF: {\n        length: 27,\n        structure: 'F23',\n        example: 'BF2312345678901234567890123'\n    },\n    BI: {\n        length: 16,\n        structure: 'F12',\n        example: 'BI41123456789012'\n    },\n    BJ: {\n        length: 28,\n        structure: 'F24',\n        example: 'BJ39123456789012345678901234'\n    },\n    CI: {\n        length: 28,\n        structure: 'U01F23',\n        example: 'CI17A12345678901234567890123'\n    },\n    CM: {\n        length: 27,\n        structure: 'F23',\n        example: 'CM9012345678901234567890123'\n    },\n    CV: {\n        length: 25,\n        structure: 'F21',\n        example: 'CV30123456789012345678901'\n    },\n    DZ: {\n        length: 24,\n        structure: 'F20',\n        example: 'DZ8612345678901234567890'\n    },\n    IR: {\n        length: 26,\n        structure: 'F22',\n        example: 'IR861234568790123456789012'\n    },\n    JO: {\n        length: 30,\n        structure: 'A04F22',\n        example: 'JO15AAAA1234567890123456789012'\n    },\n    MG: {\n        length: 27,\n        structure: 'F23',\n        example: 'MG1812345678901234567890123'\n    },\n    ML: {\n        length: 28,\n        structure: 'U01F23',\n        example: 'ML15A12345678901234567890123'\n    },\n    MZ: {\n        length: 25,\n        structure: 'F21',\n        example: 'MZ25123456789012345678901'\n    },\n    QA: {\n        length: 29,\n        structure: 'U04A21',\n        example: 'QA30AAAA123456789012345678901'\n    },\n    SN: {\n        length: 28,\n        structure: 'U01F23',\n        example: 'SN52A12345678901234567890123'\n    },\n    UA: {\n        length: 29,\n        structure: 'F25',\n        example: 'UA511234567890123456789012345'\n    }\n};\n\nexport default countries;\n","import countries from './specifications';\n\n/**\n * Parse the BBAN structure used to configure each IBAN __specification and returns a matching regular expression.\n * A structure is composed of blocks of 3 characters (one letter and 2 digits). Each block represents\n * a logical group in the typical representation of the BBAN. For each group, the letter indicates which characters\n * are allowed in this group and the following 2-digits number tells the length of the group.\n *\n * @param structure - the structure to parse\n * @param countryCode - the countryCode to check format against\n *\n * @internal\n */\nexport const parseStructure = (structure, countryCode) => {\n    if (countryCode === null || !countries[countryCode] || !countries[countryCode].structure) {\n        return false;\n    }\n\n    const passedStructure = countries[countryCode].structure;\n\n    // split in blocks of 3 chars\n    const regex = passedStructure.match(/(.{3})/g).map(block => {\n        // parse each structure block (1-char + 2-digits)\n        const pattern = block.slice(0, 1);\n        const repeats = parseInt(block.slice(1), 10);\n        let format;\n\n        switch (pattern) {\n            case 'A':\n                format = '0-9A-Za-z';\n                break;\n            case 'B':\n                format = '0-9A-Z';\n                break;\n            case 'C':\n                format = 'A-Za-z';\n                break;\n            case 'F':\n                format = '0-9';\n                break;\n            case 'L':\n                format = 'a-z';\n                break;\n            case 'U':\n                format = 'A-Z';\n                break;\n            case 'W':\n                format = '0-9a-z';\n                break;\n            default:\n                break;\n        }\n\n        return `([${format}]{${repeats}})`;\n    });\n\n    return new RegExp(`^${regex.join('')}$`);\n};\n\n/**\n * @internal\n */\nexport const formatIban = iban =>\n    iban\n        .replace(/\\W/gi, '')\n        .replace(/(.{4})(?!$)/g, '$1 ')\n        .trim();\n\nexport type ElectronicFormat = string;\n/**\n * Returns any non alphanumeric characters and uppercases them\n *\n * @internal\n */\nexport const electronicFormat = (iban: string): ElectronicFormat => {\n    const NON_ALPHANUM = /[^a-zA-Z0-9]/g;\n    return iban.replace(NON_ALPHANUM, '').toUpperCase();\n};\n\n/**\n * Lazy-loaded regex (parse the structure and construct the regular expression the first time we need it for validation)\n *\n * @internal\n */\nexport const regex = (iban, countryCode) => parseStructure(iban, countryCode);\n\n/**\n * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n * @param ibanInput - The IBAN value\n * @returns The prepared IBAN\n *\n * @internal\n */\nexport const iso13616Prepare = ibanInput => {\n    let iban = ibanInput;\n    const A = 'A'.charCodeAt(0);\n    const Z = 'Z'.charCodeAt(0);\n    iban = iban.toUpperCase();\n    iban = iban.substr(4) + iban.substr(0, 4);\n\n    return iban\n        .split('')\n        .map(n => {\n            const code = n.charCodeAt(0);\n\n            if (code >= A && code <= Z) {\n                // A = 10, B = 11, ... Z = 35\n                const codeA = code - A;\n                return codeA + 10;\n            }\n\n            return n;\n        })\n        .join('');\n};\n\n/**\n * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n *\n * @param iban -\n *\n * @internal\n */\nexport const iso7064Mod97_10 = iban => {\n    let remainder = iban;\n    let block;\n\n    while (remainder.length > 2) {\n        block = remainder.slice(0, 9);\n        remainder = (parseInt(block, 10) % 97) + remainder.slice(block.length);\n    }\n\n    return parseInt(remainder, 10) % 97;\n};\n\n/**\n *  @param countryCode -\n *  @returns Example of IBAN Number\n */\nexport const getIbanPlaceHolder = (countryCode = null) => {\n    if (countryCode && countries[countryCode] && countries[countryCode].example) {\n        return formatIban(countries[countryCode].example);\n    }\n\n    return 'AB00 1234 5678 9012 3456 7890';\n};\n\nexport const getIbanCountrySpecification = countryCode => {\n    if (countryCode && countries[countryCode]) {\n        return countries[countryCode];\n    }\n\n    return false;\n};\n\n/**\n *  @param cursor -\n *  @param iban -\n *  @param previousIban -\n *  @returns new cursor position\n */\nexport const getNextCursorPosition = (cursor, iban, previousIban) => {\n    if (cursor === 0 || !iban.length) return 0;\n\n    // This tells us how long the edit is. If user modified input from `(2__)` to `(243__)`,\n    // we know the user in this instance pasted two characters\n    const editLength = iban.length - previousIban.length;\n    const isAddition = editLength > 0;\n    const isMaskChar = (ibanValue, position) => /\\s/.test(ibanValue.charAt(position));\n    const initialCursor = cursor - editLength;\n\n    // is adding text, check calculate if there was a mask element after the initial cursor, then move cursor forward\n    // example: NL13 ABNA| 1234 5678 9 => NL13 ABNA 0|123 4567 89\n    if (isAddition && (isMaskChar(iban, initialCursor + 1) || isMaskChar(iban, initialCursor))) {\n        return cursor + 1;\n    }\n\n    // is removing text, check if the previous is a mask character, then move cursor back\n    // example: NL13 ABNA 0|123 4567 89 => NL13 ABNA| 1234 5678 9\n    if (!isAddition && isMaskChar(iban, cursor - 1)) {\n        return cursor - 1;\n    }\n\n    return cursor;\n};\n\n/**\n * @param electronicFormatIban -\n * @returns countryCode string\n */\nexport const getCountryCode = (electronicFormatIban: ElectronicFormat) => electronicFormatIban.slice(0, 2);\n","import { iso13616Prepare, iso7064Mod97_10, electronicFormat, regex, getIbanCountrySpecification, getCountryCode } from './utils';\nimport { isEmpty } from '../../../utils/validator-utils';\n\n/**\n * Contains a validation status\n * @internal\n * @param status -\n * @param code -\n */\nfunction ValidationStatus(status, code = null) {\n    this.status = status;\n    this.code = code;\n}\n\n/**\n * Validates the format of an iban\n * @internal\n * @param iban -\n */\nconst checkIbanStructure = iban => {\n    const countryCode = iban.slice(0, 2);\n    const ibanRegex = regex(iban, countryCode);\n\n    return ((ibanRegex as RegExp).test && (ibanRegex as RegExp).test(iban.slice(4))) || false;\n};\n\n/**\n * Checks validity of an IBAN\n * @param iban -\n */\nexport const isValidIBAN = iban => {\n    const electronicFormatIban = electronicFormat(iban);\n    const preparedIban = iso13616Prepare(electronicFormatIban);\n    const isValidISO = iso7064Mod97_10(preparedIban) === 1;\n\n    return isValidISO && checkIbanStructure(electronicFormatIban);\n};\n\n/**\n * Checkss the validity status of an IBAN\n * @param iban -\n */\nexport const checkIbanStatus = iban => {\n    const electronicFormatIban = electronicFormat(iban);\n\n    if (iban.length < 2) {\n        return new ValidationStatus('no-validate', 'TOO_SHORT'); // A\n    }\n\n    const countryCode = getCountryCode(electronicFormatIban);\n    const countrySpecification = getIbanCountrySpecification(countryCode);\n\n    if (!countrySpecification) {\n        return new ValidationStatus('invalid', 'INVALID_COUNTRY'); // AA13TEST0123456789\n    }\n\n    if (electronicFormatIban.length > countrySpecification.length) {\n        return new ValidationStatus('invalid', 'TOO_LONG'); // NL13TEST01234567891\n    }\n\n    if (electronicFormatIban.length === countrySpecification.length) {\n        if (isValidIBAN(iban)) {\n            return new ValidationStatus('valid', 'VALID'); // NL13TEST0123456789\n        }\n\n        return new ValidationStatus('invalid', 'INVALID_IBAN'); // NL13TEST0123456781\n    }\n\n    return new ValidationStatus('no-validate', 'UNKNOWN'); // NL13TEST012345678\n};\n\n/**\n * Checks validity of a holder name\n */\nexport const isValidHolder = value => (isEmpty(value) ? null : true); // true, if there are chars other than spaces\n","import { Component, h } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Field from '../FormFields/Field';\nimport { checkIbanStatus, isValidHolder } from './validate';\nimport { electronicFormat, formatIban, getCountryCode, getNextCursorPosition } from './utils';\nimport Fieldset from '../FormFields/Fieldset';\nimport { GenericError } from '../../../core/Errors/types';\nimport InputText from '../FormFields/InputText';\n\ninterface IbanInputProps {\n    holderName?: boolean;\n    placeholders?: Omit<IbanData, 'countryCode'>;\n    countryCode?: string;\n    showPayButton?: boolean;\n    payButton?: any;\n    onChange: (data) => void;\n    label: string;\n    data: IbanData;\n}\n\ninterface IbanData {\n    ownerName?: string;\n    ibanNumber?: string;\n    countryCode?: string;\n}\n\ninterface IbanInputState {\n    data: any;\n    errors: any;\n    valid: any;\n    status: string;\n    isValid: boolean;\n    cursor: number;\n}\n\nconst ibanHolderNameErrorObj: GenericError = {\n    isValid: false,\n    errorMessage: 'ach.accountHolderNameField.invalid', // TODO create bespoke translation key\n    error: 'ach.accountHolderNameField.invalid'\n};\n\nconst ibanErrorObj: GenericError = {\n    isValid: false,\n    errorMessage: 'sepaDirectDebit.ibanField.invalid',\n    error: 'sepaDirectDebit.ibanField.invalid'\n};\n\nclass IbanInput extends Component<IbanInputProps, IbanInputState> {\n    private ibanNumber: HTMLInputElement;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            status: 'ready',\n            data: {\n                ownerName: props?.data?.ownerName || '',\n                ibanNumber: props?.data?.ibanNumber || '',\n                countryCode: props?.data?.countryCode || ''\n            },\n            isValid: false,\n            cursor: 0,\n            errors: {},\n            valid: {}\n        };\n\n        if (this.state.data['ibanNumber']) {\n            const electronicFormatIban = electronicFormat(this.state.data['ibanNumber']); // example: NL13TEST0123456789\n            this.state.data['ibanNumber'] = formatIban(electronicFormatIban); // example: NL13 TEST 0123 4567 89\n        }\n\n        if (this.state.data['ibanNumber'] || this.state.data['ownerName']) {\n            const holderNameValid = this.props.holderName ? isValidHolder(this.state.data['ownerName']) : '';\n            const ibanValid = this.state.data['ibanNumber'] ? checkIbanStatus(this.state.data['ibanNumber']).status === 'valid' : '';\n            const isValid = ibanValid && holderNameValid;\n            const data = { data: this.state.data, isValid };\n\n            this.props.onChange(data);\n        }\n    }\n\n    public static defaultProps = {\n        onChange: () => {},\n        countryCode: null,\n        holderName: true,\n        placeholders: {},\n        label: null\n    };\n\n    setStatus(status) {\n        this.setState({ status });\n    }\n\n    onChange() {\n        const holderNameValid = this.props.holderName ? isValidHolder(this.state.data['ownerName']) : true;\n        const ibanValid = checkIbanStatus(this.state.data['ibanNumber']).status === 'valid';\n        const isValid = ibanValid && holderNameValid;\n        const data = { data: this.state.data, isValid, errors: this.state.errors };\n\n        this.props.onChange(data);\n    }\n\n    public setData = (key, value, cb?) => {\n        this.setState(prevState => ({ data: { ...prevState.data, [key]: value } }), cb);\n    };\n\n    public setError = (key, value, cb?) => {\n        this.setState(prevState => ({ errors: { ...prevState.errors, [key]: value } }), cb);\n    };\n\n    public setValid = (key, value, cb?) => {\n        this.setState(prevState => ({ valid: { ...prevState.valid, [key]: value } }), cb);\n    };\n\n    public handleHolderInput = holder => {\n        this.setState(\n            prevState => ({ data: { ...prevState.data, ownerName: holder } }),\n            () => {\n                const holderStatus = isValidHolder(this.state.data['ownerName']);\n                const holderErr =\n                    holderStatus != null && !holderStatus // *don't* consider null, i.e. a value that has just been deleted, to be in error\n                        ? ibanHolderNameErrorObj\n                        : null;\n\n                this.setError('holder', holderErr, this.onChange);\n            }\n        );\n    };\n\n    public handleIbanInput = e => {\n        const inputValue = e.target.value;\n        const electronicFormatIban = electronicFormat(inputValue); // example: NL13TEST0123456789\n        const iban = formatIban(electronicFormatIban); // example: NL13 TEST 0123 4567 89\n        const validationStatus = checkIbanStatus(iban).status;\n\n        const countryCode = getCountryCode(electronicFormatIban);\n\n        // calculate cursor's new position\n        const cursor = e.target.selectionStart;\n        const previousIban = this.state.data['ibanNumber'];\n        const newCursorPosition = getNextCursorPosition(cursor, iban, previousIban);\n\n        this.setState(\n            prevState => ({\n                data: { ...prevState.data, ibanNumber: iban, countryCode: countryCode },\n                errors: {\n                    ...prevState.errors,\n                    iban: validationStatus === 'invalid' ? ibanErrorObj : null\n                },\n                valid: { ...prevState.valid, iban: validationStatus === 'valid' }\n            }),\n            () => {\n                e.target.setSelectionRange(newCursorPosition, newCursorPosition);\n                this.onChange();\n            }\n        );\n    };\n\n    public handleIbanBlur = e => {\n        const currentIban = e.target.value;\n\n        if (currentIban.length > 0) {\n            const validationStatus = checkIbanStatus(currentIban).status;\n            this.setError('iban', validationStatus !== 'valid' ? ibanErrorObj : null, this.onChange);\n        } else {\n            // Empty field is not in error\n            this.setError('iban', null, this.onChange);\n        }\n    };\n\n    showValidation() {\n        const validationStatus = checkIbanStatus(this.state.data['ibanNumber']).status;\n        const holderStatus = isValidHolder(this.state.data['ownerName']);\n        this.setError('iban', validationStatus !== 'valid' ? ibanErrorObj : null);\n\n        const holderErr = !holderStatus // *do* consider null, i.e. an empty field, to be in error\n            ? ibanHolderNameErrorObj\n            : null;\n\n        this.setError('holder', holderErr, this.onChange); // add callback param to force propagation of state to parent comp\n    }\n\n    render({ placeholders }: IbanInputProps, { data, errors, valid }) {\n        const { i18n } = useCoreContext();\n        return (\n            <Fieldset classNameModifiers={['iban-input']} label={this.props.label}>\n                {this.props.holderName && (\n                    <Field\n                        className={'adyen-checkout__field--owner-name'}\n                        label={i18n.get('sepa.ownerName')}\n                        filled={data['ownerName'] && data['ownerName'].length}\n                        errorMessage={errors.holder ? i18n.get(errors.holder.error) : false}\n                        dir={'ltr'}\n                        i18n={i18n}\n                        name={'ownerName'}\n                    >\n                        <InputText\n                            name={'ownerName'}\n                            className={'adyen-checkout__iban-input__owner-name'}\n                            placeholder={placeholders?.ownerName}\n                            value={data['ownerName']}\n                            aria-invalid={!!this.state.errors.holder}\n                            aria-label={i18n.get('sepa.ownerName')}\n                            onInput={e => this.handleHolderInput((e.target as HTMLInputElement).value)}\n                            onBlur={e => this.handleHolderInput((e.target as HTMLInputElement).value)}\n                        />\n                    </Field>\n                )}\n\n                <Field\n                    className={'adyen-checkout__field--iban-number'}\n                    label={i18n.get('sepa.ibanNumber')}\n                    errorMessage={errors.iban ? i18n.get(errors.iban.error) : false}\n                    filled={data['ibanNumber'] && data['ibanNumber'].length}\n                    isValid={valid.iban}\n                    onBlur={this.handleIbanBlur}\n                    dir={'ltr'}\n                    i18n={i18n}\n                    name={'ibanNumber'}\n                >\n                    <InputText\n                        setRef={ref => {\n                            this.ibanNumber = ref;\n                        }}\n                        name={'ibanNumber'}\n                        className={'adyen-checkout__iban-input__iban-number'}\n                        classNameModifiers={['large']}\n                        placeholder={placeholders?.ibanNumber}\n                        value={data['ibanNumber']}\n                        onInput={this.handleIbanInput}\n                        aria-invalid={!!this.state.errors.iban}\n                        aria-label={i18n.get('sepa.ibanNumber')}\n                        autocorrect={'off'}\n                        spellcheck={false}\n                    />\n                </Field>\n\n                {this.props.showPayButton && this.props.payButton({ status: this.state.status })}\n            </Fieldset>\n        );\n    }\n}\n\nexport default IbanInput;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport IbanInput from '../internal/IbanInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { SepaElementData, SepaConfiguration } from './types';\nimport { TxVariants } from '../tx-variants';\nimport FormInstruction from '../internal/FormInstruction';\nimport type { ICore } from '../../core/types';\n\nclass SepaElement extends UIElement<SepaConfiguration> {\n    public static type = TxVariants.sepadirectdebit;\n\n    constructor(checkout: ICore, props?: SepaConfiguration) {\n        super(checkout, props);\n        this.state = { ...this.state, ...{ data: { ibanNumber: '', ownerName: '' } } };\n    }\n\n    /**\n     * Formats props on construction time\n     */\n    formatProps(props) {\n        return {\n            holderName: true,\n            ...props\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData(): SepaElementData {\n        return {\n            paymentMethod: {\n                type: SepaElement.type,\n                iban: this.state.data['ibanNumber'],\n                ownerName: this.state.data['ownerName']\n            }\n        };\n    }\n\n    /**\n     * Returns whether the component state is valid or not\n     */\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <FormInstruction />\n\n                {/* @ts-ignore TODO: add props */}\n                <IbanInput\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    onChange={this.setState}\n                    // onSubmit={this.submit}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default SepaElement;\n","import { h } from 'preact';\nimport Fieldset from '../FormFields/Fieldset';\nimport { ReadOnlyCompanyDetailsProps } from './types';\n\nconst ReadOnlyCompanyDetails = ({ data }) => {\n    const { name, registrationNumber }: ReadOnlyCompanyDetailsProps = data;\n\n    return (\n        <Fieldset classNameModifiers={['companyDetails']} label=\"companyDetails\" readonly>\n            {name && `${name} `}\n            {registrationNumber && `${registrationNumber} `}\n        </Fieldset>\n    );\n};\n\nexport default ReadOnlyCompanyDetails;\n","import { ValidatorRules } from '../../../utils/Validator/types';\nimport { isEmpty } from '../../../utils/validator-utils';\nimport { SF_ErrorCodes } from '../../../core/Errors/constants';\n\nexport const companyDetailsValidationRules: ValidatorRules = {\n    default: {\n        validate: value => {\n            return value && value.length > 0;\n        },\n        modes: ['blur'],\n        errorMessage: SF_ErrorCodes.ERROR_MSG_INCOMPLETE_FIELD // = 'err-gen-9100'\n    },\n    name: {\n        validate: value => (isEmpty(value) ? null : true), // valid, if there are chars other than spaces\n        errorMessage: 'companyDetails.name.invalid',\n        modes: ['blur']\n    },\n    registrationNumber: {\n        validate: value => (isEmpty(value) ? null : true),\n        errorMessage: 'companyDetails.registrationNumber.invalid',\n        modes: ['blur']\n    }\n};\n","export const getFormattedData = data => {\n    const { name, registrationNumber } = data;\n    return {\n        ...((name || registrationNumber) && {\n            company: {\n                ...(name && { name }),\n                ...(registrationNumber && { registrationNumber })\n            }\n        })\n    };\n};\n","import { h } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport Fieldset from '../FormFields/Fieldset';\nimport Field from '../FormFields/Field';\nimport ReadOnlyCompanyDetails from './ReadOnlyCompanyDetails';\nimport { companyDetailsValidationRules } from './validate';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { getFormattedData } from './utils';\nimport { CompanyDetailsSchema, CompanyDetailsProps } from './types';\nimport useForm from '../../../utils/useForm';\nimport InputText from '../FormFields/InputText';\nimport { ComponentMethodsRef } from '../UIElement/types';\n\nexport const COMPANY_DETAILS_SCHEMA = ['name', 'registrationNumber'];\n\nexport default function CompanyDetails(props: CompanyDetailsProps) {\n    const { label = '', namePrefix, requiredFields, visibility } = props;\n    const { i18n } = useCoreContext();\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm<CompanyDetailsSchema>({\n        schema: requiredFields,\n        rules: { ...companyDetailsValidationRules, ...props.validationRules },\n        defaultData: props.data\n    });\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const companyDetailsRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(companyDetailsRef.current).length) {\n        props.setComponentRef?.(companyDetailsRef.current);\n    }\n\n    // Expose method expected by (parent) Address.tsx\n    companyDetailsRef.current.showValidation = () => {\n        triggerValidation();\n    };\n\n    const generateFieldName = (name: string): string => `${namePrefix ? `${namePrefix}.` : ''}${name}`;\n\n    const eventHandler =\n        (mode: string): h.JSX.FocusEventHandler<HTMLInputElement> =>\n        (e): void => {\n            const { name } = e.target as HTMLInputElement;\n            const key = name.split(`${namePrefix}.`).pop();\n\n            handleChangeFor(key, mode)(e);\n        };\n\n    const inputEventHandler =\n        (mode: string): h.JSX.InputEventHandler<HTMLInputElement> =>\n        (e): void => {\n            const { name } = e.target as HTMLInputElement;\n            const key = name.split(`${namePrefix}.`).pop();\n\n            handleChangeFor(key, mode)(e);\n        };\n\n    useEffect(() => {\n        const formattedData = getFormattedData(data);\n        props.onChange({ data: formattedData, valid, errors, isValid });\n    }, [data, valid, errors, isValid]);\n\n    if (visibility === 'hidden') return null;\n    if (visibility === 'readOnly') return <ReadOnlyCompanyDetails {...props} data={data} />;\n\n    return (\n        <Fieldset classNameModifiers={[label]} label={label}>\n            {requiredFields.includes('name') && (\n                <Field\n                    label={i18n.get('companyDetails.name')}\n                    classNameModifiers={['name']}\n                    errorMessage={!!errors.name}\n                    i18n={i18n}\n                    name={generateFieldName('companyName')}\n                >\n                    <InputText\n                        name={generateFieldName('name')}\n                        value={data.name}\n                        classNameModifiers={['name']}\n                        onInput={inputEventHandler('input')}\n                        onBlur={eventHandler('blur')}\n                        spellCheck={false}\n                    />\n                </Field>\n            )}\n\n            {requiredFields.includes('registrationNumber') && (\n                <Field\n                    label={i18n.get('companyDetails.registrationNumber')}\n                    classNameModifiers={['registrationNumber']}\n                    errorMessage={!!errors.registrationNumber}\n                    i18n={i18n}\n                    name={generateFieldName('registrationNumber')}\n                >\n                    <InputText\n                        name={generateFieldName('registrationNumber')}\n                        value={data.registrationNumber}\n                        classNameModifiers={['registrationNumber']}\n                        onInput={inputEventHandler('input')}\n                        onBlur={eventHandler('blur')}\n                        spellCheck={false}\n                    />\n                </Field>\n            )}\n        </Fieldset>\n    );\n}\n\nCompanyDetails.defaultProps = {\n    data: {},\n    onChange: () => {},\n    visibility: 'editable',\n    requiredFields: COMPANY_DETAILS_SCHEMA,\n    validationRules: companyDetailsValidationRules\n};\n","import { h, Fragment } from 'preact';\nimport Fieldset from '../FormFields/Fieldset';\nimport { ReadOnlyPersonalDetailsProps } from './types';\n\nconst ReadOnlyPersonalDetails = ({ data }) => {\n    const { firstName, lastName, shopperEmail, telephoneNumber }: ReadOnlyPersonalDetailsProps = data;\n\n    return (\n        <Fieldset classNameModifiers={['personalDetails']} label=\"personalDetails\" readonly>\n            {firstName && `${firstName} `}\n            {lastName && `${lastName} `}\n            {shopperEmail && (\n                <Fragment>\n                    <br />\n                    {shopperEmail}\n                </Fragment>\n            )}\n            {telephoneNumber && (\n                <Fragment>\n                    <br />\n                    {telephoneNumber}\n                </Fragment>\n            )}\n        </Fieldset>\n    );\n};\n\nexport default ReadOnlyPersonalDetails;\n","import { ValidatorRules } from '../../../utils/Validator/types';\nimport { isEmpty } from '../../../utils/validator-utils';\nimport { ERROR_FIELD_REQUIRED } from '../../../core/Errors/constants';\nimport { validationRules } from '../../../utils/Validator/defaultRules';\n\nexport const personalDetailsValidationRules: ValidatorRules = {\n    default: {\n        validate: value => {\n            return value && value.length > 0;\n        },\n        errorMessage: ERROR_FIELD_REQUIRED,\n        modes: ['blur']\n    },\n    gender: {\n        validate: value => value && value.length > 0,\n        errorMessage: 'gender.notselected',\n        modes: ['blur']\n    },\n    firstName: {\n        validate: value => (isEmpty(value) ? null : true), // valid, if there are chars other than spaces,\n        errorMessage: 'firstName.invalid',\n        modes: ['blur']\n    },\n    lastName: {\n        validate: value => (isEmpty(value) ? null : true),\n        errorMessage: 'lastName.invalid',\n        modes: ['blur']\n    },\n    dateOfBirth: validationRules.dateOfBirthRule,\n    telephoneNumber: validationRules.phoneNumberRule,\n    shopperEmail: validationRules.emailRule\n};\n","import { unformatDate } from '../FormFields/InputDate/utils';\nimport Language from '../../../language';\n\nexport const getFormattedData = data => {\n    const { firstName, lastName, gender, dateOfBirth, shopperEmail, telephoneNumber } = data;\n\n    return {\n        ...((firstName || lastName) && {\n            shopperName: {\n                ...(firstName && { firstName }),\n                ...(lastName && { lastName }),\n                ...(gender && { gender })\n            }\n        }),\n        ...(dateOfBirth && { dateOfBirth: unformatDate(dateOfBirth) }),\n        ...(shopperEmail && { shopperEmail }),\n        ...(telephoneNumber && { telephoneNumber })\n    };\n};\n\n/**\n * Used by the SRPanel sorting function to tell it whether we need to prepend the field type to the SR panel message, and, if so, we retrieve the correct translation for the field type.\n * (Whether we need to prepend the field type depends on whether we know that the error message correctly reflects the label of the field. Ultimately all error messages should do this\n * and this mapping fn will become redundant)\n */\nexport const mapFieldKey = (key: string, i18n: Language): string => {\n    switch (key) {\n        case 'gender':\n            return i18n.get(key);\n        // We know that the translated error messages do contain a reference to the field they refer to, so we won't need to map them\n        default:\n            return null;\n    }\n};\n","import { h } from 'preact';\nimport { useMemo } from 'preact/hooks';\nimport InputBase, { InputBaseProps } from '../InputBase';\nimport { checkDateInputSupport, formatDate } from './utils';\n\ninterface InputDateProps extends InputBaseProps {\n    onInput?: (e) => void;\n}\n\nexport default function InputDate(props: InputDateProps) {\n    const isDateInputSupported = useMemo(checkDateInputSupport, []);\n\n    const handleInput = e => {\n        const { value } = e.target;\n        e.target.value = formatDate(value);\n        props.onInput(e);\n    };\n\n    if (isDateInputSupported) {\n        return <InputBase {...props} type=\"date\" />;\n    }\n\n    return <InputBase {...props} onInput={handleInput} maxLength={10} />;\n}\n","import { Fragment, h } from 'preact';\nimport { useEffect, useMemo, useRef } from 'preact/hooks';\nimport Fieldset from '../FormFields/Fieldset';\nimport Field from '../FormFields/Field';\nimport ReadOnlyPersonalDetails from './ReadOnlyPersonalDetails';\nimport { personalDetailsValidationRules } from './validate';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { PersonalDetailsProps } from './types';\nimport { checkDateInputSupport } from '../FormFields/InputDate/utils';\nimport { PersonalDetailsSchema } from '../../../types';\nimport { getFormattedData } from './utils';\nimport useForm from '../../../utils/useForm';\nimport './PersonalDetails.scss';\nimport InputText from '../FormFields/InputText';\nimport RadioGroup from '../FormFields/RadioGroup';\nimport InputDate from '../FormFields/InputDate';\nimport InputEmail from '../FormFields/InputEmail';\nimport InputTelephone from '../FormFields/InputTelephone';\nimport { getErrorMessage } from '../../../utils/getErrorMessage';\nimport { ComponentMethodsRef } from '../UIElement/types';\n\nexport const PERSONAL_DETAILS_SCHEMA = ['firstName', 'lastName', 'gender', 'dateOfBirth', 'shopperEmail', 'telephoneNumber'];\n\nexport default function PersonalDetails(props: PersonalDetailsProps) {\n    const { label = '', namePrefix, placeholders, requiredFields, visibility } = props;\n\n    const { i18n } = useCoreContext();\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const personalDetailsRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(personalDetailsRef.current).length) {\n        props.setComponentRef?.(personalDetailsRef.current);\n    }\n\n    const isDateInputSupported = useMemo(checkDateInputSupport, []);\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm<PersonalDetailsSchema>({\n        schema: requiredFields,\n        // Ensure any passed validation rules are merged with the default ones\n        rules: { ...personalDetailsValidationRules, ...props.validationRules },\n        defaultData: props.data\n    });\n\n    // Expose method expected by (parent) PersonalDetails.tsx\n    personalDetailsRef.current.showValidation = () => {\n        triggerValidation();\n    };\n\n    const eventHandler =\n        (mode: string): h.JSX.GenericEventHandler<EventTarget> =>\n        (e: Event): void => {\n            const { name } = e.target as HTMLInputElement;\n            const key = name.split(`${namePrefix}.`).pop();\n\n            handleChangeFor(key, mode)(e);\n        };\n\n    const generateFieldName = (name: string): string => `${namePrefix ? `${namePrefix}.` : ''}${name}`;\n\n    useEffect(() => {\n        const formattedData = getFormattedData(data);\n        props.onChange({ data: formattedData, valid, errors, isValid });\n    }, [data, valid, errors, isValid]);\n\n    if (visibility === 'hidden') return null;\n    if (visibility === 'readOnly') return <ReadOnlyPersonalDetails {...props} data={data} />;\n\n    return (\n        <Fragment>\n            <Fieldset classNameModifiers={['personalDetails']} label={label}>\n                {requiredFields.includes('firstName') && (\n                    <Field\n                        label={i18n.get('firstName')}\n                        classNameModifiers={['col-50', 'firstName']}\n                        errorMessage={getErrorMessage(i18n, errors.firstName, i18n.get('firstName'))}\n                        name={'firstName'}\n                        i18n={i18n}\n                    >\n                        <InputText\n                            name={generateFieldName('firstName')}\n                            value={data.firstName}\n                            classNameModifiers={['firstName']}\n                            onInput={eventHandler('input')}\n                            onBlur={eventHandler('blur')}\n                            placeholder={placeholders.firstName}\n                            spellCheck={false}\n                            required={true}\n                        />\n                    </Field>\n                )}\n\n                {requiredFields.includes('lastName') && (\n                    <Field\n                        label={i18n.get('lastName')}\n                        classNameModifiers={['col-50', 'lastName']}\n                        errorMessage={getErrorMessage(i18n, errors.lastName, i18n.get('lastName'))}\n                        name={'lastName'}\n                        i18n={i18n}\n                    >\n                        <InputText\n                            name={generateFieldName('lastName')}\n                            value={data.lastName}\n                            classNameModifiers={['lastName']}\n                            onInput={eventHandler('input')}\n                            onBlur={eventHandler('blur')}\n                            placeholder={placeholders.lastName}\n                            spellCheck={false}\n                            required={true}\n                        />\n                    </Field>\n                )}\n\n                {requiredFields.includes('gender') && (\n                    <Field\n                        errorMessage={getErrorMessage(i18n, errors.gender)}\n                        classNameModifiers={['gender']}\n                        name={'gender'}\n                        useLabelElement={false}\n                    >\n                        <RadioGroup\n                            name={generateFieldName('gender')}\n                            value={data.gender}\n                            items={[\n                                { id: 'MALE', name: 'male' },\n                                { id: 'FEMALE', name: 'female' }\n                            ]}\n                            classNameModifiers={['gender']}\n                            onInput={eventHandler('input')}\n                            onChange={eventHandler('blur')}\n                            required={true}\n                        />\n                    </Field>\n                )}\n\n                {requiredFields.includes('dateOfBirth') && (\n                    <Field\n                        label={i18n.get('dateOfBirth')}\n                        classNameModifiers={['col-50', 'dateOfBirth']}\n                        errorMessage={getErrorMessage(i18n, errors.dateOfBirth, i18n.get('dateOfBirth'))}\n                        helper={isDateInputSupported ? null : i18n.get('dateOfBirth.format')}\n                        name={'dateOfBirth'}\n                        i18n={i18n}\n                    >\n                        <InputDate\n                            name={generateFieldName('dateOfBirth')}\n                            value={data.dateOfBirth}\n                            classNameModifiers={['dateOfBirth']}\n                            onInput={eventHandler('input')}\n                            onBlur={eventHandler('blur')}\n                            placeholder={placeholders.dateOfBirth}\n                            required={true}\n                        />\n                    </Field>\n                )}\n\n                {requiredFields.includes('shopperEmail') && (\n                    <Field\n                        label={i18n.get('shopperEmail')}\n                        classNameModifiers={['shopperEmail']}\n                        errorMessage={getErrorMessage(i18n, errors.shopperEmail, i18n.get('shopperEmail'))}\n                        dir={'ltr'}\n                        name={'emailAddress'}\n                        i18n={i18n}\n                    >\n                        <InputEmail\n                            name={generateFieldName('shopperEmail')}\n                            value={data.shopperEmail}\n                            classNameModifiers={['shopperEmail']}\n                            onInput={eventHandler('input')}\n                            onBlur={eventHandler('blur')}\n                            placeholder={placeholders.shopperEmail}\n                            required={true}\n                        />\n                    </Field>\n                )}\n\n                {requiredFields.includes('telephoneNumber') && (\n                    <Field\n                        label={i18n.get('telephoneNumber')}\n                        classNameModifiers={['telephoneNumber']}\n                        errorMessage={getErrorMessage(i18n, errors.telephoneNumber, i18n.get('telephoneNumber'))}\n                        dir={'ltr'}\n                        name={'telephoneNumber'}\n                        i18n={i18n}\n                    >\n                        <InputTelephone\n                            name={generateFieldName('telephoneNumber')}\n                            value={data.telephoneNumber}\n                            classNameModifiers={['telephoneNumber']}\n                            onInput={eventHandler('input')}\n                            onBlur={eventHandler('blur')}\n                            placeholder={placeholders.telephoneNumber}\n                            required={true}\n                        />\n                    </Field>\n                )}\n            </Fieldset>\n        </Fragment>\n    );\n}\n\nPersonalDetails.defaultProps = {\n    data: {},\n    onChange: () => {},\n    placeholders: {},\n    requiredFields: PERSONAL_DETAILS_SCHEMA,\n    validationRules: personalDetailsValidationRules,\n    visibility: 'editable'\n};\n","import Language from '../../../language';\nimport { ADDRESS_SCHEMA } from './constants';\nimport { AddressField } from '../../../types/global-types';\nimport { StringObject } from './types';\n\n/**\n * Used by the SRPanel sorting function to tell it whether we need to prepend the field type to the SR panel message, and, if so, we retrieve the correct translation for the field type.\n * (Whether we need to prepend the field type depends on whether we know that the error message correctly reflects the label of the field. Ultimately all error messages should do this\n * and this mapping fn will become redundant)\n */\nexport const mapFieldKey = (key: string, i18n: Language, countrySpecificLabels: StringObject): string => {\n    if (ADDRESS_SCHEMA.includes(key as AddressField)) {\n        return countrySpecificLabels?.[key] ? i18n.get(countrySpecificLabels?.[key]) : i18n.get(key);\n    }\n    return null;\n};\n","import { OpenInvoiceActiveFieldsets, OpenInvoiceStateData, OpenInvoiceVisibility } from './types';\nimport Language from '../../../language';\nimport { mapFieldKey as mapFieldKeyAddress } from '../Address/utils';\nimport { StringObject } from '../Address/types';\n\nexport const fieldsetsSchema: Array<keyof OpenInvoiceStateData> = [\n    'companyDetails',\n    'personalDetails',\n    'billingAddress',\n    'deliveryAddress',\n    'bankAccount'\n];\n\nconst isPrefilled = (fieldsetData: object = {}): boolean => Object.keys(fieldsetData).length > 1;\n\nexport const getActiveFieldsData = (activeFieldsets: OpenInvoiceActiveFieldsets, data: OpenInvoiceStateData): OpenInvoiceStateData =>\n    Object.keys(data)\n        .filter(fieldset => activeFieldsets[fieldset])\n        .reduce((acc, cur) => {\n            acc[cur] = data[cur];\n            return acc;\n        }, {});\n\nexport const getInitialActiveFieldsets = (visibility: OpenInvoiceVisibility, data: OpenInvoiceStateData = {}): OpenInvoiceActiveFieldsets =>\n    fieldsetsSchema.reduce((acc, fieldset) => {\n        const isVisible = visibility[fieldset] !== 'hidden';\n        const isDeliveryAddress = fieldset === 'deliveryAddress';\n        const billingAddressIsHidden = visibility?.billingAddress === 'hidden';\n\n        // The delivery address will be active not only when set as visible\n        // but also when the billing address is hidden or when it has prefilled data\n        acc[fieldset] = isVisible && (!isDeliveryAddress || billingAddressIsHidden || isPrefilled(data[fieldset]));\n        return acc;\n    }, {} as OpenInvoiceActiveFieldsets);\n\n/**\n * Used by the SRPanel sorting function to tell it whether we need to add the field type to the SR panel message, and, if so, we retrieve the correct translation for the field type.\n * (Whether we need to add the field type depends on whether we know that the error message correctly reflects the label of the field. Ultimately all error messages should do this\n * and this mapping fn will become redundant)\n */\nexport const mapFieldKey = (key: string, i18n: Language, countrySpecificLabels: StringObject): string => {\n    let refKey = key;\n    let label;\n\n    // Differentiate between address types (billing and delivery)\n    const splitKey = refKey.split(':');\n    const hasSplitKey = splitKey.length > 1;\n    if (hasSplitKey) {\n        label = splitKey[0];\n        refKey = splitKey[1];\n    }\n\n    const addressKey = mapFieldKeyAddress(refKey, i18n, countrySpecificLabels);\n    // Also use the presence of a label to know that we are dealing with address related fields. (This matters now that addresses can contain first & last name fields.)\n    if (addressKey && label) return hasSplitKey ? `${i18n.get(label)} ${addressKey}` : addressKey;\n\n    switch (refKey) {\n        case 'dateOfBirth':\n        case 'shopperEmail':\n        case 'telephoneNumber':\n            return i18n.get(refKey);\n        default:\n            break;\n    }\n\n    // We know that the translated error messages do contain a reference to the field they refer to, so we won't need to map them\n    return null;\n};\n","import { selectOne } from '../components/internal/SecuredFields/lib/utilities/dom';\n\n/**\n * Generic function to set focus on named element\n * @param holder -\n * @param fieldToFocus -\n */\nexport const setFocusOnField = (holder, fieldToFocus) => {\n    const pdHolder = selectOne(document, holder);\n\n    const actualFieldToFocus = fieldToFocus === 'issuer' ? 'issuer-list' : fieldToFocus;\n\n    if (actualFieldToFocus === 'country' || actualFieldToFocus === 'stateOrProvince' || actualFieldToFocus === 'issuer-list') {\n        // Set focus on dropdown\n        const field: HTMLElement = selectOne(pdHolder, `.adyen-checkout__field--${actualFieldToFocus} .adyen-checkout__filter-input`);\n        field?.focus();\n    } else {\n        // Set focus on input\n        const field: HTMLElement = selectOne(pdHolder, `[name=\"${actualFieldToFocus}\"]`);\n        field?.focus();\n    }\n};\n","import { h } from 'preact';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport CompanyDetails from '../CompanyDetails';\nimport PersonalDetails from '../PersonalDetails';\nimport Address from '../Address';\nimport Checkbox from '../FormFields/Checkbox';\nimport ConsentCheckbox from '../FormFields/ConsentCheckbox';\nimport { getActiveFieldsData, getInitialActiveFieldsets, fieldsetsSchema } from './utils';\nimport {\n    OpenInvoiceActiveFieldsets,\n    OpenInvoiceFieldsetsRefs,\n    OpenInvoiceProps,\n    OpenInvoiceStateData,\n    OpenInvoiceStateError,\n    OpenInvoiceStateValid\n} from './types';\nimport './OpenInvoice.scss';\nimport IbanInput from '../IbanInput';\nimport { GenericError } from '../../../core/Errors/types';\nimport Field from '../FormFields/Field';\nimport FormInstruction from '../FormInstruction';\nimport { ComponentMethodsRef } from '../UIElement/types';\nimport useSRPanelForOpenInvoiceErrors from './useSRPanelForOpenInvoiceErrors';\n\nconst consentCBErrorObj: GenericError = {\n    isValid: false,\n    errorMessage: 'consent.checkbox.invalid',\n    error: 'consent.checkbox.invalid'\n};\n\nexport default function OpenInvoice(props: OpenInvoiceProps) {\n    const { countryCode, visibility } = props;\n    const { i18n } = useCoreContext();\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const openInvoiceRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(openInvoiceRef.current).length) {\n        props.setComponentRef?.(openInvoiceRef.current);\n    }\n\n    const isValidating = useRef(false);\n\n    const initialActiveFieldsets: OpenInvoiceActiveFieldsets = getInitialActiveFieldsets(visibility, props.data);\n    const [activeFieldsets, setActiveFieldsets] = useState<OpenInvoiceActiveFieldsets>(initialActiveFieldsets);\n\n    const { current: fieldsetsRefs } = useRef<OpenInvoiceFieldsetsRefs>(\n        fieldsetsSchema.reduce((acc, fieldset) => {\n            acc[fieldset] = ref => {\n                fieldsetsRefs[fieldset].current = ref;\n            };\n            return acc;\n        }, {})\n    );\n\n    const checkFieldsets = () => Object.keys(activeFieldsets).every(fieldset => !activeFieldsets[fieldset] || !!valid[fieldset]);\n    const hasConsentCheckbox = !!props.consentCheckboxLabel;\n    const isStandAloneButton = !hasConsentCheckbox && Object.keys(activeFieldsets).every(key => !activeFieldsets[key]);\n    const showSeparateDeliveryAddressCheckbox = visibility.deliveryAddress === 'editable' && visibility.billingAddress !== 'hidden';\n\n    const [data, setData] = useState<OpenInvoiceStateData>({\n        ...props.data,\n        ...(hasConsentCheckbox && { consentCheckbox: false })\n    });\n    const [errors, setErrors] = useState<OpenInvoiceStateError>({});\n    const [valid, setValid] = useState<OpenInvoiceStateValid>({});\n    const [status, setStatus] = useState('ready');\n\n    // Expose methods expected by parent\n    openInvoiceRef.current.showValidation = () => {\n        isValidating.current = true;\n        fieldsetsSchema.forEach(fieldset => {\n            if (fieldsetsRefs[fieldset].current) fieldsetsRefs[fieldset].current.showValidation();\n        });\n\n        setErrors({\n            ...(hasConsentCheckbox && { consentCheckbox: data.consentCheckbox ? null : consentCBErrorObj })\n        });\n    };\n\n    openInvoiceRef.current.setStatus = setStatus;\n\n    useSRPanelForOpenInvoiceErrors({ errors, data, props, isValidating });\n\n    useEffect(() => {\n        const fieldsetsAreValid: boolean = checkFieldsets();\n        const consentCheckboxValid: boolean = !hasConsentCheckbox || !!valid.consentCheckbox;\n        const isValid: boolean = fieldsetsAreValid && consentCheckboxValid;\n        const newData: OpenInvoiceStateData = getActiveFieldsData(activeFieldsets, data);\n        props.onChange({ data: newData, errors, valid, isValid });\n    }, [data, activeFieldsets]);\n\n    const handleFieldset = key => state => {\n        setData(prevData => ({ ...prevData, [key]: state.data }));\n        setValid(prevValid => ({ ...prevValid, [key]: state.isValid }));\n        setErrors(prevErrors => ({ ...prevErrors, [key]: state.errors }));\n    };\n\n    const handleSeparateDeliveryAddress = () => {\n        setActiveFieldsets(prevActiveFields => ({\n            ...prevActiveFields,\n            deliveryAddress: !activeFieldsets.deliveryAddress\n        }));\n    };\n\n    const handleConsentCheckbox = e => {\n        const { checked } = e.target;\n        setData(prevData => ({ ...prevData, consentCheckbox: checked }));\n        setValid(prevValid => ({ ...prevValid, consentCheckbox: checked }));\n        setErrors(prevErrors => ({ ...prevErrors, ...{ consentCheckbox: !checked ? consentCBErrorObj : null } }));\n    };\n    return (\n        <div className=\"adyen-checkout__open-invoice\">\n            <FormInstruction />\n\n            {activeFieldsets.companyDetails && (\n                <CompanyDetails\n                    data={props.data.companyDetails}\n                    label=\"companyDetails\"\n                    onChange={handleFieldset('companyDetails')}\n                    setComponentRef={fieldsetsRefs.companyDetails}\n                    visibility={visibility.companyDetails}\n                />\n            )}\n\n            {activeFieldsets.personalDetails && (\n                <PersonalDetails\n                    data={props.data.personalDetails}\n                    requiredFields={props.personalDetailsRequiredFields}\n                    label=\"personalDetails\"\n                    onChange={handleFieldset('personalDetails')}\n                    setComponentRef={fieldsetsRefs.personalDetails}\n                    visibility={visibility.personalDetails}\n                />\n            )}\n\n            {activeFieldsets.bankAccount && (\n                <IbanInput\n                    holderName={true}\n                    label=\"ach.bankAccount\"\n                    data={data.bankAccount}\n                    onChange={handleFieldset('bankAccount')}\n                    ref={fieldsetsRefs.bankAccount}\n                />\n            )}\n\n            {activeFieldsets.billingAddress && (\n                <Address\n                    allowedCountries={props?.billingAddressSpecification?.allowedCountries ?? props.allowedCountries}\n                    countryCode={countryCode}\n                    requiredFields={props.billingAddressRequiredFields}\n                    specifications={props.billingAddressSpecification}\n                    data={data.billingAddress}\n                    label=\"billingAddress\"\n                    onChange={handleFieldset('billingAddress')}\n                    setComponentRef={fieldsetsRefs.billingAddress}\n                    visibility={visibility.billingAddress}\n                />\n            )}\n\n            {showSeparateDeliveryAddressCheckbox && (\n                <Field\n                    classNameModifiers={['separateDeliveryAddress', 'consentCheckbox']}\n                    name={'separateDeliveryAddress'}\n                    useLabelElement={false}\n                    showErrorElement={false}\n                >\n                    <Checkbox\n                        label={i18n.get('separateDeliveryAddress')}\n                        checked={activeFieldsets.deliveryAddress}\n                        classNameModifiers={['separateDeliveryAddress']}\n                        name={'separateDeliveryAddress'}\n                        onChange={handleSeparateDeliveryAddress}\n                    />\n                </Field>\n            )}\n\n            {activeFieldsets.deliveryAddress && (\n                <Address\n                    allowedCountries={props?.deliveryAddressSpecification?.allowedCountries ?? props.allowedCountries}\n                    countryCode={countryCode}\n                    requiredFields={props.deliveryAddressRequiredFields}\n                    specifications={props.deliveryAddressSpecification}\n                    data={data.deliveryAddress}\n                    label=\"deliveryAddress\"\n                    onChange={handleFieldset('deliveryAddress')}\n                    setComponentRef={fieldsetsRefs.deliveryAddress}\n                    visibility={visibility.deliveryAddress}\n                />\n            )}\n\n            {hasConsentCheckbox && (\n                <ConsentCheckbox\n                    data={data}\n                    errorMessage={!!errors.consentCheckbox}\n                    label={props.consentCheckboxLabel}\n                    onChange={handleConsentCheckbox}\n                    i18n={i18n}\n                />\n            )}\n\n            {props.showPayButton &&\n                props.payButton({\n                    status,\n                    classNameModifiers: [...(isStandAloneButton ? ['standalone'] : [])],\n                    label: i18n.get('confirmPurchase')\n                })}\n        </div>\n    );\n}\n","import { useEffect, useState, useMemo, MutableRef } from 'preact/hooks';\nimport { enhanceErrorObjectKeys } from '../../../core/Errors/utils';\nimport { COMPANY_DETAILS_SCHEMA } from '../CompanyDetails/CompanyDetails';\nimport { PERSONAL_DETAILS_SCHEMA } from '../PersonalDetails/PersonalDetails';\nimport { SetSRMessagesReturnObject } from '../../../core/Errors/types';\nimport { ERROR_ACTION_BLUR_SCENARIO, ERROR_ACTION_FOCUS_FIELD } from '../../../core/Errors/constants';\nimport useSRPanelContext from '../../../core/Errors/useSRPanelContext';\nimport { SetSRMessagesReturnFn } from '../../../core/Errors/SRPanelProvider';\nimport Specifications from '../Address/Specifications';\nimport { setFocusOnField } from '../../../utils/setFocus';\nimport { usePrevious } from '../../../utils/hookUtils';\nimport { getArrayDifferences } from '../../../utils/arrayUtils';\nimport { mapFieldKey } from './utils';\nimport { OpenInvoiceProps, OpenInvoiceStateData, OpenInvoiceStateError } from './types';\n\ninterface UseSRPanelForErrorsProps {\n    errors: OpenInvoiceStateError;\n    data: OpenInvoiceStateData;\n    props: OpenInvoiceProps;\n    isValidating: MutableRef<boolean>;\n}\n\nconst useSRPanelForOpenInvoiceErrors = ({ errors, data, props, isValidating }: UseSRPanelForErrorsProps) => {\n    // Relates to onBlur errors\n    const [sortedErrorList, setSortedErrorList] = useState(null);\n    // Get the previous value (Relates to onBlur errors)\n    const previousSortedErrors = usePrevious(sortedErrorList);\n    const { setSRMessagesFromObjects, setSRMessagesFromStrings, clearSRPanel, shouldMoveFocusSR } = useSRPanelContext();\n    // Generate a setSRMessages function - implemented as a partial, since the initial set of arguments don't change.\n    const setSRMessages: SetSRMessagesReturnFn = setSRMessagesFromObjects?.({\n        fieldTypeMappingFn: mapFieldKey\n    });\n\n    const billingAddressSpecifications = useMemo(() => new Specifications(), []);\n    const deliveryAddressSpecifications = useMemo(() => new Specifications(props.deliveryAddressSpecification), []);\n\n    useEffect(() => {\n        try {\n            const DELIVERY_ADDRESS_PREFIX = 'deliveryAddress:';\n            const BILLING_ADDRESS_PREFIX = 'billingAddress:';\n\n            /** Create messages for SRPanel */\n            // Extract nested errors from the various child components...\n            const {\n                companyDetails: extractedCompanyDetailsErrors,\n                personalDetails: extractedPersonalDetailsErrors,\n                bankAccount: extractedBankAccountErrors,\n                billingAddress: extractedBillingAddressErrors,\n                deliveryAddress: extractedDeliveryAddressErrors,\n                ...remainingErrors\n            } = errors;\n\n            // Differentiate between billingAddress and deliveryAddress errors by adding a prefix.\n            // This also allows overlapping errors e.g. now that addresses can contain first & last name fields\n            const enhancedBillingAddressErrors = enhanceErrorObjectKeys(extractedBillingAddressErrors, BILLING_ADDRESS_PREFIX);\n            const enhancedDeliveryAddressErrors = enhanceErrorObjectKeys(extractedDeliveryAddressErrors, DELIVERY_ADDRESS_PREFIX);\n\n            // ...and then collate the errors into a new object so that they all sit at top level\n            const errorsForPanel = {\n                ...(typeof extractedCompanyDetailsErrors === 'object' && extractedCompanyDetailsErrors),\n                ...(typeof extractedPersonalDetailsErrors === 'object' && extractedPersonalDetailsErrors),\n                ...(typeof extractedBankAccountErrors === 'object' && extractedBankAccountErrors),\n                ...(typeof enhancedBillingAddressErrors === 'object' && enhancedBillingAddressErrors),\n                ...(typeof enhancedDeliveryAddressErrors === 'object' && enhancedDeliveryAddressErrors),\n                ...remainingErrors\n            };\n\n            // Create layout\n            const companyDetailsLayout: string[] = COMPANY_DETAILS_SCHEMA;\n\n            const personalDetailsReqFields: string[] = props.personalDetailsRequiredFields ?? PERSONAL_DETAILS_SCHEMA;\n            const personalDetailLayout: string[] = PERSONAL_DETAILS_SCHEMA.filter(x => personalDetailsReqFields?.includes(x));\n\n            const bankAccountLayout = ['holder', 'iban'];\n\n            const billingAddressLayout = billingAddressSpecifications.getAddressSchemaForCountryFlat(data.billingAddress?.country);\n            // In order to sort the address errors the layout entries need to have the same (prefixed) identifier as the errors themselves\n            const billingAddressLayoutEnhanced = billingAddressLayout.map(item => `${BILLING_ADDRESS_PREFIX}${item}`);\n\n            const deliveryAddressLayout = deliveryAddressSpecifications.getAddressSchemaForCountryFlat(data.deliveryAddress?.country);\n            const deliveryAddressLayoutEnhanced = deliveryAddressLayout.map(item => `${DELIVERY_ADDRESS_PREFIX}${item}`);\n\n            const fullLayout = companyDetailsLayout.concat(\n                personalDetailLayout,\n                bankAccountLayout,\n                billingAddressLayoutEnhanced,\n                deliveryAddressLayoutEnhanced,\n                ['consentCheckbox']\n            );\n\n            // Country specific address labels\n            const countrySpecificLabels_billing = billingAddressSpecifications.getAddressLabelsForCountry(data.billingAddress?.country);\n            const countrySpecificLabels_delivery = deliveryAddressSpecifications.getAddressLabelsForCountry(data.deliveryAddress?.country);\n\n            // Set messages: Pass dynamic props (errors, layout etc) to SRPanel via partial\n            const srPanelResp: SetSRMessagesReturnObject = setSRMessages?.({\n                errors: errorsForPanel,\n                isValidating: isValidating.current,\n                layout: fullLayout,\n                countrySpecificLabels: { ...countrySpecificLabels_billing, ...countrySpecificLabels_delivery }\n            });\n\n            // Relates to onBlur errors\n            const currentErrorsSortedByLayout = srPanelResp?.currentErrorsSortedByLayout;\n\n            // Store the array of sorted error objects separately so that we can use it to make comparisons between the old and new arrays\n            setSortedErrorList(currentErrorsSortedByLayout); // Relates to onBlur errors\n\n            /**\n             * Need extra actions after setting SRPanel messages in order to focus field (if required) and because we have some errors that are fired onBlur\n             */\n            switch (srPanelResp?.action) {\n                // A call to focus the first field in error will always follow the call to validate the whole form\n                case ERROR_ACTION_FOCUS_FIELD:\n                    // Focus first field in error, if required\n                    if (shouldMoveFocusSR) setFocusOnField('.adyen-checkout__open-invoice', srPanelResp.fieldToFocus);\n                    // Remove 'showValidation' mode - allowing time for collation of all the fields in error whilst it is 'showValidation' mode (some errors come in a second render pass)\n                    setTimeout(() => {\n                        isValidating.current = false;\n                    }, 300);\n                    break;\n\n                /** On blur scenario: not validating, i.e. trying to submit form, but there might be an error, either to set or to clear */\n                case ERROR_ACTION_BLUR_SCENARIO: {\n                    const difference = getArrayDifferences(currentErrorsSortedByLayout, previousSortedErrors, 'field');\n\n                    const latestErrorMsg = difference?.[0];\n\n                    if (latestErrorMsg) {\n                        // Is error actually a blur based one - depends on the specific fields in a component as to whether they validate on blur\n                        const isBlurBasedError = latestErrorMsg.errorCode === 'shopperEmail.invalid';\n\n                        // Only add blur based errors to the error panel - doing this step prevents the non-blur based errors from being read out twice\n                        const latestSRError = isBlurBasedError ? latestErrorMsg.errorMessage : null;\n                        setSRMessagesFromStrings(latestSRError);\n                    } else {\n                        // called when previousSortedErrors.length >= currentErrorsSortedByLayout.length\n                        clearSRPanel();\n                    }\n\n                    break;\n                }\n                default:\n                    break;\n            }\n        } catch (_) {\n            // We don't handle the error related to the sr panel, let it fail silently.\n        }\n    }, [errors, data]);\n};\n\nexport default useSRPanelForOpenInvoiceErrors;\n","import { h } from 'preact';\nimport UIElement from '../../internal/UIElement/UIElement';\nimport OpenInvoice from '../../internal/OpenInvoice';\nimport { CoreProvider } from '../../../core/Context/CoreProvider';\nimport SRPanelProvider from '../../../core/Errors/SRPanelProvider';\nimport { OpenInvoiceConfiguration } from './types';\n\nexport default class OpenInvoiceContainer extends UIElement<OpenInvoiceConfiguration> {\n    protected static defaultProps: Partial<OpenInvoiceConfiguration> = {\n        onChange: () => {},\n        data: { companyDetails: {}, personalDetails: {}, billingAddress: {}, deliveryAddress: {}, bankAccount: {} },\n        visibility: {\n            companyDetails: 'hidden',\n            personalDetails: 'editable',\n            billingAddress: 'editable',\n            deliveryAddress: 'editable',\n            bankAccount: 'hidden'\n        }\n    };\n\n    /**\n     * Returns whether the component state is valid or not\n     */\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    /**\n     * Formats props on construction time\n     */\n    formatProps(props) {\n        const country = props.countryCode || props.data?.billingAddress?.countryCode;\n\n        return {\n            ...props,\n            allowedCountries: [country],\n            visibility: {\n                ...OpenInvoiceContainer.defaultProps.visibility,\n                ...props.visibility\n            },\n            data: {\n                ...props.data,\n                billingAddress: {\n                    ...props.data.billingAddress,\n                    country\n                },\n                deliveryAddress: {\n                    ...props.data.deliveryAddress,\n                    country\n                }\n            }\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        const { data = {} } = this.state;\n        const { companyDetails = {}, personalDetails = {}, billingAddress, deliveryAddress, bankAccount } = data;\n\n        return {\n            paymentMethod: {\n                type: this.constructor['type']\n            },\n            ...personalDetails,\n            ...companyDetails,\n            ...(bankAccount && {\n                bankAccount: {\n                    iban: bankAccount.ibanNumber,\n                    ownerName: bankAccount.ownerName,\n                    countryCode: bankAccount.countryCode\n                }\n            }),\n            ...(billingAddress && { billingAddress }),\n            ...((deliveryAddress || billingAddress) && { deliveryAddress: deliveryAddress || billingAddress })\n        };\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                    <OpenInvoice\n                        setComponentRef={this.setComponentRef}\n                        {...this.props}\n                        {...this.state}\n                        onChange={this.setState}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                    />\n                </SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n","export const ALLOWED_COUNTRIES = ['CA', 'US'];\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ALLOWED_COUNTRIES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class Affirm extends OpenInvoiceContainer {\n    public static type = TxVariants.affirm;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: ALLOWED_COUNTRIES,\n            personalDetailsRequiredFields: ['firstName', 'lastName', 'telephoneNumber', 'shopperEmail']\n        };\n    }\n}\n","import { Fragment, h } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\n\ninterface ConsentCheckboxLabelProps {\n    url: string;\n}\n\nexport default function ConsentCheckboxLabel(props: ConsentCheckboxLabelProps) {\n    const { i18n } = useCoreContext();\n    const linkText = i18n.get('paymentConditions');\n    const translationString = i18n.get('afterPay.agreement');\n    const [textBeforeLink, textAfterLink] = translationString.split('%@');\n\n    if (textBeforeLink && textAfterLink) {\n        return (\n            <Fragment>\n                {textBeforeLink}\n                <a className=\"adyen-checkout-link\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.url}>\n                    {linkText}\n                </a>\n                {textAfterLink}\n            </Fragment>\n        );\n    }\n\n    return <span className=\"adyen-checkout__checkbox__label\">{i18n.get('privacyPolicy')}</span>;\n}\n","const ALLOWED_COUNTRIES = ['BE', 'NL'];\nconst rivertyConsentUrlMap = {\n    be: {\n        en: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/be_en',\n        fr: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/be_fr',\n        nl: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/be_nl'\n    },\n    nl: {\n        en: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/nl_en',\n        nl: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/nl_nl'\n    }\n};\nexport { ALLOWED_COUNTRIES, rivertyConsentUrlMap };\n","type UrlMap = {\n    [countryCode: string]: {\n        [language: string]: string;\n    };\n};\n\nfunction getConsentUrl(countryCode: string, locale: string, urlMap: UrlMap): string {\n    const languageCode = locale?.toLowerCase().slice(0, 2);\n    const consentLink = urlMap[countryCode?.toLowerCase()]?.[languageCode];\n    if (!consentLink) {\n        console.warn(`Cannot find a consent url for the provided countryCode: ${countryCode} and locale: ${locale}`);\n        return;\n    }\n    return consentLink;\n}\n\nexport { getConsentUrl };\n","import { h } from 'preact';\nimport OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport ConsentCheckboxLabel from '../internal/ConsentCheckboxLabel';\nimport { ALLOWED_COUNTRIES, rivertyConsentUrlMap } from './config';\nimport { getConsentUrl } from '../../utils/getConsentUrl';\nimport { TxVariants } from '../tx-variants';\n\nexport default class AfterPay extends OpenInvoiceContainer {\n    public static type = TxVariants.afterpay_default;\n    public static txVariants = [TxVariants.afterpay_default, TxVariants.afterpay];\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES,\n            consentCheckboxLabel: <ConsentCheckboxLabel url={getConsentUrl(props.countryCode, props.i18n?.locale, rivertyConsentUrlMap)} />\n        };\n    }\n}\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { TxVariants } from '../tx-variants';\nimport { OpenInvoiceConfiguration } from '../helpers/OpenInvoiceContainer/types';\nimport { ALLOWED_COUNTRIES } from './config';\n\nexport default class AfterPayB2B extends OpenInvoiceContainer {\n    public static type = TxVariants.afterpay_b2b;\n\n    protected static defaultProps: Partial<OpenInvoiceConfiguration> = {\n        onChange: () => {},\n        data: { companyDetails: {}, personalDetails: {}, billingAddress: {}, deliveryAddress: {} },\n        visibility: {\n            companyDetails: 'editable',\n            personalDetails: 'editable',\n            billingAddress: 'editable',\n            deliveryAddress: 'editable'\n        }\n    };\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES\n        };\n    }\n}\n","import { COUNTRIES_WITH_CUSTOM_SPECIFICATION, COUNTRY, POSTAL_CODE, STREET } from '../internal/Address/constants';\nimport { AddressSpecifications } from '../internal/Address/types';\n\nconst ATOME_ADDRESS_SPECIFICATION = {\n    labels: {\n        [STREET]: 'address'\n    },\n    schema: [\n        STREET,\n        [\n            [COUNTRY, 70],\n            [POSTAL_CODE, 30]\n        ]\n    ]\n};\n\nexport const ATOME_SUPPORTED_COUNTRIES = ['ID', 'PH', 'TH', 'VN', 'JP', 'TW', 'KR', 'SG', 'MY', 'HK'];\n\n/**\n * Creates Address Specification according to the Atome UI. This specification overrides all available specifications\n *\n * This custom specification is needed in order to create the desired layout of the Atome billing address part. The usage of the\n * 'default' layout specification from the Address component does not align correctly the available fields, therefore we need to\n * create this customization.\n */\nexport const BILLING_ADDRESS_SPECIFICATION = COUNTRIES_WITH_CUSTOM_SPECIFICATION.reduce(\n    (memo: AddressSpecifications, countryCode: string) => {\n        return {\n            ...memo,\n            [countryCode]: ATOME_ADDRESS_SPECIFICATION\n        };\n    },\n    { default: ATOME_ADDRESS_SPECIFICATION }\n);\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ATOME_SUPPORTED_COUNTRIES, BILLING_ADDRESS_SPECIFICATION } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class Atome extends OpenInvoiceContainer {\n    public static type = TxVariants.atome;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps({ ...props, ...{ visibility: { deliveryAddress: 'hidden', companyDetails: 'hidden' } } }),\n            allowedCountries: ATOME_SUPPORTED_COUNTRIES,\n            personalDetailsRequiredFields: ['firstName', 'lastName', 'telephoneNumber'],\n            billingAddressRequiredFields: ['country', 'street', 'postalCode'],\n            billingAddressSpecification: BILLING_ADDRESS_SPECIFICATION\n        };\n    }\n}\n","export const ALLOWED_COUNTRIES = ['ES', 'FR'];\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ALLOWED_COUNTRIES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class FacilyPay3x extends OpenInvoiceContainer {\n    public static type = TxVariants.facilypay_3x;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES\n        };\n    }\n}\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ALLOWED_COUNTRIES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class FacilyPay4x extends OpenInvoiceContainer {\n    public static type = TxVariants.facilypay_4x;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES\n        };\n    }\n}\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ALLOWED_COUNTRIES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class FacilyPay6x extends OpenInvoiceContainer {\n    public static type = TxVariants.facilypay_6x;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES\n        };\n    }\n}\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ALLOWED_COUNTRIES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class FacilyPay10x extends OpenInvoiceContainer {\n    public static type = TxVariants.facilypay_10x;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES\n        };\n    }\n}\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ALLOWED_COUNTRIES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class FacilyPay12x extends OpenInvoiceContainer {\n    public static type = TxVariants.facilypay_12x;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES\n        };\n    }\n}\n","export const ALLOWED_COUNTRIES = ['AT', 'CH', 'DE', 'NL'];\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ALLOWED_COUNTRIES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class RatePay extends OpenInvoiceContainer {\n    public static type = TxVariants.ratepay;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES\n        };\n    }\n}\n","import OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport { ALLOWED_COUNTRIES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nexport default class RatePayDirectDebit extends OpenInvoiceContainer {\n    public static type = TxVariants.ratepay_directdebit;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps({ ...props, ...{ visibility: { bankAccount: 'editable' } } }),\n            allowedCountries: props.countryCode ? [props.countryCode] : ALLOWED_COUNTRIES\n        };\n    }\n}\n","import { CITY, COUNTRY, FIRST_NAME, HOUSE_NUMBER_OR_NAME, LAST_NAME, POSTAL_CODE, STREET } from '../internal/Address/constants';\nimport { AddressSpecifications } from '../internal/Address/types';\n\nexport const DISCLAIMER_MESSAGE_TRANSLATION_KEY = 'riverty.termsAndConditions';\n\nexport const allowedBillingCountries = ['AT', 'CH', 'DE'];\nexport const allowedDeliveryCountries = ['NO', 'SE', 'FI', 'DK', 'DE', 'AT', 'CH', 'NL', 'BE'];\nexport const personalDetailsRequiredFields = ['firstName', 'lastName', 'dateOfBirth', 'shopperEmail', 'telephoneNumber'];\nexport const deliveryAddressSpecification: AddressSpecifications = {\n    default: {\n        labels: {\n            [FIRST_NAME]: 'deliveryAddress.firstName',\n            [LAST_NAME]: 'deliveryAddress.lastName'\n        },\n        schema: [\n            COUNTRY,\n            [\n                [FIRST_NAME, 50],\n                [LAST_NAME, 50]\n            ],\n            [\n                [STREET, 70],\n                [HOUSE_NUMBER_OR_NAME, 30]\n            ],\n\n            [\n                [POSTAL_CODE, 30],\n                [CITY, 70]\n            ]\n        ]\n    }\n};\nexport const termsAndConditionsUrlMap = {\n    at: {\n        en: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/at_en',\n        de: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/at_de'\n    },\n    ch: {\n        en: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/ch_en',\n        de: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/ch_de',\n        fr: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/ch_fr'\n    },\n    de: {\n        en: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/de_en',\n        de: 'https://documents.riverty.com/terms_conditions/payment_methods/invoice/de_de'\n    }\n};\n\nexport const privacyPolicyUrlMap = {\n    at: {\n        en: 'https://documents.riverty.com/privacy_statement/checkout/at_en',\n        de: 'https://documents.riverty.com/privacy_statement/checkout/at_de'\n    },\n    ch: {\n        en: 'https://documents.riverty.com/privacy_statement/checkout/ch_en',\n        de: 'https://documents.riverty.com/privacy_statement/checkout/h_de',\n        fr: 'https://documents.riverty.com/privacy_statement/checkout/ch_fr'\n    },\n    de: {\n        en: 'https://documents.riverty.com/privacy_statement/checkout/de_en',\n        de: 'https://documents.riverty.com/privacy_statement/checkout/de_de'\n    }\n};\n","import { h } from 'preact';\nimport OpenInvoiceContainer from '../helpers/OpenInvoiceContainer';\nimport {\n    DISCLAIMER_MESSAGE_TRANSLATION_KEY,\n    allowedBillingCountries,\n    allowedDeliveryCountries,\n    deliveryAddressSpecification,\n    personalDetailsRequiredFields,\n    termsAndConditionsUrlMap,\n    privacyPolicyUrlMap\n} from './config';\nimport { getConsentUrl } from '../../utils/getConsentUrl';\nimport { LabelOnlyDisclaimerMessage } from '../internal/DisclaimerMessage/DisclaimerMessage';\nimport type { OpenInvoiceConfiguration } from '../helpers/OpenInvoiceContainer/types';\nimport { TxVariants } from '../tx-variants';\n\nexport default class Riverty extends OpenInvoiceContainer {\n    public static readonly type = TxVariants.riverty;\n\n    protected static defaultProps = {\n        personalDetailsRequiredFields,\n        deliveryAddressSpecification,\n        ...OpenInvoiceContainer.defaultProps\n    };\n\n    formatProps(props: OpenInvoiceConfiguration) {\n        const tocURL = getConsentUrl(props.countryCode, props.i18n?.locale, termsAndConditionsUrlMap);\n        const privacyURL = getConsentUrl(props.countryCode, props.i18n?.locale, privacyPolicyUrlMap);\n\n        return {\n            ...super.formatProps(props),\n            billingAddressSpecification: {\n                ...props.billingAddressSpecification,\n                allowedCountries: props.countryCode ? [props.countryCode] : allowedBillingCountries\n            },\n            deliveryAddressSpecification: {\n                ...props.deliveryAddressSpecification,\n                allowedCountries: allowedDeliveryCountries\n            },\n            consentCheckboxLabel: (\n                <LabelOnlyDisclaimerMessage message={props.i18n.get(DISCLAIMER_MESSAGE_TRANSLATION_KEY)} urls={[tocURL, privacyURL]} />\n            )\n        };\n    }\n}\n","import { LedgerCurrencies } from './types';\n\nconst AMAZONPAY_GET_CHECKOUT_DETAILS_ENDPOINT = 'v1/AmazonPayUtility/getCheckoutDetails';\nconst AMAZONPAY_SIGN_STRING_ENDPOINT = 'v1/AmazonPayUtility/signString';\nconst AMAZONPAY_UPDATE_CHECKOUT_SESSION_ENDPOINT = 'v1/AmazonPayUtility/updateCheckoutSession';\n\nconst AMAZONPAY_URL_EU = 'https://static-eu.payments-amazon.com/checkout.js';\nconst AMAZONPAY_URL_US = 'https://static-na.payments-amazon.com/checkout.js';\n\nconst FALLBACK_LOCALE_EU = 'en_GB';\nconst FALLBACK_LOCALE_US = 'en_US';\n\nconst LEDGER_CURRENCIES_PER_REGION: LedgerCurrencies = {\n    EU: 'EUR',\n    UK: 'GBP',\n    US: 'USD'\n};\n\nconst SUPPORTED_LOCALES_EU = ['en_GB', 'de_DE', 'fr_FR', 'it_IT', 'es_ES'] as const;\nconst SUPPORTED_LOCALES_US = ['en_US'] as const;\n\nexport {\n    AMAZONPAY_GET_CHECKOUT_DETAILS_ENDPOINT,\n    AMAZONPAY_SIGN_STRING_ENDPOINT,\n    AMAZONPAY_UPDATE_CHECKOUT_SESSION_ENDPOINT,\n    AMAZONPAY_URL_EU,\n    AMAZONPAY_URL_US,\n    FALLBACK_LOCALE_EU,\n    FALLBACK_LOCALE_US,\n    LEDGER_CURRENCIES_PER_REGION,\n    SUPPORTED_LOCALES_EU,\n    SUPPORTED_LOCALES_US\n};\n","const CURRENCY_DECIMALS = {\n    // ZERO_DECIMAL_CURRENCIES\n    IDR: 1,\n    JPY: 1,\n    KRW: 1,\n    VND: 1,\n    BYR: 1,\n    CVE: 1,\n    DJF: 1,\n    GHC: 1,\n    GNF: 1,\n    KMF: 1,\n    PYG: 1,\n    RWF: 1,\n    UGX: 1,\n    VUV: 1,\n    XAF: 1,\n    XOF: 1,\n    XPF: 1,\n\n    // ONE_DECIMAL_CURRENCIES\n    MRO: 10,\n\n    // THREE_DECIMAL_CURRENCIES\n    BHD: 1000,\n    IQD: 1000,\n    JOD: 1000,\n    KWD: 1000,\n    OMR: 1000,\n    LYD: 1000,\n    TND: 1000\n};\n\nexport default CURRENCY_DECIMALS;\n","/** Work around solution until chromium bug is fixed https://bugs.chromium.org/p/chromium/issues/detail?id=1381996\n * We need to hardcode minimumFractionDigits for the following currencies in order to force them to have 2 decimal places and\n * not be rounded up to a major unit\n */\nexport const currencyMinorUnitsConfig = {\n    RSD: { minimumFractionDigits: 2 },\n    AFN: { minimumFractionDigits: 2 },\n    ALL: { minimumFractionDigits: 2 },\n    IRR: { minimumFractionDigits: 2 },\n    LAK: { minimumFractionDigits: 2 },\n    LBP: { minimumFractionDigits: 2 },\n    MMK: { minimumFractionDigits: 2 },\n    SOS: { minimumFractionDigits: 2 },\n    SYP: { minimumFractionDigits: 2 },\n    YER: { minimumFractionDigits: 2 },\n    IQD: { minimumFractionDigits: 3 }\n};\n","import CURRENCY_CODES from './constants/currency-codes';\nimport CURRENCY_DECIMALS from './constants/currency-decimals';\nimport { currencyMinorUnitsConfig } from './constants/currency-minor-units';\n\n/**\n * @internal\n * @param currencyCode -\n * Get divider amount\n */\nexport const getDivider = (currencyCode: string): number => CURRENCY_DECIMALS[currencyCode] || 100;\n\n/**\n * @internal\n * @param currencyCode -\n * Returns whether a CURRENCY CODE is valid\n */\nexport const isValidCurrencyCode = (currencyCode: string): boolean => !!CURRENCY_CODES[currencyCode];\n\n/**\n * @internal\n */\nexport const getCurrencyCode = (currencyCode: string): string => (isValidCurrencyCode(currencyCode) ? CURRENCY_CODES[currencyCode] : false);\n\n/**\n * @internal\n */\nexport const getDecimalAmount = (amount: number | string, currencyCode: string): number => {\n    const divider = getDivider(currencyCode);\n    return parseInt(String(amount), 10) / divider;\n};\n\n/**\n * @internal\n */\nexport const getLocalisedAmount = (amount: number, locale: string, currencyCode: string, options = {}): string => {\n    const stringAmount = amount.toString(); // Changing amount to string to avoid 0-value from returning false\n\n    const decimalAmount = getDecimalAmount(stringAmount, currencyCode);\n    const formattedLocale = locale.replace('_', '-');\n\n    const modifiedOptions = currencyMinorUnitsConfig[currencyCode] ? { ...options, ...currencyMinorUnitsConfig[currencyCode] } : options;\n    const localeOptions = {\n        style: 'currency',\n        currency: currencyCode,\n        currencyDisplay: 'symbol',\n        ...modifiedOptions\n    };\n\n    try {\n        return decimalAmount.toLocaleString(formattedLocale, localeOptions);\n    } catch (e) {\n        return stringAmount;\n    }\n};\n\n/**\n * @internal\n */\nexport const getLocalisedPercentage = (percent = 0, locale: string): string => {\n    const decimalPercent = percent / 100 / 100;\n    const localeOptions: Intl.NumberFormatOptions = {\n        style: 'percent',\n        maximumFractionDigits: 2\n    };\n\n    try {\n        return decimalPercent.toLocaleString(locale, localeOptions);\n    } catch (e) {\n        return null;\n    }\n};\n","import {\n    AMAZONPAY_URL_EU,\n    AMAZONPAY_URL_US,\n    FALLBACK_LOCALE_EU,\n    FALLBACK_LOCALE_US,\n    LEDGER_CURRENCIES_PER_REGION,\n    SUPPORTED_LOCALES_EU,\n    SUPPORTED_LOCALES_US\n} from './config';\nimport { AmazonPayButtonProps, AmazonPayButtonSettings, ChargeAmount, Currency, PayloadJSON, Region, SupportedLocale } from './types';\nimport { PaymentAmount } from '../../types/global-types';\nimport { getDecimalAmount } from '../../utils/amount-util';\n\n/**\n * Returns the AmazonPay script URL for passed region.\n * @param region - Two-letter country code in ISO 3166 format\n * @returns the AmazonPay script URL\n */\nexport function getAmazonPayUrl(region: Region): string {\n    return region === 'US' ? AMAZONPAY_URL_US : AMAZONPAY_URL_EU;\n}\n\n/**\n * Returns the AmazonPay button settings object\n * @param props -\n * @returns the AmazonPay button settings\n */\nexport function getAmazonPaySettings(props: AmazonPayButtonProps): AmazonPayButtonSettings {\n    return {\n        ...(props.buttonColor && { buttonColor: props.buttonColor }),\n        ...(props.design && { design: getDesignCode(props.design) }),\n        checkoutLanguage: getCheckoutLocale(props.locale, props.configuration.region),\n        ledgerCurrency: LEDGER_CURRENCIES_PER_REGION[props.configuration.region] || props.currency || (props.amount?.currency as Currency),\n        merchantId: props.configuration.merchantId,\n        productType: props.productType,\n        placement: props.placement,\n        sandbox: props.environment === 'TEST'\n    };\n}\n\n/**\n * Returns the fallback locale for passed region.\n * @param region - Two-letter country code in ISO 3166 format\n * @returns A fallback locale\n */\nexport function getFallbackLocale(region: Region): SupportedLocale {\n    return region === 'US' ? FALLBACK_LOCALE_US : FALLBACK_LOCALE_EU;\n}\n\n/**\n * Returns an array of supported locales for passed region.\n * @param region - Two-letter country code in ISO 3166 format\n * @returns An array of supported locales\n */\nexport function getSupportedLocales(region: Region): SupportedLocale[] {\n    const supportedLocales = region === 'US' ? SUPPORTED_LOCALES_US : SUPPORTED_LOCALES_EU;\n    return supportedLocales as unknown as SupportedLocale[];\n}\n\n/**\n * Gets a locale and matches it with one of the supported locales for the given region.\n * If there's no match, it will return the region's fallback option.\n * @param locale - Locale to be processed\n * @param region - Two-letter country code in ISO 3166 format\n * @returns A supported locale\n */\nexport function getCheckoutLocale(locale: string, region: Region): SupportedLocale {\n    const supportedLocales = getSupportedLocales(region);\n    const isSupportedLocale = supportedLocales.includes(locale as SupportedLocale);\n    const checkoutLocale = isSupportedLocale ? locale : getFallbackLocale(region);\n\n    return checkoutLocale as SupportedLocale;\n}\n\n/**\n * Gets the design code from the given alias.\n * @param design - The alias of one of the possible designs.\n * @returns A design code\n */\nexport function getDesignCode(design: string): string {\n    if (design === 'noTagline') return 'C0001';\n    return null;\n}\n\n/**\n * Returns the amount in the format Amazon expects.\n * @param amount - The amount object in the Adyen format\n * @returns the charge amount object in the Amazon format\n */\nexport function getChargeAmount(amount: PaymentAmount): ChargeAmount {\n    return {\n        amount: String(getDecimalAmount(amount.value, amount.currency)),\n        currencyCode: amount.currency as Currency\n    };\n}\n\n/**\n * Returns a PayloadJSON object.\n * @param props -\n * @returns PayloadJSON\n */\nexport function getPayloadJSON(props): PayloadJSON {\n    const { addressDetails, cancelUrl, checkoutMode, deliverySpecifications, returnUrl, merchantMetadata, chargePermissionType, recurringMetadata } =\n        props;\n\n    const { storeId } = props.configuration;\n    const isPayNow = checkoutMode === 'ProcessOrder';\n    const amount = isPayNow ? getChargeAmount(props.amount) : null;\n\n    return {\n        storeId,\n        chargePermissionType,\n        webCheckoutDetails: {\n            ...(isPayNow ? { checkoutResultReturnUrl: returnUrl } : { checkoutReviewReturnUrl: returnUrl }),\n            ...(cancelUrl && { checkoutCancelUrl: cancelUrl }),\n            ...(isPayNow && { checkoutMode })\n        },\n        ...(isPayNow && {\n            paymentDetails: {\n                chargeAmount: amount,\n                paymentIntent: 'Confirm',\n                presentmentCurrency: amount.currencyCode,\n                totalOrderAmount: amount\n            }\n        }),\n        ...(recurringMetadata && { recurringMetadata }),\n        ...(merchantMetadata && { merchantMetadata }),\n        ...(deliverySpecifications && { deliverySpecifications }),\n        ...(addressDetails && { addressDetails })\n    };\n}\n","import { httpPost } from '../../core/Services/http';\nimport { AMAZONPAY_SIGN_STRING_ENDPOINT, AMAZONPAY_UPDATE_CHECKOUT_SESSION_ENDPOINT, AMAZONPAY_GET_CHECKOUT_DETAILS_ENDPOINT } from './config';\nimport { CheckoutDetailsRequest, PayloadJSON, UpdateAmazonCheckoutSessionRequest } from './types';\n\n/**\n * Calls the Sign String endpoint to the PayloadJSON string.\n * @param loadingContext - Loading context to be used in the call\n * @param clientKey - Key to be used as a public token\n * @param payloadJSON - Object to be signed\n * @returns A promise containing the response of the call\n */\nexport function getAmazonSignature(loadingContext: string, clientKey: string, payloadJSON: PayloadJSON): Promise<any> {\n    const options = {\n        loadingContext,\n        path: `${AMAZONPAY_SIGN_STRING_ENDPOINT}?clientKey=${clientKey}`\n    };\n\n    const request = { stringToSign: JSON.stringify(payloadJSON) };\n\n    return httpPost(options, request);\n}\n\n/**\n * Calls the getCheckoutDetails details to either get the shopper details or the decline flow URL.\n * @param loadingContext - Loading context to be used in the call\n * @param clientKey - Key to be used as a public token\n * @param request - Object to sent\n * @returns A promise containing the response of the call\n */\nexport function getCheckoutDetails(loadingContext: string, clientKey: string, request: CheckoutDetailsRequest): Promise<any> {\n    const options = {\n        loadingContext,\n        path: `${AMAZONPAY_GET_CHECKOUT_DETAILS_ENDPOINT}?clientKey=${clientKey}`\n    };\n\n    return httpPost(options, request);\n}\n\n/**\n * Calls the Update Checkout Session endpoint to create an order.\n * @param loadingContext - Loading context to be used in the call\n * @param clientKey - Key to be used as a public token\n * @param data -\n * @returns A promise containing the response of the call\n */\nexport function updateAmazonCheckoutSession(loadingContext: string, clientKey: string, data: UpdateAmazonCheckoutSessionRequest): Promise<any> {\n    const options = {\n        loadingContext,\n        path: `${AMAZONPAY_UPDATE_CHECKOUT_SESSION_ENDPOINT}?clientKey=${clientKey}`\n    };\n\n    return httpPost(options, data);\n}\n","import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport { getAmazonSignature } from '../services';\nimport { getAmazonPaySettings, getPayloadJSON } from '../utils';\nimport { AmazonPayButtonProps, CheckoutSessionConfig, PayloadJSON } from '../types';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\n\nexport default function AmazonPayButton(props: AmazonPayButtonProps) {\n    const { loadingContext } = useCoreContext();\n    const { amazonRef, configuration = {} } = props;\n    const [signature, setSignature] = useState<string>(null);\n    const payloadJSON: PayloadJSON = getPayloadJSON(props);\n    const settings = getAmazonPaySettings(props);\n\n    const handleOnClick = () => {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        new Promise(props.onClick).then(this.initCheckout).catch(error => {\n            if (props.onError) props.onError(error, this.componentRef);\n        });\n    };\n\n    const renderAmazonPayButton = (): void => {\n        const amazonPayButton = amazonRef.Pay.renderButton('#amazonPayButton', settings);\n        amazonPayButton.onClick(handleOnClick);\n    };\n\n    this.initCheckout = () => {\n        const checkoutSessionConfig: CheckoutSessionConfig = {\n            payloadJSON: JSON.stringify(payloadJSON),\n            publicKeyId: configuration.publicKeyId,\n            signature\n        };\n\n        amazonRef.Pay.initCheckout({\n            ...settings,\n            createCheckoutSessionConfig: checkoutSessionConfig\n        });\n    };\n\n    useEffect(() => {\n        const { clientKey } = props;\n\n        getAmazonSignature(loadingContext, clientKey, payloadJSON)\n            .then(response => {\n                if (!response?.signature) return console.error('Could not get AmazonPay signature');\n                setSignature(response.signature);\n                if (props.showPayButton) renderAmazonPayButton();\n            })\n            .catch(error => {\n                console.error(error);\n                if (props.onError) props.onError(error, this.componentRef);\n            });\n    }, []);\n\n    if (!props.showPayButton) return null;\n    return <div className=\"adyen-checkout__amazonpay__button\" id=\"amazonPayButton\" />;\n}\n","import { h } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { ChangeActionOptions, ChangePaymentDetailsButtonProps } from '../types';\n\nexport default function ChangePaymentDetailsButton(props: ChangePaymentDetailsButtonProps) {\n    const { i18n } = useCoreContext();\n    const { amazonRef, amazonCheckoutSessionId } = props;\n\n    useEffect(() => {\n        const changeActionOptions: ChangeActionOptions = {\n            amazonCheckoutSessionId,\n            changeAction: 'changeAddress'\n        };\n\n        amazonRef.Pay.bindChangeAction('.adyen-checkout__amazonpay__button--changeAddress', changeActionOptions);\n    }, []);\n\n    return (\n        <button type=\"button\" className=\"adyen-checkout__button adyen-checkout__button--ghost adyen-checkout__amazonpay__button--changeAddress\">\n            {i18n.get('amazonpay.changePaymentDetails')}\n        </button>\n    );\n}\n","import { h } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Button from '../../internal/Button';\nimport { updateAmazonCheckoutSession } from '../services';\nimport { OrderButtonProps, UpdateAmazonCheckoutSessionRequest } from '../types';\n\nexport default function OrderButton(props: OrderButtonProps) {\n    const { i18n, loadingContext } = useCoreContext();\n\n    this.createOrder = () => {\n        const { amazonCheckoutSessionId, amount, clientKey, chargePermissionType, publicKeyId, region, recurringMetadata, returnUrl } = props;\n        const request: UpdateAmazonCheckoutSessionRequest = {\n            amount,\n            chargePermissionType,\n            checkoutResultReturnUrl: returnUrl,\n            checkoutSessionId: amazonCheckoutSessionId,\n            publicKeyId,\n            recurringMetadata,\n            region\n        };\n\n        updateAmazonCheckoutSession(loadingContext, clientKey, request)\n            .then(response => {\n                if (!response?.action?.type) return console.error(response.errorMessage || 'Could not get the AmazonPay URL');\n                if (response.action.type === 'redirect') window.location.assign(response.action.url);\n            })\n            .catch(error => {\n                if (props.onError) props.onError(error, this.componentRef);\n            });\n    };\n\n    return <Button classNameModifiers={['standalone', 'pay']} label={i18n.get('confirmPurchase')} onClick={this.createOrder} />;\n}\n","import { h } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { SignOutButtonProps } from '../types';\n\nexport default function SignOutButton(props: SignOutButtonProps) {\n    const { i18n } = useCoreContext();\n\n    const handleClick = () => {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        new Promise(props.onSignOut)\n            .then(() => {\n                props.amazonRef.Pay.signout();\n            })\n            .catch(console.error);\n    };\n\n    return (\n        <button\n            type=\"button\"\n            className=\"adyen-checkout__button  adyen-checkout__button--ghost adyen-checkout__amazonpay__button--signOut\"\n            onClick={handleClick}\n        >\n            {i18n.get('amazonpay.signout')}\n        </button>\n    );\n}\n","import { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport Spinner from '../../internal/Spinner';\nimport { getAmazonPayUrl } from '../utils';\nimport { AmazonPayComponentProps } from '../types';\nimport AmazonPayButton from './AmazonPayButton';\nimport ChangePaymentDetailsButton from './ChangePaymentDetailsButton';\nimport OrderButton from './OrderButton';\nimport SignOutButton from './SignOutButton';\nimport Script from '../../../utils/Script';\n\nexport default function AmazonPayComponent(props: AmazonPayComponentProps) {\n    const [status, setStatus] = useState('pending');\n    const amazonPayButtonRef = useRef(null);\n    const orderButtonRef = useRef(null);\n\n    const handleLoad = () => {\n        setStatus('ready');\n    };\n\n    this.getSubmitFunction = () => {\n        if (amazonPayButtonRef.current && amazonPayButtonRef.current.initCheckout) return () => amazonPayButtonRef.current.initCheckout();\n        if (orderButtonRef.current && orderButtonRef.current.createOrder) return () => orderButtonRef.current.createOrder();\n    };\n\n    useEffect(() => {\n        const src = getAmazonPayUrl(props.configuration.region);\n        const script = new Script(src);\n        if (window.amazon) {\n            handleLoad();\n        } else {\n            void script.load().then(handleLoad);\n        }\n\n        return () => {\n            script.remove();\n        };\n    }, []);\n\n    if (status === 'pending') {\n        return (\n            <div className=\"adyen-checkout__amazonpay\">\n                <div className=\"adyen-checkout__amazonpay__status adyen-checkout__amazonpay__status--pending\">\n                    <Spinner />\n                </div>\n            </div>\n        );\n    }\n\n    if (props.showSignOutButton) {\n        return (\n            <div className=\"adyen-checkout__amazonpay\">\n                <SignOutButton amazonRef={window.amazon} onSignOut={props.onSignOut} />\n            </div>\n        );\n    }\n\n    if (props.amazonCheckoutSessionId) {\n        return (\n            <div className=\"adyen-checkout__amazonpay\">\n                {props.showOrderButton && (\n                    <OrderButton\n                        amazonCheckoutSessionId={props.amazonCheckoutSessionId}\n                        amount={props.amount}\n                        chargePermissionType={props.chargePermissionType}\n                        recurringMetadata={props.recurringMetadata}\n                        clientKey={props.clientKey}\n                        onError={props.onError}\n                        publicKeyId={props.configuration?.publicKeyId}\n                        region={props.configuration?.region}\n                        returnUrl={props.returnUrl}\n                        ref={orderButtonRef}\n                    />\n                )}\n\n                {props.showChangePaymentDetailsButton && (\n                    <ChangePaymentDetailsButton amazonCheckoutSessionId={props.amazonCheckoutSessionId} amazonRef={window.amazon} />\n                )}\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"adyen-checkout__amazonpay\">\n            <AmazonPayButton {...props} showPayButton={this.props.showPayButton} amazonRef={window.amazon} ref={amazonPayButtonRef} />\n        </div>\n    );\n}\n","import { AmazonPayConfiguration } from './types';\n\nconst defaultProps: Partial<AmazonPayConfiguration> = {\n    cancelUrl: typeof window !== 'undefined' ? window.location.href : '',\n    configuration: {},\n    environment: 'TEST',\n    locale: 'en_GB',\n    placement: 'Cart',\n    productType: 'PayAndShip',\n    returnUrl: typeof window !== 'undefined' ? window.location.href : '',\n    showOrderButton: true,\n    showChangePaymentDetailsButton: false,\n    showSignOutButton: false,\n    onClick: resolve => resolve(),\n    onSignOut: resolve => resolve(),\n    isExpress: false\n};\n\nexport default defaultProps;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport AmazonPayComponent from './components/AmazonPayComponent';\nimport { AmazonPayElementData, AmazonPayConfiguration, CheckoutDetailsRequest } from './types';\nimport defaultProps from './defaultProps';\nimport { getCheckoutDetails } from './services';\nimport './AmazonPay.scss';\nimport { TxVariants } from '../tx-variants';\nimport { sanitizeResponse, verifyPaymentDidNotFail } from '../internal/UIElement/utils';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\n\nexport class AmazonPayElement extends UIElement<AmazonPayConfiguration> {\n    public static type = TxVariants.amazonpay;\n\n    protected static defaultProps = defaultProps;\n\n    formatProps(props) {\n        return {\n            ...props,\n            checkoutMode: props.isDropin ? 'ProcessOrder' : props.checkoutMode,\n            environment: props.environment.toUpperCase(),\n            locale: props.locale.replace('-', '_'),\n            productType: props.isDropin && !props.addressDetails ? 'PayOnly' : props.productType\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData(): AmazonPayElementData {\n        const { amazonCheckoutSessionId: checkoutSessionId } = this.props;\n        return {\n            paymentMethod: {\n                type: AmazonPayElement.type,\n                ...(checkoutSessionId && { checkoutSessionId })\n            },\n            browserInfo: this.browserInfo\n        };\n    }\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject) {\n        // Analytics will need to know about this.props.isExpress & this.props.expressPage\n        super.submitAnalytics({ ...analyticsObj }, this.props);\n    }\n\n    getShopperDetails() {\n        const { amazonCheckoutSessionId, configuration = {}, loadingContext, clientKey } = this.props;\n        if (!amazonCheckoutSessionId) return console.error('Could not shopper details. Missing checkoutSessionId.');\n\n        const request: CheckoutDetailsRequest = {\n            checkoutSessionId: amazonCheckoutSessionId,\n            getDeliveryAddress: true,\n            publicKeyId: configuration.publicKeyId,\n            region: configuration.region\n        };\n\n        return getCheckoutDetails(loadingContext, clientKey, request);\n    }\n\n    public handleDeclineFlow() {\n        const { amazonCheckoutSessionId, configuration = {}, loadingContext, clientKey } = this.props;\n        if (!amazonCheckoutSessionId) return console.error('Could handle the decline flow. Missing checkoutSessionId.');\n\n        const request: CheckoutDetailsRequest = {\n            checkoutSessionId: amazonCheckoutSessionId,\n            getDeclineFlowUrl: true,\n            publicKeyId: configuration.publicKeyId,\n            region: configuration.region\n        };\n\n        getCheckoutDetails(loadingContext, clientKey, request)\n            .then((response = {}) => {\n                if (!response?.declineFlowUrl) throw response;\n                window.location.assign(response.declineFlowUrl);\n            })\n            .catch(error => {\n                if (this.props.onError) this.props.onError(error, this.componentRef);\n            });\n    }\n\n    get isValid() {\n        return true;\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n\n    public submit(): void {\n        const amazonComponentSubmit = this.componentRef && this.componentRef.getSubmitFunction();\n        if (amazonComponentSubmit) {\n            return amazonComponentSubmit();\n        }\n        this.makePaymentsCall().then(sanitizeResponse).then(verifyPaymentDidNotFail).then(this.handleResponse).catch(this.handleFailedResult);\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <AmazonPayComponent\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    showPayButton={this.props.showPayButton}\n                    onClick={this.props.onClick}\n                    onError={this.props.onError}\n                    onSignOut={this.props.onSignOut}\n                    {...this.props}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default AmazonPayElement;\n","import { Component, h } from 'preact';\nimport cx from 'classnames';\nimport './ApplePayButton.scss';\nimport Language from '../../../language/Language';\nimport { ApplePayButtonType } from '../types';\n\ninterface ApplePayButtonProps {\n    i18n: Language;\n    buttonColor: 'black' | 'white' | 'white-with-line';\n    buttonType: ApplePayButtonType;\n    onClick: (event) => void;\n}\n\nclass ApplePayButton extends Component<ApplePayButtonProps> {\n    public static defaultProps = {\n        onClick: () => {},\n        buttonColor: 'black',\n        buttonType: 'plain'\n    };\n\n    render({ buttonColor, buttonType }) {\n        return (\n            <button\n                type=\"button\"\n                aria-label={this.props.i18n.get('payButton')}\n                lang={this.props.i18n.languageCode}\n                className={cx(\n                    'adyen-checkout__applepay__button',\n                    `adyen-checkout__applepay__button--${buttonColor}`,\n                    `adyen-checkout__applepay__button--${buttonType}`,\n                    'apple-pay',\n                    'apple-pay-button',\n                    `apple-pay-button-${buttonColor}`,\n                    `apple-pay-button--type-${buttonType}`\n                )}\n                onClick={this.props.onClick}\n            />\n        );\n    }\n}\n\nexport default ApplePayButton;\n","import { ApplePayPaymentAuthorizationResult } from './types';\n\ninterface ApplePayServiceOptions {\n    version: number;\n    onValidateMerchant: (resolve, reject, url) => void;\n    onError: (error?: unknown) => void;\n    onCancel?: (event: ApplePayJS.Event) => void;\n    onPaymentMethodSelected?: (resolve, reject, event: ApplePayJS.ApplePayPaymentMethodSelectedEvent) => void;\n    onShippingMethodSelected?: (resolve, reject, event: ApplePayJS.ApplePayShippingMethodSelectedEvent) => void;\n    onShippingContactSelected?: (resolve, reject, event: ApplePayJS.ApplePayShippingContactSelectedEvent) => void;\n    onPaymentAuthorized: (\n        resolve: (result: ApplePayPaymentAuthorizationResult) => void,\n        reject: (result: ApplePayPaymentAuthorizationResult) => void,\n        event: ApplePayJS.ApplePayPaymentAuthorizedEvent\n    ) => void;\n}\n\nclass ApplePayService {\n    private session: ApplePaySession;\n    private readonly options: ApplePayServiceOptions;\n\n    constructor(paymentRequest: ApplePayJS.ApplePayPaymentRequest, options: ApplePayServiceOptions) {\n        this.options = options;\n\n        this.session = new ApplePaySession(options.version, paymentRequest);\n        this.session.onvalidatemerchant = event => {\n            void this.onvalidatemerchant(event, options.onValidateMerchant);\n        };\n        this.session.onpaymentauthorized = event => {\n            void this.onpaymentauthorized(event, options.onPaymentAuthorized);\n        };\n\n        this.session.oncancel = event => {\n            this.oncancel(event, options.onCancel);\n        };\n\n        if (typeof options.onPaymentMethodSelected === 'function') {\n            this.session.onpaymentmethodselected = event => {\n                void this.onpaymentmethodselected(event, options.onPaymentMethodSelected);\n            };\n        }\n\n        if (typeof options.onShippingContactSelected === 'function') {\n            this.session.onshippingcontactselected = event => {\n                void this.onshippingcontactselected(event, options.onShippingContactSelected);\n            };\n        }\n\n        if (typeof options.onShippingMethodSelected === 'function') {\n            this.session.onshippingmethodselected = event => {\n                void this.onshippingmethodselected(event, options.onShippingMethodSelected);\n            };\n        }\n    }\n\n    /**\n     * Begins the merchant validation process.\n     * When this method is called, the payment sheet is presented and the merchant validation process is initiated.\n     * @see {@link https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession/1778001-begin}\n     */\n    begin() {\n        return this.session.begin();\n    }\n\n    /**\n     * An event handler that is called when the payment sheet is displayed.\n     * Use this attribute to request and return a merchant session.\n     * @param event - An ApplePayValidateMerchantEvent object (contains validationURL)\n     * @param onValidateMerchant - A promise implemented by the merchant that will resolve with the merchantSession\n     * @see {@link https://developer.apple.com/documentation/apple_pay_on_the_web/apple_pay_js_api/providing_merchant_validation}\n     */\n    onvalidatemerchant(event: ApplePayJS.ApplePayValidateMerchantEvent, onValidateMerchant) {\n        return new Promise((resolve, reject) => onValidateMerchant(resolve, reject, event.validationURL))\n            .then(response => {\n                this.session.completeMerchantValidation(response);\n            })\n            .catch(error => {\n                console.error(error);\n                this.session.abort();\n                this.options.onError(error);\n            });\n    }\n\n    /**\n     * An event handler that is called when the user has authorized the Apple Pay payment with Touch ID, Face ID, or passcode.\n     * The onpaymentauthorized function must complete the payment and respond by calling completePayment before the 30 second timeout.\n     *\n     * @param event - The event parameter contains the payment (ApplePayPayment) attribute.\n     * @param onPaymentAuthorized - A promise that will complete the payment when resolved. Use this promise to process the payment.\n     * @see {@link https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession/1778020-onpaymentauthorized}\n     */\n    onpaymentauthorized(\n        event: ApplePayJS.ApplePayPaymentAuthorizedEvent,\n        onPaymentAuthorized: ApplePayServiceOptions['onPaymentAuthorized']\n    ): Promise<void> {\n        return new Promise((resolve, reject) => onPaymentAuthorized(resolve, reject, event))\n            .then((result: ApplePayPaymentAuthorizationResult) => {\n                this.session.completePayment(result);\n            })\n            .catch((result: ApplePayPaymentAuthorizationResult) => {\n                this.session.completePayment(result);\n            });\n    }\n\n    /**\n     * An event handler that is called when a new payment method is selected.\n     * The onpaymentmethodselected function must resolve before the 30 second timeout\n     *\n     * @param event - The event parameter contains the payment (ApplePayPayment) attribute.\n     * @param onPaymentMethodSelected - A promise that will complete the payment when resolved. Use this promise to process the payment.\n     * @see {@link https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession/1778013-onpaymentmethodselected}\n     */\n    onpaymentmethodselected(event: ApplePayJS.ApplePayPaymentMethodSelectedEvent, onPaymentMethodSelected) {\n        return new Promise((resolve, reject) => onPaymentMethodSelected(resolve, reject, event))\n            .then((paymentMethodUpdate: ApplePayJS.ApplePayPaymentMethodUpdate) => {\n                this.session.completePaymentMethodSelection(paymentMethodUpdate);\n            })\n            .catch((paymentMethodUpdate: ApplePayJS.ApplePayPaymentMethodUpdate) => {\n                this.session.completePaymentMethodSelection(paymentMethodUpdate);\n            });\n    }\n\n    /**\n     * An event handler that is called when a new payment method is selected.\n     * The onpaymentmethodselected function must resolve before the 30 second timeout\n     * @param event - The event parameter contains the shippingContact attribute.\n     * @param onShippingContactSelected - A promise that will complete the selection of a shipping contact with an update.\n     * @see {@link https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession/1778009-onshippingcontactselected}\n     */\n    onshippingcontactselected(event: ApplePayJS.ApplePayShippingContactSelectedEvent, onShippingContactSelected) {\n        return new Promise((resolve, reject) => onShippingContactSelected(resolve, reject, event))\n            .then((shippingContactUpdate: ApplePayJS.ApplePayShippingContactUpdate) => {\n                this.session.completeShippingContactSelection(shippingContactUpdate);\n            })\n            .catch((shippingContactUpdate: ApplePayJS.ApplePayShippingContactUpdate) => {\n                this.session.completeShippingContactSelection(shippingContactUpdate);\n            });\n    }\n\n    /**\n     * An event handler that is called when a new payment method is selected.\n     * The onpaymentmethodselected function must resolve before the 30 second timeout\n     * @param event - The event parameter contains the shippingMethod attribute.\n     * @param onShippingMethodSelected - A promise that will complete the selection of a shipping method with an update.\n     * @see {@link https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession/1778009-onshippingcontactselected}\n     */\n    onshippingmethodselected(event: ApplePayJS.ApplePayShippingMethodSelectedEvent, onShippingMethodSelected) {\n        return new Promise((resolve, reject) => onShippingMethodSelected(resolve, reject, event))\n            .then((shippingMethodUpdate: ApplePayJS.ApplePayShippingMethodUpdate) => {\n                this.session.completeShippingMethodSelection(shippingMethodUpdate);\n            })\n            .catch((shippingMethodUpdate: ApplePayJS.ApplePayShippingMethodUpdate) => {\n                this.session.completeShippingMethodSelection(shippingMethodUpdate);\n            });\n    }\n\n    /**\n     * An event handler that is automatically called when the payment UI is dismissed.\n     * This function can be called even after an onpaymentauthorized event has been dispatched.\n     * @param event -\n     * @param onCancel -\n     * @see {@link https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession/1778029-oncancel}\n     */\n    oncancel(event: ApplePayJS.Event, onCancel): void {\n        onCancel(event);\n    }\n}\n\nexport default ApplePayService;\n","import { getDecimalAmount } from '../../utils/amount-util';\nimport { PaymentAmount } from '../../types/global-types';\n\nconst formatAmount = (amount: PaymentAmount) => String(getDecimalAmount(amount.value, amount.currency));\n\nexport const preparePaymentRequest = (paymentRequest): ApplePayJS.ApplePayPaymentRequest => {\n    const { countryCode, companyName, amount, ...props } = paymentRequest;\n    const formattedAmount = formatAmount(amount);\n\n    if (!countryCode) {\n        console.warn('ApplePay - Make sure to set the countryCode in the AdyenCheckout configuration or in the Checkout Session creation');\n    }\n\n    return {\n        countryCode,\n        currencyCode: amount.currency,\n\n        total: {\n            label: props.totalPriceLabel,\n            amount: formattedAmount,\n            type: props.totalPriceStatus\n        },\n\n        lineItems: props.lineItems,\n        shippingMethods: props.shippingMethods,\n        shippingType: props.shippingType,\n\n        recurringPaymentRequest: props.recurringPaymentRequest,\n\n        merchantCapabilities: props.merchantCapabilities,\n        supportedCountries: props.supportedCountries,\n        supportedNetworks: props.supportedNetworks,\n\n        requiredShippingContactFields: props.requiredShippingContactFields,\n        requiredBillingContactFields: props.requiredBillingContactFields,\n\n        billingContact: props.billingContact,\n        shippingContact: props.shippingContact,\n\n        applicationData: props.applicationData\n    };\n};\n\nexport default preparePaymentRequest;\n","import { AddressData } from '../../types/global-types';\n\nexport function resolveSupportedVersion(latestVersion: number): number | null {\n    const versions = [];\n    for (let i = latestVersion; i > 0; i--) {\n        versions.push(i);\n    }\n\n    try {\n        return versions.find(v => v && window.ApplePaySession && ApplePaySession.supportsVersion(v));\n    } catch (error) {\n        console.warn(error);\n        return null;\n    }\n}\n\nexport function mapBrands(brands) {\n    const brandMapping = {\n        mc: 'masterCard',\n        amex: 'amex',\n        visa: 'visa',\n        elodebit: 'elo',\n        elo: 'elo',\n        interac: 'interac',\n        discover: 'discover',\n        jcb: 'jcb',\n        electron: 'electron',\n        maestro: 'maestro',\n        girocard: 'girocard',\n        cartebancaire: 'cartesBancaires',\n        eftpos_australia: 'eftpos'\n    };\n\n    return brands.reduce((accumulator, item) => {\n        if (!!brandMapping[item] && !accumulator.includes(brandMapping[item])) {\n            accumulator.push(brandMapping[item]);\n        }\n        return accumulator;\n    }, []);\n}\n\n/**\n * This function formats Apple Pay contact format to Adyen address format\n *\n * Setting 'houseNumberOrName' to ZZ won't affect the AVS check, and it will make the algorithm take the\n * house number from the 'street' property.\n */\nexport function formatApplePayContactToAdyenAddressFormat(\n    paymentContact: ApplePayJS.ApplePayPaymentContact,\n    isDeliveryAddress?: boolean\n): AddressData | undefined {\n    if (!paymentContact) {\n        return;\n    }\n\n    return {\n        city: paymentContact.locality,\n        country: paymentContact.countryCode,\n        houseNumberOrName: 'ZZ',\n        postalCode: paymentContact.postalCode,\n        street: paymentContact.addressLines?.join(' ').trim(),\n        ...(paymentContact.administrativeArea && { stateOrProvince: paymentContact.administrativeArea }),\n        ...(isDeliveryAddress && {\n            firstName: paymentContact.givenName,\n            lastName: paymentContact.familyName\n        })\n    };\n}\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport ApplePayButton from './components/ApplePayButton';\nimport ApplePayService from './ApplePayService';\nimport base64 from '../../utils/base64';\nimport defaultProps from './defaultProps';\nimport { httpPost } from '../../core/Services/http';\nimport { APPLEPAY_SESSION_ENDPOINT } from './config';\nimport { preparePaymentRequest } from './payment-request';\nimport { resolveSupportedVersion, mapBrands, formatApplePayContactToAdyenAddressFormat } from './utils';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { DecodeObject } from '../../types/global-types';\nimport { TxVariants } from '../tx-variants';\nimport { sanitizeResponse, verifyPaymentDidNotFail } from '../internal/UIElement/utils';\nimport { ANALYTICS_INSTANT_PAYMENT_BUTTON, ANALYTICS_SELECTED_STR } from '../../core/Analytics/constants';\n\nimport type { ApplePayConfiguration, ApplePayElementData, ApplePayPaymentOrderDetails, ApplePaySessionRequest } from './types';\nimport type { ICore } from '../../core/types';\nimport type { PaymentResponseData, RawPaymentResponse } from '../../types/global-types';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\n\nconst latestSupportedVersion = 14;\n\nclass ApplePayElement extends UIElement<ApplePayConfiguration> {\n    public static type = TxVariants.applepay;\n    protected static defaultProps = defaultProps;\n\n    constructor(checkout: ICore, props?: ApplePayConfiguration) {\n        super(checkout, props);\n\n        const { isExpress, onShippingContactSelected, onShippingMethodSelected } = this.props;\n\n        if (isExpress === false && (onShippingContactSelected || onShippingMethodSelected)) {\n            throw new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'ApplePay - You must set \"isExpress\" flag to \"true\" in order to use \"onShippingContactSelected\" and/or \"onShippingMethodSelected\" callbacks'\n            );\n        }\n\n        this.startSession = this.startSession.bind(this);\n        this.submit = this.submit.bind(this);\n        this.validateMerchant = this.validateMerchant.bind(this);\n        this.collectOrderTrackingDetailsIfNeeded = this.collectOrderTrackingDetailsIfNeeded.bind(this);\n        this.handleAuthorization = this.handleAuthorization.bind(this);\n    }\n\n    /**\n     * Formats the component props\n     */\n    protected override formatProps(props) {\n        const version = props.version || resolveSupportedVersion(latestSupportedVersion);\n        const supportedNetworks = props.brands?.length ? mapBrands(props.brands) : props.supportedNetworks;\n\n        return {\n            ...props,\n            configuration: props.configuration,\n            supportedNetworks,\n            version,\n            totalPriceLabel: props.totalPriceLabel || props.configuration?.merchantName\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    protected override formatData(): ApplePayElementData {\n        const { applePayToken, billingAddress, deliveryAddress } = this.state;\n        const { isExpress } = this.props;\n\n        return {\n            paymentMethod: {\n                type: ApplePayElement.type,\n                applePayToken,\n                ...(isExpress && { subtype: 'express' })\n            },\n            ...(billingAddress && { billingAddress }),\n            ...(deliveryAddress && { deliveryAddress })\n        };\n    }\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject) {\n        // Analytics will need to know about this.props.isExpress & this.props.expressPage\n        super.submitAnalytics({ ...analyticsObj }, this.props);\n    }\n\n    public override submit = (): void => {\n        // Analytics\n        if (this.props.isInstantPayment) {\n            this.submitAnalytics({ type: ANALYTICS_SELECTED_STR, target: ANALYTICS_INSTANT_PAYMENT_BUTTON });\n        }\n        void this.startSession();\n    };\n\n    private startSession() {\n        const { version, onValidateMerchant, onPaymentMethodSelected, onShippingMethodSelected, onShippingContactSelected } = this.props;\n\n        const paymentRequest = preparePaymentRequest({\n            companyName: this.props.configuration.merchantName,\n            countryCode: this.core.options.countryCode,\n            ...this.props\n        });\n\n        const session = new ApplePayService(paymentRequest, {\n            version,\n            onError: (error: unknown) => {\n                this.handleError(\n                    new AdyenCheckoutError('ERROR', 'ApplePay - Something went wrong on ApplePayService', {\n                        cause: error\n                    })\n                );\n            },\n            onCancel: event => {\n                this.handleError(new AdyenCheckoutError('CANCEL', 'ApplePay UI dismissed', { cause: event }));\n            },\n            onPaymentMethodSelected,\n            onShippingMethodSelected,\n            onShippingContactSelected,\n            onValidateMerchant: onValidateMerchant || this.validateMerchant,\n            onPaymentAuthorized: (resolve, reject, event) => {\n                const billingAddress = formatApplePayContactToAdyenAddressFormat(event.payment.billingContact);\n                const deliveryAddress = formatApplePayContactToAdyenAddressFormat(event.payment.shippingContact, true);\n\n                this.setState({\n                    applePayToken: btoa(JSON.stringify(event.payment.token.paymentData)),\n                    authorizedEvent: event,\n                    ...(billingAddress && { billingAddress }),\n                    ...(deliveryAddress && { deliveryAddress })\n                });\n\n                this.handleAuthorization()\n                    .then(this.makePaymentsCall)\n                    .then(sanitizeResponse)\n                    .then(verifyPaymentDidNotFail)\n                    .then(this.collectOrderTrackingDetailsIfNeeded)\n                    .then(({ paymentResponse, orderDetails }) => {\n                        resolve({\n                            status: ApplePaySession.STATUS_SUCCESS,\n                            ...(orderDetails && { orderDetails })\n                        });\n                        return paymentResponse;\n                    })\n                    .then(paymentResponse => {\n                        this.handleResponse(paymentResponse);\n                    })\n                    .catch((paymentResponse?: RawPaymentResponse) => {\n                        const errors = paymentResponse?.error?.applePayError;\n\n                        reject({\n                            status: ApplePaySession.STATUS_FAILURE,\n                            errors: errors ? (Array.isArray(errors) ? errors : [errors]) : undefined\n                        });\n\n                        const responseWithError: RawPaymentResponse = {\n                            ...paymentResponse,\n                            error: {\n                                applePayError: errors\n                            }\n                        };\n\n                        this.handleFailedResult(responseWithError);\n                    });\n            }\n        });\n\n        return new Promise((resolve, reject) => this.props.onClick(resolve, reject))\n            .then(() => {\n                session.begin();\n            })\n            .catch(() => ({\n                // Swallow exception triggered by onClick reject\n            }));\n    }\n\n    /**\n     * Call the 'onAuthorized' callback if available.\n     * Must be resolved/reject for the payment flow to continue\n     *\n     * @private\n     */\n    private async handleAuthorization(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            if (!this.props.onAuthorized) {\n                resolve();\n            }\n\n            const { authorizedEvent, billingAddress, deliveryAddress } = this.state;\n\n            this.props.onAuthorized(\n                {\n                    authorizedEvent,\n                    ...(billingAddress && { billingAddress }),\n                    ...(deliveryAddress && { deliveryAddress })\n                },\n                { resolve, reject }\n            );\n        }).catch((error?: ApplePayJS.ApplePayError) => {\n            // Format error in a way that the 'catch' of the 'onPaymentAuthorize' block accepts it\n            const data = { error: { applePayError: error } };\n            return Promise.reject(data);\n        });\n    }\n\n    /**\n     * Verify if the 'onOrderTrackingRequest' is provided. If so, triggers the callback expecting an\n     * Apple Pay order details back\n     *\n     * @private\n     */\n    private async collectOrderTrackingDetailsIfNeeded(\n        paymentResponse: PaymentResponseData\n    ): Promise<{ orderDetails?: ApplePayPaymentOrderDetails; paymentResponse: PaymentResponseData }> {\n        return new Promise<ApplePayPaymentOrderDetails | void>((resolve, reject) => {\n            if (!this.props.onOrderTrackingRequest) {\n                return resolve();\n            }\n\n            this.props.onOrderTrackingRequest(resolve, reject);\n        })\n            .then(orderDetails => {\n                return {\n                    paymentResponse,\n                    ...(orderDetails && { orderDetails })\n                };\n            })\n            .catch(() => {\n                return { paymentResponse };\n            });\n    }\n\n    private async validateMerchant(resolve, reject) {\n        const { hostname: domainName } = window.location;\n        const { clientKey, configuration, loadingContext, initiative } = this.props;\n        const { merchantName, merchantId } = configuration;\n        const path = `${APPLEPAY_SESSION_ENDPOINT}?clientKey=${clientKey}`;\n        const options = { loadingContext, path };\n        const request: ApplePaySessionRequest = {\n            displayName: merchantName,\n            domainName,\n            initiative,\n            merchantIdentifier: merchantId\n        };\n\n        try {\n            const response = await httpPost(options, request);\n            const decodedData: DecodeObject = base64.decode(response.data);\n            if (!decodedData.success) {\n                reject('Could not decode Apple Pay session');\n            } else {\n                const session = JSON.parse(decodedData.data);\n                resolve(session);\n            }\n        } catch (e) {\n            reject('Could not get Apple Pay session');\n        }\n    }\n\n    /**\n     * Validation\n     *\n     * @remarks\n     * Apple Pay does not require any specific validation\n     */\n    get isValid(): boolean {\n        return true;\n    }\n\n    /**\n     * Determine a shopper's ability to return a form of payment from Apple Pay.\n     * @returns Promise Resolve/Reject whether the shopper can use Apple Pay\n     */\n    public override async isAvailable(): Promise<void> {\n        if (document.location.protocol !== 'https:') {\n            return Promise.reject(new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'Trying to start an Apple Pay session from an insecure document'));\n        }\n\n        if (!this.props.onValidateMerchant && !this.props.clientKey) {\n            return Promise.reject(new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'clientKey was not provided'));\n        }\n\n        try {\n            if (window.ApplePaySession && ApplePaySession.canMakePayments() && ApplePaySession.supportsVersion(this.props.version)) {\n                return Promise.resolve();\n            }\n        } catch (error) {\n            console.warn(error);\n        }\n\n        return Promise.reject(new AdyenCheckoutError('ERROR', 'Apple Pay is not available on this device'));\n    }\n\n    /**\n     * Renders the Apple Pay button or nothing in the Dropin\n     */\n    render() {\n        if (this.props.showPayButton) {\n            return (\n                <ApplePayButton\n                    i18n={this.props.i18n}\n                    buttonColor={this.props.buttonColor}\n                    buttonType={this.props.buttonType}\n                    onClick={e => {\n                        e.preventDefault();\n                        this.submit();\n                    }}\n                />\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default ApplePayElement;\n","import { ApplePayConfiguration } from './types';\n\nconst defaultProps: ApplePayConfiguration = {\n    isExpress: false,\n    amount: { currency: 'USD', value: 0 },\n    totalPriceStatus: 'final',\n    initiative: 'web',\n    merchantCapabilities: ['supports3DS'],\n    supportedNetworks: ['amex', 'discover', 'masterCard', 'visa'],\n    buttonType: 'plain',\n    buttonColor: 'black',\n    onClick: resolve => resolve()\n};\n\nexport default defaultProps;\n","import { PaymentAmount } from '../../../types/global-types';\n\nexport interface ICashAppWindowObject {\n    pay({ clientId }: { clientId: string }): Promise<ICashAppSDK>;\n}\n\n/**\n * https://developers.cash.app/docs/api/technical-documentation/sdks/pay-kit/technical-reference\n */\nexport interface ICashAppSDK {\n    render(target: string | HTMLElement, options?: any): Promise<{ begin?: () => void }>;\n    addEventListener(eventType: CashAppPayEvents, callback: Function): void;\n    removeEventListener(eventType: CashAppPayEvents, callback: Function): void;\n    customerRequest(customerRequest: any): Promise<void>;\n    restart(): Promise<void>;\n}\n\nexport enum CashAppPayEvents {\n    CustomerDismissed = 'CUSTOMER_DISMISSED',\n    CustomerRequestApproved = 'CUSTOMER_REQUEST_APPROVED',\n    CustomerRequestDeclined = 'CUSTOMER_REQUEST_DECLINED',\n    CustomerRequestFailed = 'CUSTOMER_REQUEST_FAILED'\n}\n\nexport interface ICashAppService {\n    begin(): void;\n    initialize(): Promise<void>;\n    setStorePaymentMethod(store: boolean): void;\n    renderButton(target: HTMLElement): Promise<void>;\n    restart(): Promise<void>;\n    createCustomerRequest(): Promise<void>;\n    subscribeToEvent(eventType: CashAppPayEvents, callback: Function): Function;\n}\n\nexport type CashAppServiceConfig = {\n    useCashAppButtonUi: boolean;\n    storePaymentMethod: boolean;\n    environment: string;\n    clientId: string;\n    scopeId: string;\n    amount: PaymentAmount;\n    referenceId?: string;\n    redirectURL?: string;\n    button?: {\n        shape?: 'semiround' | 'round';\n        size?: 'medium' | 'small';\n        theme?: 'dark' | 'light';\n        width?: 'static' | 'full';\n    };\n};\n","import { h, RefObject } from 'preact';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport Spinner from '../../internal/Spinner';\nimport { CashAppPayEvents, ICashAppService } from '../services/types';\nimport { CashAppPayEventData } from '../types';\nimport StoreDetails from '../../internal/StoreDetails';\nimport './CashAppComponent.scss';\nimport { UIElementStatus } from '../../internal/UIElement/types';\n\ninterface CashAppComponentProps {\n    enableStoreDetails?: boolean;\n    cashAppService: ICashAppService;\n    onClick(): void;\n    onChangeStoreDetails(data: any): void;\n    onAuthorize(payEventData: CashAppPayEventData): void;\n    onError(error: AdyenCheckoutError): void;\n    ref(ref: RefObject<typeof CashAppComponent>): void;\n}\n\nexport function CashAppComponent({\n    enableStoreDetails,\n    cashAppService,\n    onClick,\n    onChangeStoreDetails,\n    onAuthorize,\n    onError\n}: CashAppComponentProps): h.JSX.Element {\n    const cashAppRef = useRef<HTMLDivElement>(null);\n    const [status, setStatus] = useState<UIElementStatus>('loading');\n    const subscriptions = useRef<Function[]>([]);\n    const [storePaymentMethod, setStorePaymentMethod] = useState<boolean>(false);\n\n    this.setStatus = setStatus;\n\n    const initializeCashAppSdk = useCallback(async () => {\n        try {\n            await cashAppService.initialize();\n\n            subscriptions.current = [\n                cashAppService.subscribeToEvent(CashAppPayEvents.CustomerDismissed, () => {\n                    onError(new AdyenCheckoutError('CANCEL', 'Customer dismissed the modal'));\n                }),\n                cashAppService.subscribeToEvent(CashAppPayEvents.CustomerRequestDeclined, async () => {\n                    onError(new AdyenCheckoutError('ERROR', 'Payment declined by CashAppPay'));\n                    await cashAppService.restart();\n                    await cashAppService.renderButton(cashAppRef.current);\n                }),\n\n                cashAppService.subscribeToEvent(CashAppPayEvents.CustomerRequestApproved, ({ customerProfile, grants }) => {\n                    const cashAppPaymentData: CashAppPayEventData = {\n                        ...(customerProfile?.id && { customerId: customerProfile.id }),\n                        ...(customerProfile?.cashtag && { cashTag: customerProfile.cashtag }),\n                        ...(grants?.payment?.grantId && { grantId: grants.payment.grantId }),\n                        ...(grants?.onFile?.grantId && { onFileGrantId: grants.onFile.grantId })\n                    };\n\n                    onAuthorize(cashAppPaymentData);\n                }),\n                cashAppService.subscribeToEvent(CashAppPayEvents.CustomerRequestFailed, () => {\n                    onError(new AdyenCheckoutError('ERROR', 'Customer request failed'));\n                })\n            ];\n\n            await cashAppService.renderButton(cashAppRef.current);\n\n            setStatus('ready');\n        } catch (error) {\n            if (error instanceof AdyenCheckoutError) onError(error);\n            else onError(new AdyenCheckoutError('ERROR', 'Error when initializing CashAppPay', { cause: error }));\n        }\n    }, [cashAppService, onError, onAuthorize]);\n\n    useEffect(() => {\n        if (enableStoreDetails) {\n            cashAppService.setStorePaymentMethod(storePaymentMethod);\n            onChangeStoreDetails(storePaymentMethod);\n        }\n    }, [enableStoreDetails, storePaymentMethod]);\n\n    useEffect(() => {\n        void initializeCashAppSdk();\n        return () => {\n            void cashAppService.restart();\n            subscriptions.current.forEach(unsubscribeFn => unsubscribeFn());\n        };\n    }, [cashAppService, initializeCashAppSdk]);\n\n    return (\n        <div className=\"adyen-checkout__cashapp\" aria-live=\"polite\" aria-busy={status === 'loading'}>\n            {status === 'loading' && <Spinner />}\n            {status !== 'loading' && enableStoreDetails && <StoreDetails storeDetails={storePaymentMethod} onChange={setStorePaymentMethod} />}\n\n            {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions,jsx-a11y/click-events-have-key-events */}\n            <div onClick={onClick} className={'adyen-checkout__cashapp-button'} ref={cashAppRef}></div>\n        </div>\n    );\n}\n","import { ICashAppSdkLoader } from './CashAppSdkLoader';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport { CashAppPayEvents, CashAppServiceConfig, ICashAppSDK, ICashAppService } from './types';\n\nexport default class CashAppService implements ICashAppService {\n    private readonly sdkLoader: ICashAppSdkLoader;\n    private readonly configuration: CashAppServiceConfig;\n\n    private pay: ICashAppSDK;\n\n    /**\n     * Reference to CashApp 'begin' method\n     */\n    private startAuthorization?: () => void;\n\n    constructor(sdkLoader: ICashAppSdkLoader, configuration: CashAppServiceConfig) {\n        this.configuration = configuration;\n        this.sdkLoader = sdkLoader;\n\n        if (!configuration.clientId) {\n            console.warn('CashAppService: clientId is missing');\n        }\n    }\n\n    get hasOneTimePayment() {\n        const { amount } = this.configuration;\n        return amount?.value > 0;\n    }\n\n    get hasOnFilePayment() {\n        return this.configuration.storePaymentMethod;\n    }\n\n    public setStorePaymentMethod(store: boolean) {\n        this.configuration.storePaymentMethod = store;\n    }\n\n    public async initialize(): Promise<void> {\n        try {\n            const { environment, clientId } = this.configuration;\n            const cashApp = await this.sdkLoader.load(environment);\n            this.pay = await cashApp.pay({ clientId });\n        } catch (error) {\n            throw new AdyenCheckoutError('ERROR', 'Error during initialization', { cause: error });\n        }\n    }\n\n    public async renderButton(target: HTMLElement): Promise<void> {\n        try {\n            const { button, useCashAppButtonUi } = this.configuration;\n\n            const { begin } = await this.pay.render(target, {\n                manage: false,\n                button: useCashAppButtonUi ? { width: 'full', shape: 'semiround', ...button } : false\n            });\n            this.startAuthorization = begin;\n        } catch (error) {\n            throw new AdyenCheckoutError('ERROR', 'Error rendering CashAppPay button', { cause: error });\n        }\n    }\n\n    public begin(): void {\n        if (!this.startAuthorization) console.warn('CashAppService - begin() not available');\n        else this.startAuthorization();\n    }\n\n    public subscribeToEvent(eventType: CashAppPayEvents, callback: Function): Function {\n        this.pay.addEventListener(eventType, callback);\n        return () => {\n            this.pay.removeEventListener(eventType, callback);\n        };\n    }\n\n    public async createCustomerRequest(): Promise<void> {\n        try {\n            const { referenceId, amount, scopeId, redirectURL = window.location.href } = this.configuration;\n\n            const customerRequest = {\n                referenceId,\n                redirectURL,\n                actions: {\n                    ...(this.hasOneTimePayment && {\n                        payment: {\n                            amount,\n                            scopeId\n                        }\n                    }),\n                    ...(this.hasOnFilePayment && {\n                        onFile: {\n                            scopeId\n                        }\n                    })\n                }\n            };\n            await this.pay.customerRequest(customerRequest);\n        } catch (error) {\n            throw new AdyenCheckoutError('ERROR', 'Something went wrong during customerRequest creation', { cause: error });\n        }\n    }\n\n    public async restart(): Promise<void> {\n        await this.pay.restart();\n    }\n}\n","import { CASHAPPPAY_PROD_SDK, CASHAPPPAY_SANDBOX_SDK } from './config';\nimport Script from '../../../utils/Script';\nimport { ICashAppWindowObject } from './types';\n\nexport interface ICashAppSdkLoader {\n    load(environment: string): Promise<ICashAppWindowObject>;\n}\n\nclass CashAppSdkLoader implements ICashAppSdkLoader {\n    private isSdkIsAvailableOnWindow(): boolean {\n        // @ts-ignore CashApp is created by the Cash App SDK\n        return !!window.CashApp;\n    }\n\n    public async load(environment: string): Promise<ICashAppWindowObject> {\n        const url = environment.toLowerCase().includes('live') ? CASHAPPPAY_PROD_SDK : CASHAPPPAY_SANDBOX_SDK;\n\n        if (!this.isSdkIsAvailableOnWindow()) {\n            const scriptElement = new Script(url);\n            await scriptElement.load();\n        }\n\n        // @ts-ignore CashApp is created by the Cash App SDK\n        return window.CashApp;\n    }\n}\n\nexport { CashAppSdkLoader };\n","const CASHAPPPAY_SANDBOX_SDK = 'https://sandbox.kit.cash.app/v1/pay.js';\nconst CASHAPPPAY_PROD_SDK = 'https://kit.cash.app/v1/pay.js';\n\nexport { CASHAPPPAY_SANDBOX_SDK, CASHAPPPAY_PROD_SDK };\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { CashAppComponent } from './components/CashAppComponent';\nimport CashAppService from './services/CashAppService';\nimport { CashAppSdkLoader } from './services/CashAppSdkLoader';\nimport { CashAppPayElementData, CashAppPayConfiguration, CashAppPayEventData } from './types';\nimport { ICashAppService } from './services/types';\nimport defaultProps from './defaultProps';\nimport RedirectButton from '../internal/RedirectButton';\nimport { payAmountLabel } from '../internal/PayButton';\nimport { TxVariants } from '../tx-variants';\nimport type { ICore } from '../../core/types';\nimport { PREFIX } from '../internal/Icon/constants';\n\nexport class CashAppPay extends UIElement<CashAppPayConfiguration> {\n    public static type = TxVariants.cashapp;\n\n    private readonly cashAppService: ICashAppService | undefined;\n\n    protected static defaultProps = defaultProps;\n\n    constructor(checkout: ICore, props?: CashAppPayConfiguration) {\n        super(checkout, props);\n\n        if (this.props.enableStoreDetails && this.props.storePaymentMethod) {\n            console.warn(\n                'CashAppPay: enableStoreDetails AND storePaymentMethod configuration properties should not be used together. That can lead to undesired behavior.'\n            );\n        }\n\n        if (this.props.storedPaymentMethodId) {\n            return;\n        }\n\n        this.cashAppService = new CashAppService(new CashAppSdkLoader(), {\n            storePaymentMethod: this.props.storePaymentMethod,\n            useCashAppButtonUi: this.props.showPayButton,\n            environment: this.props.environment,\n            amount: this.props.amount,\n            redirectURL: this.props.redirectURL,\n            clientId: this.props.configuration?.clientId,\n            scopeId: this.props.configuration?.scopeId,\n            button: this.props.button,\n            referenceId: this.props.referenceId\n        });\n    }\n\n    public formatProps(props: CashAppPayConfiguration) {\n        return {\n            ...props,\n            enableStoreDetails: props.session?.configuration?.enableStoreDetails || props.enableStoreDetails\n        };\n    }\n\n    public formatData(): CashAppPayElementData {\n        const { shopperWantsToStore, grantId, onFileGrantId, cashTag, customerId } = this.state.data || {};\n        const { storePaymentMethod: storePaymentMethodSetByMerchant, storedPaymentMethodId } = this.props;\n\n        /**\n         * We include 'storePaymentMethod' flag if we either Display the Checkbox OR if it is non-sessions flow AND the merchant wants to store the payment method\n         */\n        const includeStorePaymentMethod = this.props.enableStoreDetails || (!this.props.session && storePaymentMethodSetByMerchant);\n\n        if (storedPaymentMethodId) {\n            return {\n                paymentMethod: {\n                    type: CashAppPay.type,\n                    storedPaymentMethodId\n                }\n            };\n        }\n\n        const shouldAddOnFileProperties = onFileGrantId && cashTag;\n\n        return {\n            paymentMethod: {\n                type: CashAppPay.type,\n                ...(grantId && { grantId }),\n                ...(customerId && { customerId }),\n                ...(shouldAddOnFileProperties && { onFileGrantId, cashtag: cashTag })\n            },\n            ...(includeStorePaymentMethod && { storePaymentMethod: storePaymentMethodSetByMerchant || shopperWantsToStore })\n        };\n    }\n\n    get displayName() {\n        if (this.props.storedPaymentMethodId && this.props.cashtag) {\n            return this.props.cashtag;\n        }\n        return this.props.name;\n    }\n\n    get additionalInfo() {\n        return this.props.storedPaymentMethodId ? 'Cash App Pay' : '';\n    }\n\n    public submit = () => {\n        const { onClick, storedPaymentMethodId } = this.props;\n\n        if (storedPaymentMethodId) {\n            super.submit();\n            return;\n        }\n\n        let onClickPromiseRejected = false;\n\n        new Promise<void>((resolve, reject) => onClick({ resolve, reject }))\n            .catch(() => {\n                onClickPromiseRejected = true;\n                throw Error('onClick rejected');\n            })\n            .then(() => {\n                return this.cashAppService.createCustomerRequest();\n            })\n            .then(() => {\n                this.cashAppService.begin();\n            })\n            .catch(error => {\n                if (onClickPromiseRejected) {\n                    // Swallow exception triggered by onClick reject\n                    return;\n                }\n                this.handleError(error);\n            });\n    };\n\n    public get isValid(): boolean {\n        return true;\n    }\n\n    private handleOnChangeStoreDetails = (storePayment: boolean) => {\n        const data = { ...this.state.data, shopperWantsToStore: storePayment };\n        this.setState({ data });\n    };\n\n    private handleAuthorize = (cashAppPaymentData: CashAppPayEventData): void => {\n        const data = { ...this.state.data, ...cashAppPaymentData };\n        this.setState({ data, valid: {}, errors: {}, isValid: true });\n        super.submit();\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} resources={this.resources} loadingContext={this.props.loadingContext}>\n                {this.props.storedPaymentMethodId ? (\n                    <RedirectButton\n                        showPayButton={this.props.showPayButton}\n                        label={payAmountLabel(this.props.i18n, this.props.amount)}\n                        icon={this.resources?.getImage({ imageFolder: 'components/' })(`${PREFIX}lock`)}\n                        name={this.displayName}\n                        amount={this.props.amount}\n                        payButton={this.payButton}\n                        onSubmit={this.submit}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                ) : (\n                    <CashAppComponent\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        enableStoreDetails={this.props.enableStoreDetails}\n                        cashAppService={this.cashAppService}\n                        onChangeStoreDetails={this.handleOnChangeStoreDetails}\n                        onError={this.handleError}\n                        onClick={this.submit}\n                        onAuthorize={this.handleAuthorize}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default CashAppPay;\n","export default {\n    onClick: actions => {\n        actions.resolve();\n    },\n    enableStoreDetails: false,\n    storePaymentMethod: false\n};\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { ClickToPayConfiguration, ClickToPayPaymentData } from './types';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport { ClickToPayCheckoutPayload, IClickToPayService } from '../internal/ClickToPay/services/types';\nimport { ClickToPayProps } from '../internal/ClickToPay/types';\nimport createClickToPayService from '../internal/ClickToPay/services/create-clicktopay-service';\nimport { CtpState } from '../internal/ClickToPay/services/ClickToPayService';\nimport ClickToPayProvider from '../internal/ClickToPay/context/ClickToPayProvider';\nimport ClickToPayComponent from '../internal/ClickToPay';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { TxVariants } from '../tx-variants';\nimport type { ICore } from '../../core/types';\n\nexport class ClickToPayElement extends UIElement<ClickToPayConfiguration> {\n    public static type = TxVariants.clicktopay;\n\n    private readonly clickToPayService: IClickToPayService | null;\n    private readonly ctpConfiguration: ClickToPayProps;\n\n    constructor(checkout: ICore, props?: ClickToPayConfiguration) {\n        super(checkout, props);\n\n        this.ctpConfiguration = {\n            shopperEmail: this.props.shopperEmail,\n            telephoneNumber: this.props.telephoneNumber,\n            merchantDisplayName: this.props.merchantDisplayName,\n            locale: this.props.locale,\n            onReady: this.props.onReady,\n            onTimeout: this.props.onTimeout\n        };\n\n        this.clickToPayService = createClickToPayService(this.props.configuration, this.ctpConfiguration, this.props.environment);\n        this.clickToPayService?.initialize().catch(error => {\n            this.handleError(new AdyenCheckoutError('ERROR', error.toString(), { cause: error }));\n        });\n\n        if (!this.clickToPayService) {\n            console.warn('ClickToPay not initialized - Likely the payment method is not configured or its configuration is missing');\n        }\n    }\n\n    get isValid() {\n        return true;\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n\n    public formatData(): ClickToPayPaymentData {\n        const { srcScheme, srcCorrelationId, srcTokenReference, srcCheckoutPayload, srcDigitalCardId } = this.state.data;\n        return {\n            paymentMethod: {\n                type: ClickToPayElement.type,\n                ...(srcScheme && { srcScheme }),\n                ...(srcCorrelationId && { srcCorrelationId }),\n                ...(srcTokenReference && { srcTokenReference }),\n                ...(srcCheckoutPayload && { srcCheckoutPayload }),\n                ...(srcDigitalCardId && { srcDigitalCardId })\n            },\n            browserInfo: this.browserInfo,\n            origin: window?.location?.origin\n        };\n    }\n\n    protected formatProps(props: ClickToPayConfiguration) {\n        return {\n            ...props,\n            disableOtpAutoFocus: props.disableOtpAutoFocus || false,\n            shopperEmail: props.shopperEmail || this.core.options?.session?.shopperEmail,\n            telephoneNumber: props.telephoneNumber || this.core.options?.session?.telephoneNumber,\n            locale: props.locale || props.i18n?.locale?.replace('-', '_')\n        };\n    }\n\n    /**\n     * Method used to let the merchant know if the shopper have a valid CtP accoubt\n     *\n     * Resolves Promise if the Shopper has cookies OR has valid CtP account\n     * Rejects Promise if account isn't found or if Login screen is triggered\n     */\n    public override async isAvailable(): Promise<void> {\n        if (!this.clickToPayService) {\n            return Promise.reject();\n        }\n\n        if (this.clickToPayService.shopperAccountFound) {\n            return Promise.resolve();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.clickToPayService.subscribeOnStateChange((state: CtpState) => {\n                if (this.clickToPayService.shopperAccountFound) resolve();\n                if (state === CtpState.NotAvailable || state === CtpState.Login || state === CtpState.Idle) reject();\n            });\n        });\n    }\n\n    private handleClickToPaySubmit = (payload: ClickToPayCheckoutPayload) => {\n        this.setState({ data: { ...payload }, valid: {}, errors: {}, isValid: true });\n        this.submit();\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <ClickToPayProvider\n                    isStandaloneComponent={true}\n                    configuration={this.ctpConfiguration}\n                    amount={this.props.amount}\n                    clickToPayService={this.clickToPayService}\n                    setClickToPayRef={this.setComponentRef}\n                    onSetStatus={this.setElementStatus}\n                    onSubmit={this.handleClickToPaySubmit}\n                    onError={this.handleError}\n                >\n                    <ClickToPayComponent />\n                </ClickToPayProvider>\n            </CoreProvider>\n        );\n    }\n}\n\nexport default ClickToPayElement;\n","export default {\n    API_VERSION: 2,\n    API_VERSION_MINOR: 0,\n    GATEWAY: 'adyen',\n    URL: 'https://pay.google.com/gp/p/js/pay.js'\n};\n","import { getDecimalAmount } from '../../utils/amount-util';\nimport config from './config';\nimport { GooglePaymentDataRequest, GooglePayConfiguration } from './types';\n\n/**\n * Configure your site's support for payment methods supported by the Google Pay API.\n *\n * @see {@link https://developers.google.com/pay/api/web/reference/object#IsReadyToPayRequest|isReadyToPayRequest}\n * @returns Google Pay API version, payment methods supported by the site\n */\nexport function isReadyToPayRequest({\n    allowedAuthMethods,\n    allowedCardNetworks,\n    existingPaymentMethodRequired = false\n}: Pick<\n    GooglePayConfiguration,\n    'allowedAuthMethods' | 'allowedCardNetworks' | 'existingPaymentMethodRequired'\n>): google.payments.api.IsReadyToPayRequest {\n    return {\n        apiVersion: config.API_VERSION,\n        apiVersionMinor: config.API_VERSION_MINOR,\n        allowedPaymentMethods: [\n            {\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods,\n                    allowedCardNetworks\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {}\n                }\n            }\n        ],\n        existingPaymentMethodRequired\n    };\n}\n\n/**\n * Provide Google Pay API with a payment amount, currency, and amount status\n *\n * @see {@link https://developers.google.com/pay/api/web/reference/object#TransactionInfo|TransactionInfo}\n * @returns transaction info, suitable for use as transactionInfo property of PaymentDataRequest\n */\nexport function getTransactionInfo({\n    amount,\n    countryCode = 'US',\n    totalPriceStatus = 'FINAL',\n    ...props\n}: GooglePayConfiguration): google.payments.api.TransactionInfo {\n    const formattedPrice = String(getDecimalAmount(amount.value, amount.currency));\n\n    return {\n        countryCode,\n        currencyCode: amount.currency,\n        totalPrice: formattedPrice,\n        totalPriceStatus: totalPriceStatus,\n        ...props.transactionInfo\n    };\n}\n\nexport function initiatePaymentRequest({ configuration, ...props }: GooglePayConfiguration, countryCode: string): GooglePaymentDataRequest {\n    return {\n        apiVersion: config.API_VERSION,\n        apiVersionMinor: config.API_VERSION_MINOR,\n        transactionInfo: getTransactionInfo({ countryCode, ...props }),\n        merchantInfo: {\n            merchantId: configuration.merchantId,\n            merchantName: configuration.merchantName,\n            ...(configuration.merchantOrigin ? { merchantOrigin: configuration.merchantOrigin } : {}),\n            ...(configuration.authJwt ? { authJwt: configuration.authJwt } : {})\n        },\n        allowedPaymentMethods: [\n            {\n                type: 'CARD',\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: config.GATEWAY,\n                        gatewayMerchantId: configuration.gatewayMerchantId\n                    }\n                },\n                parameters: {\n                    allowedAuthMethods: props.allowedAuthMethods,\n                    allowedCardNetworks: props.allowedCardNetworks,\n                    assuranceDetailsRequired: props.assuranceDetailsRequired,\n                    allowPrepaidCards: props.allowPrepaidCards,\n                    allowCreditCards: props.allowCreditCards,\n                    billingAddressRequired: props.billingAddressRequired,\n                    billingAddressParameters: props.billingAddressParameters\n                }\n            }\n        ],\n        emailRequired: props.emailRequired,\n        shippingAddressRequired: props.shippingAddressRequired,\n        shippingAddressParameters: props.shippingAddressParameters,\n        shippingOptionRequired: props.shippingOptionRequired,\n        shippingOptionParameters: props.shippingOptionParameters,\n        callbackIntents: props.callbackIntents\n    };\n}\n","import { AddressData } from '../../types/global-types';\n\n/**\n *\n */\nexport function resolveEnvironment(env = 'TEST'): google.payments.api.Environment {\n    const environment = env.toLowerCase();\n    switch (environment) {\n        case 'production':\n        case 'live':\n        case 'live-au':\n        case 'live-apse':\n        case 'live-us':\n        case 'live-in':\n            return 'PRODUCTION';\n        default:\n            return 'TEST';\n    }\n}\n\n/**\n * This function formats Google Pay contact format to Adyen address format\n *\n * Setting 'houseNumberOrName' to ZZ won't affect the AVS check, and it will make the algorithm take the\n * house number from the 'street' property.\n */\nexport function formatGooglePayContactToAdyenAddressFormat(\n    paymentContact?: Partial<google.payments.api.Address>,\n    isDeliveryAddress?: boolean\n): AddressData | undefined {\n    if (!paymentContact) {\n        return;\n    }\n\n    return {\n        postalCode: paymentContact.postalCode,\n        country: paymentContact.countryCode,\n        street: [paymentContact.address1, paymentContact.address2, paymentContact.address3].join(' ').trim(),\n        houseNumberOrName: 'ZZ',\n        city: paymentContact.locality || '',\n        ...(paymentContact.administrativeArea && { stateOrProvince: paymentContact.administrativeArea }),\n        ...(isDeliveryAddress && {\n            firstName: paymentContact.name\n        })\n    };\n}\n\nconst supportedLocales = [\n    'en',\n    'ar',\n    'bg',\n    'ca',\n    'cs',\n    'da',\n    'de',\n    'el',\n    'es',\n    'et',\n    'fi',\n    'fr',\n    'hr',\n    'id',\n    'it',\n    'ja',\n    'ko',\n    'ms',\n    'nl',\n    'no',\n    'pl',\n    'pt',\n    'ru',\n    'sk',\n    'sl',\n    'sr',\n    'sv',\n    'th',\n    'tr',\n    'uk',\n    'zh'\n];\n\nexport function getGooglePayLocale(locale = '') {\n    const twoLetterLocale = locale.toLowerCase().substring(0, 2);\n    return supportedLocales.includes(twoLetterLocale) ? twoLetterLocale : null;\n}\n","import { isReadyToPayRequest, initiatePaymentRequest } from './requests';\nimport { resolveEnvironment } from './utils';\nimport Script from '../../utils/Script';\nimport config from './config';\nimport type { GooglePayConfiguration } from './types';\n\nclass GooglePayService {\n    public readonly paymentsClient: Promise<google.payments.api.PaymentsClient>;\n\n    constructor(environment: string, paymentDataCallbacks: google.payments.api.PaymentDataCallbacks) {\n        const googlePayEnvironment = resolveEnvironment(environment);\n\n        this.paymentsClient = this.getGooglePaymentsClient({\n            environment: googlePayEnvironment,\n            paymentDataCallbacks\n        });\n    }\n\n    /**\n     * Initialize a Google Pay API client\n     *\n     * @see {@link https://developers.google.com/pay/api/web/reference/client#PaymentsClient|PaymentsClient constructor}\n     * @returns Google Pay API client\n     */\n    async getGooglePaymentsClient(paymentOptions: google.payments.api.PaymentOptions): Promise<google.payments.api.PaymentsClient> {\n        if (!window.google?.payments) {\n            const script = new Script(config.URL);\n            await script.load();\n        }\n\n        return new google.payments.api.PaymentsClient(paymentOptions);\n    }\n\n    /**\n     * Determine a shopper's ability to return a form of payment from the Google Pay API.\n     * @see {@link https://developers.google.com/pay/api/web/reference/client#isReadyToPay|isReadyToPay}\n     */\n    isReadyToPay(props): Promise<google.payments.api.IsReadyToPayResponse> {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        if (!this.paymentsClient) return Promise.reject(new Error('Google Pay is not available'));\n\n        return this.paymentsClient.then(client => client.isReadyToPay(isReadyToPayRequest(props)));\n    }\n\n    prefetchPaymentData(props: GooglePayConfiguration, countryCode: string): void {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        if (!this.paymentsClient) throw new Error('Google Pay is not available');\n\n        const paymentDataRequest = initiatePaymentRequest(props, countryCode);\n        void this.paymentsClient.then(client => client.prefetchPaymentData(paymentDataRequest));\n    }\n\n    /**\n     * Show Google Pay payment sheet when Google Pay payment button is clicked\n     * @returns paymentData response from Google Pay API after user approves payment\n     * @see {@link https://developers.google.com/pay/api/web/reference/object#PaymentData|PaymentData object reference}\n     */\n    initiatePayment(props: GooglePayConfiguration, countryCode: string): Promise<google.payments.api.PaymentData> {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        if (!this.paymentsClient) throw new Error('Google Pay is not available');\n\n        const paymentDataRequest = initiatePaymentRequest(props, countryCode);\n        return this.paymentsClient.then(client => client.loadPaymentData(paymentDataRequest));\n    }\n}\n\nexport default GooglePayService;\n","import { h } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport './GooglePayButton.scss';\n\ninterface GooglePayButtonProps {\n    buttonColor: google.payments.api.ButtonColor;\n    buttonType: google.payments.api.ButtonType;\n    buttonSizeMode: google.payments.api.ButtonSizeMode;\n    buttonLocale: string;\n    buttonRadius?: number;\n    buttonRootNode?: HTMLDocument | ShadowRoot;\n    paymentsClient: Promise<google.payments.api.PaymentsClient>;\n    onClick: (e: Event) => void;\n}\n\nconst GooglePayButton = (props: GooglePayButtonProps) => {\n    const googlePayWrapperRef = useRef<HTMLDivElement | undefined>(undefined);\n\n    useEffect(() => {\n        const { onClick, buttonRadius, buttonColor, buttonType, buttonLocale, buttonSizeMode, buttonRootNode, paymentsClient } = props;\n\n        void paymentsClient\n            .then(client =>\n                client.createButton({\n                    onClick,\n                    buttonType,\n                    buttonColor,\n                    buttonLocale,\n                    buttonSizeMode,\n                    buttonRootNode,\n                    ...(buttonRadius !== undefined && { buttonRadius })\n                })\n            )\n            .then(googlePayButton => {\n                if (googlePayWrapperRef.current) {\n                    googlePayWrapperRef.current.appendChild(googlePayButton);\n                }\n            });\n    }, [props.buttonColor, props.buttonType, props.buttonLocale, props.buttonSizeMode, props.buttonRootNode, props.paymentsClient]);\n\n    return <div data-testid=\"googlepay-button-container\" className={'adyen-checkout__paywithgoogle'} ref={googlePayWrapperRef} />;\n};\n\nexport default GooglePayButton;\n","import { GooglePayConfiguration } from './types';\n\nconst defaultProps: GooglePayConfiguration = {\n    isExpress: false,\n\n    // isReadyToPayRequest\n    existingPaymentMethodRequired: false,\n\n    // ButtonOptions\n    // https://developers.google.com/pay/api/web/reference/object#ButtonOptions\n    buttonColor: 'default',\n    buttonType: 'buy',\n    buttonSizeMode: 'fill',\n\n    // PaymentDataRequest\n    configuration: {\n        // Adyen's merchant account\n        gatewayMerchantId: '', // E.g TestMerchant\n\n        // https://developers.google.com/pay/api/web/reference/object#MerchantInfo\n        merchantId: '', // E.g 039484839309\n        merchantName: '' // E.g Example Merchant,\n    },\n\n    // Payment\n    amount: {\n        value: 0,\n        currency: 'USD'\n    },\n\n    totalPriceStatus: 'FINAL',\n\n    // Callbacks\n    onClick: resolve => resolve(),\n\n    // CardParameters\n    // https://developers.google.com/pay/api/web/reference/object#CardParameters\n    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'] as google.payments.api.CardAuthMethod[],\n    allowedCardNetworks: ['AMEX', 'DISCOVER', 'JCB', 'MASTERCARD', 'VISA'] as google.payments.api.CardNetwork[],\n    allowCreditCards: true, // Set to false if you don't support credit cards.\n    allowPrepaidCards: true, // Set to false if you don't support prepaid cards.\n    billingAddressRequired: false, // A billing address should only be requested if it's required to process the transaction.\n    billingAddressParameters: undefined, // The expected fields returned if billingAddressRequired is set to true.\n    assuranceDetailsRequired: false, // https://developers.google.com/pay/api/web/reference/response-objects#assurance-details-specifications\n\n    emailRequired: false,\n    shippingAddressRequired: false,\n    shippingAddressParameters: undefined, // https://developers.google.com/pay/api/web/reference/object#ShippingAddressParameters\n    shippingOptionRequired: false,\n    shippingOptionParameters: undefined,\n    callbackIntents: []\n};\n\nexport default defaultProps;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport GooglePayService from './GooglePayService';\nimport GooglePayButton from './components/GooglePayButton';\nimport defaultProps from './defaultProps';\nimport { formatGooglePayContactToAdyenAddressFormat, getGooglePayLocale } from './utils';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { TxVariants } from '../tx-variants';\nimport { sanitizeResponse, verifyPaymentDidNotFail } from '../internal/UIElement/utils';\nimport { ANALYTICS_INSTANT_PAYMENT_BUTTON, ANALYTICS_SELECTED_STR } from '../../core/Analytics/constants';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\n\nimport type { AddressData, BrowserInfo, PaymentResponseData, RawPaymentResponse } from '../../types/global-types';\nimport type { GooglePayConfiguration } from './types';\nimport type { ICore } from '../../core/types';\n\nclass GooglePay extends UIElement<GooglePayConfiguration> {\n    public static type = TxVariants.googlepay;\n    public static txVariants = [TxVariants.googlepay, TxVariants.paywithgoogle];\n    public static defaultProps = defaultProps;\n\n    protected readonly googlePay;\n\n    constructor(checkout: ICore, props?: GooglePayConfiguration) {\n        super(checkout, props);\n        this.handleAuthorization = this.handleAuthorization.bind(this);\n\n        const { isExpress, paymentDataCallbacks } = this.props;\n\n        if (isExpress === false && paymentDataCallbacks?.onPaymentDataChanged) {\n            throw new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'GooglePay - You must set \"isExpress\" flag to \"true\" in order to use \"onPaymentDataChanged\" callback'\n            );\n        }\n\n        this.googlePay = new GooglePayService(this.props.environment, {\n            ...(isExpress && paymentDataCallbacks?.onPaymentDataChanged && { onPaymentDataChanged: paymentDataCallbacks.onPaymentDataChanged }),\n            onPaymentAuthorized: this.onPaymentAuthorized\n        });\n    }\n\n    protected override formatProps(props): GooglePayConfiguration {\n        const buttonSizeMode = props.buttonSizeMode ?? (props.isDropin ? 'fill' : 'static');\n        const buttonLocale = getGooglePayLocale(props.buttonLocale ?? props.i18n?.locale);\n\n        const callbackIntents: google.payments.api.CallbackIntent[] = [...props.callbackIntents, 'PAYMENT_AUTHORIZATION'];\n\n        return {\n            ...props,\n            configuration: props.configuration,\n            buttonSizeMode,\n            buttonLocale,\n            callbackIntents\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    protected override formatData() {\n        const { googlePayCardNetwork, googlePayToken, billingAddress, deliveryAddress } = this.state;\n        const { isExpress } = this.props;\n\n        return {\n            paymentMethod: {\n                type: this.type,\n                googlePayCardNetwork,\n                googlePayToken,\n                ...(isExpress && { subtype: 'express' })\n            },\n            browserInfo: this.browserInfo,\n            origin: !!window && window.location.origin,\n            ...(billingAddress && { billingAddress }),\n            ...(deliveryAddress && { deliveryAddress })\n        };\n    }\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject) {\n        // Analytics will need to know about this.props.isExpress & this.props.expressPage\n        super.submitAnalytics({ ...analyticsObj }, this.props);\n    }\n\n    public override submit = () => {\n        // Analytics\n        if (this.props.isInstantPayment) {\n            this.submitAnalytics({ type: ANALYTICS_SELECTED_STR, target: ANALYTICS_INSTANT_PAYMENT_BUTTON });\n        }\n\n        new Promise((resolve, reject) => this.props.onClick(resolve, reject))\n            .then(() => this.googlePay.initiatePayment(this.props, this.core.options.countryCode))\n            .catch((error: google.payments.api.PaymentsError) => {\n                if (error.statusCode === 'CANCELED') {\n                    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n                    this.handleError(new AdyenCheckoutError('CANCEL', error.toString(), { cause: error }));\n                } else {\n                    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n                    this.handleError(new AdyenCheckoutError('ERROR', error.toString(), { cause: error }));\n                }\n            });\n    };\n\n    /**\n     * Method called when the payment is authorized in the payment sheet\n     *\n     * @see https://developers.google.com/pay/api/web/reference/client#onPaymentAuthorized\n     **/\n    private onPaymentAuthorized = async (paymentData: google.payments.api.PaymentData): Promise<google.payments.api.PaymentAuthorizationResult> => {\n        const billingAddress: AddressData = formatGooglePayContactToAdyenAddressFormat(paymentData.paymentMethodData.info.billingAddress);\n        const deliveryAddress: AddressData = formatGooglePayContactToAdyenAddressFormat(paymentData.shippingAddress, true);\n\n        this.setState({\n            authorizedEvent: paymentData,\n            googlePayToken: paymentData.paymentMethodData.tokenizationData.token,\n            googlePayCardNetwork: paymentData.paymentMethodData.info.cardNetwork,\n            ...(billingAddress && { billingAddress }),\n            ...(deliveryAddress && { deliveryAddress })\n        });\n\n        return new Promise<google.payments.api.PaymentAuthorizationResult>(resolve => {\n            this.handleAuthorization()\n                .then(this.makePaymentsCall)\n                .then(sanitizeResponse)\n                .then(verifyPaymentDidNotFail)\n                .then((paymentResponse: PaymentResponseData) => {\n                    resolve({ transactionState: 'SUCCESS' });\n                    return paymentResponse;\n                })\n                .then(paymentResponse => {\n                    this.handleResponse(paymentResponse);\n                })\n                .catch((paymentResponse?: RawPaymentResponse) => {\n                    this.setElementStatus('ready');\n\n                    const googlePayError = paymentResponse?.error?.googlePayError;\n                    const fallbackMessage = this.props.i18n.get('error.subtitle.payment');\n\n                    const error: google.payments.api.PaymentDataError =\n                        typeof googlePayError === 'string' || undefined\n                            ? {\n                                  intent: 'PAYMENT_AUTHORIZATION',\n                                  reason: 'OTHER_ERROR',\n                                  message: (googlePayError as string) || fallbackMessage\n                              }\n                            : {\n                                  intent: googlePayError?.intent || 'PAYMENT_AUTHORIZATION',\n                                  reason: googlePayError?.reason || 'OTHER_ERROR',\n                                  message: googlePayError?.message || fallbackMessage\n                              };\n\n                    resolve({\n                        transactionState: 'ERROR',\n                        error\n                    });\n\n                    const responseWithError = {\n                        ...paymentResponse,\n                        error: {\n                            googlePayError: error\n                        }\n                    };\n\n                    this.handleFailedResult(responseWithError);\n                });\n        });\n    };\n\n    /**\n     * Call the 'onAuthorized' callback if available.\n     * Must be resolved/reject for the payment flow to continue\n     */\n    private async handleAuthorization(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            if (!this.props.onAuthorized) {\n                resolve();\n            }\n\n            const { authorizedEvent, billingAddress, deliveryAddress } = this.state;\n\n            this.props.onAuthorized(\n                {\n                    authorizedEvent,\n                    ...(billingAddress && { billingAddress }),\n                    ...(deliveryAddress && { deliveryAddress })\n                },\n                { resolve, reject }\n            );\n        }).catch((error?: google.payments.api.PaymentDataError | string) => {\n            // Format error in a way that the 'catch' of the 'onPaymentAuthorize' block accepts it\n            const data = { error: { googlePayError: error } };\n            return Promise.reject(data);\n        });\n    }\n\n    /**\n     * Validation\n     */\n    get isValid(): boolean {\n        return !!this.state.googlePayToken;\n    }\n\n    /**\n     * Determine a shopper's ability to return a form of payment from the Google Pay API.\n     */\n    public override async isAvailable(): Promise<void> {\n        return this.isReadyToPay()\n            .then(response => {\n                if (!response.result) {\n                    throw new AdyenCheckoutError('ERROR', 'GooglePay is not available');\n                }\n\n                if (response.paymentMethodPresent === false) {\n                    throw new AdyenCheckoutError('ERROR', 'GooglePay - No paymentMethodPresent');\n                }\n\n                return Promise.resolve();\n            })\n            .catch(error => {\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * Determine a shopper's ability to return a form of payment from the Google Pay API.\n     */\n    public isReadyToPay = (): Promise<google.payments.api.IsReadyToPayResponse> => {\n        return this.googlePay.isReadyToPay(this.props);\n    };\n\n    /**\n     * Use this method to prefetch a PaymentDataRequest configuration to improve loadPaymentData execution time on later user interaction. No value is returned.\n     */\n    public prefetch = (): void => {\n        return this.googlePay.prefetchPaymentData(this.props, this.core.options.countryCode);\n    };\n\n    get browserInfo(): BrowserInfo {\n        return collectBrowserInfo();\n    }\n\n    get icon(): string {\n        return this.props.icon ?? this.resources.getImage()('googlepay');\n    }\n\n    render() {\n        if (this.props.showPayButton) {\n            return (\n                <GooglePayButton\n                    buttonColor={this.props.buttonColor}\n                    buttonType={this.props.buttonType}\n                    buttonSizeMode={this.props.buttonSizeMode}\n                    buttonLocale={this.props.buttonLocale}\n                    buttonRootNode={this.props.buttonRootNode}\n                    buttonRadius={this.props.buttonRadius}\n                    paymentsClient={this.googlePay.paymentsClient}\n                    onClick={this.submit}\n                />\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default GooglePay;\n","const INTEGRATION_DATE = '2020-02-01';\nconst PAYPAL_JS_URL = 'https://www.paypal.com/sdk/js';\nconst ADYEN_CLIENTID_TEST = 'AXy9hIzWB6h_LjZUHjHmsbsiicSIbL4GKOrcgomEedVjduUinIU4C2llxkW5p0OG0zTNgviYFceaXEnj';\nconst ADYEN_CLIENTID_LIVE = 'AU0Z-TP9t5_9196agaBN6ZD3UAwypdP1IX8ZYH3PcNNAQMXUTDQlChruXqQEhyI6-NKBKowN6ydkj477';\n\nconst SUPPORTED_COLORS_FOR_CREDIT = ['black', 'white'];\n\nconst SUPPORTED_LOCALES = [\n    'en_US',\n    'en_AU',\n    'en_GB',\n    'fr_CA',\n    'es_ES',\n    'it_IT',\n    'fr_FR',\n    'de_DE',\n    'pt_BR',\n    'zh_CN',\n    'da_DK',\n    'zh_HK',\n    'id_ID',\n    'he_IL',\n    'ja_JP',\n    'ko_KR',\n    'nl_NL',\n    'no_NO',\n    'pl_PL',\n    'pt_PT',\n    'ru_RU',\n    'sv_SE',\n    'th_TH',\n    'zh_TW'\n] as const;\n\nexport { INTEGRATION_DATE, PAYPAL_JS_URL, ADYEN_CLIENTID_TEST, ADYEN_CLIENTID_LIVE, SUPPORTED_LOCALES, SUPPORTED_COLORS_FOR_CREDIT };\n","import { SUPPORTED_COLORS_FOR_CREDIT } from '../config';\nimport type { FundingSource } from '../types';\n\n/**\n * Processes and returns a new style object.\n */\nexport const getStyle = (fundingSource: FundingSource, style = {}) => {\n    if (fundingSource === 'paypal') return { ...style };\n\n    return Object.keys(style).reduce((acc, prop) => {\n        const value = style[prop];\n        if (prop !== 'color' || SUPPORTED_COLORS_FOR_CREDIT.includes(value)) {\n            acc[prop] = value;\n        }\n        return acc;\n    }, {});\n};\n","import { h } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\nimport classnames from 'classnames';\nimport { getStyle } from '../utils/get-paypal-styles';\nimport Spinner from '../../internal/Spinner';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\n\nimport type { PayPalButtonsProps } from './types';\nimport type { FundingSource } from '../types';\n\nexport default function PaypalButtons({\n    onInit,\n    onApprove,\n    onClick,\n    onCancel,\n    onError,\n    onShippingAddressChange,\n    onShippingOptionsChange,\n    onSubmit,\n    isProcessingPayment,\n    paypalRef,\n    style,\n    ...props\n}: PayPalButtonsProps) {\n    const { i18n } = useCoreContext();\n    const isTokenize = props.configuration?.intent === 'tokenize';\n    const paypalButtonRef = useRef<HTMLDivElement>(null);\n    const creditButtonRef = useRef<HTMLDivElement>(null);\n    const payLaterButtonRef = useRef<HTMLDivElement>(null);\n    const venmoButtonRef = useRef<HTMLDivElement>(null);\n\n    const createButton = (fundingSource: FundingSource, buttonRef) => {\n        const configuration = {\n            ...(isTokenize && { createBillingAgreement: onSubmit }),\n            ...(!isTokenize && { createOrder: onSubmit }),\n            ...(!isTokenize && fundingSource !== 'venmo' && onShippingAddressChange && { onShippingAddressChange }),\n            ...(!isTokenize && fundingSource !== 'venmo' && onShippingOptionsChange && { onShippingOptionsChange }),\n            fundingSource,\n            style: getStyle(fundingSource, style),\n            onInit,\n            onClick,\n            onCancel,\n            onError,\n            onApprove\n        };\n\n        const button = paypalRef.Buttons(configuration);\n\n        if (button.isEligible()) {\n            button.render(buttonRef.current);\n        }\n    };\n\n    useEffect(() => {\n        const { PAYPAL, CREDIT, PAYLATER, VENMO } = paypalRef.FUNDING;\n        createButton(PAYPAL, paypalButtonRef);\n\n        if (!props.blockPayPalCreditButton) createButton(CREDIT, creditButtonRef);\n        if (!props.blockPayPalPayLaterButton) createButton(PAYLATER, payLaterButtonRef);\n        if (!props.blockPayPalVenmoButton) createButton(VENMO, venmoButtonRef);\n    }, []);\n\n    const isProcessingPaymentWithoutReviewPage = props.commit === true;\n\n    return (\n        <div className={classnames('adyen-checkout__paypal__buttons', { 'adyen-checkout__paypal-processing': isProcessingPayment })}>\n            <div className=\"adyen-checkout__paypal__button adyen-checkout__paypal__button--paypal\" ref={paypalButtonRef} />\n            <div className=\"adyen-checkout__paypal__button adyen-checkout__paypal__button--credit\" ref={creditButtonRef} />\n            <div className=\"adyen-checkout__paypal__button adyen-checkout__paypal__button--pay-later\" ref={payLaterButtonRef} />\n            <div className=\"adyen-checkout__paypal__button adyen-checkout__paypal__button--venmo\" ref={venmoButtonRef} />\n\n            {isProcessingPayment && (\n                <div className=\"adyen-checkout__paypal\">\n                    <div className=\"adyen-checkout__paypal__status adyen-checkout__paypal__status--processing\">\n                        <Spinner size=\"medium\" inline />\n                        {isProcessingPaymentWithoutReviewPage && i18n.get('paypal.processingPayment')}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n","import { getSupportedLocale } from './get-paypal-locale';\nimport { ADYEN_CLIENTID_LIVE, ADYEN_CLIENTID_TEST, INTEGRATION_DATE } from '../config';\nimport type { PaypalSettings, PayPalSupportedLocale } from './types';\nimport type { PayPalComponentProps } from '../components/types';\n\n/**\n * Returns an object of settings for the PayPal SDK\n */\nexport const getPaypalSettings = ({\n    amount,\n    countryCode,\n    debug,\n    environment = '',\n    locale,\n    configuration,\n    commit,\n    vault,\n    enableMessages\n}: Partial<PayPalComponentProps>): PaypalSettings => {\n    const shopperLocale: PayPalSupportedLocale = getSupportedLocale(locale);\n    const currency: string = amount ? amount.currency : null;\n    const isTestEnvironment: boolean = environment.toLowerCase() === 'test';\n    const clientId: string = isTestEnvironment ? ADYEN_CLIENTID_TEST : ADYEN_CLIENTID_LIVE;\n    const { merchantId, intent } = configuration;\n    const components = `buttons,funding-eligibility${enableMessages ? ',messages' : ''}`;\n\n    return {\n        ...(merchantId && { 'merchant-id': merchantId }),\n        ...(shopperLocale && { locale: shopperLocale }),\n        ...(countryCode && isTestEnvironment && { 'buyer-country': countryCode }),\n        ...(debug && isTestEnvironment && { debug }),\n        ...(currency && { currency }),\n        ...(intent && { intent }),\n        commit,\n        vault,\n        'client-id': clientId,\n        'integration-date': INTEGRATION_DATE,\n        'enable-funding': 'paylater,venmo',\n        components\n    };\n};\n","import { SUPPORTED_LOCALES } from '../config';\nimport type { PayPalSupportedLocale } from './types';\n\n/**\n * Returns either a locale supported by PayPal or null, in order to let the PayPal SDK auto-detect the shopper locale.\n */\nexport const getSupportedLocale = (locale: string): PayPalSupportedLocale => {\n    const formattedLocale = locale ? locale.replace('-', '_') : null;\n    const supportedLocale = SUPPORTED_LOCALES.includes(formattedLocale as PayPalSupportedLocale) ? formattedLocale : null;\n    return supportedLocale as PayPalSupportedLocale;\n};\n","import { h } from 'preact';\nimport { useState, useEffect, useCallback } from 'preact/hooks';\nimport PaypalButtons from './PaypalButtons';\nimport Spinner from '../../internal/Spinner';\nimport { getPaypalUrl } from '../utils/get-paypal-url';\nimport Script from '../../../utils/Script';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport type { PayPalComponentProps } from './types';\n\nexport default function PaypalComponent({ onApprove, onCancel, onChange, onError, onSubmit, onScriptLoadFailure, ...props }: PayPalComponentProps) {\n    const [status, setStatus] = useState('pending');\n\n    this.setStatus = setStatus;\n\n    const handleOnApprove = useCallback(\n        (data: any, actions: any) => {\n            setStatus('processing');\n            onApprove(data, actions);\n        },\n        [onApprove]\n    );\n\n    const handlePaypalLoad = () => {\n        setStatus('ready');\n    };\n\n    const handlePaypalLoadFailure = (error: AdyenCheckoutError) => {\n        onScriptLoadFailure(error);\n    };\n\n    useEffect(() => {\n        const src = getPaypalUrl(props);\n\n        const attributes = { ...(props.cspNonce && { nonce: props.cspNonce }) },\n            dataAttributes = { ...(props.cspNonce && { cspNonce: props.cspNonce }) };\n\n        const script = new Script(src, 'body', attributes, dataAttributes);\n\n        script.load().then(handlePaypalLoad).catch(handlePaypalLoadFailure);\n\n        return () => {\n            script.remove();\n        };\n    }, []);\n\n    if (status === 'pending') {\n        return (\n            <div className=\"adyen-checkout__paypal\" aria-live=\"polite\" aria-busy=\"true\">\n                <div className=\"adyen-checkout__paypal__status adyen-checkout__paypal__status--pending\" data-testid={'paypal-loader'}>\n                    <Spinner />\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"adyen-checkout__paypal\">\n            <PaypalButtons\n                {...props}\n                onCancel={onCancel}\n                onChange={onChange}\n                onError={onError}\n                onSubmit={onSubmit}\n                onApprove={handleOnApprove}\n                isProcessingPayment={status === 'processing'}\n                paypalRef={window.paypal}\n            />\n        </div>\n    );\n}\n","import { getPaypalSettings } from './get-paypal-settings';\nimport { PAYPAL_JS_URL } from '../config';\nimport type { PayPalComponentProps } from '../components/types';\n\n/**\n * Returns the PayPal SDK script URL with query parameters\n * @see {@link https://developer.paypal.com/docs/checkout/reference/customize-sdk/}\n */\nexport const getPaypalUrl = (props: Partial<PayPalComponentProps>): string => {\n    const settings = getPaypalSettings(props);\n    const params = decodeURIComponent(\n        Object.keys(settings)\n            .map(key => `${key}=${settings[key]}`)\n            .join('&')\n    );\n    return `${PAYPAL_JS_URL}?${params}`;\n};\n","import { PayPalConfiguration } from './types';\n\nconst defaultProps: Partial<PayPalConfiguration> = {\n    isExpress: false,\n    userAction: 'pay',\n    commit: true,\n    vault: false,\n    enableMessages: false,\n    style: {\n        height: 50 // The height of the buttons is set to 50px to align with the default size of our Pay buttons.\n    },\n    blockPayPalCreditButton: false,\n    blockPayPalPayLaterButton: false,\n    blockPayPalVenmoButton: false\n};\n\nexport default defaultProps;\n","export const ERRORS = {\n    INVALID_ACTION: 'Invalid Action',\n    NO_TOKEN_PROVIDED: 'No token was provided',\n    PAYPAL_OVERLAY_CLOSED: 'PayPal overlay closed',\n    SUBMIT_NOT_SUPPORTED: 'Calling submit() is not supported for this payment method',\n    WRONG_INSTANCE: 'The instance of the PayPal component being used is not the same which started the payment'\n};\n","import { AddressData } from '../../../types/global-types';\n\n/**\n * This function formats PayPal contact format to Adyen address format\n */\nexport const formatPaypalOrderContactToAdyenFormat = (paymentContact: any, isDeliveryAddress?: boolean): AddressData | null => {\n    const getStreet = (addressPart1 = null, addressPart2 = null): string | null => {\n        if (addressPart1 && addressPart2) return `${addressPart1}, ${addressPart2}`;\n        if (addressPart1) return addressPart1;\n        if (addressPart2) return addressPart2;\n        return null;\n    };\n\n    if (paymentContact?.address === undefined) return null;\n\n    const { address, name } = paymentContact;\n    const street = getStreet(address.address_line_1, address.address_line_2);\n\n    return {\n        houseNumberOrName: 'ZZ',\n        ...(street && { street }),\n        ...(address.admin_area_1 && { stateOrProvince: address.admin_area_1 }),\n        ...(address.admin_area_2 && { city: address.admin_area_2 }),\n        ...(address.postal_code && { postalCode: address.postal_code }),\n        ...(address.country_code && { country: address.country_code }),\n        ...(isDeliveryAddress && {\n            firstName: name.full_name\n        })\n    };\n};\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport PaypalComponent from './components/PaypalComponent';\nimport defaultProps from './defaultProps';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { ERRORS } from './constants';\nimport { TxVariants } from '../tx-variants';\nimport { formatPaypalOrderContactToAdyenFormat } from './utils/format-paypal-order-contact-to-adyen-format';\n\nimport type { ICore } from '../../core/types';\nimport type { PaymentAction } from '../../types/global-types';\nimport type { Intent, PayPalConfiguration } from './types';\n\nimport './Paypal.scss';\nimport { SendAnalyticsObject } from '../../core/Analytics/types';\n\nclass PaypalElement extends UIElement<PayPalConfiguration> {\n    public static type = TxVariants.paypal;\n    public static subtype = 'sdk';\n\n    public paymentData: string = null;\n\n    private resolve = null;\n    private reject = null;\n\n    protected static defaultProps = defaultProps;\n\n    constructor(checkout: ICore, props?: PayPalConfiguration) {\n        super(checkout, props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleOnShippingAddressChange = this.handleOnShippingAddressChange.bind(this);\n        this.handleOnShippingOptionsChange = this.handleOnShippingOptionsChange.bind(this);\n    }\n\n    formatProps(props: PayPalConfiguration): PayPalConfiguration {\n        const merchantId = props.configuration?.merchantId;\n        const intentFromConfig = props.configuration?.intent;\n        const isZeroAuth = props.amount?.value === 0;\n        const intent: Intent = isZeroAuth ? 'tokenize' : props.intent || intentFromConfig;\n        const vault = intent === 'tokenize' || props.vault;\n\n        const displayContinueToReviewPageButton = props.userAction === 'continue';\n\n        return {\n            ...props,\n            commit: displayContinueToReviewPageButton ? false : props.commit,\n            vault,\n            configuration: {\n                intent,\n                merchantId\n            }\n        };\n    }\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject) {\n        // Analytics will need to know about this.props.isExpress & this.props.expressPage\n        super.submitAnalytics({ ...analyticsObj }, this.props);\n    }\n\n    public submit = () => {\n        this.handleError(new AdyenCheckoutError('IMPLEMENTATION_ERROR', ERRORS.SUBMIT_NOT_SUPPORTED));\n    };\n\n    /**\n     * Updates the paymentData value. It must be used in the PayPal Express flow, when patching the amount\n     * @param paymentData - Payment data value\n     */\n    public updatePaymentData(paymentData: string): void {\n        if (!paymentData) console.warn('PayPal - Updating payment data with an invalid value');\n        this.paymentData = paymentData;\n    }\n\n    /**\n     * Formats the component data output\n     */\n    protected formatData() {\n        const { isExpress, userAction } = this.props;\n\n        return {\n            paymentMethod: {\n                type: PaypalElement.type,\n                userAction,\n                subtype: isExpress ? 'express' : PaypalElement.subtype\n            }\n        };\n    }\n\n    public handleAction = (action: PaymentAction) => {\n        return this.updateWithAction(action);\n    };\n\n    public updateWithAction = (action: PaymentAction) => {\n        if (action.paymentMethodType !== this.type) throw new Error('Invalid Action');\n\n        if (action.paymentData) {\n            this.paymentData = action.paymentData;\n        }\n\n        if (action.sdkData && action.sdkData.token) {\n            this.onActionHandled({ componentType: this.type, actionDescription: 'sdk-loaded', originalAction: action });\n            this.handleResolve(action.sdkData.token);\n        } else {\n            this.handleReject(ERRORS.NO_TOKEN_PROVIDED);\n        }\n\n        return null;\n    };\n\n    /**\n     * Dropin Validation\n     *\n     * @remarks\n     * Paypal does not require any specific Dropin validation\n     */\n    get isValid() {\n        return true;\n    }\n\n    private handleOnApprove = (data: any, actions: any): Promise<void> | void => {\n        const { onAuthorized } = this.props;\n        const state = { data: { details: data, paymentData: this.paymentData } };\n\n        if (!onAuthorized) {\n            this.handleAdditionalDetails(state);\n            return;\n        }\n\n        return actions.order\n            .get()\n            .then((paypalOrder: any) => {\n                const billingAddress = formatPaypalOrderContactToAdyenFormat(paypalOrder?.payer);\n                const deliveryAddress = formatPaypalOrderContactToAdyenFormat(paypalOrder?.purchase_units?.[0].shipping, true);\n\n                this.setState({\n                    authorizedEvent: paypalOrder,\n                    ...(billingAddress && { billingAddress }),\n                    ...(deliveryAddress && { deliveryAddress })\n                });\n\n                return new Promise<void>((resolve, reject) =>\n                    onAuthorized(\n                        {\n                            authorizedEvent: paypalOrder,\n                            ...(billingAddress && { billingAddress }),\n                            ...(deliveryAddress && { deliveryAddress })\n                        },\n                        { resolve, reject }\n                    )\n                );\n            })\n            .then(() => this.handleAdditionalDetails(state))\n            .catch(error => this.handleError(new AdyenCheckoutError('ERROR', 'Something went wrong while parsing PayPal Order', { cause: error })));\n    };\n\n    handleResolve(token: string) {\n        if (!this.resolve) return this.handleError(new AdyenCheckoutError('ERROR', ERRORS.WRONG_INSTANCE));\n        this.resolve(token);\n    }\n\n    handleReject(errorMessage: string) {\n        if (!this.reject) return this.handleError(new AdyenCheckoutError('ERROR', ERRORS.WRONG_INSTANCE));\n        this.reject(new Error(errorMessage));\n    }\n\n    private handleSubmit(): Promise<void> {\n        super.submit();\n\n        return new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    /**\n     * If the merchant provides the 'onShippingAddressChange' callback, then this method is used as a wrapper to it, in order\n     * to expose to the merchant the 'component' instance. The merchant needs the 'component' in order to manipulate the\n     * paymentData\n     *\n     * @param data - PayPal data\n     * @param actions - PayPal actions.\n     */\n    private handleOnShippingAddressChange(data: any, actions: any): Promise<void> {\n        return this.props.onShippingAddressChange(data, actions, this);\n    }\n\n    /**\n     * If the merchant provides the 'onShippingOptionsChange' callback, then this method is used as a wrapper to it, in order\n     * to expose to the merchant the 'component' instance. The merchant needs the 'component' in order to manipulate the\n     * paymentData\n     *\n     * @param data - PayPal data\n     * @param actions - PayPal actions.\n     */\n    private handleOnShippingOptionsChange(data: any, actions: any): Promise<void> {\n        return this.props.onShippingOptionsChange(data, actions, this);\n    }\n\n    render() {\n        if (!this.props.showPayButton) return null;\n\n        const { onShippingAddressChange, onShippingOptionsChange, ...rest } = this.props;\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <PaypalComponent\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...rest}\n                    {...(onShippingAddressChange && { onShippingAddressChange: this.handleOnShippingAddressChange })}\n                    {...(onShippingOptionsChange && { onShippingOptionsChange: this.handleOnShippingOptionsChange })}\n                    onCancel={() => this.handleError(new AdyenCheckoutError('CANCEL'))}\n                    onChange={this.setState}\n                    onApprove={this.handleOnApprove}\n                    onError={error => {\n                        this.handleError(new AdyenCheckoutError('ERROR', error.toString(), { cause: error }));\n                    }}\n                    onScriptLoadFailure={error => this.handleError(error)}\n                    onSubmit={this.handleSubmit}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default PaypalElement;\n","import { ValidatorRules } from '../../../../utils/Validator/types';\nimport validateSSN from '../../../internal/SocialSecurityNumberBrazil/validate';\nimport { validationRules } from '../../../../utils/Validator/defaultRules';\nimport { BOLETO_SOCIAL_SECURITY_NUMBER_INVALID, SF_ErrorCodes } from '../../../../core/Errors/constants';\n\nexport const boletoValidationRules: ValidatorRules = {\n    socialSecurityNumber: {\n        validate: validateSSN,\n        errorMessage: BOLETO_SOCIAL_SECURITY_NUMBER_INVALID,\n        modes: ['blur']\n    },\n    shopperEmail: validationRules.emailRule,\n    default: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: SF_ErrorCodes.ERROR_MSG_INVALID_FIELD,\n        modes: ['blur']\n    },\n    firstName: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: 'firstName.invalid',\n        modes: ['blur']\n    },\n    lastName: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: 'lastName.invalid',\n        modes: ['blur']\n    }\n};\n","import { formatCPFCNPJ } from '../../../internal/SocialSecurityNumberBrazil/utils';\n\nexport const boletoFormatters = {\n    socialSecurityNumber: ssn => formatCPFCNPJ(ssn)\n};\n","import { h } from 'preact';\nimport cx from 'classnames';\nimport { useState } from 'preact/hooks';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Field from '../FormFields/Field';\nimport Checkbox from '../FormFields/Checkbox';\nimport InputEmail from '../FormFields/InputEmail';\nimport './SendCopyToEmail.scss';\nimport { getErrorMessage } from '../../../utils/getErrorMessage';\n\nexport default function SendCopyToEmail(props) {\n    const { errors, value, onInput, onBlur } = props;\n    const { i18n } = useCoreContext();\n    const [sendCopyToEmail, setSendCopyToEmail] = useState(false);\n\n    const toggleEmailField = e => {\n        setSendCopyToEmail(e.target.checked);\n        props.onToggle(sendCopyToEmail);\n    };\n\n    return (\n        <div className={cx('adyen-checkout__fieldset', 'adyen-checkout__fieldset--sendCopyToEmail', props.classNames)}>\n            <Field\n                classNameModifiers={['sendCopyToEmail', 'consentCheckbox']}\n                name={'sendCopyToEmail'}\n                useLabelElement={false}\n                showErrorElement={false}\n            >\n                <Checkbox onChange={toggleEmailField} label={i18n.get('boleto.sendCopyToEmail')} name={'sendCopyToEmail'} />\n            </Field>\n\n            {sendCopyToEmail && (\n                <Field\n                    label={i18n.get('shopperEmail')}\n                    classNameModifiers={['shopperEmail']}\n                    errorMessage={getErrorMessage(i18n, errors, i18n.get('shopperEmail'))}\n                    name={'shopperEmail'}\n                >\n                    <InputEmail name={'shopperEmail'} autoCorrect={'off'} spellCheck={false} value={value} onInput={onInput} onBlur={onBlur} />\n                </Field>\n            )}\n        </div>\n    );\n}\n","import Field from '../FormFields/Field';\nimport SocialSecurityNumberBrazil from './SocialSecurityNumberBrazil';\nimport { h } from 'preact';\nimport InputText from '../FormFields/InputText';\n\nexport function BrazilPersonalDetail(props) {\n    const { i18n, data, handleChangeFor, errors, valid } = props;\n    const getErrorMessage = error => (error && error.errorMessage ? i18n.get(error.errorMessage) : !!error);\n    return (\n        <div className={'adyen-checkout__fieldset adyen-checkout__fieldset--address adyen-checkout__fieldset--personalDetails'}>\n            <div className=\"adyen-checkout__fieldset__title\">{i18n.get('personalDetails')}</div>\n\n            <div className=\"adyen-checkout__fieldset__fields\">\n                <Field\n                    label={i18n.get('firstName')}\n                    classNameModifiers={['firstName', 'col-50']}\n                    errorMessage={getErrorMessage(errors.firstName)}\n                    name={'firstName'}\n                >\n                    <InputText\n                        name={'firstName'}\n                        autocorrect={'off'}\n                        spellcheck={false}\n                        value={data.firstName}\n                        onInput={handleChangeFor('firstName', 'input')}\n                        onBlur={handleChangeFor('firstName', 'blur')}\n                    />\n                </Field>\n\n                <Field\n                    label={i18n.get('lastName')}\n                    classNameModifiers={['lastName', 'col-50']}\n                    errorMessage={getErrorMessage(errors.lastName)}\n                    name={'lastName'}\n                >\n                    <InputText\n                        name={'lastName'}\n                        autocorrect={'off'}\n                        spellcheck={false}\n                        value={data.lastName}\n                        onInput={handleChangeFor('lastName', 'input')}\n                        onBlur={handleChangeFor('lastName', 'blur')}\n                    />\n                </Field>\n\n                <SocialSecurityNumberBrazil\n                    data={data.socialSecurityNumber}\n                    error={errors.socialSecurityNumber}\n                    valid={valid.socialSecurityNumber}\n                    onInput={handleChangeFor('socialSecurityNumber', 'input')}\n                    onBlur={handleChangeFor('socialSecurityNumber', 'blur')}\n                />\n            </div>\n        </div>\n    );\n}\n","import { h } from 'preact';\nimport { useState, useEffect, useRef } from 'preact/hooks';\nimport Address from '../../../internal/Address';\nimport { boletoValidationRules } from './validate';\nimport { boletoFormatters } from './utils';\nimport SendCopyToEmail from '../../../internal/SendCopyToEmail/SendCopyToEmail';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { BoletoInputDataState } from '../../types';\nimport useForm from '../../../../utils/useForm';\nimport { BrazilPersonalDetail } from '../../../internal/SocialSecurityNumberBrazil/BrazilPersonalDetail';\nimport FormInstruction from '../../../internal/FormInstruction';\nimport { ComponentMethodsRef } from '../../../internal/UIElement/types';\n\ninterface BoletoInputProps {\n    onChange(data: any): void;\n    // TODO\n    [key: string]: any;\n}\n\nfunction BoletoInput(props: BoletoInputProps) {\n    const { i18n } = useCoreContext();\n    const addressRef = useRef(null);\n    const setAddressRef = ref => {\n        addressRef.current = ref;\n    };\n    const { handleChangeFor, triggerValidation, setSchema, setData, setValid, setErrors, data, valid, errors, isValid } =\n        useForm<BoletoInputDataState>({\n            schema: ['firstName', 'lastName', 'socialSecurityNumber', 'billingAddress', 'shopperEmail'],\n            defaultData: props.data,\n            rules: boletoValidationRules,\n            formatters: boletoFormatters\n        });\n\n    // Email field toggle\n    const [showingEmail, setShowingEmail] = useState<boolean>(false);\n    const toggleEmailField = () => setShowingEmail(!showingEmail);\n\n    // Handle form schema updates\n    useEffect(() => {\n        const newSchema = [\n            ...(props.personalDetailsRequired ? ['firstName', 'lastName', 'socialSecurityNumber'] : []),\n            ...(props.billingAddressRequired ? ['billingAddress'] : []),\n            ...(showingEmail ? ['shopperEmail'] : [])\n        ];\n        setSchema(newSchema);\n    }, [showingEmail, props.personalDetailsRequired, props.billingAddressRequired]);\n\n    const handleAddress = address => {\n        setData('billingAddress', address.data);\n        setValid('billingAddress', address.isValid);\n        setErrors('billingAddress', address.errors);\n    };\n\n    const [status, setStatus] = useState('ready');\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const boletoRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(boletoRef.current).length) {\n        props.setComponentRef?.(boletoRef.current);\n    }\n\n    boletoRef.current.showValidation = () => {\n        triggerValidation();\n        if (props.billingAddressRequired) {\n            addressRef.current.showValidation();\n        }\n    };\n\n    boletoRef.current.setStatus = setStatus;\n\n    useEffect(() => {\n        const billingAddressValid = props.billingAddressRequired ? Boolean(valid.billingAddress) : true;\n        props.onChange({ data, valid, errors, isValid: isValid && billingAddressValid });\n    }, [data, valid, errors]);\n\n    const buttonModifiers = [...(!props.personalDetailsRequired && !props.billingAddressRequired && !props.showEmailAddress ? ['standalone'] : [])];\n\n    const showFormInstruction = props.personalDetailsRequired || props.billingAddressRequired;\n\n    return (\n        <div className=\"adyen-checkout__boleto-input__field\">\n            {showFormInstruction && <FormInstruction />}\n\n            {props.personalDetailsRequired && (\n                <BrazilPersonalDetail i18n={i18n} data={data} handleChangeFor={handleChangeFor} errors={errors} valid={valid} />\n            )}\n\n            {props.billingAddressRequired && (\n                <Address\n                    allowedCountries={['BR']}\n                    label=\"billingAddress\"\n                    data={{ ...props.data.billingAddress, country: 'BR' }}\n                    onChange={handleAddress}\n                    requiredFields={['country', 'street', 'houseNumberOrName', 'postalCode', 'city', 'stateOrProvince']}\n                    setComponentRef={setAddressRef}\n                />\n            )}\n\n            {props.showEmailAddress && (\n                <SendCopyToEmail\n                    value={data.shopperEmail}\n                    errors={errors.shopperEmail}\n                    onToggle={toggleEmailField}\n                    onInput={handleChangeFor('shopperEmail', 'input')}\n                    onBlur={handleChangeFor('shopperEmail', 'blur')}\n                />\n            )}\n\n            {props.showPayButton &&\n                props.payButton({\n                    status,\n                    label: i18n.get('boletobancario.btnLabel'),\n                    classNameModifiers: buttonModifiers\n                })}\n        </div>\n    );\n}\n\nBoletoInput.defaultProps = {\n    data: {},\n    showEmailAddress: true,\n    personalDetailsRequired: true,\n    billingAddressRequired: true\n};\n\nexport default BoletoInput;\n","import { h } from 'preact';\nimport Voucher from '../../../internal/Voucher';\n\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport './BoletoVoucherResult.scss';\nimport { VoucherDetail } from '../../../internal/Voucher/types';\nimport useImage from '../../../../core/Context/useImage';\nimport { extractCommonPropsForVoucher } from '../../../internal/Voucher/utils';\n\nconst BoletoVoucherResult = props => {\n    const { i18n, loadingContext } = useCoreContext();\n    const getImage = useImage();\n    const { reference, expiresAt, downloadUrl } = props;\n    const barcodeReference = reference.replace(/[^\\d]/g, '').replace(/^(\\d{4})(\\d{5})\\d{1}(\\d{10})\\d{1}(\\d{10})\\d{1}(\\d{15})$/, '$1$5$2$3$4');\n    const barcodeUrl = `${loadingContext}utility/v1/barcode.png?data=${barcodeReference}&type=itf&clientKey=${props.clientKey}`;\n\n    const paymentMethodType = 'boletobancario'; // overwrite the bank specific type of boleto, e.g. 'boletobancario_santander', to a more generic form\n\n    return (\n        <Voucher\n            {...extractCommonPropsForVoucher({\n                props: { ...props, paymentMethodType },\n                i18n,\n                introKey: 'voucher.introduction',\n                getImage: getImage()\n            })}\n            barcode={barcodeUrl}\n            voucherDetails={[{ label: i18n.get('voucher.expirationDate'), value: i18n.date(expiresAt) }] as VoucherDetail[]}\n            downloadUrl={downloadUrl}\n            copyBtn\n        />\n    );\n};\n\nexport default BoletoVoucherResult;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport BoletoInput from './components/BoletoInput';\nimport { cleanCPFCNPJ } from '../internal/SocialSecurityNumberBrazil/utils';\nimport BoletoVoucherResult from './components/BoletoVoucherResult';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { TxVariants } from '../tx-variants';\nimport { VoucherConfiguration } from '../internal/Voucher/types';\n\nexport class BoletoElement extends UIElement<VoucherConfiguration> {\n    public static type = TxVariants.boletobancario;\n\n    public static txVariants = [\n        TxVariants.boletobancario,\n        TxVariants.boletobancario_itau,\n        TxVariants.boletobancario_santander,\n        TxVariants.primeiropay_boleto\n    ];\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        const { data = {} } = this.state;\n        const { billingAddress, shopperEmail, firstName, lastName, socialSecurityNumber = '' } = data;\n\n        return {\n            paymentMethod: {\n                type: this.type\n            },\n            ...(billingAddress && { billingAddress }),\n            ...(shopperEmail && { shopperEmail }),\n            ...(firstName && lastName && { shopperName: { firstName, lastName } }),\n            ...(socialSecurityNumber && { socialSecurityNumber: cleanCPFCNPJ(socialSecurityNumber) })\n        };\n    }\n\n    private handleRef = ref => {\n        this.componentRef = ref;\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.reference ? (\n                    <BoletoVoucherResult ref={this.handleRef} icon={this.icon} {...this.props} onActionHandled={this.onActionHandled} />\n                ) : (\n                    <BoletoInput\n                        setComponentRef={this.handleRef}\n                        {...this.props}\n                        onChange={this.setState}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default BoletoElement;\n","import { h } from 'preact';\nimport { useRef, useState } from 'preact/hooks';\nimport PersonalDetails from '../../../internal/PersonalDetails/PersonalDetails';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport FormInstruction from '../../../internal/FormInstruction';\nimport { ComponentMethodsRef } from '../../../internal/UIElement/types';\n\nexport default function DokuInput(props) {\n    const personalDetailsRef = useRef(null);\n    const setPersonalDetailsRef = ref => {\n        personalDetailsRef.current = ref;\n    };\n\n    const { i18n } = useCoreContext();\n\n    const [status, setStatus] = useState('ready');\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const dokuRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(dokuRef.current).length) {\n        props.setComponentRef?.(dokuRef.current);\n    }\n\n    dokuRef.current.showValidation = () => {\n        personalDetailsRef.current?.showValidation();\n    };\n\n    dokuRef.current.setStatus = setStatus;\n\n    return (\n        <div className=\"adyen-checkout__doku-input__field\">\n            <FormInstruction />\n\n            <PersonalDetails\n                data={props.data}\n                requiredFields={['firstName', 'lastName', 'shopperEmail']}\n                onChange={props.onChange}\n                namePrefix=\"doku\"\n                setComponentRef={setPersonalDetailsRef}\n            />\n\n            {props.showPayButton && props.payButton({ status, label: i18n.get('confirmPurchase') })}\n        </div>\n    );\n}\n","import { h } from 'preact';\nimport Voucher from '../../../internal/Voucher';\n\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { DokuVoucherResultProps } from '../../types';\nimport useImage from '../../../../core/Context/useImage';\nimport { extractCommonPropsForVoucher } from '../../../internal/Voucher/utils';\n\nconst DokuVoucherResult = (props: DokuVoucherResultProps) => {\n    const { expiresAt, instructionsUrl, shopperName, merchantName } = props;\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    return (\n        <Voucher\n            {...extractCommonPropsForVoucher({ props, i18n, introKey: 'voucher.introduction.doku', getImage: getImage() })}\n            instructionsUrl={instructionsUrl}\n            voucherDetails={[\n                { label: i18n.get('voucher.expirationDate'), value: i18n.date(expiresAt) },\n                { label: i18n.get('voucher.shopperName'), value: shopperName },\n                { label: i18n.get('voucher.merchantName'), value: merchantName }\n            ]}\n            copyBtn\n        />\n    );\n};\n\nexport default DokuVoucherResult;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport DokuInput from './components/DokuInput';\nimport DokuVoucherResult from './components/DokuVoucherResult';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { TxVariants } from '../tx-variants';\nimport { VoucherConfiguration } from '../internal/Voucher/types';\n\nexport class DokuElement extends UIElement<VoucherConfiguration> {\n    public static type = TxVariants.doku;\n    public static txVariants = [\n        TxVariants.doku,\n        TxVariants.doku_alfamart,\n        TxVariants.doku_permata_lite_atm,\n        TxVariants.doku_indomaret,\n        TxVariants.doku_atm_mandiri_va,\n        TxVariants.doku_sinarmas_va,\n        TxVariants.doku_mandiri_va,\n        TxVariants.doku_cimb_va,\n        TxVariants.doku_danamon_va,\n        TxVariants.doku_bri_va,\n        TxVariants.doku_bni_va,\n        TxVariants.doku_bca_va,\n        TxVariants.doku_wallet\n    ];\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        return {\n            ...this.state.data,\n            paymentMethod: {\n                type: this.type\n            }\n        };\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.reference ? (\n                    <DokuVoucherResult\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        {...this.props}\n                        onActionHandled={this.onActionHandled}\n                    />\n                ) : (\n                    <DokuInput\n                        setComponentRef={this.setComponentRef}\n                        {...this.props}\n                        onChange={this.setState}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default DokuElement;\n","import { h } from 'preact';\nimport Voucher from '../../../../components/internal/Voucher';\nimport { VoucherDetail } from '../../../internal/Voucher/types';\n\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { OxxoVoucherResultProps } from '../../types';\nimport './OxxoVoucherResult.scss';\nimport useImage from '../../../../core/Context/useImage';\nimport { extractCommonPropsForVoucher } from '../../../internal/Voucher/utils';\n\nconst OxxoVoucherResult = (props: OxxoVoucherResultProps) => {\n    const { i18n, loadingContext } = useCoreContext();\n    const getImage = useImage();\n    const { alternativeReference, reference, expiresAt, merchantReference, downloadUrl } = props;\n\n    const barcodeUrl = `${loadingContext}utility/v1/barcode.png?data=${reference}&type=code128c&clientKey=${props.clientKey}`;\n\n    const voucherDetails: VoucherDetail[] = [\n        ...(expiresAt\n            ? [\n                  {\n                      label: i18n.get('voucher.expirationDate'),\n                      value: i18n.date(expiresAt)\n                  }\n              ]\n            : []),\n        ...(merchantReference\n            ? [\n                  {\n                      label: i18n.get('voucher.shopperReference'),\n                      value: merchantReference\n                  }\n              ]\n            : []),\n        ...(alternativeReference\n            ? [\n                  {\n                      label: i18n.get('voucher.alternativeReference'),\n                      value: alternativeReference\n                  }\n              ]\n            : [])\n    ];\n\n    return (\n        <Voucher\n            {...extractCommonPropsForVoucher({ props, i18n, introKey: 'voucher.introduction', getImage: getImage() })}\n            barcode={barcodeUrl}\n            copyBtn\n            downloadUrl={downloadUrl}\n            voucherDetails={voucherDetails}\n        />\n    );\n};\n\nexport default OxxoVoucherResult;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport OxxoVoucherResult from './components/OxxoVoucherResult';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { TxVariants } from '../tx-variants';\nimport { VoucherConfiguration } from '../internal/Voucher/types';\n\nexport class OxxoElement extends UIElement<VoucherConfiguration> {\n    public static type = TxVariants.oxxo;\n\n    protected static defaultProps = {\n        name: 'Oxxo'\n    };\n\n    get isValid(): boolean {\n        return true;\n    }\n\n    formatData() {\n        return {\n            paymentMethod: {\n                type: this.props.type || OxxoElement.type\n            }\n        };\n    }\n\n    private handleRef = ref => {\n        this.componentRef = ref;\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.reference ? (\n                    <OxxoVoucherResult ref={this.handleRef} {...this.props} onActionHandled={this.onActionHandled} />\n                ) : (\n                    this.props.showPayButton &&\n                    this.payButton({\n                        ...this.props,\n                        classNameModifiers: ['standalone'],\n                        label: `${this.props.i18n.get('continueTo')} ${this.props.name}`,\n                        onClick: this.submit\n                    })\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default OxxoElement;\n","import { h } from 'preact';\nimport cx from 'classnames';\nimport Img from '../../Img';\nimport './IssuerButton.scss';\n\ninterface IssuerButtonProps {\n    name: string;\n    id: string;\n    selected: boolean;\n    onClick: (event: UIEvent) => void;\n    icon?: string;\n}\n\nfunction IssuerButton({ name, id, icon, onClick, selected = false }: IssuerButtonProps) {\n    return (\n        <button\n            type=\"button\"\n            className={cx('adyen-checkout__issuer-button', { 'adyen-checkout__issuer-button--selected': selected })}\n            aria-label={name}\n            aria-pressed={selected}\n            onClick={onClick}\n            value={id}\n        >\n            {!!icon && <Img className=\"adyen-checkout__issuer-button-img\" alt={name} src={icon} />}\n            <span className=\"adyen-checkout__issuer-button-text\">{name}</span>\n        </button>\n    );\n}\n\nexport default IssuerButton;\n","import { h } from 'preact';\nimport { useCallback } from 'preact/hooks';\nimport IssuerButton from './IssuerButton';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport './IssuerButtonGroup.scss';\nimport { IssuerItem } from '../types';\n\ninterface IssuerButtonGroupProps {\n    items: IssuerItem[];\n    selectedIssuerId: string;\n    onChange: (event: UIEvent) => void;\n}\n\nconst IssuerButtonGroup = ({ items = [], selectedIssuerId, onChange }: IssuerButtonGroupProps) => {\n    const { i18n } = useCoreContext();\n\n    const handleClick = useCallback(\n        (event: UIEvent) => {\n            const value = (event.currentTarget as HTMLButtonElement).value;\n            Object.defineProperty(event.target, 'value', { value });\n            onChange(event);\n        },\n        [onChange]\n    );\n\n    return (\n        <div className=\"adyen-checkout__issuer-button-group\" role=\"group\" aria-label={i18n.get('issuerList.selectField.contextualText')}>\n            {items.map(issuer => (\n                <IssuerButton key={issuer.id} {...issuer} selected={selectedIssuerId === issuer.id} onClick={handleClick} />\n            ))}\n        </div>\n    );\n};\n\nexport default IssuerButtonGroup;\n","import { Fragment, h } from 'preact';\nimport { useState, useEffect, useCallback, useRef } from 'preact/hooks';\nimport useForm from '../../../utils/useForm';\nimport Field from '../FormFields/Field';\nimport IssuerButtonGroup from './IssuerButtonGroup';\nimport ContentSeparator from '../ContentSeparator';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { ValidatorRules } from '../../../utils/Validator/types';\nimport { IssuerListProps } from './types';\nimport './IssuerList.scss';\nimport useSRPanelContext from '../../../core/Errors/useSRPanelContext';\nimport { SetSRMessagesReturnFn } from '../../../core/Errors/SRPanelProvider';\nimport { SetSRMessagesReturnObject } from '../../../core/Errors/types';\nimport { ERROR_ACTION_FOCUS_FIELD } from '../../../core/Errors/constants';\nimport { setFocusOnField } from '../../../utils/setFocus';\nimport DisclaimerMessage from '../DisclaimerMessage';\nimport Select from '../FormFields/Select';\nimport { SelectTargetObject } from '../FormFields/Select/types';\nimport {\n    ANALYTICS_DISPLAYED_STR,\n    ANALYTICS_FEATURED_ISSUER,\n    ANALYTICS_INPUT_STR,\n    ANALYTICS_LIST,\n    ANALYTICS_LIST_SEARCH,\n    ANALYTICS_SEARCH_DEBOUNCE_TIME,\n    ANALYTICS_SELECTED_STR\n} from '../../../core/Analytics/constants';\nimport { debounce } from '../../../utils/debounce';\n\nconst payButtonLabel = ({ issuer, items }, i18n): string => {\n    const issuerName = items.find(i => i.id === issuer)?.name;\n    if (!issuer || !issuerName) return i18n.get('continue');\n    return `${i18n.get('continueTo')} ${issuerName}`;\n};\n\nconst schema = ['issuer'];\nconst validationRules: ValidatorRules = {\n    issuer: {\n        validate: issuer => !!issuer && issuer.length > 0,\n        errorMessage: 'issuerList.selectField.contextualText',\n        modes: ['blur']\n    }\n};\n\nenum IssuerListInputTypes {\n    ButtonGroup,\n    Dropdown\n}\n\nfunction IssuerList({ items, placeholder, issuer, highlightedIds = [], showContextualElement, contextualText, ...props }: IssuerListProps) {\n    const { i18n } = useCoreContext();\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm({\n        schema,\n        defaultData: { issuer },\n        rules: validationRules\n    });\n    const [status, setStatus] = useState('ready');\n    const [inputType, setInputType] = useState<IssuerListInputTypes>(IssuerListInputTypes.Dropdown);\n\n    const { setSRMessagesFromObjects, shouldMoveFocusSR } = useSRPanelContext();\n    const setSRMessages: SetSRMessagesReturnFn = setSRMessagesFromObjects?.({});\n\n    const getErrorMessage = error => (error && error.errorMessage ? i18n.get(error.errorMessage) : !!error);\n\n    this.setStatus = newStatus => {\n        setStatus(newStatus);\n    };\n\n    const handleInputChange = useCallback(\n        (type: IssuerListInputTypes) => (event: h.JSX.TargetedKeyboardEvent<HTMLInputElement>) => {\n            const target = type === IssuerListInputTypes.Dropdown ? ANALYTICS_LIST : ANALYTICS_FEATURED_ISSUER;\n            const issuerObj = items.find(issuer => issuer.id === (event.target as SelectTargetObject).value);\n            props.onSubmitAnalytics({ type: ANALYTICS_SELECTED_STR, target, issuer: issuerObj.name });\n\n            setInputType(type);\n            handleChangeFor('issuer')(event);\n        },\n        [handleChangeFor]\n    );\n\n    const handleListToggle = useCallback((isOpen: boolean) => {\n        if (isOpen) {\n            props.onSubmitAnalytics({ type: ANALYTICS_DISPLAYED_STR, target: ANALYTICS_LIST });\n        }\n    }, []);\n\n    const debounceSearchAnalytics = useRef(debounce(props.onSubmitAnalytics, ANALYTICS_SEARCH_DEBOUNCE_TIME));\n\n    const handleSearch = useCallback(() => {\n        debounceSearchAnalytics.current({ type: ANALYTICS_INPUT_STR, target: ANALYTICS_LIST_SEARCH });\n    }, []);\n\n    useEffect(() => {\n        props.onChange({ data, valid, errors, isValid });\n\n        const srPanelResp: SetSRMessagesReturnObject = setSRMessages?.({ errors, isValidating: true });\n        if (srPanelResp?.action === ERROR_ACTION_FOCUS_FIELD) {\n            // Focus field in error, if required\n            if (shouldMoveFocusSR) setFocusOnField('.adyen-checkout__issuer-list', srPanelResp.fieldToFocus);\n        }\n    }, [data, valid, errors, isValid]);\n\n    this.showValidation = () => {\n        triggerValidation();\n    };\n\n    const { highlightedItems } = items.reduce(\n        (memo, item) => {\n            if (highlightedIds.includes(item.id)) memo.highlightedItems.push({ ...item });\n            return memo;\n        },\n        { highlightedItems: [] }\n    );\n\n    return (\n        <div className=\"adyen-checkout__issuer-list\">\n            {!!highlightedItems.length && (\n                <Fragment>\n                    <IssuerButtonGroup\n                        selectedIssuerId={inputType === IssuerListInputTypes.ButtonGroup ? data['issuer'] : null}\n                        items={highlightedItems}\n                        onChange={handleInputChange(IssuerListInputTypes.ButtonGroup)}\n                    />\n                    <ContentSeparator />\n                </Fragment>\n            )}\n\n            <Field\n                label={i18n.get('issuerList.selectField.label')}\n                errorMessage={getErrorMessage(errors.issuer)}\n                classNameModifiers={['issuer-list']}\n                name={'issuer'}\n                showContextualElement={showContextualElement}\n                contextualText={contextualText}\n            >\n                <Select\n                    items={items}\n                    selectedValue={inputType === IssuerListInputTypes.Dropdown ? data['issuer'] : null}\n                    placeholder={placeholder}\n                    name={'issuer'}\n                    className={'adyen-checkout__issuer-list__dropdown'}\n                    onChange={handleInputChange(IssuerListInputTypes.Dropdown)}\n                    onListToggle={handleListToggle}\n                    onInput={handleSearch}\n                />\n            </Field>\n\n            {props.termsAndConditions && (\n                <div className=\"adyen-checkout__issuer-list__termsAndConditions\">\n                    <DisclaimerMessage message={i18n.get(props.termsAndConditions.translationKey)} urls={props.termsAndConditions.urls} />\n                </div>\n            )}\n\n            {props.showPayButton &&\n                props.payButton({\n                    status,\n                    label: payButtonLabel({ issuer: data['issuer'], items: [...items, ...highlightedItems] }, i18n)\n                })}\n        </div>\n    );\n}\n\nIssuerList.defaultProps = {\n    onChange: () => {}\n};\n\nexport default IssuerList;\n","import { ImageOptions } from '../core/Context/Resources';\nimport { UseImageHookType } from '../core/Context/useImage';\n\nconst getIssuerImageUrl =\n    (options: object, type: string, getImage: UseImageHookType) =>\n    (issuer: string): string => {\n        if (!issuer) return null;\n\n        const imageOptions: ImageOptions = {\n            parentFolder: issuer ? `${type}/` : '',\n            type: issuer || type,\n            ...options\n        };\n\n        return getImage(imageOptions)(issuer);\n    };\n\nexport default getIssuerImageUrl;\n","import { h } from 'preact';\nimport UIElement from '../../internal/UIElement/UIElement';\nimport IssuerList from '../../internal/IssuerList';\nimport getIssuerImageUrl from '../../../utils/get-issuer-image';\nimport { FALLBACK_CONTEXT } from '../../../core/config';\nimport { CoreProvider } from '../../../core/Context/CoreProvider';\nimport RedirectButton from '../../internal/RedirectButton';\nimport SRPanelProvider from '../../../core/Errors/SRPanelProvider';\nimport { IssuerListConfiguration, IssuerListData } from './types';\nimport type { ICore } from '../../../core/types';\n\nclass IssuerListContainer extends UIElement<IssuerListConfiguration> {\n    protected static defaultProps = {\n        showImage: true,\n        issuers: [],\n        highlightedIssuers: [],\n        loadingContext: FALLBACK_CONTEXT,\n        showPaymentMethodItemImages: false\n    };\n\n    constructor(checkout: ICore, props?: IssuerListConfiguration) {\n        super(checkout, props);\n\n        const getImage = props => this.resources.getImage(props);\n\n        if (this.props.showImage) {\n            const getIssuerIcon = getIssuerImageUrl({ loadingContext: this.props.loadingContext }, this.constructor['type'], getImage);\n\n            this.props.issuers = this.props.issuers.map(item => ({\n                ...item,\n                icon: getIssuerIcon(item.id)\n            }));\n        }\n    }\n\n    formatProps(props) {\n        const issuers = (props.details && props.details.length && (props.details.find(d => d.key === 'issuer') || {}).items) || props.issuers || [];\n        return { ...props, issuers };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData(): IssuerListData {\n        return {\n            paymentMethod: {\n                type: this.type,\n                issuer: this.state?.data?.issuer\n            }\n        };\n    }\n\n    /**\n     * Returns whether the component state is valid or not\n     */\n    get isValid() {\n        if (this.props.issuers.length === 0) {\n            return true;\n        }\n        return !!this.state?.isValid;\n    }\n\n    /**\n     * Returns brands array (similar to card) depending on showPaymentMethodItemImages\n     * This is used to show the brands in the PaymentMethodItem\n     * Requires brands icons to be loaded in the payment method\n     */\n    get brands(): { icon: any; name: string }[] {\n        if (this.props.showPaymentMethodItemImages) {\n            return this.props.issuers.map(brand => {\n                const brandIcon = brand.icon;\n                return { icon: brandIcon, name: brand.id };\n            });\n        }\n\n        return [];\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.issuers.length > 0 ? (\n                    <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                        <IssuerList\n                            ref={ref => {\n                                this.componentRef = ref;\n                            }}\n                            items={this.props.issuers}\n                            highlightedIds={this.props.highlightedIssuers}\n                            {...this.props}\n                            {...this.state}\n                            showImage={this.props.showImage}\n                            type={this.constructor['type']}\n                            onChange={this.setState}\n                            onSubmit={this.submit}\n                            payButton={this.payButton}\n                            contextualText={this.props.i18n.get('issuerList.selectField.contextualText')}\n                            onSubmitAnalytics={this.submitAnalytics}\n                        />\n                    </SRPanelProvider>\n                ) : (\n                    <RedirectButton\n                        showPayButton={this.props.showPayButton}\n                        name={this.props.name}\n                        {...this.props}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default IssuerListContainer;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass BillDeskOnlineElement extends IssuerListContainer {\n    public static type = TxVariants.billdesk_online;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: false\n        };\n    }\n}\n\nexport default BillDeskOnlineElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass BillDeskWalletElement extends IssuerListContainer {\n    public static type = TxVariants.billdesk_wallet;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: false\n        };\n    }\n}\n\nexport default BillDeskWalletElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass DotpayElement extends IssuerListContainer {\n    public static type = TxVariants.dotpay;\n}\n\nexport default DotpayElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass EPSElement extends IssuerListContainer {\n    public static type = TxVariants.eps;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: false\n        };\n    }\n}\n\nexport default EPSElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass MolPayEBankingMYElement extends IssuerListContainer {\n    public static type = TxVariants.molpay_ebanking_fpx_MY;\n}\n\nexport default MolPayEBankingMYElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass MolPayEBankingTHElement extends IssuerListContainer {\n    public static type = TxVariants.molpay_ebanking_TH;\n}\n\nexport default MolPayEBankingTHElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass MolPayEbankingVNElement extends IssuerListContainer {\n    public static type = TxVariants.molpay_ebanking_VN;\n}\n\nexport default MolPayEbankingVNElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nconst TERMS_AND_CONDITIONS = 'https://static.payu.com/sites/terms/files/payu_privacy_policy_cs.pdf';\nconst ICON = 'bankTransfer_IBAN';\n\nclass OnlineBankingCZElement extends IssuerListContainer {\n    public static type = TxVariants.onlineBanking_CZ;\n\n    private static termsAndConditions = {\n        translationKey: 'onlineBanking.termsAndConditions',\n        urls: [TERMS_AND_CONDITIONS]\n    };\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: true,\n            termsAndConditions: OnlineBankingCZElement.termsAndConditions\n        };\n    }\n\n    get icon(): string {\n        return this.props.icon ?? this.resources.getImage()(ICON);\n    }\n}\n\nexport default OnlineBankingCZElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport { TxVariants } from '../tx-variants';\n\nclass OnlineBankingINElement extends IssuerListContainer {\n    public static type = TxVariants.onlinebanking_IN;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: false\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        return {\n            ...super.formatData(),\n            browserInfo: this.browserInfo\n        };\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n}\n\nexport default OnlineBankingINElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\nimport { IssuerListConfiguration } from '../helpers/IssuerListContainer/types';\nimport type { ICore } from '../../core/types';\n\nclass OnlineBankingPL extends IssuerListContainer {\n    public static type = TxVariants.onlineBanking_PL;\n\n    private static disclaimerUrlsMap = {\n        regulation: 'https://www.przelewy24.pl/regulamin',\n        obligation: 'https://www.przelewy24.pl/obowiazek-informacyjny-rodo-platnicy'\n    };\n\n    private static termsAndConditions = {\n        translationKey: 'onlineBankingPL.termsAndConditions',\n        urls: [OnlineBankingPL.disclaimerUrlsMap.regulation, OnlineBankingPL.disclaimerUrlsMap.obligation]\n    };\n\n    constructor(checkout: ICore, props?: IssuerListConfiguration) {\n        super(checkout, { ...props, termsAndConditions: OnlineBankingPL.termsAndConditions });\n    }\n}\n\nexport default OnlineBankingPL;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nconst TERMS_AND_CONDITIONS = 'https://static.payu.com/sites/terms/files/payu_privacy_policy_sk.pdf';\nconst ICON = 'bankTransfer_IBAN';\n\nclass OnlineBankingSKElement extends IssuerListContainer {\n    public static type = TxVariants.onlineBanking_SK;\n\n    private static termsAndConditions = {\n        translationKey: 'onlineBanking.termsAndConditions',\n        urls: [TERMS_AND_CONDITIONS]\n    };\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: true,\n            termsAndConditions: OnlineBankingSKElement.termsAndConditions\n        };\n    }\n\n    get icon(): string {\n        return this.props.icon ?? this.resources.getImage()(ICON);\n    }\n}\n\nexport default OnlineBankingSKElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer';\n\nclass OnlineBankingFI extends IssuerListContainer {\n    public static type = 'ebanking_FI';\n}\n\nexport default OnlineBankingFI;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\nimport { IssuerListConfiguration } from '../helpers/IssuerListContainer/types';\nimport type { ICore } from '../../core/types';\n\nclass PayByBank extends IssuerListContainer {\n    public static type = TxVariants.paybybank;\n\n    constructor(checkout: ICore, props?: IssuerListConfiguration) {\n        super(checkout, { ...props, showPaymentMethodItemImages: true });\n    }\n}\n\nexport default PayByBank;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass PayuNetCashcardElement extends IssuerListContainer {\n    public static type = TxVariants.payu_IN_cashcard;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: false\n        };\n    }\n}\n\nexport default PayuNetCashcardElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport { TxVariants } from '../tx-variants';\n\nclass PayuNetBankingElement extends IssuerListContainer {\n    public static type = TxVariants.payu_IN_nb;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: false\n        };\n    }\n}\n\nexport default PayuNetBankingElement;\n","import IssuerListContainer from '../helpers/IssuerListContainer/IssuerListContainer';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport { TxVariants } from '../tx-variants';\n\nclass WalletINElement extends IssuerListContainer {\n    public static type = TxVariants.wallet_IN;\n\n    formatProps(props) {\n        return {\n            ...super.formatProps(props),\n            showImage: false\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        return {\n            ...super.formatData(),\n            browserInfo: this.browserInfo\n        };\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n}\n\nexport default WalletINElement;\n","import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport useForm from '../../../../utils/useForm';\nimport Field from '../../../internal/FormFields/Field';\nimport getIssuerImageUrl from '../../../../utils/get-issuer-image';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { DragonpayInputData, DragonpayInputIssuerItem, DragonpayInputProps } from '../../types';\nimport InputEmail from '../../../internal/FormFields/InputEmail';\nimport Select from '../../../internal/FormFields/Select';\nimport useImage from '../../../../core/Context/useImage';\nimport { validationRules } from '../../../../utils/Validator/defaultRules';\nimport { getErrorMessage } from '../../../../utils/getErrorMessage';\n\nexport default function DragonpayInput(props: DragonpayInputProps) {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const isIssuerRequired = () => {\n        const typesRequiringIssuers = ['dragonpay_ebanking', 'dragonpay_otc_banking', 'dragonpay_otc_non_banking'];\n        return typesRequiringIssuers.indexOf(props.type) > -1;\n    };\n\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm<DragonpayInputData>({\n        schema: [...(isIssuerRequired() ? ['issuer'] : []), 'shopperEmail'],\n        rules: {\n            issuer: {\n                validate: issuer => isIssuerRequired() && !!issuer,\n                modes: ['input', 'blur']\n            },\n            shopperEmail: validationRules.emailRule\n        }\n    });\n\n    const getIssuerIcon = getIssuerImageUrl({}, props.type, getImage);\n    const items = props.items.map(\n        (item: DragonpayInputIssuerItem): DragonpayInputIssuerItem => ({\n            ...item,\n            icon: getIssuerIcon(item.id && item.id.toLowerCase())\n        })\n    );\n\n    const getIssuerSelectFieldKey = type => {\n        if (type === 'dragonpay_otc_non_banking') {\n            return 'dragonpayVoucher.selectField.contextualText.nonBank';\n        }\n        return 'dragonpayVoucher.selectField.contextualText.bank';\n    };\n\n    useEffect(() => {\n        props.onChange({ isValid, data, valid, errors });\n    }, [isValid, data, valid, errors]);\n\n    const [status, setStatus] = useState('ready');\n    this.setStatus = setStatus;\n    this.showValidation = triggerValidation;\n\n    return (\n        <div className=\"adyen-checkout__dragonpay-input__field\">\n            <Field\n                label={i18n.get('shopperEmail')}\n                errorMessage={getErrorMessage(i18n, errors.shopperEmail, i18n.get('shopperEmail'))}\n                name={'dragonpay-shopperEmail'}\n            >\n                <InputEmail\n                    name={'dragonpay-shopperEmail'}\n                    autoCorrect={'off'}\n                    value={data.shopperEmail}\n                    className={'adyen-checkout__input--large'}\n                    spellCheck={false}\n                    onInput={handleChangeFor('shopperEmail', 'input')}\n                    onBlur={handleChangeFor('shopperEmail', 'blur')}\n                />\n            </Field>\n\n            {isIssuerRequired() && (\n                <Field label={i18n.get(getIssuerSelectFieldKey(props.type))} errorMessage={!!errors.issuer} name={'issuer'}>\n                    <Select\n                        items={items}\n                        selectedValue={data.issuer}\n                        name={'issuer'}\n                        className={'adyen-checkout__dropdown--large adyen-checkout__issuer-list__dropdown'}\n                        onChange={handleChangeFor('issuer')}\n                    />\n                </Field>\n            )}\n\n            {props.showPayButton && props.payButton({ status, label: i18n.get('confirmPurchase') })}\n        </div>\n    );\n}\n\nDragonpayInput.defaultProps = {\n    data: {},\n    items: [],\n    onChange: () => {}\n};\n","import { h } from 'preact';\nimport Voucher from '../../../internal/Voucher';\nimport getIssuerImageUrl from '../../../../utils/get-issuer-image';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { DragonpayVoucherResultProps } from '../../types';\nimport { VoucherDetail } from '../../../internal/Voucher/types';\nimport useImage from '../../../../core/Context/useImage';\nimport { extractCommonPropsForVoucher } from '../../../internal/Voucher/utils';\n\nexport default function DragonpayVoucherResult(props: DragonpayVoucherResultProps) {\n    const { surcharge, expiresAt, alternativeReference, instructionsUrl, icon, issuer, paymentMethodType } = props;\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const issuerImageUrl =\n        paymentMethodType !== 'dragonpay_otc_philippines' ? getIssuerImageUrl({}, paymentMethodType, getImage)(issuer.toLowerCase()) : null;\n\n    return (\n        <Voucher\n            {...extractCommonPropsForVoucher({ props, i18n, introKey: 'voucher.introduction', getImage: getImage() })}\n            imageUrl={icon} // Can this url be different to the one generated by using the paymentMethodType?\n            issuerImageUrl={issuerImageUrl}\n            instructionsUrl={instructionsUrl}\n            surcharge={surcharge && i18n.amount(surcharge.value, surcharge.currency)}\n            voucherDetails={\n                [\n                    { label: i18n.get('voucher.expirationDate'), value: i18n.dateTime(expiresAt) },\n                    { label: i18n.get('voucher.alternativeReference'), value: alternativeReference }\n                ] as VoucherDetail[]\n            }\n            copyBtn\n        />\n    );\n}\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport DragonpayInput from './components/DragonpayInput';\nimport DragonpayVoucherResult from './components/DragonpayVoucherResult';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { DragonpayConfiguraton } from './types';\nimport { TxVariants } from '../tx-variants';\n\nexport class DragonpayElement extends UIElement<DragonpayConfiguraton> {\n    public static type = TxVariants.dragonpay;\n\n    public static txVariants = [\n        TxVariants.dragonpay,\n        TxVariants.dragonpay_ebanking,\n        TxVariants.dragonpay_otc_banking,\n        TxVariants.dragonpay_otc_non_banking,\n        TxVariants.dragonpay_otc_philippines\n    ];\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        const { issuer, shopperEmail } = this.state.data;\n\n        return {\n            ...(shopperEmail && { shopperEmail }),\n            paymentMethod: {\n                ...(issuer && { issuer }),\n                type: this.type\n            }\n        };\n    }\n\n    protected formatProps(props: DragonpayConfiguraton) {\n        return {\n            ...props,\n            issuers: props.details?.find(detail => detail.key === 'issuer')?.items ?? props.issuers\n        };\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.reference ? (\n                    <DragonpayVoucherResult\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        icon={this.icon}\n                        {...this.props}\n                        onActionHandled={this.onActionHandled}\n                    />\n                ) : (\n                    <DragonpayInput\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        items={this.props.issuers}\n                        {...this.props}\n                        showPayButton={this.props.showPayButton}\n                        onChange={this.setState}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default DragonpayElement;\n","import { telephoneNumber } from '../../utils/regex';\nimport { ValidatorRules } from '../../utils/Validator/types';\n\nexport const econtextValidationRules: ValidatorRules = {\n    telephoneNumber: [\n        {\n            validate: value => !!value && value.length <= 11,\n            errorMessage: 'voucher.econtext.telephoneNumber.invalid',\n            modes: ['input', 'blur']\n        },\n        {\n            validate: value => !!value && telephoneNumber.test(value) && (value.length === 10 || value.length === 11),\n            errorMessage: 'voucher.econtext.telephoneNumber.invalid',\n            modes: ['blur']\n        }\n    ]\n};\n","import { Fragment, h, VNode } from 'preact';\nimport { useRef, useState } from 'preact/hooks';\nimport PersonalDetails from '../../../internal/PersonalDetails/PersonalDetails';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { econtextValidationRules } from '../../validate';\nimport { PersonalDetailsSchema } from '../../../../types/global-types';\nimport './EcontextInput.scss';\nimport FormInstruction from '../../../internal/FormInstruction';\nimport { ComponentMethodsRef } from '../../../internal/UIElement/types';\n\ninterface EcontextInputProps {\n    personalDetailsRequired?: boolean;\n    data?: PersonalDetailsSchema;\n    showPayButton: boolean;\n    payButton(config: any): VNode;\n    onChange?(data: any): void;\n    onSubmit?(state: any, component: any): void;\n    [key: string]: any;\n}\n\nexport default function EcontextInput({ personalDetailsRequired = true, data, onChange, showPayButton, payButton, ...props }: EcontextInputProps) {\n    const personalDetailsRef = useRef(null);\n    const setPersonalDetailsRef = ref => {\n        personalDetailsRef.current = ref;\n    };\n    const { i18n } = useCoreContext();\n\n    const [status, setStatus] = useState('ready');\n\n    /** An object by which to expose 'public' members to the parent UIElement */\n    const econtextRef = useRef<ComponentMethodsRef>({});\n    // Just call once\n    if (!Object.keys(econtextRef.current).length) {\n        props.setComponentRef?.(econtextRef.current);\n    }\n\n    econtextRef.current.showValidation = () => {\n        personalDetailsRef.current?.showValidation();\n    };\n\n    econtextRef.current.setStatus = setStatus;\n\n    return (\n        <div className=\"adyen-checkout__econtext-input__field\">\n            {personalDetailsRequired && (\n                <Fragment>\n                    <FormInstruction />\n                    <PersonalDetails\n                        data={data}\n                        requiredFields={['firstName', 'lastName', 'telephoneNumber', 'shopperEmail']}\n                        onChange={onChange}\n                        namePrefix=\"econtext\"\n                        setComponentRef={setPersonalDetailsRef}\n                        validationRules={econtextValidationRules}\n                    />\n                </Fragment>\n            )}\n            {showPayButton && payButton({ status, label: i18n.get('confirmPurchase') })}\n        </div>\n    );\n}\n","import { h } from 'preact';\nimport Voucher from '../../../internal/Voucher';\n\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { EcontextVoucherResultProps } from '../../types';\nimport useImage from '../../../../core/Context/useImage';\nimport { extractCommonPropsForVoucher } from '../../../internal/Voucher/utils';\n\nconst EcontextVoucherResult = (props: EcontextVoucherResultProps) => {\n    const { expiresAt, maskedTelephoneNumber, instructionsUrl, collectionInstitutionNumber } = props;\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    return (\n        <Voucher\n            {...extractCommonPropsForVoucher({ props, i18n, introKey: 'voucher.introduction.econtext', getImage: getImage() })}\n            instructionsUrl={instructionsUrl}\n            voucherDetails={[\n                { label: i18n.get('voucher.collectionInstitutionNumber'), value: collectionInstitutionNumber },\n                { label: i18n.get('voucher.expirationDate'), value: i18n.dateTime(expiresAt) },\n                { label: i18n.get('voucher.telephoneNumber'), value: maskedTelephoneNumber }\n            ]}\n            copyBtn\n        />\n    );\n};\n\nexport default EcontextVoucherResult;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport EcontextInput from './components/EcontextInput';\nimport EcontextVoucherResult from './components/EcontextVoucherResult';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { TxVariants } from '../tx-variants';\nimport { EcontextConfiguration } from './types';\n\nexport class EcontextElement extends UIElement<EcontextConfiguration> {\n    public static type = TxVariants.econtext;\n    public static txVariants = [\n        TxVariants.econtext,\n        TxVariants.econtext_atm,\n        TxVariants.econtext_online,\n        TxVariants.econtext_seven_eleven,\n        TxVariants.econtext_stores\n    ];\n\n    protected static defaultProps = {\n        personalDetailsRequired: true\n    };\n\n    get isValid() {\n        if (!this.props.personalDetailsRequired) {\n            return true;\n        }\n        return !!this.state.isValid;\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        return {\n            ...this.state.data,\n            paymentMethod: {\n                type: this.type\n            }\n        };\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.reference ? (\n                    <EcontextVoucherResult\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        {...this.props}\n                        onActionHandled={this.onActionHandled}\n                    />\n                ) : (\n                    <EcontextInput\n                        setComponentRef={this.setComponentRef}\n                        {...this.props}\n                        showPayButton={this.props.showPayButton}\n                        onChange={this.setState}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default EcontextElement;\n","/**\n * Returns true if the page is being run in an iframe with the same origin as the parent.\n * In this scenario, if the merchant has set redirectFromTopWhenInIframe: true, then we can perform the redirect on the top level, parent, window;\n * rather than on the iframe's window\n */\nexport default () => {\n    try {\n        if (window.parent.location.href) {\n            return window.location !== window.parent.location; // iframe check: locations will differ if we're in an iframe\n        }\n    } catch (e) {\n        return false; // we cannot access window.parent.location.href - so consider us \"not to be in an iframe\" for the purpose of Redirects\n    }\n};\n","import { Component, h } from 'preact';\nimport detectInIframeInSameOrigin from '../../../../utils/detectInIframeInSameOrigin';\nimport { ActionHandledReturnObject } from '../../../../types/global-types';\n\ninterface RedirectShopperProps {\n    beforeRedirect: (resolve, reject, url) => Promise<void>;\n    url: string;\n    method: 'GET' | 'POST';\n    data?: any;\n    redirectFromTopWhenInIframe?: boolean;\n    paymentMethodType?: string;\n    onActionHandled?: (rtnObj: ActionHandledReturnObject) => void;\n    onRedirectError?: () => void;\n}\n\nclass RedirectShopper extends Component<RedirectShopperProps> {\n    private postForm;\n    public static defaultProps = {\n        beforeRedirect: resolve => resolve(),\n        onRedirectError: () => {},\n        method: 'GET'\n    };\n\n    componentDidMount() {\n        const doRedirect = () => {\n            // call callback\n            this.props.onActionHandled?.({\n                componentType: this.props.paymentMethodType,\n                actionDescription: 'performing-redirect'\n            });\n\n            // perform redirect\n            if (this.postForm) {\n                this.postForm.submit();\n            } else {\n                if (this.props.redirectFromTopWhenInIframe && detectInIframeInSameOrigin()) {\n                    // if in an iframe and the config prop allows it - try to redirect from the top level window\n                    window.top.location.assign?.(this.props.url);\n                } else {\n                    window.location.assign(this.props.url);\n                }\n            }\n        };\n\n        const dispatchEvent = new Promise(\n            (resolve, reject) =>\n                void this.props.beforeRedirect(resolve, reject, {\n                    url: this.props.url,\n                    method: this.props.method,\n                    ...(this.props.data ? { data: this.props.data } : {})\n                })\n        );\n\n        dispatchEvent.then(doRedirect).catch(() => {\n            this.props.onRedirectError();\n        });\n    }\n\n    render({ url, method, data = {} }) {\n        if (method === 'POST') {\n            return (\n                <form\n                    method=\"post\"\n                    data-testid=\"redirect-shopper-form\"\n                    action={url}\n                    style={{ display: 'none' }}\n                    ref={ref => {\n                        this.postForm = ref;\n                    }}\n                    {...(this.props.redirectFromTopWhenInIframe && detectInIframeInSameOrigin() && { target: '_top' })}\n                >\n                    {Object.keys(data).map(key => (\n                        <input type=\"hidden\" name={key} key={key} value={data[key]} />\n                    ))}\n                </form>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default RedirectShopper;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectShopper from './components/RedirectShopper';\nimport RedirectButton from '../internal/RedirectButton';\nimport { TxVariants } from '../tx-variants';\nimport { RedirectConfiguration } from './types';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport { ANALYTICS_ERROR_CODE, ANALYTICS_ERROR_TYPE, ANALYTICS_EVENT } from '../../core/Analytics/constants';\n\nclass RedirectElement extends UIElement<RedirectConfiguration> {\n    public static type = TxVariants.redirect;\n\n    public static defaultProps = {\n        type: RedirectElement.type\n    };\n\n    formatData() {\n        return {\n            paymentMethod: {\n                type: this.type\n            },\n            browserInfo: this.browserInfo\n        };\n    }\n\n    private handleRedirectError = () => {\n        super.submitAnalytics({\n            component: this.props.paymentMethodType,\n            type: ANALYTICS_EVENT.error,\n            errorType: ANALYTICS_ERROR_TYPE.redirect,\n            code: ANALYTICS_ERROR_CODE.redirect\n        });\n    };\n\n    get isValid() {\n        return true;\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n\n    render() {\n        if (this.props.url && this.props.method) {\n            return (\n                <RedirectShopper\n                    url={this.props.url}\n                    {...this.props}\n                    onActionHandled={this.onActionHandled}\n                    onRedirectError={this.handleRedirectError}\n                />\n            );\n        }\n\n        if (this.props.showPayButton) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <RedirectButton\n                        {...this.props}\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                </CoreProvider>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default RedirectElement;\n","import { h } from 'preact';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectElement from '../Redirect';\nimport RedirectButton from '../internal/RedirectButton';\nimport { TxVariants } from '../tx-variants';\n\nclass GiropayElement extends RedirectElement {\n    public static type = TxVariants.giropay;\n\n    get displayName() {\n        return this.props.name || this.constructor['type'];\n    }\n\n    render() {\n        if (this.props.showPayButton) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <RedirectButton\n                        {...this.props}\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                </CoreProvider>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default GiropayElement;\n","import { h } from 'preact';\nimport Voucher from '../../../internal/Voucher';\n\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { MultibancoVoucherResultProps } from '../../types';\nimport { VoucherDetail } from '../../../internal/Voucher/types';\nimport useImage from '../../../../core/Context/useImage';\nimport { extractCommonPropsForVoucher } from '../../../internal/Voucher/utils';\n\nconst MultibancoVoucherResult = (props: MultibancoVoucherResultProps) => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const { entity, expiresAt, merchantReference, downloadUrl } = props;\n\n    const voucherDetails: VoucherDetail[] = [\n        ...(entity ? [{ label: i18n.get('voucher.entity'), value: entity }] : []),\n        ...(expiresAt ? [{ label: i18n.get('voucher.expirationDate'), value: i18n.date(expiresAt) }] : []),\n        ...(merchantReference ? [{ label: i18n.get('voucher.shopperReference'), value: merchantReference }] : [])\n    ];\n\n    return (\n        <Voucher\n            {...extractCommonPropsForVoucher({ props, i18n, introKey: 'voucher.introduction', getImage: getImage() })}\n            barcode={null}\n            copyBtn\n            downloadUrl={downloadUrl}\n            voucherDetails={voucherDetails}\n        />\n    );\n};\n\nexport default MultibancoVoucherResult;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport MultibancoVoucherResult from './components/MultibancoVoucherResult';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectButton from '../internal/RedirectButton';\nimport { TxVariants } from '../tx-variants';\nimport { VoucherConfiguration } from '../internal/Voucher/types';\n\nexport class MultibancoElement extends UIElement<VoucherConfiguration> {\n    public static type = TxVariants.multibanco;\n\n    get isValid() {\n        return true;\n    }\n\n    formatProps(props) {\n        return {\n            ...props,\n            name: props.name || 'Multibanco'\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        return {\n            paymentMethod: {\n                type: this.props.type || MultibancoElement.type\n            }\n        };\n    }\n\n    private handleRef = ref => {\n        this.componentRef = ref;\n    };\n\n    render() {\n        if (this.props.reference) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <MultibancoVoucherResult ref={this.handleRef} {...this.props} onActionHandled={this.onActionHandled} />\n                </CoreProvider>\n            );\n        }\n\n        if (this.props.showPayButton) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <RedirectButton\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        amount={this.props.amount}\n                        payButton={this.payButton}\n                        onSubmit={this.submit}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                </CoreProvider>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default MultibancoElement;\n","import RedirectElement from '../Redirect';\nimport PayButton, { payAmountLabel } from '../internal/PayButton';\nimport { h } from 'preact';\nimport { TxVariants } from '../tx-variants';\n\nclass TwintElement extends RedirectElement {\n    public static type = TxVariants.twint;\n\n    public static defaultProps = {\n        type: TwintElement.type,\n        name: 'Twint'\n    };\n    /**\n     * Get the element displayable name\n     */\n    get displayName(): string {\n        const { i18n, name, isStoredPaymentMethod } = this.props;\n        return isStoredPaymentMethod ? `${name} ${i18n.get('twint.saved')}` : name || this.constructor['type'];\n    }\n\n    public payButtonLabel() {\n        const { i18n, amount, isStoredPaymentMethod, name } = this.props;\n        if (isStoredPaymentMethod) return payAmountLabel(i18n, amount);\n        return `${i18n.get('continueTo')} ${name}`;\n    }\n\n    /**\n     * Overrides RedirectElement default payButton behaviour to use label\n     * @param props - props\n     */\n    public payButton = props => {\n        return <PayButton {...props} label={this.payButtonLabel()} onClick={this.submit} />;\n    };\n}\n\nexport default TwintElement;\n","import RedirectElement from '../Redirect';\nimport { TxVariants } from '../tx-variants';\n\nclass VippsElement extends RedirectElement {\n    public static type = TxVariants.vipps;\n\n    public static defaultProps = {\n        type: VippsElement.type,\n        name: 'Vipps'\n    };\n}\n\nexport default VippsElement;\n","import { h } from 'preact';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectElement from '../Redirect';\nimport RedirectButton from '../internal/RedirectButton';\nimport { TxVariants } from '../tx-variants';\nimport './Trustly.scss';\n\nclass TrustlyElement extends RedirectElement {\n    public static type = TxVariants.trustly;\n\n    get displayName() {\n        return this.props.name || this.constructor['type'];\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <div className=\"adyen-checkout-trustly\">\n                    <p className=\"adyen-checkout-trustly__descriptor\">{this.props.i18n.get('trustly.descriptor')}</p>\n                    <ul className=\"adyen-checkout-trustly__description-list\">\n                        <li>{this.props.i18n.get('trustly.description1')}</li>\n                        <li>{this.props.i18n.get('trustly.description2')}</li>\n                    </ul>\n                </div>\n\n                {this.props.showPayButton && (\n                    <RedirectButton\n                        {...this.props}\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default TrustlyElement;\n","import { Fragment, h } from 'preact';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectElement from '../Redirect';\nimport RedirectButton from '../internal/RedirectButton';\nimport { TxVariants } from '../tx-variants';\nimport './PayByBankUS.scss';\nimport getIssuerImageUrl from '../../utils/get-issuer-image';\nimport PayButton, { payAmountLabel } from '../internal/PayButton';\n\nexport default class PayByBankUS extends RedirectElement {\n    public static type = TxVariants.paybybank_AIS_DD;\n\n    protected formatProps(props) {\n        return {\n            // paymentMethodBrands configuration\n            keepBrandsVisible: true,\n            showOtherInsteafOfNumber: true,\n            ...props\n        };\n    }\n\n    public formatData() {\n        return {\n            paymentMethod: {\n                type: this.type,\n                ...(this.props.storedPaymentMethodId && {\n                    storedPaymentMethodId: this.props.storedPaymentMethodId\n                })\n            },\n            browserInfo: this.browserInfo\n        };\n    }\n\n    get displayName() {\n        if (this.props.storedPaymentMethodId && this.props.label) {\n            return this.props.label;\n        }\n        return this.props.name;\n    }\n\n    get additionalInfo() {\n        return this.props.storedPaymentMethodId ? this.props.name : '';\n    }\n\n    /*\n    Hardcode US brands \n    */\n    get brands(): { icon: string; name: string }[] {\n        const getImage = props => this.resources.getImage(props);\n        // paybybank_AIS_DD / tx_variant not used here since images are kept in paybybank subfolder\n        const getIssuerIcon = getIssuerImageUrl({}, 'paybybank', getImage);\n\n        // hardcoding\n        return [\n            { icon: getIssuerIcon('US-1'), name: 'Wells Fargo' },\n            { icon: getIssuerIcon('US-2'), name: 'Bank of America' },\n            { icon: getIssuerIcon('US-3'), name: 'Chase' },\n            { icon: getIssuerIcon('US-4'), name: 'Citi' }\n        ];\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.storedPaymentMethodId ? (\n                    this.props.showPayButton && (\n                        <PayButton\n                            {...this.props}\n                            classNameModifiers={['standalone']}\n                            amount={this.props.amount}\n                            label={payAmountLabel(this.props.i18n, this.props.amount)}\n                            onClick={this.submit}\n                        />\n                    )\n                ) : (\n                    <Fragment>\n                        <div className=\"adyen-checkout-paybybank_AIS_DD\">\n                            <p className=\"adyen-checkout-paybybank_AIS_DD__description-header\">\n                                {this.props.i18n.get('payByBankAISDD.disclaimer.header')}\n                            </p>\n                            <p className=\"adyen-checkout-paybybank_AIS_DD__description-body\">\n                                {this.props.i18n.get('payByBankAISDD.disclaimer.body')}\n                            </p>\n                        </div>\n\n                        {this.props.showPayButton && (\n                            <RedirectButton\n                                {...this.props}\n                                showPayButton={this.props.showPayButton}\n                                name={this.displayName}\n                                onSubmit={this.submit}\n                                payButton={this.payButton}\n                                ref={ref => {\n                                    this.componentRef = ref;\n                                }}\n                            />\n                        )}\n                    </Fragment>\n                )}\n            </CoreProvider>\n        );\n    }\n}\n","export const KLARNA_WIDGET_URL = 'https://x.klarnacdn.net/kp/lib/v1/api.js';\n","import { h } from 'preact';\nimport { useEffect, useRef, useState, useCallback } from 'preact/hooks';\nimport Script from '../../../../utils/Script';\nimport { KLARNA_WIDGET_URL } from '../../constants';\nimport type { KlarnaWidgetAuthorizeResponse, KlarnaWidgetProps } from '../../types';\n\nimport './KlarnaWidget.scss';\n\nexport function KlarnaWidget({ sdkData, paymentMethodType, widgetInitializationTime, payButton, ...props }: KlarnaWidgetProps) {\n    const klarnaWidgetRef = useRef(null);\n    const [status, setStatus] = useState('ready');\n\n    const handleError = useCallback(() => {\n        setStatus('error');\n        props.onComplete({\n            data: {\n                paymentData: props.paymentData,\n                details: {}\n            }\n        });\n    }, [props.paymentData, props.onComplete]);\n\n    const initializeKlarnaWidget = useCallback(() => {\n        window.Klarna.Payments.init({\n            client_token: sdkData.client_token\n        });\n\n        window.Klarna.Payments.load(\n            {\n                container: klarnaWidgetRef.current,\n                payment_method_category: sdkData.payment_method_category\n            },\n            function (res) {\n                // If show_form: true is received together with an error, something fixable is wrong and the consumer\n                // needs to take action before moving forward\n                // If show_form: false, the payment method in the loaded widget will not be offered for this order\n                // based on Klarna’s pre-assessment.\n                if (!res.show_form || !!res.error) {\n                    handleError();\n                } else {\n                    props.onLoaded();\n                }\n            }\n        );\n    }, [sdkData.client_token, sdkData.payment_method_category]);\n\n    const authorizeKlarna = useCallback(() => {\n        setStatus('loading');\n        try {\n            window.Klarna.Payments.authorize(\n                {\n                    payment_method_category: sdkData.payment_method_category\n                },\n                function (res: KlarnaWidgetAuthorizeResponse) {\n                    if (res.approved === true && res.show_form === true) {\n                        // Klarna has approved the authorization of credit for this order.\n                        setStatus('success');\n                        props.onComplete({\n                            data: {\n                                paymentData: props.paymentData,\n                                details: {\n                                    authorization_token: res.authorization_token\n                                }\n                            }\n                        });\n                    } else if (!res.approved && res.show_form === true) {\n                        // Fixable error\n                        setStatus('ready');\n                        props.onError(res);\n                    } else {\n                        // The purchase is declined. The widget should be hidden and the user\n                        // should select another payment method.\n                        handleError();\n                    }\n                }\n            );\n        } catch (e) {\n            handleError();\n        }\n    }, [sdkData.payment_method_category, props.onComplete, props.onError]);\n\n    /**\n     * Initializes Klarna SDK if it is already available and reinitialize\n     * it when the init time refreshes\n     */\n    useEffect(() => {\n        const isKlarnaAvailable = window.Klarna?.Payments?.init;\n        if (isKlarnaAvailable) {\n            initializeKlarnaWidget();\n        }\n    }, [widgetInitializationTime]);\n\n    useEffect(() => {\n        window.klarnaAsyncCallback = function () {\n            initializeKlarnaWidget();\n        };\n        const script = new Script(KLARNA_WIDGET_URL);\n        void script.load();\n\n        return () => {\n            script.remove();\n        };\n    }, [initializeKlarnaWidget]);\n\n    if (status !== 'error' && status !== 'success') {\n        return (\n            <div className=\"adyen-checkout__klarna-widget\">\n                <div ref={klarnaWidgetRef} />\n                {payButton({ status, disabled: status === 'loading', onClick: authorizeKlarna })}\n            </div>\n        );\n    }\n\n    return null;\n}\n","import { h } from 'preact';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { KlarnaWidget } from '../KlarnaWidget/KlarnaWidget';\nimport type { ComponentMethodsRef, PayButtonFunctionProps, UIElementStatus } from '../../../internal/UIElement/types';\nimport type { ActionHandledReturnObject } from '../../../../types/global-types';\nimport type { AdyenCheckoutError, KlarnaAction, KlarnaAdditionalDetailsData, KlarnaComponentRef } from '../../../../types';\n\ninterface KlarnaContainerProps {\n    setComponentRef: (ref: ComponentMethodsRef) => void;\n    displayName: string;\n    showPayButton: boolean;\n    type: string;\n    onComplete(state: KlarnaAdditionalDetailsData): void;\n    onError(error: AdyenCheckoutError): void;\n    payButton(props?: PayButtonFunctionProps): h.JSX.Element;\n    onLoaded(): void;\n    onActionHandled(actionHandled: ActionHandledReturnObject): void;\n}\n\nexport function KlarnaContainer({ setComponentRef, ...props }: KlarnaContainerProps) {\n    const [widgetInitializationTime, setWidgetInitializationTime] = useState<number>(null);\n    const [action, setAction] = useState<KlarnaAction>();\n    const [status, setStatus] = useState('ready');\n    const klarnaRef = useRef<KlarnaComponentRef>({\n        setAction: (action: KlarnaAction) => {\n            setAction(action);\n            setWidgetInitializationTime(new Date().getTime());\n        },\n        setStatus: (status: UIElementStatus) => setStatus(status),\n        reinitializeWidget: () => {\n            setWidgetInitializationTime(new Date().getTime());\n        }\n    });\n\n    useEffect(() => {\n        setComponentRef(klarnaRef.current);\n    }, [setComponentRef]);\n\n    if (action?.sdkData) {\n        return (\n            <KlarnaWidget\n                widgetInitializationTime={widgetInitializationTime}\n                sdkData={action.sdkData}\n                paymentMethodType={action.paymentMethodType}\n                paymentData={action.paymentData}\n                payButton={props.payButton}\n                onComplete={props.onComplete}\n                onError={props.onError}\n                onLoaded={() => {\n                    props.onActionHandled?.({ componentType: props.type, actionDescription: 'sdk-loaded', originalAction: action });\n                    props.onLoaded();\n                }}\n            />\n        );\n    }\n\n    if (props.showPayButton) {\n        return props.payButton({\n            ...props,\n            status,\n            disabled: status === 'loading',\n            classNameModifiers: ['standalone'],\n            label: `${this.props.i18n.get('continueTo')} ${props.displayName}`\n        });\n    }\n\n    return null;\n}\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport PayButton from '../internal/PayButton';\nimport { KlarnaContainer } from './components/KlarnaContainer/KlarnaContainer';\nimport { TxVariants } from '../tx-variants';\nimport type { KlarnaAction, KlarnaAdditionalDetailsData, KlarnaComponentRef, KlarnaConfiguration } from './types';\nimport type { ICore } from '../../core/types';\n\nclass KlarnaPayments extends UIElement<KlarnaConfiguration> {\n    public static type = TxVariants.klarna;\n    public static txVariants = [TxVariants.klarna, TxVariants.klarna_account, TxVariants.klarna_paynow, TxVariants.klarna_b2b];\n\n    public componentRef: KlarnaComponentRef;\n\n    protected static defaultProps = {\n        useKlarnaWidget: false\n    };\n\n    constructor(checkout: ICore, props?: KlarnaConfiguration) {\n        super(checkout, props);\n\n        this.onComplete = this.onComplete.bind(this);\n        this.updateWithAction = this.updateWithAction.bind(this);\n        this.submit = this.submit.bind(this);\n        this.onLoaded = this.onLoaded.bind(this);\n    }\n    get isValid() {\n        return true;\n    }\n\n    protected formatData() {\n        return {\n            paymentMethod: {\n                type: this.type,\n                ...(this.props.useKlarnaWidget ? { subtype: 'sdk' } : {})\n            }\n        };\n    }\n\n    public payButton = props => {\n        return <PayButton amount={this.props.amount} onClick={this.submit} {...props} />;\n    };\n\n    public override handleAction(action: KlarnaAction, props = {}): UIElement | null {\n        if (action.type === 'sdk') {\n            this.updateWithAction(action);\n            return;\n        }\n        return super.handleAction(action, props);\n    }\n\n    updateWithAction(action: KlarnaAction): void {\n        if (action.paymentMethodType !== this.type) throw new Error('Invalid Action');\n        this.componentRef.setAction(action);\n    }\n\n    private onLoaded() {\n        // When action/widget is loaded, set the 'drop-in' back to ready\n        this.setElementStatus('ready');\n    }\n\n    public override activate() {\n        this.componentRef.reinitializeWidget();\n    }\n\n    protected onComplete(details: KlarnaAdditionalDetailsData): void {\n        this.handleAdditionalDetails(details);\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <KlarnaContainer\n                    {...this.props}\n                    setComponentRef={this.setComponentRef}\n                    displayName={this.displayName}\n                    onComplete={this.onComplete}\n                    onError={this.props.onError}\n                    payButton={this.payButton}\n                    onLoaded={this.onLoaded}\n                    showPayButton={this.props.showPayButton}\n                    onActionHandled={this.onActionHandled}\n                    type={this.props.type}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default KlarnaPayments;\n","/**\n * Pads a given string or number with zeros.\n *\n * @param value - Value to zero-pad.\n * @param length - Amount of characters to pad.\n * @returns Left-padded number/string.\n */\nexport const zeroPad = (value, length = 2) => {\n    if (length === 0) return value;\n    const strValue = String(value);\n    return strValue.length >= length ? strValue : ('0'.repeat(length) + strValue).slice(length * -1);\n};\n\n/**\n * Calculates the remaining time as a percentage\n *\n * @param start - Start date\n * @param now - Current date\n * @param end - End date\n * @returns Percentage of the remaining time\n */\nexport const getProgressPercentage = (start, now, end) => {\n    const difference = end.getTime() - start.getTime();\n    return 100 - Math.round(((now.getTime() - start.getTime()) * 100) / difference);\n};\n\n/**\n * Calculates the difference in minutes and seconds from now to endDate\n *\n * @param startTime -\n * @param endTime -\n * @returns  Time difference\n */\nexport const getTimeDifference = (startTime, endTime) => {\n    const now = new Date();\n    const diff = endTime.getTime() - now.getTime();\n    const seconds = diff / 1000;\n    const percentage = getProgressPercentage(startTime, now, endTime);\n\n    return {\n        total: diff,\n        minutes: zeroPad(Math.floor((seconds / 60) % 60)),\n        seconds: zeroPad(Math.floor(seconds % 60)),\n        completed: diff <= 0,\n        percentage\n    };\n};\n","import { interpolateElement } from '../../../language/utils';\nimport { SRPanel } from '../../../core/Errors/SRPanel';\nimport Language from '../../../language';\nimport { CountdownTime } from './types';\n\ninterface ICountdownA11yService {\n    srPanel: SRPanel;\n    i18n: Language;\n}\n\nexport class CountdownA11yReporter {\n    protected TRANSLATION_KEY = 'sr.wechatpay.timetopay';\n    protected LONG_TIMEOUT = 180000;\n    protected MID_TIMEOUT = 60000;\n    protected SHORT_TIMEOUT = 30000;\n\n    private readonly srPanel: SRPanel;\n    private readonly i18n: Language;\n    private srInterval: ReturnType<typeof setInterval>;\n    private timeout: number;\n    private timeLeft: CountdownTime;\n\n    constructor(props: ICountdownA11yService) {\n        const { srPanel, i18n } = props;\n\n        this.srPanel = srPanel;\n        this.i18n = i18n;\n        // Force the srPanel to update ariaRelevant\n        this.srPanel.setAriaProps({ 'aria-relevant': 'additions text' });\n    }\n\n    public update(time: CountdownTime): void {\n        const { minutes, seconds } = time;\n        if (minutes === '-' || seconds === '-') return;\n\n        const minutesLeft = typeof minutes === 'string' ? parseInt(minutes, 10) : minutes;\n        const secondsLeft = typeof seconds === 'string' ? parseInt(seconds, 10) : seconds;\n        this.timeLeft = { minutes: minutesLeft, seconds: secondsLeft };\n\n        if (minutesLeft > 5 && this.timeout !== this.LONG_TIMEOUT) {\n            this.timeout = this.LONG_TIMEOUT;\n            this.setInterval(this.timeout);\n        }\n        if (minutesLeft >= 1 && minutesLeft <= 5 && this.timeout !== this.MID_TIMEOUT) {\n            this.timeout = this.MID_TIMEOUT;\n            this.setInterval(this.timeout);\n        }\n        if (minutesLeft < 1 && secondsLeft > 0 && this.timeout !== this.SHORT_TIMEOUT) {\n            this.timeout = this.SHORT_TIMEOUT;\n            this.setInterval(this.timeout);\n        }\n    }\n\n    public tearDown(): void {\n        this.clearInterval();\n        // Reset the srPanel ariaRelevant\n        this.srPanel.setAriaProps({ 'aria-relevant': this.srPanel.constructor['defaultProps'].ariaAttributes['aria-relevant'] });\n        this.srPanel.setMessages(null);\n    }\n\n    private setInterval(timeout): void {\n        this.clearInterval();\n        const setSrMessages = () => {\n            this.srPanel.setMessages(null);\n            this.srPanel.setMessages(this.getSrMessages(this.timeLeft));\n        };\n        // To execute immediately\n        setSrMessages();\n        this.srInterval = setInterval(setSrMessages, timeout);\n    }\n\n    private getSrMessages({ minutes, seconds }): Array<string> {\n        const translation = this.i18n.get(this.TRANSLATION_KEY);\n        const getTimeTranslation = time => (time !== 0 ? translation => `${time} ${translation}` : () => '');\n        const fns = [minutes, seconds].map(getTimeTranslation);\n        return [interpolateElement(translation, fns).join('')];\n    }\n\n    private clearInterval(): void {\n        if (this.srInterval) clearInterval(this.srInterval);\n    }\n}\n","import { useEffect, useRef } from 'preact/hooks';\nimport { CountdownA11yReporter } from './CountdownA11yReporter';\nimport useSRPanelContext from '../../../core/Errors/useSRPanelContext';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { CountdownTime } from './types';\n\nexport const useCountdownA11yReporter = (time: CountdownTime): void => {\n    const { i18n } = useCoreContext();\n    const { srPanel } = useSRPanelContext();\n    const reporter = useRef<CountdownA11yReporter>(null);\n\n    useEffect(() => {\n        reporter.current = new CountdownA11yReporter({ i18n, srPanel });\n        return () => {\n            reporter.current.tearDown();\n        };\n    }, []);\n\n    useEffect(() => {\n        try {\n            if (!reporter.current) return;\n            reporter.current.update(time);\n        } catch (e) {\n            reporter.current.tearDown();\n            reporter.current = null;\n            throw e;\n        }\n    }, [time]);\n};\n","import { h } from 'preact';\nimport { getTimeDifference } from './utils';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { CountdownProps, CountdownTime } from './types';\nimport { useCountdownA11yReporter } from './useCountdownA11yReporter';\n\nconst calculateStartAndEndTime = (minutesFromNow: number) => {\n    const secondsFromNow = minutesFromNow * 60000;\n    const nowTime = new Date().getTime();\n    return { startTime: new Date(nowTime), endTime: new Date(nowTime + secondsFromNow) };\n};\n\nfunction Countdown({ minutesFromNow, onTick = () => {}, onCompleted = () => {} }: CountdownProps) {\n    const startAndEndTime = useRef(calculateStartAndEndTime(minutesFromNow));\n    const { startTime, endTime } = startAndEndTime.current;\n    const [time, setTime] = useState<CountdownTime>({\n        minutes: '-',\n        seconds: '-'\n    });\n    useCountdownA11yReporter(time);\n\n    useEffect(() => {\n        const tick = () => {\n            const { minutes, seconds, percentage, completed } = getTimeDifference(startTime, endTime);\n            if (completed) {\n                onCompleted();\n            } else {\n                const timeLeft = { minutes, seconds, percentage };\n                setTime(timeLeft);\n                onTick(timeLeft);\n            }\n        };\n        const interval = setInterval(tick, 1000);\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n\n    return (\n        <span className=\"adyen-checkout__countdown\" role=\"timer\">\n            <span className=\"countdown__minutes\">{time.minutes}</span>\n            <span className=\"countdown__separator\">:</span>\n            <span className=\"countdown__seconds\">{time.seconds}</span>\n        </span>\n    );\n}\n\nexport default Countdown;\n","import { httpPost } from './http';\n\n/**\n * Calls the payment status endpoint\n * @param paymentData -\n * @param clientKey -\n * @param loadingContext -\n * @param timeout - in milliseconds\n * @returns a promise containing the response of the call\n */\nexport default function checkPaymentStatus(paymentData, clientKey, loadingContext, timeout) {\n    if (!paymentData || !clientKey) {\n        throw new Error('Could not check the payment status');\n    }\n\n    const options = {\n        loadingContext,\n        path: `services/PaymentInitiation/v1/status?clientKey=${clientKey}`,\n        timeout\n    };\n\n    return httpPost(options, { paymentData });\n}\n","import { PaymentResponseData, ProcessedResponse } from '../../types/global-types';\n\n/**\n * Processes a complete response from Adyen by resultCode\n * @param response - to be processed\n * @returns a new object describing the response result (ready for onStatusChange)\n */\nconst processCompleteResponse = (response: PaymentResponseData): ProcessedResponse => {\n    switch (response.resultCode.toLowerCase()) {\n        case 'refused':\n        case 'error':\n        case 'cancelled':\n            return { type: 'error', props: { ...response, message: 'error.subtitle.refused' } };\n        case 'unknown':\n            return { type: 'error', props: { ...response, message: 'error.message.unknown' } };\n        case 'pending':\n        case 'received':\n            return { type: response.resultCode.toLowerCase(), props: response };\n        case 'authorised':\n            return { type: 'success', props: response };\n        default:\n            return { type: 'success', props: response };\n    }\n};\n\n/**\n * Processes a response from Adyen by type\n * @param response - to be processed\n * @returns a new object describing the response result (ready for onStatusChange)\n */\nexport const processResponse = (response: PaymentResponseData): ProcessedResponse => {\n    if (!response.type && response.resultCode) {\n        return processCompleteResponse(response);\n    }\n\n    if (!response.type) {\n        return { type: 'error', props: response };\n    }\n\n    switch (response.type.toLowerCase()) {\n        case 'pending':\n            return { type: 'pending', props: response };\n        case 'complete':\n            return processCompleteResponse(response);\n        case 'validation':\n            return { type: 'error', props: response };\n        default:\n            return { type: 'error', props: response };\n    }\n};\n\nexport default processResponse;\n","import { useEffect } from 'preact/hooks';\nimport useSRPanelContext from './useSRPanelContext';\n\nexport const useA11yReporter = (statusMessage): void => {\n    const { srPanel } = useSRPanelContext();\n\n    useEffect(() => {\n        srPanel.setAriaProps({ 'aria-relevant': 'additions text' });\n        return () => {\n            srPanel.setMessages(null);\n            srPanel.setAriaProps({ 'aria-relevant': srPanel.constructor['defaultProps'].ariaAttributes['aria-relevant'] });\n        };\n    }, []);\n\n    useEffect(() => {\n        srPanel.setMessages(statusMessage);\n    }, [statusMessage]);\n};\n","import { Component, h } from 'preact';\nimport Countdown from '../Countdown';\nimport Button from '../Button';\nimport Spinner from '../Spinner';\nimport checkPaymentStatus from '../../../core/Services/payment-status';\nimport processResponse from '../../../core/ProcessResponse';\n\nimport './QRLoader.scss';\nimport { QRLoaderProps, QRLoaderState } from './types';\nimport copyToClipboard from '../../../utils/clipboard';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport ContentSeparator from '../ContentSeparator';\nimport { StatusObject } from '../Await/types';\nimport useImage from '../../../core/Context/useImage';\nimport { useA11yReporter } from '../../../core/Errors/useA11yReporter';\nimport useAutoFocus from '../../../utils/useAutoFocus';\nimport { ANALYTICS_DOWNLOAD_STR, ANALYTICS_QR_CODE_DOWNLOAD } from '../../../core/Analytics/constants';\nimport { PREFIX } from '../Icon/constants';\n\nconst QRCODE_URL = 'utility/v1/barcode.png?type=qrCode&data=';\n\nclass QRLoader extends Component<QRLoaderProps, QRLoaderState> {\n    private timeoutId;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            buttonStatus: 'default',\n            completed: false,\n            delay: props.delay,\n            expired: false,\n            loading: true,\n            percentage: 100,\n            timePassed: 0\n        };\n    }\n\n    public static defaultProps = {\n        delay: 2000,\n        countdownTime: 15,\n        onError: () => {},\n        onComplete: () => {},\n        throttleTime: 60000,\n        classNameModifiers: [],\n        throttledInterval: 10000,\n        introduction: 'wechatpay.scanqrcode',\n        timeToPay: 'wechatpay.timetopay',\n        buttonLabel: 'openApp'\n    };\n\n    componentDidMount() {\n        this.statusInterval();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timeoutId);\n    }\n\n    public redirectToApp = (url: string | URL) => {\n        window.location.assign(url);\n    };\n\n    // Retry until getting a complete response from the server, or it times out\n    public statusInterval = (responseTime = 0) => {\n        // If we are already in the final statuses, do not poll!\n        if (this.state.expired || this.state.completed) return;\n\n        this.setState(previous => ({ timePassed: previous.timePassed + this.props.delay + responseTime }));\n        // Changes interval time to 10 seconds after 1 minute (60 seconds)\n        const newDelay = this.state.timePassed >= this.props.throttleTime ? this.props.throttledInterval : this.state.delay;\n        this.pollStatus(newDelay);\n    };\n\n    private pollStatus(delay: number) {\n        clearTimeout(this.timeoutId);\n\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        this.timeoutId = setTimeout(async () => {\n            // Wait for previous status call to finish.\n            // Also taking the server response time into the consideration to calculate timePassed.\n            const start = performance.now();\n            await this.checkStatus();\n            const end = performance.now();\n            this.statusInterval(Math.round(end - start));\n        }, delay);\n    }\n\n    private onTick = (time): void => {\n        this.setState({ percentage: time.percentage });\n    };\n\n    private onTimeUp = (): void => {\n        this.setState({ expired: true });\n        clearTimeout(this.timeoutId);\n        this.props.onError(new AdyenCheckoutError('ERROR', 'Payment Expired'));\n    };\n\n    private onComplete = (status: StatusObject): void => {\n        clearTimeout(this.timeoutId);\n        this.setState({ completed: true, loading: false });\n\n        const state = {\n            data: {\n                details: { payload: status.props.payload },\n                paymentData: this.props.paymentData\n            }\n        };\n\n        this.props.onComplete(state, this);\n    };\n\n    private onError = (status: StatusObject): void => {\n        clearTimeout(this.timeoutId);\n        this.setState({ expired: true, loading: false });\n\n        if (status.props.payload) {\n            const state = {\n                data: {\n                    details: { payload: status.props.payload },\n                    paymentData: this.props.paymentData\n                }\n            };\n            this.props.onComplete(state, this);\n        }\n\n        const error = new AdyenCheckoutError('ERROR', 'error result with no payload in response');\n        return this.props.onError(error);\n    };\n\n    private checkStatus = () => {\n        const { paymentData, clientKey, loadingContext, throttledInterval } = this.props;\n\n        return checkPaymentStatus(paymentData, clientKey, loadingContext, throttledInterval)\n            .then(processResponse)\n            .catch(response => ({ type: 'network-error', props: response }))\n            .then((status: StatusObject) => {\n                switch (status.type) {\n                    case 'success':\n                        this.onComplete(status);\n                        break;\n                    case 'error':\n                        this.onError(status);\n                        break;\n                    default:\n                        this.setState({ loading: false });\n                }\n                return status;\n            });\n    };\n\n    render({ amount, url, brandLogo, brandName, countdownTime, type, onActionHandled }: QRLoaderProps, { expired, completed, loading }) {\n        const { i18n, loadingContext } = useCoreContext();\n        const getImage = useImage();\n\n        const qrCodeImage = this.props.qrCodeData\n            ? `${loadingContext}${QRCODE_URL}${this.props.qrCodeData}&clientKey=${this.props.clientKey}`\n            : this.props.qrCodeImage;\n\n        const finalState = (image, message) => {\n            const status = i18n.get(message);\n            useA11yReporter(status);\n            return (\n                <div className=\"adyen-checkout__qr-loader adyen-checkout__qr-loader--result\">\n                    <img\n                        className=\"adyen-checkout__qr-loader__icon adyen-checkout__qr-loader__icon--result\"\n                        src={getImage({ imageFolder: 'components/' })(image)}\n                        alt={status}\n                    />\n                    <div className=\"adyen-checkout__qr-loader__subtitle\">{status}</div>\n                </div>\n            );\n        };\n\n        if (expired) {\n            return finalState('error', 'error.subtitle.payment');\n        }\n\n        if (completed) {\n            return finalState('success', 'creditCard.success');\n        }\n\n        if (loading) {\n            return (\n                <div className=\"adyen-checkout__qr-loader\">\n                    {brandLogo && (\n                        <div className=\"adyen-checkout__qr-loader__brand-logo-wrapper\">\n                            <img alt={brandName} src={brandLogo} className=\"adyen-checkout__qr-loader__brand-logo\" />\n                        </div>\n                    )}\n                    <Spinner />\n                </div>\n            );\n        }\n\n        const timeToPayString = i18n.get(this.props.timeToPay).split('%@');\n\n        const qrSubtitleRef = useAutoFocus();\n        const classnames = this.props.classNameModifiers.map(m => `adyen-checkout__qr-loader--${m}`);\n\n        return (\n            <div className={`adyen-checkout__qr-loader adyen-checkout__qr-loader--${type} ${classnames.join(' ')}`}>\n                {brandLogo && (\n                    <div className=\"adyen-checkout__qr-loader__brand-logo-wrapper\">\n                        <img src={brandLogo} alt={brandName} className=\"adyen-checkout__qr-loader__brand-logo\" />\n                    </div>\n                )}\n\n                {amount && amount.value && amount.currency && (\n                    <div className=\"adyen-checkout__qr-loader__payment_amount\">{i18n.amount(amount.value, amount.currency)}</div>\n                )}\n\n                {url && (\n                    <div className=\"adyen-checkout__qr-loader__app-link\">\n                        {this.props.redirectIntroduction && (\n                            <div className=\"adyen-checkout__qr-loader__subtitle\">{i18n.get(this.props.redirectIntroduction)}</div>\n                        )}\n                        <Button classNameModifiers={['qr-loader']} onClick={() => this.redirectToApp(url)} label={i18n.get(this.props.buttonLabel)} />\n                        <ContentSeparator />\n                    </div>\n                )}\n\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n                <div ref={qrSubtitleRef} tabIndex={0} className=\"adyen-checkout__qr-loader__subtitle\">\n                    {typeof this.props.introduction === 'string' ? i18n.get(this.props.introduction) : this.props.introduction?.()}\n                </div>\n\n                <img\n                    src={qrCodeImage}\n                    alt={i18n.get('wechatpay.scanqrcode')}\n                    onLoad={() => {\n                        onActionHandled?.({\n                            componentType: this.props.type,\n                            actionDescription: 'qr-code-loaded'\n                        });\n                    }}\n                />\n\n                <div className=\"adyen-checkout__qr-loader__progress\">\n                    <span className=\"adyen-checkout__qr-loader__percentage\" style={{ width: `${this.state.percentage}%` }} />\n                </div>\n\n                <div className=\"adyen-checkout__qr-loader__countdown\">\n                    {timeToPayString[0]}&nbsp;\n                    <Countdown minutesFromNow={countdownTime} onTick={this.onTick} onCompleted={this.onTimeUp} />\n                    &nbsp;{timeToPayString[1]}\n                </div>\n\n                {this.props.instructions && (\n                    <div className=\"adyen-checkout__qr-loader__instructions\">\n                        {typeof this.props.instructions === 'string' ? i18n.get(this.props.instructions) : this.props.instructions?.()}\n                    </div>\n                )}\n\n                {this.props.copyBtn && (\n                    <div className=\"adyen-checkout__qr-loader__actions\">\n                        <Button\n                            inline\n                            variant=\"action\"\n                            onClick={(e, { complete }) => {\n                                copyToClipboard(this.props.qrCodeData);\n                                this.props.onSubmitAnalytics({\n                                    type: ANALYTICS_DOWNLOAD_STR,\n                                    target: ANALYTICS_QR_CODE_DOWNLOAD\n                                });\n                                complete();\n                            }}\n                            icon={getImage({ imageFolder: 'components/' })(`${PREFIX}copy`)}\n                            label={i18n.get('button.copy')}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default QRLoader;\n","import { useRef, useEffect } from 'preact/hooks';\n\nconst useAutoFocus = () => {\n    const ref = useRef(null);\n\n    useEffect(() => {\n        ref.current?.focus();\n    }, []);\n\n    return ref;\n};\n\nexport default useAutoFocus;\n","import { h } from 'preact';\nimport UIElement from '../../internal/UIElement/UIElement';\nimport QRLoader from '../../internal/QRLoader';\nimport { CoreProvider } from '../../../core/Context/CoreProvider';\nimport RedirectButton from '../../internal/RedirectButton';\nimport SRPanelProvider from '../../../core/Errors/SRPanelProvider';\nimport { QRLoaderConfiguration } from './types';\n\nclass QRLoaderContainer<T extends QRLoaderConfiguration = QRLoaderConfiguration> extends UIElement<T> {\n    // Using the generic here allow to fully extend the QRLoaderContainer (including it's props)\n    protected static defaultProps = {\n        qrCodeImage: '',\n        amount: null,\n        paymentData: null,\n        onError: () => {},\n        onComplete: () => {}\n    };\n\n    formatData() {\n        return {\n            paymentMethod: {\n                type: this.type,\n                ...this.state.data\n            }\n        };\n    }\n\n    get isValid() {\n        return true;\n    }\n\n    // Makes possible to extend the final QR code step\n    public renderQRCode() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                    <QRLoader\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        {...this.props}\n                        type={this.constructor['type']}\n                        brandLogo={this.props.brandLogo || this.icon}\n                        delay={this.props.delay}\n                        onComplete={this.onComplete}\n                        countdownTime={this.props.countdownTime}\n                        instructions={this.props.instructions}\n                        onActionHandled={this.onActionHandled}\n                        brandName={this.displayName}\n                        onSubmitAnalytics={this.submitAnalytics}\n                    />\n                </SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n\n    render() {\n        if (this.props.paymentData) {\n            return this.renderQRCode();\n        }\n\n        if (this.props.showPayButton) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <RedirectButton\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                </CoreProvider>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default QRLoaderContainer;\n","import QRLoaderContainer from '../helpers/QRLoaderContainer/QRLoaderContainer';\nimport { STATUS_INTERVAL, COUNTDOWN_MINUTES } from './config';\nimport { TxVariants } from '../tx-variants';\n\nclass BCMCMobileElement extends QRLoaderContainer {\n    public static type = TxVariants.bcmc_mobile;\n    public static txVariants = [TxVariants.bcmc_mobile, TxVariants.bcmc_mobile_QR];\n\n    formatProps(props) {\n        return {\n            delay: STATUS_INTERVAL,\n            countdownTime: COUNTDOWN_MINUTES,\n            timeToPay: 'payme.timeToPay',\n            ...super.formatProps(props)\n        };\n    }\n}\n\nexport default BCMCMobileElement;\n","export const COUNTDOWN_MINUTES = 15; // min\nexport const STATUS_INTERVAL = 2000; // ms\n\nexport default {\n    STATUS_INTERVAL,\n    COUNTDOWN_MINUTES\n};\n","import { ValidatorRules } from '../../../utils/Validator/types';\nimport validateSSN from '../../internal/SocialSecurityNumberBrazil/validate';\n\nexport const pixValidationRules: ValidatorRules = {\n    socialSecurityNumber: {\n        validate: validateSSN,\n        errorMessage: '',\n        modes: ['blur']\n    },\n    default: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: '',\n        modes: ['blur']\n    }\n};\n","import { formatCPFCNPJ } from '../../internal/SocialSecurityNumberBrazil/utils';\n\nexport const pixFormatters = {\n    socialSecurityNumber: ssn => formatCPFCNPJ(ssn)\n};\n","import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport { pixValidationRules } from './validate';\nimport { pixFormatters } from './utils';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport useForm from '../../../utils/useForm';\nimport { BrazilPersonalDetail } from '../../internal/SocialSecurityNumberBrazil/BrazilPersonalDetail';\nimport { PixInputDataState, PixInputProps } from './types';\n\nfunction PixInput({ name, data: dataProps, personalDetailsRequired, showPayButton, onChange, payButton }: PixInputProps) {\n    const { i18n } = useCoreContext();\n    const formSchema = ['firstName', 'lastName', 'socialSecurityNumber'];\n    const { handleChangeFor, triggerValidation, setSchema, data, valid, errors, isValid } = useForm<PixInputDataState>({\n        schema: formSchema,\n        defaultData: dataProps,\n        rules: pixValidationRules,\n        formatters: pixFormatters\n    });\n\n    // Handle form schema updates\n    useEffect(() => {\n        const newSchema = personalDetailsRequired ? [...formSchema] : [];\n        setSchema(newSchema);\n    }, [personalDetailsRequired]);\n\n    const [status, setStatus] = useState('ready');\n    this.setStatus = setStatus;\n\n    this.showValidation = () => {\n        triggerValidation();\n    };\n\n    useEffect(() => {\n        onChange({ data, valid, errors, isValid });\n    }, [onChange, data, valid, errors]);\n\n    const buttonModifiers = !personalDetailsRequired ? ['standalone'] : [];\n\n    return (\n        <div className=\"adyen-checkout__pix-input__field\" style={!showPayButton && !personalDetailsRequired ? { display: 'none' } : null}>\n            {personalDetailsRequired && (\n                <BrazilPersonalDetail i18n={i18n} data={data} handleChangeFor={handleChangeFor} errors={errors} valid={valid} />\n            )}\n\n            {showPayButton &&\n                payButton({\n                    status,\n                    label: `${i18n.get('continueTo')} ${name}`,\n                    classNameModifiers: buttonModifiers\n                })}\n        </div>\n    );\n}\n\nexport default PixInput;\n","import { h } from 'preact';\nimport QRLoaderContainer from '../helpers/QRLoaderContainer/QRLoaderContainer';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport PixInput from './PixInput';\nimport { cleanCPFCNPJ } from '../internal/SocialSecurityNumberBrazil/utils';\nimport { PixElementData, PixConfiguration } from './types';\nimport { TxVariants } from '../tx-variants';\n\nclass PixElement extends QRLoaderContainer<PixConfiguration> {\n    public static type = TxVariants.pix;\n\n    public static defaultProps = {\n        personalDetailsRequired: false,\n        countdownTime: 15,\n        delay: 2000,\n        ...QRLoaderContainer.defaultProps\n    };\n\n    get isValid(): boolean {\n        return !!this.state.isValid;\n    }\n\n    formatProps(props): PixConfiguration {\n        return {\n            copyBtn: true,\n            introduction: 'pix.instructions',\n            ...super.formatProps(props)\n        };\n    }\n\n    formatData(): PixElementData {\n        const { data = {} } = this.state;\n        const { firstName, lastName, socialSecurityNumber = '' } = data;\n\n        return {\n            paymentMethod: {\n                type: this.props.type || this.constructor['type']\n            },\n            ...(firstName && lastName && { shopperName: { firstName, lastName } }),\n            ...(socialSecurityNumber && { socialSecurityNumber: cleanCPFCNPJ(socialSecurityNumber) })\n        };\n    }\n\n    render() {\n        if (this.props.paymentData) {\n            return this.renderQRCode();\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <PixInput\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    showPayButton={this.props.showPayButton}\n                    personalDetailsRequired={this.props.personalDetailsRequired}\n                    name={this.displayName}\n                    onChange={this.setState}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default PixElement;\n","import QRLoaderContainer from '../helpers/QRLoaderContainer/QRLoaderContainer';\nimport { TxVariants } from '../tx-variants';\nimport './Swish.scss';\n\nclass SwishElement extends QRLoaderContainer {\n    public static type = TxVariants.swish;\n\n    formatProps(props) {\n        return {\n            delay: 2000, // ms\n            countdownTime: 3, // min\n            instructions: 'swish.pendingMessage',\n            ...super.formatProps(props)\n        };\n    }\n}\n\nexport default SwishElement;\n","import QRLoaderContainer from '../helpers/QRLoaderContainer/QRLoaderContainer';\nimport { delay, countdownTime } from './config';\nimport { TxVariants } from '../tx-variants';\n\nclass WeChatPayElement extends QRLoaderContainer {\n    public static type = TxVariants.wechatpayQR;\n    public static txVariants = [TxVariants.wechatpay];\n    public static analyticsType = 'wechatpayQR'; // Needed for use-case where merchant makes a payment themselves and then calls checkout.createFromAction(action)\n\n    formatProps(props) {\n        return {\n            delay,\n            countdownTime,\n            ...super.formatProps(props)\n        };\n    }\n}\n\nexport default WeChatPayElement;\n","export const countdownTime = 30; // min\nexport const delay = 2000; // ms\n\nexport default {\n    delay,\n    countdownTime\n};\n","import QRLoaderContainer from '../helpers/QRLoaderContainer/QRLoaderContainer';\nimport { delay, countdownTime } from './config';\nimport { TxVariants } from '../tx-variants';\n\nclass PromptPayElement extends QRLoaderContainer {\n    public static type = TxVariants.promptpay;\n\n    formatProps(props) {\n        return {\n            delay,\n            countdownTime,\n            ...super.formatProps(props)\n        };\n    }\n}\n\nexport default PromptPayElement;\n","export const countdownTime = 1.5; // min\nexport const delay = 2000; // ms\n\nexport default {\n    delay,\n    countdownTime\n};\n","export const countdownTime = 3; // min\nexport const delay = 2000; // ms\n\nexport default {\n    delay,\n    countdownTime\n};\n","import { ComponentChildren, h } from 'preact';\nimport './TimelineWrapper.scss';\n\ninterface TimelineWrapperProps {\n    children: ComponentChildren;\n    className?: string;\n}\n\nconst TimelineWrapper = ({ children, className }: TimelineWrapperProps) => {\n    return <div className={`adyen-checkout-timeline-wrapper ${className}`}>{children}</div>;\n};\n\nexport { TimelineWrapper };\n","import { h } from 'preact';\nimport './Timeline.scss';\n\ninterface Timeline {\n    instructions: string[];\n}\n\nconst Timeline = ({ instructions }: Timeline) => {\n    if (!instructions || instructions.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className=\"adyen-checkout-timeline\">\n            <ol className=\"adyen-checkout-timeline__items\">\n                {instructions.map((value, index) => (\n                    <li className=\"adyen-checkout-timeline-item\" key={index}>\n                        <div className=\"adyen-checkout-timeline-item__row\">\n                            <div aria-hidden=\"true\" className=\"adyen-checkout-timeline-item__marker\">\n                                <svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\">\n                                    <path\n                                        fill=\"#00112C\"\n                                        d=\"M5.5 3.25C4.25736 3.25 3.25 4.25736 3.25 5.5V10.5C3.25 11.7426 4.25736 12.75 5.5 12.75H10.5C11.7426 12.75 12.75 11.7426 12.75 10.5V5.5C12.75 4.25736 11.7426 3.25 10.5 3.25H5.5Z\"\n                                    ></path>\n                                </svg>\n                                <div className=\"adyen-checkout-timeline-item__separator\"></div>\n                            </div>\n                            <div className=\"adyen-checkout-timeline-item__content\">\n                                <div className=\"adyen-checkout-timeline-item__title\">{value}</div>\n                            </div>\n                        </div>\n                    </li>\n                ))}\n            </ol>\n        </div>\n    );\n};\n\nexport { Timeline };\n","import { useCallback, useEffect, useState } from 'preact/hooks';\n\nfunction isTabletWidthOrSmaller() {\n    return window.matchMedia('(max-width: 1024px)').matches;\n}\n\nconst useIsMobile = () => {\n    const [isMobileScreenSize, setIsMobileScreenSize] = useState(isTabletWidthOrSmaller());\n\n    const handleWindowResize = useCallback(() => {\n        const isMobileScreenSize = isTabletWidthOrSmaller();\n        setIsMobileScreenSize(isMobileScreenSize);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowResize);\n        return () => {\n            window.removeEventListener('resize', handleWindowResize);\n        };\n    }, [handleWindowResize]);\n\n    return { isMobileScreenSize };\n};\n\nexport { useIsMobile };\n","import { h } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport './PayNowIntroduction.scss';\nimport { TimelineWrapper, Timeline } from '../../internal/Timeline';\nimport { useIsMobile } from '../../../utils/useIsMobile';\n\nconst PayNowIntroduction = () => {\n    const { i18n } = useCoreContext();\n    const { isMobileScreenSize } = useIsMobile();\n\n    const instructions = [\n        i18n.get('paynow.mobileViewInstruction.step1'),\n        i18n.get('paynow.mobileViewInstruction.step2'),\n        i18n.get('paynow.mobileViewInstruction.step3'),\n        i18n.get('paynow.mobileViewInstruction.step4'),\n        i18n.get('paynow.mobileViewInstruction.step5')\n    ];\n\n    return (\n        <div className=\"adyen-checkout-paynow__introduction\" data-testid=\"paynow-introduction\">\n            {isMobileScreenSize ? (\n                <TimelineWrapper>\n                    <Timeline instructions={instructions} />\n                </TimelineWrapper>\n            ) : (\n                i18n.get('paynow.scanQrCode')\n            )}\n        </div>\n    );\n};\n\nexport { PayNowIntroduction };\n","import { h } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport ContentSeparator from '../../internal/ContentSeparator';\nimport './PayNowInstructions.scss';\nimport { useIsMobile } from '../../../utils/useIsMobile';\n\nconst PayNowInstructions = () => {\n    const { i18n } = useCoreContext();\n    const { isMobileScreenSize } = useIsMobile();\n\n    if (!isMobileScreenSize) return;\n\n    return (\n        <div className=\"adyen-checkout-paynow__instructions\">\n            <ContentSeparator />\n            <p>{i18n.get('paynow.scanQrCode')}</p>\n        </div>\n    );\n};\n\nexport { PayNowInstructions };\n","import QRLoaderContainer from '../helpers/QRLoaderContainer/QRLoaderContainer';\nimport { delay, countdownTime } from './config';\nimport { TxVariants } from '../tx-variants';\nimport { PayNowIntroduction } from './components/PayNowIntroduction';\nimport { PayNowInstructions } from './components/PayNowInstructions';\n\nclass PayNowElement extends QRLoaderContainer {\n    public static type = TxVariants.paynow;\n\n    formatProps(props) {\n        return {\n            introduction: PayNowIntroduction,\n            instructions: PayNowInstructions,\n            timeToPay: 'payme.timeToPay',\n            delay,\n            countdownTime,\n            ...super.formatProps(props)\n        };\n    }\n}\n\nexport default PayNowElement;\n","import QRLoaderContainer from '../helpers/QRLoaderContainer/QRLoaderContainer';\nimport { delay, countdownTime } from './config';\nimport { TxVariants } from '../tx-variants';\n\nclass DuitNowElement extends QRLoaderContainer {\n    public static type = TxVariants.duitnow;\n\n    formatProps(props) {\n        return {\n            delay,\n            countdownTime,\n            ...super.formatProps(props)\n        };\n    }\n}\n\nexport default DuitNowElement;\n","export const countdownTime = 1.5; // min\nexport const delay = 2000; // ms\n\nexport default {\n    delay,\n    countdownTime\n};\n","import { useIsMobile } from '../../../utils/useIsMobile';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { Timeline, TimelineWrapper } from '../../internal/Timeline';\nimport { h } from 'preact';\n\nconst PayMeInstructions = () => {\n    const { i18n } = useCoreContext();\n    const { isMobileScreenSize } = useIsMobile();\n\n    if (isMobileScreenSize) {\n        return null;\n    }\n\n    const instructions = i18n.get('payme.instructions.steps').split('%@');\n\n    return (\n        <TimelineWrapper>\n            <Timeline instructions={instructions} />\n        </TimelineWrapper>\n    );\n};\n\nexport { PayMeInstructions };\n","import { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { useIsMobile } from '../../../utils/useIsMobile';\nimport { Timeline, TimelineWrapper } from '../../internal/Timeline';\nimport { Fragment, h } from 'preact';\n\nconst PayMeIntroduction = () => {\n    const { i18n } = useCoreContext();\n    const { isMobileScreenSize } = useIsMobile();\n\n    const instructions = i18n.get('payme.instructions.steps').split('%@');\n\n    return isMobileScreenSize ? (\n        <TimelineWrapper>\n            <Timeline instructions={instructions} />\n        </TimelineWrapper>\n    ) : (\n        <Fragment>{i18n.get('payme.scanQrCode')}</Fragment>\n    );\n};\n\nexport { PayMeIntroduction };\n","import QRLoaderContainer from '../helpers/QRLoaderContainer';\nimport { PayMeInstructions } from './components/PayMeInstructions';\nimport { PayMeIntroduction } from './components/PayMeIntroduction';\n\nclass PayMeElement extends QRLoaderContainer {\n    public static type = 'payme';\n    private static defaultCountdown = 10; // min\n    private static defaultDelay = 2000; // ms\n\n    formatProps(props) {\n        return {\n            delay: PayMeElement.defaultDelay,\n            countdownTime: PayMeElement.defaultCountdown,\n            redirectIntroduction: 'payme.openPayMeApp',\n            timeToPay: 'payme.timeToPay',\n            buttonLabel: 'payme.redirectButtonLabel',\n            introduction: PayMeIntroduction,\n            instructions: PayMeInstructions,\n            ...super.formatProps(props)\n        };\n    }\n}\n\nexport default PayMeElement;\n","import { h } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Field from '../../internal/FormFields/Field';\nimport './BlikInput.scss';\nimport useForm from '../../../utils/useForm';\nimport { digitsOnlyFormatter } from '../../../utils/Formatters/formatters';\nimport useImage from '../../../core/Context/useImage';\nimport InputText from '../../internal/FormFields/InputText';\nimport { UIElementProps } from '../../internal/UIElement/types';\nimport { PREFIX } from '../../internal/Icon/constants';\n\ninterface BlikInputProps extends UIElementProps {\n    data?: BlikInputDataState;\n    placeholders?: BlikInputDataState;\n}\n\ninterface BlikInputDataState {\n    blikCode: string;\n}\n\nfunction BlikInput(props: BlikInputProps) {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm<BlikInputDataState>({\n        schema: ['blikCode'],\n        rules: {\n            blikCode: {\n                validate: code => code?.length === 6,\n                errorMessage: 'blik.invalid',\n                modes: ['blur']\n            }\n        },\n        formatters: {\n            blikCode: digitsOnlyFormatter\n        }\n    });\n\n    useEffect(() => {\n        // @ts-ignore TODO: Fix this. Preact component types should not inherit from UIElementProps.\n        props.onChange({ data, errors, valid, isValid }, this);\n    }, [data, valid, errors, isValid]);\n\n    const [status, setStatus] = useState('ready');\n    this.setStatus = setStatus;\n    this.showValidation = triggerValidation;\n\n    return (\n        <div className=\"adyen-checkout__blik\">\n            <p className=\"adyen-checkout__blik__helper\">{i18n.get('blik.help')}</p>\n            <Field\n                errorMessage={!!errors.blikCode && i18n.get(errors.blikCode.errorMessage)}\n                label={i18n.get('blik.code')}\n                classNameModifiers={['blikCode', '50']}\n                isValid={valid.blikCode}\n                dir={'ltr'}\n                name={'blikCode'}\n            >\n                <InputText\n                    value={data.blikCode}\n                    name={'blikCode'}\n                    spellcheck={false}\n                    required={true}\n                    autocorrect={'off'}\n                    autocomplete={'off'}\n                    onInput={handleChangeFor('blikCode', 'input')}\n                    onBlur={handleChangeFor('blikCode', 'blur')}\n                    placeholder={props?.placeholders?.blikCode}\n                    inputMode={'numeric'}\n                    maxLength={6}\n                />\n            </Field>\n\n            {props.showPayButton &&\n                props.payButton({\n                    status,\n                    icon: getImage({ imageFolder: 'components/' })(`${PREFIX}lock`)\n                })}\n        </div>\n    );\n}\n\nBlikInput.defaultProps = { data: { blikCode: '' } };\n\nexport default BlikInput;\n","import { h } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport classnames from 'classnames';\nimport checkPaymentStatus from '../../../core/Services/payment-status';\nimport processResponse from '../../../core/ProcessResponse';\n\nimport Spinner from '../../internal/Spinner';\nimport Countdown from '../Countdown';\nimport Button from '../Button';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { AwaitComponentProps, StatusObject } from './types';\nimport './Await.scss';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport ContentSeparator from '../ContentSeparator';\nimport useImage from '../../../core/Context/useImage';\n\nfunction Await(props: AwaitComponentProps) {\n    const { i18n, loadingContext } = useCoreContext();\n    const getImage = useImage();\n    const [completed, setCompleted] = useState(false);\n    const [expired, setExpired] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [hasCalledActionHandled, setHasCalledActionHandled] = useState(false);\n    const [delay, setDelay] = useState(props.delay);\n    const [percentage, setPercentage] = useState(100);\n    const [timePassed, setTimePassed] = useState(0);\n    const [hasAdjustedTime, setHasAdjustedTime] = useState(false);\n    const [storedTimeout, setStoredTimeout] = useState(null);\n\n    const onTimeUp = (): void => {\n        setExpired(true);\n        clearTimeout(storedTimeout);\n        props.onError(new AdyenCheckoutError('ERROR', 'Payment Expired'));\n    };\n\n    const onTick = (time): void => {\n        setPercentage(time.percentage);\n    };\n\n    const onComplete = (status: StatusObject): void => {\n        // Only make details call if we have a payload\n        if (status.props.payload) {\n            setCompleted(true);\n            const state = {\n                data: {\n                    details: { payload: status.props.payload },\n                    paymentData: props.paymentData\n                }\n            };\n            // Send success response to onAdditionalDetails\n            return props.onComplete(state, this);\n        }\n\n        // Show error state & call merchant defined error callback if we do not have a payload\n        setExpired(true);\n        props.onError(new AdyenCheckoutError('ERROR', 'successful result, but no payload in response'));\n    };\n\n    const onError = (status: StatusObject): void => {\n        setExpired(true);\n\n        // Only make details call if we have a payload\n        if (status.props.payload) {\n            const state = {\n                data: {\n                    details: { payload: status.props.payload },\n                    paymentData: props.paymentData\n                }\n            };\n            // Send error response to onAdditionalDetails\n            return props.onComplete(state, this);\n        }\n\n        // Call merchant defined error callback if we do not have a payload\n        props.onError(new AdyenCheckoutError('ERROR', 'error result with no payload in response'));\n    };\n\n    const checkStatus = (): void => {\n        const { paymentData, clientKey, throttleInterval } = props;\n\n        if (!hasCalledActionHandled) {\n            props.onActionHandled?.({ componentType: props.type, actionDescription: 'polling-started' });\n            setHasCalledActionHandled(true);\n        }\n\n        void checkPaymentStatus(paymentData, clientKey, loadingContext, throttleInterval)\n            .then(processResponse)\n            .catch(({ message, ...response }) => ({\n                type: 'network-error',\n                props: {\n                    ...(message && { message: i18n.get(message) }),\n                    ...response\n                }\n            }))\n            .then((status: StatusObject) => {\n                switch (status.type) {\n                    case 'success':\n                        onComplete(status);\n                        break;\n\n                    case 'error':\n                        onError(status);\n                        break;\n\n                    default:\n                        setLoading(false);\n                }\n            });\n    };\n\n    const redirectToApp = (url): void => {\n        window.location.assign(url);\n    };\n\n    useEffect(() => {\n        if (props.shouldRedirectAutomatically && props.url) {\n            redirectToApp(props.url);\n        }\n    }, [props.shouldRedirectAutomatically, props.url]);\n\n    useEffect(() => {\n        checkStatus();\n        return (): void => {\n            clearTimeout(storedTimeout);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (expired) return clearTimeout(storedTimeout);\n\n        if (completed) return clearTimeout(storedTimeout);\n\n        if (!loading) {\n            // Retry until getting a complete response from the server OR it times out\n            // Changes setTimeout time to new value (throttleInterval) after a certain amount of time (throttleTime) has passed\n            const statusInterval = (): void => {\n                checkStatus();\n\n                const actualTimePassed = timePassed + delay;\n                // timePassed is the value that is the main \"engine\" that drives this useEffect/polling\n                setTimePassed(actualTimePassed);\n\n                if (actualTimePassed >= props.throttleTime && !hasAdjustedTime) {\n                    setDelay(props.throttleInterval);\n                    setHasAdjustedTime(true);\n                }\n            };\n\n            // Create (another) interval to poll for a result\n            setStoredTimeout(setTimeout(statusInterval, delay));\n        }\n    }, [loading, expired, completed, timePassed]);\n\n    const finalState = (image, message) => (\n        <div className=\"adyen-checkout__await adyen-checkout__await--result\">\n            <img\n                className=\"adyen-checkout__await__icon adyen-checkout__await__icon--result\"\n                src={getImage({ imageFolder: 'components/' })(image)}\n                alt={i18n.get(message)}\n            />\n            <div className=\"adyen-checkout__await__subtitle adyen-checkout__await__subtitle--result\">{i18n.get(message)}</div>\n        </div>\n    );\n\n    if (expired) {\n        return finalState('error', 'error.subtitle.payment');\n    }\n\n    if (completed) {\n        return finalState('success', 'creditCard.success');\n    }\n\n    if (loading) {\n        return (\n            <div className=\"adyen-checkout__await\">\n                {props.brandLogo && <img src={props.brandLogo} alt={props.type} className=\"adyen-checkout__await__brand-logo\" />}\n                <Spinner inline={false} size=\"large\" />\n            </div>\n        );\n    }\n\n    const timeToPayString = i18n.get('wechatpay.timetopay').split('%@');\n\n    return (\n        <div\n            className={classnames(\n                'adyen-checkout__await',\n                `adyen-checkout__await--${props.type}`,\n                props.classNameModifiers.map(m => `adyen-checkout__await--${m}`)\n            )}\n        >\n            {props.brandLogo && <img src={props.brandLogo} alt={props.type} className=\"adyen-checkout__await__brand-logo\" />}\n\n            <div className=\"adyen-checkout__await__subtitle\">{props.messageText}</div>\n\n            <div className=\"adyen-checkout__await__indicator-holder\">\n                <div className=\"adyen-checkout__await__indicator-spinner\">\n                    <Spinner inline={false} size=\"medium\" />\n                </div>\n                <div className=\"adyen-checkout__await__indicator-text\">{props.awaitText}</div>\n            </div>\n\n            {props.showCountdownTimer && (\n                <div className=\"adyen-checkout__await__countdown-holder\">\n                    <div className=\"adyen-checkout__await__progress\">\n                        <span className=\"adyen-checkout__await__percentage\" style={{ width: `${percentage}%` }} />\n                    </div>\n\n                    <div className=\"adyen-checkout__await__countdown\">\n                        {timeToPayString[0]}&nbsp;\n                        <Countdown minutesFromNow={props.countdownTime} onTick={onTick} onCompleted={onTimeUp} />\n                        &nbsp;{timeToPayString[1]}\n                    </div>\n                </div>\n            )}\n\n            {props.url && !props.shouldRedirectAutomatically && (\n                <div className=\"adyen-checkout__await__app-link\">\n                    <ContentSeparator />\n                    <Button classNameModifiers={['await']} onClick={() => redirectToApp(props.url)} label={i18n.get('openApp')} />\n                </div>\n            )}\n        </div>\n    );\n}\n\nAwait.defaultProps = {\n    countdownTime: 15,\n    onError: () => {},\n    onComplete: () => {},\n    delay: 2000,\n    throttleTime: 60000,\n    throttleInterval: 10000,\n    showCountdownTimer: true,\n    classNameModifiers: [],\n    url: null\n};\n\nexport default Await;\n","export const COUNTDOWN_MINUTES = 15; // min\nexport const STATUS_INTERVAL = 2000; // ms\nexport const THROTTLE_TIME = 60000; // ms\nexport const THROTTLE_INTERVAL = 10000; // ms\n\nexport default {\n    STATUS_INTERVAL,\n    COUNTDOWN_MINUTES,\n    THROTTLE_TIME,\n    THROTTLE_INTERVAL,\n    type: 'blik',\n    messageTextId: 'blik.confirmPayment', // identifier for a translation string\n    awaitTextId: 'await.waitForConfirmation',\n    showCountdownTimer: false\n};\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport BlikInput from '../../components/Blik/components/BlikInput';\nimport Await from '../internal/Await';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport config from './config';\nimport RedirectButton from '../../components/internal/RedirectButton';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport { TxVariants } from '../tx-variants';\nimport { AwaitConfiguration } from '../internal/Await/types';\n\ninterface BlikElementData {\n    paymentMethod: {\n        type: string;\n        blikCode: string;\n    };\n}\n\nclass BlikElement extends UIElement<AwaitConfiguration> {\n    public static type = TxVariants.blik;\n\n    formatData(): BlikElementData {\n        const recurringPayment = !!this.props.storedPaymentMethodId;\n\n        return {\n            paymentMethod: {\n                type: BlikElement.type,\n                ...(!recurringPayment && { blikCode: this.state?.data?.blikCode }),\n                ...(recurringPayment && { storedPaymentMethodId: this.props.storedPaymentMethodId })\n            }\n        };\n    }\n\n    get isValid(): boolean {\n        if (this.props.storedPaymentMethodId) {\n            return true;\n        }\n\n        return !!this.state.isValid;\n    }\n\n    get displayName() {\n        if (this.props.storedPaymentMethodId && this.props.label) {\n            return this.props.label;\n        }\n        return this.props.name;\n    }\n\n    get additionalInfo() {\n        if (this.props.storedPaymentMethodId && this.props.label) {\n            return this.props.name;\n        }\n        return null;\n    }\n\n    /**\n     * NOTE: for future reference:\n     *  this.props.onComplete (which is called from this.onComplete) equates to the merchant defined onAdditionalDetails callback\n     *  (the initial /payments response defines an \"await\" action, actionTypes.ts translates this to \"onComplete: props.onAdditionalDetails\")\n     */\n    render() {\n        if (this.props.paymentData) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                        <Await\n                            ref={ref => {\n                                this.componentRef = ref;\n                            }}\n                            clientKey={this.props.clientKey}\n                            paymentData={this.props.paymentData}\n                            onError={this.handleError}\n                            onComplete={this.onComplete}\n                            brandLogo={this.icon}\n                            type={config.type}\n                            messageText={this.props.i18n.get(config.messageTextId)}\n                            awaitText={this.props.i18n.get(config.awaitTextId)}\n                            showCountdownTimer={config.showCountdownTimer}\n                            delay={config.STATUS_INTERVAL}\n                            countdownTime={config.COUNTDOWN_MINUTES}\n                            throttleTime={config.THROTTLE_TIME}\n                            throttleInterval={config.THROTTLE_INTERVAL}\n                            onActionHandled={this.onActionHandled}\n                        />\n                    </SRPanelProvider>\n                </CoreProvider>\n            );\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.storedPaymentMethodId ? (\n                    <RedirectButton\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        amount={this.props.amount}\n                        payButton={this.payButton}\n                        onSubmit={this.submit}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                ) : (\n                    <BlikInput\n                        // @ts-ignore Ref is used by preact component\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        {...this.props}\n                        onChange={this.setState}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default BlikElement;\n","import { FormatRules, ValidatorRules } from '../../../utils/Validator/types';\nimport { isEmpty, getFormattingRegEx } from '../../../utils/validator-utils';\n\n// ((+351|00351|351)?)(2\\d{1}|(9(3|6|2|1)))\\d{7} full portuguese phone num regex\n\nconst portugueseRegex = /\\b(2\\d{1}|(9(3|6|2|1)))\\d{7}\\b/; // match 2 + any digit + 7 digits OR 9 + 3|6|2|1 + 7 digits\nconst defaultRegex = /^(\\d){4,}$/; // match >= 4 digits\n\nexport const phoneValidationRules: ValidatorRules = {\n    phoneNumber: {\n        modes: ['blur'],\n        validate: (value, context) => {\n            // TODO improve this switching mechanism *if* we get any more country based regexs\n            const testRegex = context.state.data.phonePrefix === '+351' ? portugueseRegex : defaultRegex;\n\n            return isEmpty(value) ? null : testRegex.test(value);\n        },\n        errorMessage: 'invalidPhoneNumber'\n    },\n    phonePrefix: {\n        modes: ['blur'],\n        validate: phonePrefix => !!phonePrefix,\n        errorMessage: 'invalidCountryCode'\n    }\n};\n\nexport const phoneFormatters: FormatRules = {\n    phoneNumber: {\n        formatterFn: val => val.replace(getFormattingRegEx('^\\\\d', 'g'), '')\n    }\n};\n","import { h } from 'preact';\nimport { useCallback, useEffect } from 'preact/hooks';\nimport Field from '../FormFields/Field';\nimport useForm from '../../../utils/useForm';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport './PhoneInput.scss';\nimport Select from '../FormFields/Select';\nimport { phoneFormatters, phoneValidationRules } from './validate';\nimport { PhoneInputProps, PhoneInputSchema } from './types';\nimport InputText from '../FormFields/InputText';\nimport Fieldset from '../FormFields/Fieldset';\n\nfunction PhoneInput(props: PhoneInputProps) {\n    const { i18n } = useCoreContext();\n\n    const schema = props.requiredFields || [...(props?.items?.length ? ['phonePrefix'] : []), 'phoneNumber'];\n    const showPrefix = schema.includes('phonePrefix') && !!props?.items?.length;\n    const showNumber = schema.includes('phoneNumber');\n\n    const { handleChangeFor, data, valid, errors, isValid, triggerValidation, setSchema } = useForm<PhoneInputSchema>({\n        i18n,\n        ...props,\n        schema,\n        defaultData: props.data,\n        rules: phoneValidationRules,\n        formatters: phoneFormatters\n    });\n\n    useEffect(() => {\n        setSchema(schema);\n    }, [schema.toString()]);\n\n    // Force re-validation of the phoneNumber when data.phonePrefix changes (since the validation rules will also change)\n    useEffect((): void => {\n        if (data.phoneNumber) {\n            handleChangeFor('phoneNumber', 'blur')(data.phoneNumber);\n        }\n    }, [data.phonePrefix]);\n\n    useEffect(() => {\n        props.onChange({ data, valid, errors, isValid });\n    }, [data, valid, errors, isValid]);\n\n    this.triggerValidation = triggerValidation;\n\n    const getPhoneFieldError = useCallback(\n        (field: string) => {\n            if (errors[field]) {\n                const propsField = field === 'phoneNumber' ? 'phoneNumberErrorKey' : 'phonePrefixErrorKey';\n                const key = props[propsField] ? props[propsField] : errors[field].errorMessage;\n                return i18n.get(key) ?? null;\n            }\n            return null;\n        },\n        [errors]\n    );\n\n    return (\n        <Fieldset classNameModifiers={['phone-input']}>\n            {showPrefix && (\n                <Field\n                    className={'adyen-checkout-field--phone-prefix'}\n                    label={i18n.get('telephonePrefix')}\n                    errorMessage={getPhoneFieldError('phonePrefix')}\n                    showValidIcon={false}\n                    isValid={valid.phonePrefix}\n                    dir={'ltr'}\n                    i18n={i18n}\n                    name={'phonePrefix'}\n                >\n                    <Select\n                        className={'adyen-checkout-dropdown adyen-checkout-dropdown--countrycode-selector'}\n                        name={'phonePrefix'}\n                        items={props.items}\n                        onChange={handleChangeFor('phonePrefix')}\n                        placeholder={props?.placeholders?.phonePrefix}\n                        selectedValue={data.phonePrefix}\n                    />\n                </Field>\n            )}\n\n            {showNumber && (\n                <Field\n                    className={'adyen-checkout-field--phone-number'}\n                    label={props.phoneNumberKey ? i18n.get(props.phoneNumberKey) : i18n.get('telephoneNumber')}\n                    errorMessage={getPhoneFieldError('phoneNumber')}\n                    isValid={valid.phoneNumber}\n                    filled={data?.phoneNumber?.length > 0}\n                    dir={'ltr'}\n                    i18n={i18n}\n                    name={'phoneNumber'}\n                >\n                    <InputText\n                        className=\"adyen-checkout__input adyen-checkout-input adyen-checkout-input--phone-number\"\n                        type=\"tel\"\n                        name=\"phoneNumber\"\n                        value={data.phoneNumber}\n                        onInput={handleChangeFor('phoneNumber', 'input')}\n                        onBlur={handleChangeFor('phoneNumber', 'blur')}\n                        placeholder={props?.placeholders?.phoneNumber}\n                        autoCorrect=\"off\"\n                        required={true}\n                    />\n                </Field>\n            )}\n        </Fieldset>\n    );\n}\n\nPhoneInput.defaultProps = {\n    phoneLabel: 'telephoneNumber'\n};\n\nexport default PhoneInput;\n","import { h } from 'preact';\nimport { useState, useRef } from 'preact/hooks';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { MBWayInputProps } from './types';\nimport './MBWayInput.scss';\nimport PhoneInput from '../../../internal/PhoneInput';\nimport LoadingWrapper from '../../../internal/LoadingWrapper';\nimport usePhonePrefixes from '../../../internal/PhoneInput/usePhonePrefixes';\n\nfunction MBWayInput(props: MBWayInputProps) {\n    const { i18n, loadingContext } = useCoreContext();\n\n    const phoneInputRef = useRef(null);\n\n    const { allowedCountries = [] } = props;\n\n    const [status, setStatus] = useState<string>('ready');\n\n    this.setStatus = setStatus;\n    this.showValidation = phoneInputRef?.current?.triggerValidation;\n\n    const { loadingStatus: prefixLoadingStatus, phonePrefixes } = usePhonePrefixes({ allowedCountries, loadingContext, handleError: props.onError });\n\n    const onChange = ({ data, valid, errors, isValid }) => {\n        props.onChange({ data, valid, errors, isValid });\n    };\n\n    return (\n        <LoadingWrapper status={prefixLoadingStatus}>\n            <div className=\"adyen-checkout__mb-way\">\n                <PhoneInput {...props} items={phonePrefixes} ref={phoneInputRef} onChange={onChange} data={props.data} />\n\n                {props.showPayButton && props.payButton({ status, label: i18n.get('confirmPurchase') })}\n            </div>\n        </LoadingWrapper>\n    );\n}\n\nMBWayInput.defaultProps = {\n    onChange: () => {},\n    phoneNumberKey: 'mobileNumber',\n    phoneNumberErrorKey: 'mobileNumber.invalid'\n};\n\nexport default MBWayInput;\n","import { useLayoutEffect, useState } from 'preact/hooks';\nimport getDataset from '../../../core/Services/get-dataset';\nimport { DataSet } from '../../../core/Services/data-set';\nimport { PhonePrefixes } from './types';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\n\nfunction usePhonePrefixes({ allowedCountries, loadingContext, handleError }): PhonePrefixes {\n    const [loadingStatus, setLoadingStatus] = useState<string>('loading');\n    const [phonePrefixes, setPhonePrefixes] = useState<DataSet>([]);\n\n    useLayoutEffect(() => {\n        getDataset('phonenumbers', loadingContext)\n            .then(response => {\n                const countriesFilter = country => allowedCountries.includes(country.id);\n                const filteredCountries = allowedCountries.length ? response.filter(countriesFilter) : response;\n                const mappedCountries = filteredCountries.map(({ prefix, id }) => ({\n                    id: prefix,\n                    name: `${prefix} (${id})`,\n                    selectedOptionName: prefix\n                }));\n\n                setPhonePrefixes(mappedCountries || []);\n                setLoadingStatus('ready');\n            })\n            .catch(error => {\n                setPhonePrefixes([]);\n                setLoadingStatus('ready');\n                handleError?.(new AdyenCheckoutError('ERROR', error));\n            });\n    }, []);\n\n    return { phonePrefixes, loadingStatus };\n}\n\nexport default usePhonePrefixes;\n","export const COUNTDOWN_MINUTES = 15; // min\nexport const STATUS_INTERVAL = 2000; // ms\nexport const THROTTLE_TIME = 60000; // ms\nexport const THROTTLE_INTERVAL = 10000; // ms\n\nexport default {\n    STATUS_INTERVAL,\n    COUNTDOWN_MINUTES,\n    THROTTLE_TIME,\n    THROTTLE_INTERVAL,\n    type: 'mbway',\n    messageTextId: 'mbway.confirmPayment', // identifier for a translation string\n    awaitTextId: 'await.waitForConfirmation',\n    showCountdownTimer: false\n};\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport MBWayInput from './components/MBWayInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport config from './components/MBWayAwait/config';\nimport Await from '../../components/internal/Await';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport { TxVariants } from '../tx-variants';\nimport { AwaitConfiguration } from '../internal/Await/types';\n\nexport class MBWayElement extends UIElement<AwaitConfiguration> {\n    public static type = TxVariants.mbway;\n\n    formatProps(props) {\n        const { data = {}, placeholders = {} } = props;\n\n        return {\n            ...props,\n            data: {\n                phoneNumber: data.telephoneNumber || data.phoneNumber,\n                phonePrefix: data.phonePrefix || '+351' // if not specified default to Portuguese country code\n            },\n            placeholders: {\n                phoneNumber: placeholders.telephoneNumber || placeholders.phoneNumber\n            }\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData(): object {\n        return {\n            paymentMethod: {\n                type: MBWayElement.type,\n                ...(this.state.data?.phoneNumber && { telephoneNumber: this.state.data.phonePrefix + this.state.data.phoneNumber })\n            }\n        };\n    }\n\n    get isValid(): boolean {\n        return !!this.state.isValid;\n    }\n\n    get displayName(): string {\n        return this.props.name;\n    }\n\n    render() {\n        if (this.props.paymentData) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                        <Await\n                            ref={ref => {\n                                this.componentRef = ref;\n                            }}\n                            clientKey={this.props.clientKey}\n                            paymentData={this.props.paymentData}\n                            onError={this.props.onError}\n                            onComplete={this.onComplete}\n                            brandLogo={this.icon}\n                            type={config.type}\n                            messageText={this.props.i18n.get(config.messageTextId)}\n                            awaitText={this.props.i18n.get(config.awaitTextId)}\n                            showCountdownTimer={config.showCountdownTimer}\n                            delay={config.STATUS_INTERVAL}\n                            countdownTime={config.COUNTDOWN_MINUTES}\n                            throttleTime={config.THROTTLE_TIME}\n                            throttleInterval={config.THROTTLE_INTERVAL}\n                            onActionHandled={this.onActionHandled}\n                        />\n                    </SRPanelProvider>\n                </CoreProvider>\n            );\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <MBWayInput\n                    /* @ts-ignore ref handled internally by Component */\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    onChange={this.setState}\n                    onSubmit={this.submit}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default MBWayElement;\n","import { ValidatorRules } from '../../../../utils/Validator/types';\n\nexport const vpaValidationRules: ValidatorRules = {\n    virtualPaymentAddress: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: '',\n        modes: ['blur']\n    },\n    default: {\n        validate: value => !!value && value.length > 0,\n        errorMessage: '',\n        modes: ['blur']\n    }\n};\n","import { h } from 'preact';\nimport { useCallback, useEffect, useRef } from 'preact/hooks';\nimport { vpaValidationRules } from './validate';\nimport './VpaInput.scss';\nimport InputText from '../../../internal/FormFields/InputText';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport useForm from '../../../../utils/useForm';\nimport Field from '../../../internal/FormFields/Field';\n\nexport type OnChangeProps = { data: VpaInputDataState; valid; errors; isValid: boolean };\n\ninterface VpaInputProps {\n    data?: {};\n    disabled?: boolean;\n    onChange({ data, valid, errors, isValid }: OnChangeProps): void;\n    onSetInputHandlers(handlers: VpaInputHandlers): void;\n}\n\nexport interface VpaInputDataState {\n    virtualPaymentAddress?: string;\n}\n\nexport type VpaInputHandlers = {\n    validateInput(): void;\n};\n\nconst VpaInput = (props: VpaInputProps): h.JSX.Element => {\n    const { i18n } = useCoreContext();\n    const formSchema = ['virtualPaymentAddress'];\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm<VpaInputDataState>({\n        schema: formSchema,\n        defaultData: props.data,\n        rules: vpaValidationRules\n    });\n    const vpaInputHandlersRef = useRef<VpaInputHandlers>({ validateInput: null });\n\n    const validateInput = useCallback(() => {\n        triggerValidation();\n    }, [triggerValidation]);\n\n    useEffect(() => {\n        vpaInputHandlersRef.current.validateInput = validateInput;\n        props.onSetInputHandlers(vpaInputHandlersRef.current);\n    }, [validateInput, props.onSetInputHandlers]);\n\n    useEffect(() => {\n        props.onChange({ data, valid, errors, isValid });\n    }, [data, valid, errors, isValid]);\n\n    return (\n        <Field\n            label={i18n.get('upi.collect.field.label')}\n            errorMessage={!!errors.virtualPaymentAddress}\n            classNameModifiers={['vpa']}\n            name=\"virtualPaymentAddress\"\n        >\n            <InputText\n                name={'virtualPaymentAddress'}\n                autocorrect={'off'}\n                spellcheck={false}\n                disabled={props.disabled}\n                value={data.virtualPaymentAddress}\n                onInput={handleChangeFor('virtualPaymentAddress', 'input')}\n                onBlur={handleChangeFor('virtualPaymentAddress', 'blur')}\n            />\n        </Field>\n    );\n};\n\nexport default VpaInput;\n","export const A11Y = {\n    ButtonId: {\n        VPA: 'upi-button-vpa',\n        QR: 'upi-button-qrCode',\n        INTENT: 'upi-button-intent'\n    },\n    AreaId: {\n        VPA: 'upi-area-vpa',\n        QR: 'upi-area-qrCode',\n        INTENT: 'upi-area-intent'\n    }\n};\n","import { h } from 'preact';\nimport cx from 'classnames';\nimport './SegmentedControl.scss';\n\nexport interface SegmentedControlProps<T> {\n    classNameModifiers?: string[];\n    selectedValue: T;\n    disabled?: boolean;\n    options: Array<{ label: string; value: T; htmlProps?: any }>;\n    onChange(value: T, event: MouseEvent): void;\n}\n\nfunction SegmentedControl<T>({ classNameModifiers = [], selectedValue, disabled = false, options, onChange }: SegmentedControlProps<T>) {\n    if (!options || options.length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            className={cx(\n                'adyen-checkout__segmented-control',\n                { 'adyen-checkout__segmented-control--disabled': disabled },\n                ...classNameModifiers.map(modifier => `adyen-checkout__segmented-control--${modifier}`)\n            )}\n            role=\"group\"\n        >\n            {options.map(({ label, value, htmlProps }) => (\n                <button\n                    disabled={disabled}\n                    key={value}\n                    onClick={(event: MouseEvent) => onChange(value, event)}\n                    className={cx('adyen-checkout__segmented-control-segment', {\n                        'adyen-checkout__segmented-control-segment--selected': selectedValue === value\n                    })}\n                    type=\"button\"\n                    {...htmlProps}\n                >\n                    {selectedValue === value && <span className=\"adyen-checkout-checkmark\"></span>}\n                    {label}\n                </button>\n            ))}\n        </div>\n    );\n}\n\nexport default SegmentedControl;\n","import { h } from 'preact';\nimport Img from '../../../internal/Img';\nimport classNames from 'classnames';\n\ninterface PaymentMethodIconProps {\n    /** URL to the payment method icon */\n    src: string;\n\n    /** Alt description of payment method used of a11y */\n    altDescription: string;\n\n    /** Type of the payment method*/\n    type: string;\n\n    disabled?: boolean;\n}\n\nconst paymentMethodsWithoutBorder = ['googlepay', 'paywithgoogle'];\n\nconst PaymentMethodIcon = ({ src, altDescription, type, disabled = false }: PaymentMethodIconProps) => {\n    return (\n        <span\n            className={classNames('adyen-checkout__payment-method__image__wrapper', {\n                'adyen-checkout__payment-method__image__wrapper--outline': !paymentMethodsWithoutBorder.includes(type),\n                'adyen-checkout__payment-method__image__wrapper--disabled': !!disabled\n            })}\n        >\n            <Img className=\"adyen-checkout__payment-method__image\" src={src} alt={altDescription} />\n        </span>\n    );\n};\n\nexport default PaymentMethodIcon;\n","import classNames from 'classnames';\nimport { ComponentChildren, h } from 'preact';\nimport './ExpandButton.scss';\n\ninterface ExpandButton {\n    buttonId: string;\n    isSelected: boolean;\n    expandContentId: string;\n    children?: ComponentChildren;\n    showRadioButton?: boolean;\n    classNameModifiers?: string[];\n}\n\nfunction ExpandButton({ buttonId, showRadioButton, isSelected, expandContentId, children, classNameModifiers = [] }: Readonly<ExpandButton>) {\n    return (\n        // See discussion: https://github.com/w3c/aria/issues/1404\n        // eslint-disable-next-line jsx-a11y/role-supports-aria-props\n        <button\n            className={classNames(\n                'adyen-checkout__payment-method__header__title',\n                ...classNameModifiers.map(modifier => `adyen-checkout-expand-button--${modifier}`)\n            )}\n            id={buttonId}\n            role={'radio'}\n            aria-checked={isSelected}\n            aria-expanded={isSelected}\n            aria-controls={expandContentId}\n            type=\"button\"\n        >\n            {showRadioButton && (\n                <span\n                    className={classNames({\n                        'adyen-checkout__payment-method__radio': true,\n                        'adyen-checkout__payment-method__radio--selected': isSelected\n                    })}\n                    aria-hidden=\"true\"\n                />\n            )}\n            {children}\n        </button>\n    );\n}\n\nexport default ExpandButton;\n","import { ComponentChildren, h } from 'preact';\nimport cx from 'classnames';\nimport { App } from '../../../types';\nimport PaymentMethodIcon from '../../../../Dropin/components/PaymentMethod/PaymentMethodIcon';\nimport ExpandButton from '../../../../internal/ExpandButton';\nimport './UPIIntentAppItem.scss';\n\ninterface UPIIntentAppItemProps {\n    app: App;\n    imgSrc: string;\n    isSelected: boolean;\n    onSelect?: Function;\n    children?: ComponentChildren;\n}\n\nconst UPIIntentAppItem = ({ app, imgSrc, isSelected, onSelect = () => {}, children }: UPIIntentAppItemProps): h.JSX.Element => {\n    const buttonId = `adyen-checkout-upi-app-item-button-${app.id}`;\n    const containerId = `adyen-checkout-upi-app-${app.id}`;\n    const handleAppSelected = (app: App) => {\n        onSelect(app);\n    };\n\n    return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n        <li\n            className={cx({\n                'adyen-checkout-upi-app-item': true,\n                'adyen-checkout-upi-app-item--selected': isSelected\n            })}\n            onClick={() => handleAppSelected(app)}\n        >\n            <div className=\"adyen-checkout-upi-app-item-header\">\n                <ExpandButton classNameModifiers={['upi-app-item']} buttonId={buttonId} isSelected={isSelected} expandContentId={containerId}>\n                    <PaymentMethodIcon src={imgSrc} altDescription={app.name} type={app.id}></PaymentMethodIcon>\n                    <label className=\"adyen-checkout-upi-app-item__label\" htmlFor={buttonId}>\n                        {app.name}\n                    </label>\n                </ExpandButton>\n            </div>\n            {isSelected && children && (\n                <div className=\"adyen-checkout-upi-app-item-details\" id={containerId}>\n                    {children}\n                </div>\n            )}\n        </li>\n    );\n};\n\nexport default UPIIntentAppItem;\n","import { h } from 'preact';\nimport classNames from 'classnames';\nimport { App } from '../../types';\nimport UPIIntentAppItem from './UPIIntentAppItem';\nimport VpaInput from '../VpaInput';\nimport { OnChangeProps, VpaInputHandlers } from '../VpaInput/VpaInput';\nimport useImage from '../../../../core/Context/useImage';\nimport './UPIIntentAppList.scss';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\n\ninterface UPIIntentAppListProps {\n    apps: Array<App>;\n    selectedAppId?: string;\n    disabled?: boolean;\n    onAppSelect?: Function;\n    onVpaInputChange?({ data, valid, errors, isValid }: OnChangeProps): void;\n    onSetInputHandlers?(handlers: VpaInputHandlers): void;\n}\n\nconst UPIIntentAppList = ({\n    apps,\n    selectedAppId,\n    disabled,\n    onAppSelect = () => {},\n    onVpaInputChange = () => {},\n    onSetInputHandlers = () => {}\n}: UPIIntentAppListProps): h.JSX.Element => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    return (\n        /* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n        <ul\n            className={classNames({\n                'adyen-checkout-upi-app-list': true,\n                'adyen-checkout-upi-app-list--loading': disabled\n            })}\n            role=\"radiogroup\"\n            aria-label={i18n.get('paymentMethodsList.aria.label')}\n            required\n        >\n            {apps.map(app => {\n                const key = `adyen-checkout-upi-app-item-${app.id}}`;\n                const isSelected = selectedAppId === app.id;\n\n                const showUpiCollectInput = app.id === 'vpa';\n                const imgName = showUpiCollectInput ? 'upi' : `upi/${app.id}`;\n                const imgSrc = getImage()(imgName.toLowerCase());\n\n                return (\n                    <UPIIntentAppItem key={key} app={app} imgSrc={imgSrc} isSelected={isSelected} onSelect={onAppSelect}>\n                        {showUpiCollectInput && <VpaInput disabled={disabled} onChange={onVpaInputChange} onSetInputHandlers={onSetInputHandlers} />}\n                    </UPIIntentAppItem>\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default UPIIntentAppList;\n","import { Fragment, h, RefObject } from 'preact';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport { PayButtonFunctionProps, UIElementStatus } from '../../../types';\nimport VpaInput, { VpaInputHandlers } from '../VpaInput/VpaInput';\nimport { App, UpiMode } from '../../types';\nimport useImage from '../../../../core/Context/useImage';\nimport useUpiSegmentedControlOptions from './useUpiSegmentedControlOptions';\nimport { A11Y } from './constants';\nimport './UPIComponent.scss';\nimport SegmentedControl from '../../../internal/SegmentedControl';\nimport ContentSeparator from '../../../internal/ContentSeparator';\nimport UPIIntentAppList from '../UPIIntentAppList';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\n\ntype UpiData = { app?: App; virtualPaymentAddress?: string };\n\ntype OnChangeProps = { data: UpiData; valid; errors; isValid: boolean };\n\ninterface UPIComponentProps {\n    defaultMode: UpiMode;\n    showPayButton: boolean;\n    apps?: Array<App>;\n\n    ref?(ref: RefObject<typeof UPIComponent>): void;\n\n    payButton?(props: PayButtonFunctionProps): h.JSX.Element;\n\n    onChange({ data, valid, errors, isValid }: OnChangeProps): void;\n\n    onUpdateMode?(mode: UpiMode): void;\n}\n\nexport default function UPIComponent({ defaultMode, onChange, onUpdateMode, payButton, showPayButton, apps = [] }: UPIComponentProps): h.JSX.Element {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const [status, setStatus] = useState<UIElementStatus>('ready');\n    const [isValid, setIsValid] = useState<boolean>(defaultMode === 'qrCode');\n    const [mode, setMode] = useState<UpiMode>(defaultMode);\n    const [vpa, setVpa] = useState<string>('');\n    const [vpaInputHandlers, setVpaInputHandlers] = useState<VpaInputHandlers>(null);\n    const [selectedApp, setSelectedApp] = useState<App>(null);\n    const [valid, setValid] = useState(null);\n    const [errors, setErrors] = useState(null);\n    const segmentedControlOptions = useUpiSegmentedControlOptions(apps, mode);\n\n    this.setStatus = (status: UIElementStatus) => {\n        setStatus(status);\n    };\n\n    this.showValidation = () => {\n        vpaInputHandlers?.validateInput();\n    };\n\n    const onSetVpaInputHandlers = useCallback((handlers: VpaInputHandlers) => {\n        setVpaInputHandlers(handlers);\n    }, []);\n\n    const onChangeUpiMode = useCallback(\n        (newMode: UpiMode) => {\n            setMode(newMode);\n            onUpdateMode(newMode);\n        },\n        [onUpdateMode]\n    );\n\n    const handleAppSelect = useCallback(\n        (app: App) => {\n            if (app?.id === selectedApp?.id) return;\n\n            setSelectedApp(app);\n            setIsValid(true);\n        },\n        [selectedApp]\n    );\n\n    const handleVpaInputChange = useCallback(({ data: { virtualPaymentAddress }, errors, valid, isValid }: OnChangeProps) => {\n        setVpa(virtualPaymentAddress);\n        setErrors(errors);\n        setValid(valid);\n        setIsValid(isValid);\n    }, []);\n\n    useEffect(() => {\n        if (mode !== 'qrCode') {\n            onChange({\n                data: { ...(vpa && { virtualPaymentAddress: vpa }), ...(selectedApp && { app: selectedApp }) },\n                errors,\n                valid,\n                isValid\n            });\n        } else {\n            /**\n             * When selecting QR code mode, we need to clear the state data and trigger the 'onChange'.\n             */\n            onChange({ data: {}, valid: {}, errors: {}, isValid: true });\n        }\n    }, [vpa, selectedApp, errors, valid, isValid, mode]);\n\n    return (\n        <Fragment>\n            <p className=\"adyen-checkout_upi-mode-selection-text\">{i18n.get('upi.modeSelection')}</p>\n            <SegmentedControl\n                onChange={onChangeUpiMode}\n                selectedValue={mode}\n                disabled={status === 'loading'}\n                classNameModifiers={['upi-margin-bottom']}\n                options={segmentedControlOptions}\n            />\n            <ContentSeparator label={i18n.get('upi.completePayment')} />\n            {mode === 'intent' && (\n                <div id={A11Y.AreaId.INTENT} aria-labelledby={A11Y.ButtonId.INTENT} className=\"adyen-checkout-upi-area-intent\" role=\"region\">\n                    <UPIIntentAppList\n                        disabled={status === 'loading'}\n                        apps={apps}\n                        selectedAppId={selectedApp?.id}\n                        onAppSelect={handleAppSelect}\n                        onVpaInputChange={handleVpaInputChange}\n                        onSetInputHandlers={onSetVpaInputHandlers}\n                    />\n\n                    {showPayButton &&\n                        payButton({\n                            label: i18n.get('continue'),\n                            status,\n                            disabled: selectedApp == null\n                        })}\n                </div>\n            )}\n            {mode === 'vpa' && (\n                <div id={A11Y.AreaId.VPA} aria-labelledby={A11Y.ButtonId.VPA} className=\"adyen-checkout-upi-area-vpa\" role=\"region\">\n                    <VpaInput disabled={status === 'loading'} onChange={onChange} onSetInputHandlers={onSetVpaInputHandlers} />\n\n                    {showPayButton &&\n                        payButton({\n                            label: i18n.get('continue'),\n                            status\n                        })}\n                </div>\n            )}\n            {mode === 'qrCode' && (\n                <div id={A11Y.AreaId.QR} aria-labelledby={A11Y.ButtonId.QR} className=\"adyen-checkout-upi-area-qr-code\" role=\"region\">\n                    {showPayButton &&\n                        payButton({\n                            label: i18n.get('generateQRCode'),\n                            icon: getImage({ imageFolder: 'components/' })('qr'),\n                            status\n                        })}\n                </div>\n            )}\n        </Fragment>\n    );\n}\n","import { useMemo } from 'preact/hooks';\nimport { App, UpiMode } from '../../types';\nimport { A11Y } from './constants';\nimport isMobile from '../../../../utils/isMobile';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\n\ninterface SegmentedControlOption {\n    label: string;\n    value: UpiMode;\n    htmlProps: {\n        id: string;\n        'aria-expanded': boolean;\n        'aria-controls': string;\n    };\n}\n\nfunction useUpiSegmentedControlOptions(apps: Array<App>, mode: UpiMode): Array<SegmentedControlOption> {\n    const { i18n } = useCoreContext();\n\n    return useMemo(() => {\n        const intentOption: SegmentedControlOption = {\n            label: i18n.get('upi.mode.payByAnyUpi'),\n            value: 'intent',\n            htmlProps: {\n                id: A11Y.ButtonId.INTENT,\n                'aria-expanded': mode === 'intent',\n                'aria-controls': A11Y.AreaId.INTENT\n            }\n        };\n        const vpaOption: SegmentedControlOption = {\n            label: i18n.get('upi.mode.enterUpiId'),\n            value: 'vpa',\n            htmlProps: {\n                id: A11Y.ButtonId.VPA,\n                'aria-expanded': mode === 'vpa',\n                'aria-controls': A11Y.AreaId.VPA\n            }\n        };\n        const qrOption: SegmentedControlOption = {\n            label: i18n.get('upi.mode.qrCode'),\n            value: 'qrCode',\n            htmlProps: {\n                id: A11Y.ButtonId.QR,\n                'aria-expanded': mode === 'qrCode',\n                'aria-controls': A11Y.AreaId.QR\n            }\n        };\n\n        const shouldShowUpiIntent = apps.length > 0;\n        const positionOfQrOption = isMobile() ? 1 : 0;\n        const segmentedControlOptions = new Array(2).fill(shouldShowUpiIntent ? intentOption : vpaOption);\n        segmentedControlOptions[positionOfQrOption] = qrOption;\n        return segmentedControlOptions;\n    }, [apps, mode]);\n}\n\nexport default useUpiSegmentedControlOptions;\n","import { h, RefObject } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport UPIComponent from './components/UPIComponent';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport Await from '../internal/Await';\nimport QRLoader from '../internal/QRLoader';\nimport { App, UPIConfiguration, UpiMode, UpiPaymentData, UpiType } from './types';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport { TxVariants } from '../tx-variants';\nimport isMobile from '../../utils/isMobile';\nimport type { ICore } from '../../core/types';\n\n/**\n * For mobile:\n * We should show upi_collect or upi_intent depending on if `apps` are returned in /paymentMethods response\n * The upi_qr should always be on the second tab\n *\n * For non-mobile:\n * We should never show the upi_intent (ignore `apps` in /paymentMethods response)\n * The upi_qr should be on the first tab and the upi_collect should be on second tab\n */\n\nclass UPI extends UIElement<UPIConfiguration> {\n    public static type = TxVariants.upi;\n    public static txVariants = [TxVariants.upi, TxVariants.upi_qr, TxVariants.upi_collect, TxVariants.upi_intent];\n\n    private selectedMode: UpiMode;\n\n    constructor(checkout: ICore, props: UPIConfiguration) {\n        super(checkout, props);\n        this.selectedMode = this.props.defaultMode;\n    }\n\n    formatProps(props: UPIConfiguration) {\n        if (!isMobile()) {\n            return {\n                ...super.formatProps(props),\n                defaultMode: props?.defaultMode ?? 'qrCode',\n                // For large screen, ignore the apps\n                apps: []\n            };\n        }\n\n        const hasIntentApps = props.apps?.length > 0;\n        const fallbackDefaultMode = hasIntentApps ? 'intent' : 'vpa';\n        const allowedModes = [fallbackDefaultMode, 'qrCode'];\n        const upiCollectApp: App = {\n            id: 'vpa',\n            name: props.i18n.get('upi.collect.dropdown.label'),\n            type: TxVariants.upi_collect as UpiType\n        };\n        const apps = hasIntentApps ? [...props.apps.map(app => ({ ...app, type: TxVariants.upi_intent as UpiType })), upiCollectApp] : [];\n        return {\n            ...super.formatProps(props),\n            defaultMode: allowedModes.includes(props?.defaultMode) ? props.defaultMode : fallbackDefaultMode,\n            apps\n        };\n    }\n\n    public get isValid(): boolean {\n        return this.state.isValid;\n    }\n\n    public formatData(): UpiPaymentData {\n        const { virtualPaymentAddress, app } = this.state.data || {};\n\n        return {\n            paymentMethod: {\n                ...(this.paymentType && { type: this.paymentType }),\n                ...(this.paymentType === TxVariants.upi_collect && virtualPaymentAddress && { virtualPaymentAddress }),\n                ...(this.paymentType === TxVariants.upi_intent && app?.id && { appId: app.id })\n            }\n        };\n    }\n\n    get paymentType(): UpiType {\n        if (this.selectedMode === 'qrCode') {\n            return TxVariants.upi_qr;\n        }\n        if (this.selectedMode === 'vpa') {\n            return TxVariants.upi_collect;\n        }\n        return this.state.data?.app?.type;\n    }\n\n    private onUpdateMode = (mode: UpiMode): void => {\n        this.selectedMode = mode;\n    };\n\n    private renderContent(type: string, url: string, paymentMethodType: string): h.JSX.Element {\n        switch (type) {\n            case 'qrCode':\n                return (\n                    <QRLoader\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        {...this.props}\n                        qrCodeData={this.props.qrCodeData ? encodeURIComponent(this.props.qrCodeData) : null}\n                        type={TxVariants.upi_qr}\n                        brandLogo={this.props.brandLogo || this.icon}\n                        onComplete={this.onComplete}\n                        introduction={this.props.i18n.get('upi.qrCodeWaitingMessage')}\n                        countdownTime={5}\n                        onActionHandled={this.onActionHandled}\n                    />\n                );\n            case 'await':\n                return (\n                    <Await\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                        url={url}\n                        type={paymentMethodType}\n                        showCountdownTimer\n                        shouldRedirectAutomatically\n                        countdownTime={5}\n                        clientKey={this.props.clientKey}\n                        paymentData={this.props.paymentData}\n                        onActionHandled={this.onActionHandled}\n                        onError={this.props.onError}\n                        messageText={this.props.i18n.get('upi.vpaWaitingMessage')}\n                        awaitText={this.props.i18n.get('await.waitForConfirmation')}\n                        onComplete={this.onComplete}\n                        brandLogo={this.icon}\n                    />\n                );\n            default:\n                return (\n                    <UPIComponent\n                        ref={(ref: RefObject<typeof UPIComponent>) => {\n                            this.componentRef = ref;\n                        }}\n                        payButton={this.payButton}\n                        onChange={this.setState}\n                        onUpdateMode={this.onUpdateMode}\n                        apps={this.props.apps}\n                        defaultMode={this.props.defaultMode}\n                        showPayButton={this.props.showPayButton}\n                    />\n                );\n        }\n    }\n\n    public render(): h.JSX.Element {\n        const { type, url, paymentMethodType } = this.props;\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>{this.renderContent(type, url, paymentMethodType)}</SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n\nexport default UPI;\n","import { ValidatorRules } from '../../utils/Validator/types';\nimport { isEmpty } from '../../utils/validator-utils';\nimport { email } from '../../utils/regex';\n\nexport const isEmailValid = value => {\n    if (isEmpty(value)) return null;\n    return value.length >= 6 && value.length <= 320 && email.test(value);\n};\n\nexport const isANCVNumber = text => /^\\d{11}$/.test(text);\n\nexport const ancvValidationRules: ValidatorRules = {\n    beneficiaryId: {\n        validate: value => isEmailValid(value) || isANCVNumber(value),\n        errorMessage: 'ancv.beneficiaryId.invalid',\n        modes: ['blur']\n    }\n};\n","import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport LoadingWrapper from '../../internal/LoadingWrapper';\nimport InputText from '../../internal/FormFields/InputText';\nimport Field from '../../internal/FormFields/Field';\nimport useForm from '../../../utils/useForm';\nimport { ancvValidationRules } from '../validate';\nimport { ANCVDataState } from '../types';\nimport { UIElementProps } from '../../internal/UIElement/types';\n\nexport interface ANCVInputProps extends UIElementProps {\n    ref?: any;\n    showPayButton: boolean;\n    onSubmit: () => void;\n}\n\ntype ANCVInputDataState = ANCVDataState;\n\nfunction ANCVInput({ showPayButton, payButton, onChange, onSubmit }: ANCVInputProps) {\n    const { i18n } = useCoreContext();\n\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm<ANCVInputDataState>({\n        schema: ['beneficiaryId'],\n        rules: ancvValidationRules\n    });\n\n    useEffect(() => {\n        // @ts-ignore TODO: Fix this. Preact component types should not inherit from UIElementProps.\n        onChange({ data, errors, valid, isValid }, this);\n    }, [data, valid, errors, isValid]);\n\n    const [status, setStatus] = useState<string>('ready');\n\n    this.setStatus = setStatus;\n    this.showValidation = triggerValidation;\n\n    return (\n        <LoadingWrapper>\n            <div className=\"adyen-checkout__ancv\">\n                <p className=\"adyen-checkout-form-instruction\">{i18n.get('ancv.form.instruction')}</p>\n                <Field\n                    errorMessage={!!errors.beneficiaryId && i18n.get(errors.beneficiaryId.errorMessage)}\n                    label={i18n.get('ancv.input.label')}\n                    isValid={valid.beneficiaryId}\n                    name={'beneficiaryId'}\n                >\n                    <InputText\n                        value={data.beneficiaryId}\n                        name={'beneficiaryId'}\n                        spellcheck={true}\n                        required={true}\n                        onInput={handleChangeFor('beneficiaryId', 'input')}\n                        onBlur={handleChangeFor('beneficiaryId', 'blur')}\n                    />\n                </Field>\n                {showPayButton && payButton({ status, label: i18n.get('confirmPurchase'), onClick: onSubmit })}\n            </div>\n        </LoadingWrapper>\n    );\n}\n\nANCVInput.defaultProps = {};\n\nexport default ANCVInput;\n","export const COUNTDOWN_MINUTES = 15; // min\nexport const THROTTLE_TIME = 60000; // ms\nexport const THROTTLE_INTERVAL = 10000; // ms\n\nexport default {\n    COUNTDOWN_MINUTES,\n    THROTTLE_TIME,\n    THROTTLE_INTERVAL,\n    showCountdownTimer: false\n};\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport ANCVInput from './components/ANCVInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport config from './components/ANCVAwait/config';\nimport Await from '../../components/internal/Await';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport PayButton from '../internal/PayButton';\nimport { ANCVConfiguration } from './types';\nimport { sanitizeResponse, verifyPaymentDidNotFail } from '../internal/UIElement/utils';\n\nexport class ANCVElement extends UIElement<ANCVConfiguration> {\n    public static type = 'ancv';\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        return {\n            paymentMethod: {\n                type: ANCVElement.type,\n                beneficiaryId: this.state.data?.beneficiaryId\n            }\n        };\n    }\n\n    private onOrderRequest = data => {\n        if (this.props.onOrderRequest)\n            return new Promise((resolve, reject) => {\n                this.props.onOrderRequest(resolve, reject, data);\n            });\n\n        if (this.props.session) {\n            return this.props.session.createOrder();\n        }\n    };\n\n    /**\n     * Check if order exists, if it does Resolve.\n     * Otherwise createOrder and then Resolve.\n     */\n    public createOrder = (): Promise<void> => {\n        this.setStatus('loading');\n\n        // allow for multiple ANCV payments, follow giftcard logic and just use order if it exists\n        if (this.props.order) {\n            return Promise.resolve();\n        }\n\n        return this.onOrderRequest(this.data)\n            .then((order: { orderData: string; pspReference: string }) => {\n                const stateOrder = { order: { orderData: order.orderData, pspReference: order.pspReference } };\n                this.setState(stateOrder);\n                return Promise.resolve();\n            })\n            .catch(error => {\n                this.setStatus(error?.message || 'error');\n                if (this.props.onError) {\n                    if (error instanceof AdyenCheckoutError) {\n                        this.handleError(error);\n                    } else {\n                        this.handleError(new AdyenCheckoutError('ERROR', error));\n                    }\n                }\n            });\n    };\n\n    public submit() {\n        if (!this.isValid) {\n            this.showValidation();\n            return false;\n        }\n\n        this.createOrder()\n            .then(this.makePaymentsCall)\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then(this.handleResponse)\n            .catch(this.handleFailedResult);\n    }\n\n    // Reimplement payButton similar to GiftCard to allow to set onClick\n    public payButton = props => {\n        return <PayButton {...props} />;\n    };\n\n    get isValid(): boolean {\n        return !!this.state.isValid;\n    }\n\n    get displayName(): string {\n        return this.props.name;\n    }\n\n    render() {\n        if (this.props.paymentData) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                        <Await\n                            ref={ref => {\n                                this.componentRef = ref;\n                            }}\n                            clientKey={this.props.clientKey}\n                            paymentData={this.props.paymentData}\n                            onError={this.props.onError}\n                            onComplete={this.onComplete}\n                            brandLogo={this.icon}\n                            type={this.constructor['type']}\n                            messageText={this.props.i18n.get('ancv.confirmPayment')}\n                            awaitText={this.props.i18n.get('await.waitForConfirmation')}\n                            showCountdownTimer={config.showCountdownTimer}\n                            throttleTime={config.THROTTLE_TIME}\n                            throttleInterval={config.THROTTLE_INTERVAL}\n                            onActionHandled={this.onActionHandled}\n                        />\n                    </SRPanelProvider>\n                </CoreProvider>\n            );\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <ANCVInput\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    onSubmit={this.submit}\n                    onChange={this.setState}\n                    payButton={this.payButton}\n                    showPayButton={this.props.showPayButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default ANCVElement;\n","import { ComponentChildren, h } from 'preact';\nimport cx from 'classnames';\nimport './Alert.scss';\nimport Icon from '../Icon';\n\nconst ALERT_TYPES = ['error', 'warning', 'success'];\n\ninterface AlertProps {\n    children: ComponentChildren;\n    classNames?: string[];\n    icon?: string;\n    type?: (typeof ALERT_TYPES)[number];\n}\n\nexport default function Alert({ children, classNames = [], type = 'error', icon }: AlertProps) {\n    return (\n        <div className={cx('adyen-checkout__alert-message', `adyen-checkout__alert-message--${type}`, classNames)}>\n            {icon && <Icon className={'adyen-checkout__alert-message__icon'} type={icon} />}\n            {children}\n        </div>\n    );\n}\n","import { h } from 'preact';\nimport './GiftcardResult.scss';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\n\nfunction GiftcardResult({ brand, amount, balance, transactionLimit, ...props }) {\n    const { i18n } = useCoreContext();\n    const transactionAmount = amount.value > transactionLimit?.value ? transactionLimit : amount;\n    const remainingBalance = balance?.value - transactionAmount?.value;\n\n    return (\n        <div className=\"adyen-checkout__giftcard-result\">\n            <ul className=\"adyen-checkout__giftcard-result__balance\">\n                <li className=\"adyen-checkout__giftcard-result__balance__item\">\n                    <span className=\"adyen-checkout__giftcard-result__balance__title\">{i18n.get('giftcardBalance')}</span>\n                    <span className=\"adyen-checkout__giftcard-result__balance__value adyen-checkout__giftcard-result__balance__value--amount\">\n                        {i18n.amount(balance.value, balance.currency)}\n                    </span>\n                </li>\n                {transactionLimit && transactionLimit.value && (\n                    <li className=\"adyen-checkout__giftcard-result__balance__item\">\n                        <span className=\"adyen-checkout__giftcard-result__balance__title adyen-checkout__giftcard-result__balance__title--transactionLimit\">\n                            {i18n.get('giftcardTransactionLimit', {\n                                values: { amount: i18n.amount(transactionLimit.value, transactionLimit.currency) }\n                            })}\n                        </span>\n                    </li>\n                )}\n            </ul>\n\n            {this.props.showPayButton &&\n                this.props.payButton({\n                    amount: transactionAmount,\n                    status: props.status,\n                    onClick: props.onSubmit\n                })}\n\n            <p className=\"adyen-checkout__giftcard-result__remaining-balance\">\n                {i18n.get('partialPayment.remainingBalance', {\n                    values: { amount: i18n.amount(remainingBalance, balance.currency) }\n                })}\n            </p>\n        </div>\n    );\n}\n\nexport default GiftcardResult;\n","import DataSfSpan from '../../Card/components/CardInput/components/DataSfSpan';\nimport classNames from 'classnames';\nimport Field from '../../internal/FormFields/Field';\nimport { h } from 'preact';\nimport { GiftcardFieldProps } from './types';\nimport { alternativeLabelContent } from '../../Card/components/CardInput/components/FieldLabelAlternative';\n\nexport const GiftcardNumberField = ({ i18n, classNameModifiers, sfpState, getCardErrorMessage, focusedElement, setFocusOn }: GiftcardFieldProps) => {\n    return (\n        <Field\n            label={i18n.get('giftcard.cardNumber.label')}\n            classNameModifiers={['number', ...classNameModifiers]}\n            errorMessage={getCardErrorMessage(sfpState)}\n            focused={focusedElement === 'encryptedCardNumber'}\n            onFocusField={() => setFocusOn('encryptedCardNumber')}\n            dir={'ltr'}\n            name={'encryptedCardNumber'}\n            contextVisibleToScreenReader={false}\n            useLabelElement={false}\n            renderAlternativeToLabel={alternativeLabelContent}\n        >\n            <DataSfSpan\n                encryptedFieldType=\"encryptedCardNumber\"\n                data-info='{\"length\":\"15-32\", \"maskInterval\":4}'\n                className={classNames({\n                    'adyen-checkout__input': true,\n                    'adyen-checkout__input--large': true,\n                    'adyen-checkout__card__cardNumber__input': true,\n                    'adyen-checkout__input--error': getCardErrorMessage(sfpState),\n                    'adyen-checkout__input--focus': focusedElement === 'encryptedCardNumber'\n                })}\n            />\n        </Field>\n    );\n};\n","import DataSfSpan from '../../Card/components/CardInput/components/DataSfSpan';\nimport classNames from 'classnames';\nimport Field from '../../internal/FormFields/Field';\nimport { h } from 'preact';\nimport { GiftcardFieldProps } from './types';\nimport { alternativeLabelContent } from '../../Card/components/CardInput/components/FieldLabelAlternative';\n\nexport const GiftcardPinField = ({\n    i18n,\n    classNameModifiers,\n    sfpState,\n    focusedElement,\n    setFocusOn,\n    label = i18n.get('creditCard.pin.label')\n}: GiftcardFieldProps) => {\n    return (\n        <Field\n            label={label}\n            classNameModifiers={['pin', ...classNameModifiers]}\n            errorMessage={sfpState.errors.encryptedSecurityCode && i18n.get(sfpState.errors.encryptedSecurityCode)}\n            focused={focusedElement === 'encryptedSecurityCode'}\n            onFocusField={() => setFocusOn('encryptedSecurityCode')}\n            dir={'ltr'}\n            name={'encryptedSecurityCode'}\n            contextVisibleToScreenReader={false}\n            useLabelElement={false}\n            renderAlternativeToLabel={alternativeLabelContent}\n        >\n            <DataSfSpan\n                encryptedFieldType=\"encryptedSecurityCode\"\n                data-info='{\"length\":\"3-10\", \"maskInterval\": 0}'\n                className={classNames({\n                    'adyen-checkout__input': true,\n                    'adyen-checkout__input--large': true,\n                    'adyen-checkout__card__cvc__input': true,\n                    'adyen-checkout__input--error': sfpState.errors.encryptedSecurityCode,\n                    'adyen-checkout__input--focus': focusedElement === 'encryptedSecurityCode'\n                })}\n            />\n        </Field>\n    );\n};\n","import { Component, FunctionComponent, h } from 'preact';\nimport SecuredFieldsProvider from '../../internal/SecuredFields/SFP/SecuredFieldsProvider';\nimport Alert from '../../internal/Alert';\nimport GiftcardResult from './GiftcardResult';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { PaymentAmount } from '../../../types/global-types';\nimport { GIFT_CARD } from '../../internal/SecuredFields/lib/constants';\nimport { GiftCardFields } from './GiftcardFields';\nimport { GiftcardFieldsProps, Placeholders } from './types';\n\ninterface GiftcardComponentProps {\n    onChange: (state) => void;\n    onFocus: (event) => void;\n    onBlur: (event) => void;\n    onSubmit: (event) => void;\n    onBalanceCheck: (event) => void;\n\n    amount?: PaymentAmount;\n    showPayButton: boolean;\n    payButton: (config) => any;\n\n    pinRequired: boolean;\n    expiryDateRequired?: boolean;\n    fieldsLayoutComponent: FunctionComponent<GiftcardFieldsProps>;\n    placeholders?: Placeholders;\n    handleKeyPress?: (o: KeyboardEvent) => void;\n}\n\nclass Giftcard extends Component<GiftcardComponentProps> {\n    public state = {\n        status: 'ready',\n        data: {},\n        balance: null,\n        transactionLimit: null,\n        focusedElement: false,\n        isValid: false\n    };\n\n    public static defaultProps = {\n        pinRequired: true,\n        expiryDateRequired: false,\n        onChange: () => {},\n        onFocus: () => {},\n        onBlur: () => {},\n        fieldsLayoutComponent: GiftCardFields\n    };\n\n    public sfp;\n\n    public onChange = sfpState => {\n        this.props.onChange({\n            data: sfpState.data,\n            isValid: sfpState.isSfpValid\n        });\n    };\n\n    public showValidation = () => {\n        this.sfp.showValidation();\n    };\n\n    setStatus(status) {\n        this.setState({ status });\n    }\n\n    public handleFocus = e => {\n        this.setState({ focusedElement: e.currentFocusObject });\n\n        const isFocused = e.focus === true;\n        if (isFocused) {\n            this.props.onFocus(e);\n        } else {\n            this.props.onBlur(e);\n        }\n    };\n\n    public setBalance = ({ balance, transactionLimit }) => {\n        this.setState({ balance, transactionLimit });\n    };\n\n    render(props, { focusedElement, balance, transactionLimit }) {\n        const { i18n } = useCoreContext();\n\n        const transactionAmount = transactionLimit?.value < balance?.value ? transactionLimit : balance;\n        const hasEnoughBalance = transactionAmount?.value >= this.props.amount?.value;\n\n        if (transactionAmount && hasEnoughBalance) {\n            return <GiftcardResult balance={balance} transactionLimit={transactionLimit} onSubmit={props.onSubmit} {...props} />;\n        }\n\n        const getCardErrorMessage = sfpState => {\n            if (sfpState.errors.encryptedCardNumber) return i18n.get(sfpState.errors.encryptedCardNumber);\n\n            switch (this.state.status) {\n                case 'no-balance':\n                    return i18n.get('error.giftcard.no-balance');\n                case 'card-error':\n                    return i18n.get('error.giftcard.card-error');\n                case 'currency-error':\n                    return i18n.get('error.giftcard.currency-error');\n                default:\n                    return null;\n            }\n        };\n\n        return (\n            <div className=\"adyen-checkout__giftcard\">\n                {this.state.status === 'error' && <Alert icon={'cross'}>{i18n.get('error.message.unknown')}</Alert>}\n\n                <SecuredFieldsProvider\n                    {...this.props}\n                    ref={ref => {\n                        this.sfp = ref;\n                    }}\n                    onChange={this.onChange}\n                    onFocus={this.handleFocus}\n                    type={GIFT_CARD}\n                    render={({ setRootNode, setFocusOn }, sfpState) =>\n                        this.props.fieldsLayoutComponent({\n                            i18n: i18n,\n                            pinRequired: this.props.pinRequired,\n                            focusedElement: focusedElement,\n                            getCardErrorMessage: getCardErrorMessage,\n                            setRootNode: setRootNode,\n                            setFocusOn: setFocusOn,\n                            sfpState: sfpState\n                        })\n                    }\n                />\n\n                {this.props.showPayButton &&\n                    this.props.payButton({\n                        status: this.state.status,\n                        onClick: this.props.onSubmit,\n                        label: i18n.get('applyGiftcard')\n                    })}\n            </div>\n        );\n    }\n}\n\nexport default Giftcard;\n","import { h } from 'preact';\nimport { GiftcardNumberField } from './GiftcardNumberField';\nimport { GiftcardPinField } from './GiftcardPinField';\nimport { GiftcardFieldsProps } from './types';\n\nexport const GiftCardFields = (props: GiftcardFieldsProps) => {\n    const { setRootNode, pinRequired } = props;\n    return (\n        <div ref={setRootNode} className=\"adyen-checkout__field-wrapper\">\n            <GiftcardNumberField {...props} classNameModifiers={pinRequired ? ['70'] : ['100']} />\n\n            {pinRequired && <GiftcardPinField {...props} classNameModifiers={['30']} />}\n        </div>\n    );\n};\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport GiftcardComponent from './components/GiftcardComponent';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport PayButton from '../internal/PayButton';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { PaymentAmount } from '../../types/global-types';\nimport { GiftCardElementData, GiftCardConfiguration, balanceCheckResponseType } from './types';\nimport { TxVariants } from '../tx-variants';\n\nexport class GiftcardElement extends UIElement<GiftCardConfiguration> {\n    public static type = TxVariants.giftcard;\n\n    protected static defaultProps = {\n        brandsConfiguration: {}\n    };\n\n    formatProps(props) {\n        return {\n            ...props?.configuration,\n            ...props\n        };\n    }\n\n    formatData(): GiftCardElementData {\n        return {\n            paymentMethod: {\n                type: this.constructor['type'],\n                brand: this.props.brand,\n                encryptedCardNumber: this.state.data?.encryptedCardNumber,\n                encryptedSecurityCode: this.state.data?.encryptedSecurityCode\n            }\n        };\n    }\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    get icon() {\n        return this.props.brandsConfiguration[this.props.brand]?.icon || this.props.icon || this.resources.getImage()(this.props.brand);\n    }\n\n    get displayName() {\n        return this.props.brandsConfiguration[this.props.brand]?.name || this.props.name;\n    }\n\n    private handleBalanceCheck = (data: GiftCardElementData): Promise<balanceCheckResponseType> => {\n        if (this.props.onBalanceCheck) {\n            return new Promise((resolve, reject) => {\n                void this.props.onBalanceCheck(resolve, reject, data);\n            });\n        }\n\n        if (this.props.session) {\n            return this.props.session.checkBalance(data);\n        }\n    };\n\n    private onOrderRequest = data => {\n        if (this.props.onOrderRequest)\n            return new Promise((resolve, reject) => {\n                void this.props.onOrderRequest(resolve, reject, data);\n            });\n        if (this.props.session) {\n            return this.props.session.createOrder();\n        }\n    };\n\n    public balanceCheck() {\n        return this.onBalanceCheck();\n    }\n\n    private onBalanceCheck = (): void => {\n        // skip balance check if no onBalanceCheck event has been defined\n        const hasBalanceCheck = this.props.session || this.props.onBalanceCheck;\n        if (!hasBalanceCheck) return super.submit();\n\n        this.setStatus('loading');\n\n        this.handleBalanceCheck(this.formatData())\n            .then(({ balance, transactionLimit = {} as PaymentAmount }) => {\n                if (!balance) throw new Error('card-error'); // card doesn't exist\n                if (balance?.currency !== this.props.amount?.currency) throw new Error('currency-error');\n                if (balance?.value <= 0) throw new Error('no-balance');\n\n                this.componentRef.setBalance({ balance, transactionLimit });\n\n                if (this.props.amount.value > balance.value || this.props.amount.value > transactionLimit.value) {\n                    if (this.props.order) {\n                        return super.submit();\n                    }\n\n                    return this.onOrderRequest(this.data).then((order: { orderData: string; pspReference: string }) => {\n                        this.setState({ order: { orderData: order.orderData, pspReference: order.pspReference } });\n                        return super.submit();\n                    });\n                } else {\n                    return this.handleOnRequiringConfirmation().then(() => super.submit());\n                }\n            })\n            .catch(error => {\n                this.setStatus(error?.message || 'error');\n                if (this.props.onError) {\n                    if (error instanceof AdyenCheckoutError) {\n                        this.handleError(error);\n                    } else {\n                        this.handleError(new AdyenCheckoutError('ERROR', error));\n                    }\n                }\n            });\n    };\n\n    private handleOnRequiringConfirmation = (): Promise<any> => {\n        if (this.props.onRequiringConfirmation) {\n            return new Promise<void>((resolve, reject) => {\n                void this.props.onRequiringConfirmation(resolve, reject);\n            });\n        }\n    };\n\n    public submit() {\n        if (!this.isValid) {\n            this.showValidation();\n            return false;\n        }\n\n        this.balanceCheck();\n    }\n\n    // Giftcards override the regular payButton flow\n    public payButton = props => {\n        return <PayButton {...props} />;\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <GiftcardComponent\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    handleKeyPress={this.handleKeyPress}\n                    showPayButton={this.props.showPayButton}\n                    onChange={this.setState}\n                    onBalanceCheck={this.onBalanceCheck}\n                    onSubmit={this.submit}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default GiftcardElement;\n","import DataSfSpan from '../../Card/components/CardInput/components/DataSfSpan';\nimport classNames from 'classnames';\nimport Field from '../../internal/FormFields/Field';\nimport { h } from 'preact';\nimport { GiftcardFieldProps } from '../../Giftcard/components/types';\nimport { alternativeLabelContent } from '../../Card/components/CardInput/components/FieldLabelAlternative';\n\nexport const MealVoucherExpiryField = ({ i18n, sfpState, focusedElement, setFocusOn }: GiftcardFieldProps) => {\n    return (\n        <Field\n            label={i18n.get('giftcard.expiryDate.label')}\n            classNameModifiers={['expireDate', '50']}\n            errorMessage={sfpState.errors.encryptedExpiryDate && i18n.get(sfpState.errors.encryptedExpiryDate)}\n            focused={focusedElement === 'encryptedExpiryDate'}\n            onFocusField={() => setFocusOn('encryptedExpiryDate')}\n            dir={'ltr'}\n            name={'encryptedExpiryDate'}\n            contextVisibleToScreenReader={false}\n            useLabelElement={false}\n            renderAlternativeToLabel={alternativeLabelContent}\n        >\n            <DataSfSpan\n                encryptedFieldType={'encryptedExpiryDate'}\n                className={classNames('adyen-checkout__input', 'adyen-checkout__input--small', 'adyen-checkout__card__exp-date__input', {\n                    'adyen-checkout__input--error': sfpState.errors.encryptedExpiryDate,\n                    'adyen-checkout__input--focus': focusedElement === 'encryptedExpiryDate',\n                    'adyen-checkout__input--valid': !!sfpState.valid.encryptedExpiryMonth && !!sfpState.valid.encryptedExpiryYear\n                })}\n            />\n        </Field>\n    );\n};\n","import { h } from 'preact';\nimport { MealVoucherExpiryField } from './MealVoucherExpiryField';\nimport { GiftcardFieldsProps } from '../../Giftcard/components/types';\nimport { GiftcardPinField } from '../../Giftcard/components/GiftcardPinField';\nimport { GiftcardNumberField } from '../../Giftcard/components/GiftcardNumberField';\n\nexport const MealVoucherFields = (props: GiftcardFieldsProps) => {\n    const { setRootNode } = props;\n    const pinFieldProps = { ...props, label: props.i18n.get('creditCard.securityCode.label') };\n    return (\n        <div ref={setRootNode}>\n            <GiftcardNumberField {...props} classNameModifiers={['100']} />\n\n            <div className=\"adyen-checkout__field-wrapper\">\n                <MealVoucherExpiryField {...props} />\n\n                <GiftcardPinField {...pinFieldProps} classNameModifiers={['50']} />\n            </div>\n        </div>\n    );\n};\n","import GiftcardElement from '../Giftcard/Giftcard';\nimport { MealVoucherFields } from './components/MealVoucherFields';\nimport { TxVariants } from '../tx-variants';\nimport { GiftCardConfiguration } from '../Giftcard/types';\nimport type { ICore } from '../../core/types';\n\nexport class MealVoucherFRElement extends GiftcardElement {\n    public static type = TxVariants.mealVoucher_FR;\n    public static txVariants = [\n        TxVariants.mealVoucher_FR,\n        TxVariants.mealVoucher_FR_natixis,\n        TxVariants.mealVoucher_FR_sodexo,\n        TxVariants.mealVoucher_FR_groupeup\n    ];\n\n    constructor(checkout: ICore, props?: GiftCardConfiguration) {\n        super(checkout, {\n            ...props,\n            pinRequired: true,\n            expiryDateRequired: true,\n            fieldsLayoutComponent: MealVoucherFields\n        });\n    }\n\n    formatProps(props) {\n        return {\n            brand: props.type,\n            ...props\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        return {\n            paymentMethod: {\n                type: this.constructor['type'],\n                brand: this.props.brand,\n                encryptedCardNumber: this.state.data?.encryptedCardNumber,\n                encryptedSecurityCode: this.state.data?.encryptedSecurityCode,\n                encryptedExpiryMonth: this.state.data?.encryptedExpiryMonth,\n                encryptedExpiryYear: this.state.data?.encryptedExpiryYear\n            }\n        };\n    }\n}\n\nexport default MealVoucherFRElement;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport Address from '../internal/Address';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { TxVariants } from '../tx-variants';\n\nexport class AddressElement extends UIElement {\n    public static type = TxVariants.address;\n\n    get data() {\n        return this.state.data;\n    }\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <Address\n                    setComponentRef={this.setComponentRef}\n                    {...this.props}\n                    onChange={this.setState}\n                    {...(process.env.NODE_ENV !== 'production' && { payButton: this.payButton })}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default AddressElement;\n","import { h } from 'preact';\nimport Voucher from '../../../internal/Voucher';\n\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport useImage from '../../../../core/Context/useImage';\nimport { extractCommonPropsForVoucher } from '../../../internal/Voucher/utils';\n\nexport default function BankTransferResult(props) {\n    const { reference } = props;\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    return (\n        <Voucher\n            {...extractCommonPropsForVoucher({ props, i18n, introKey: 'bankTransfer.instructions', getImage: getImage() })}\n            reference={''} // Overwrite the passed reference, so it is not displayed in its own section (since it is already part of the voucherDetails)\n            voucherDetails={[\n                { label: i18n.get('bankTransfer.beneficiary'), value: props.beneficiary },\n                { label: i18n.get('bankTransfer.iban'), value: props.iban },\n                { label: i18n.get('bankTransfer.bic'), value: props.bic },\n                { label: i18n.get('bankTransfer.reference'), value: reference }\n            ]}\n        />\n    );\n}\n","import { h } from 'preact';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport './BankTransferInput.scss';\nimport SendCopyToEmail from '../../../internal/SendCopyToEmail/SendCopyToEmail';\nimport { useEffect, useState } from 'preact/hooks';\nimport useForm from '../../../../utils/useForm';\nimport { BankTransferSchema } from '../../types';\nimport { validationRules } from '../../../../utils/Validator/defaultRules';\n\nfunction BankTransferInput(props) {\n    const { i18n } = useCoreContext();\n    const [showingEmail, setShowingEmail] = useState(false);\n\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid, setSchema } = useForm<BankTransferSchema>({\n        schema: [],\n        defaultData: props.data,\n        rules: {\n            shopperEmail: validationRules.emailRule\n        }\n    });\n\n    const toggleEmailField = () => setShowingEmail(!showingEmail);\n\n    useEffect(() => {\n        const newSchema = showingEmail ? ['shopperEmail'] : [];\n        setSchema(newSchema);\n    }, [showingEmail]);\n\n    this.showValidation = triggerValidation;\n\n    useEffect(() => {\n        props.onChange({ data, errors, valid, isValid });\n    }, [data, valid, errors, showingEmail, isValid]);\n\n    return (\n        <div className=\"adyen-checkout__bankTransfer\">\n            <p className=\"adyen-checkout__bankTransfer__introduction\">{i18n.get('bankTransfer.introduction')}</p>\n            <SendCopyToEmail\n                classNames={'adyen-checkout__bankTransfer__emailField'}\n                value={data.shopperEmail}\n                errors={errors.shopperEmail}\n                onToggle={toggleEmailField}\n                onInput={handleChangeFor('shopperEmail', 'input')}\n                onBlur={handleChangeFor('shopperEmail', 'blur')}\n            />\n        </div>\n    );\n}\n\nexport default BankTransferInput;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectButton from '../internal/RedirectButton';\nimport { BankTransferConfiguration, BankTransferState } from './types';\nimport BankTransferResult from './components/BankTransferResult';\nimport BankTransferInput from './components/BankTransferInput';\nimport { TxVariants } from '../tx-variants';\n\nexport class BankTransferElement extends UIElement<BankTransferConfiguration> {\n    public static type = TxVariants.bankTransfer_IBAN;\n\n    public static defaultProps = {\n        showEmailAddress: true\n    };\n\n    // @ts-ignore Double check why state extends all props\n    public state: BankTransferState = {\n        isValid: !this.props.showEmailAddress,\n        data: {}\n    };\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        const { shopperEmail } = this.state.data;\n\n        return {\n            paymentMethod: {\n                type: BankTransferElement.type\n            },\n            ...(shopperEmail && { shopperEmail })\n        };\n    }\n\n    private handleRef = ref => {\n        this.componentRef = ref;\n    };\n\n    render() {\n        if (this.props.reference) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <BankTransferResult ref={this.handleRef} {...this.props} onActionHandled={this.onActionHandled} />\n                </CoreProvider>\n            );\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.showEmailAddress && <BankTransferInput ref={this.handleRef} {...this.props} onChange={this.setState} />}\n                <RedirectButton\n                    {...this.props}\n                    showPayButton={this.props.showPayButton}\n                    name={this.displayName}\n                    onSubmit={this.submit}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default BankTransferElement;\n","import { Fragment, h } from 'preact';\nimport Img from '../../internal/Img';\n\nexport interface CampaignInfoProps {\n    logoUrl?: string;\n    nonprofitName?: string;\n    causeName?: string;\n    bannerUrl?: string;\n}\n\nexport default function CampaignInfo({ logoUrl = '', nonprofitName = '', causeName = '', bannerUrl = '' }: CampaignInfoProps) {\n    const backgroundImage = `url(${bannerUrl})`;\n\n    return (\n        <Fragment>\n            <Img className=\"adyen-checkout__campaign-background-image\" style={{ backgroundImage }} backgroundUrl={bannerUrl} />\n\n            <div className=\"adyen-checkout__campaign-content\">\n                {logoUrl && <img src={logoUrl} className=\"adyen-checkout__campaign-logo\" alt={nonprofitName} />}\n                <div>\n                    {nonprofitName && <div className=\"adyen-checkout__campaign-title\">{nonprofitName}</div>}\n                    {causeName && <div className=\"adyen-checkout__campaign-cause\">{causeName}</div>}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n","import { h } from 'preact';\nimport CampaignInfo from './CampaignInfo';\n\nexport interface CampaignContentProps {\n    logoUrl?: string;\n    nonprofitDescription?: string;\n    nonprofitName?: string;\n    causeName?: string;\n    nonprofitUrl?: string;\n    bannerUrl?: string;\n}\n\nexport default function CampaignContent({\n    logoUrl = '',\n    nonprofitDescription = '',\n    nonprofitName = '',\n    causeName = '',\n    nonprofitUrl = '',\n    bannerUrl = ''\n}: CampaignContentProps) {\n    return (\n        <div className=\"adyen-checkout__campaign\">\n            {nonprofitUrl ? (\n                <a href={nonprofitUrl} className=\"adyen-checkout__campaign-link\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <CampaignInfo logoUrl={logoUrl} nonprofitName={nonprofitName} causeName={causeName} bannerUrl={bannerUrl} />\n                </a>\n            ) : (\n                <CampaignInfo logoUrl={logoUrl} nonprofitName={nonprofitName} causeName={causeName} bannerUrl={bannerUrl} />\n            )}\n\n            {nonprofitDescription && <div className=\"adyen-checkout__campaign-description\">{nonprofitDescription}</div>}\n        </div>\n    );\n}\n","import cx from 'classnames';\nimport './ButtonGroup.scss';\nimport { h } from 'preact';\n\nconst ButtonGroup = ({ options = [], name, onChange }) => (\n    <div className=\"adyen-checkout__button-group\">\n        {options.map(({ label, selected, value, disabled }, index) => (\n            <label\n                key={`${name}${index}`}\n                className={cx({\n                    'adyen-checkout__button': true,\n                    'adyen-checkout__button--selected': selected,\n                    'adyen-checkout__button--disabled': disabled\n                })}\n            >\n                <input\n                    type=\"radio\"\n                    className=\"adyen-checkout__button-group__input\"\n                    value={value}\n                    checked={selected}\n                    onChange={onChange}\n                    disabled={disabled}\n                />\n                <span className=\"adyen-checkout__button-text\">{label}</span>\n            </label>\n        ))}\n    </div>\n);\n\nexport default ButtonGroup;\n","import Language from '../../../language';\nimport { DonationAmount } from './types';\n\ninterface RoundupAmount {\n    maxRoundupAmount: number;\n    commercialTxAmount: number;\n    currency: string;\n}\n\nconst getRoundupAmount = (maxRoundupAmount: number, commercialTxAmount: number) => maxRoundupAmount - (commercialTxAmount % maxRoundupAmount);\n\nconst getAmountLabel = (i18n: Language, { value, currency }: DonationAmount) => i18n.amount(value, currency);\n\nconst getRoundupAmountLabel = (i18n: Language, { maxRoundupAmount, commercialTxAmount, currency }: RoundupAmount) =>\n    getAmountLabel(i18n, { value: getRoundupAmount(maxRoundupAmount, commercialTxAmount), currency });\n\nexport { getAmountLabel, getRoundupAmount, getRoundupAmountLabel };\n","import { h, Fragment } from 'preact';\nimport ButtonGroup from '../../internal/ButtonGroup';\nimport Button from '../../internal/Button';\nimport { getAmountLabel } from './utils';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { Status } from './types';\n\ninterface FixedAmountsProps {\n    selectedAmount: number;\n    currency: string;\n    values: Array<number>;\n    status: Status;\n    onAmountSelected: ({ target }) => void;\n    onDonateButtonClicked: (amount: number) => void;\n}\nexport default function FixedAmounts(props: FixedAmountsProps) {\n    const { currency, values, selectedAmount, status, onAmountSelected, onDonateButtonClicked } = props;\n    const { i18n } = useCoreContext();\n\n    return (\n        <Fragment>\n            <div className=\"adyen-checkout__amounts\">\n                <ButtonGroup\n                    options={values.map(value => ({\n                        value,\n                        label: getAmountLabel(i18n, { value, currency }),\n                        disabled: status === 'loading',\n                        selected: value === selectedAmount\n                    }))}\n                    name=\"amount\"\n                    onChange={onAmountSelected}\n                />\n            </div>\n            <Button\n                classNameModifiers={['donate']}\n                onClick={onDonateButtonClicked}\n                label={i18n.get('donateButton')}\n                disabled={selectedAmount === null}\n                status={status}\n            />\n        </Fragment>\n    );\n}\n","import { h, Fragment } from 'preact';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Button from '../../internal/Button';\n\ninterface RoundupProps {\n    status: string;\n    donationAmount: string;\n    originalPaymentAmount: string;\n    onDonateButtonClicked: () => void;\n}\n\nexport default function Roundup(props: RoundupProps) {\n    const { status, donationAmount, originalPaymentAmount, onDonateButtonClicked } = props;\n    const { i18n } = useCoreContext();\n\n    return (\n        <Fragment>\n            <Button\n                classNameModifiers={['donate']}\n                onClick={onDonateButtonClicked}\n                label={`${i18n.get('donateButton')} ${donationAmount}`}\n                status={status}\n            />\n            <span className=\"adyen-checkout-roundup-description\">\n                {i18n.get('donationRoundUpDescription', { values: { donationAmount, originalPaymentAmount } })}\n            </span>\n        </Fragment>\n    );\n}\n","import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport CampaignContent from './CampaignContent';\nimport Button from '../../internal/Button';\nimport Img from '../../internal/Img';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport '../Donation.scss';\nimport DisclaimerMessage from '../../internal/DisclaimerMessage';\nimport { DonationAmount, DonationComponentProps, Status } from './types';\nimport useImage from '../../../core/Context/useImage';\nimport FixedAmounts from './FixedAmounts';\nimport Roundup from './Roundup';\nimport { getAmountLabel, getRoundupAmount, getRoundupAmountLabel } from './utils';\n\nexport default function DonationComponent(props: DonationComponentProps) {\n    const { donation, commercialTxAmount, onCancel, onDonate, showCancelButton = true, termsAndConditionsUrl } = props;\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const { currency, type } = donation;\n    const isRoundupDonation = type === 'roundup';\n    const [status, setStatus] = useState<Status>('ready');\n    const [isValid, setIsValid] = useState<boolean>(isRoundupDonation);\n    const [amount, setAmount] = useState<DonationAmount>({\n        currency,\n        value: isRoundupDonation ? getRoundupAmount(donation.maxRoundupAmount, commercialTxAmount) : null\n    });\n\n    this.setStatus = (status: Status) => {\n        setStatus(status);\n    };\n\n    const handleAmountSelected = ({ target }) => {\n        const value = parseInt(target.value, 10);\n        setIsValid(true);\n        setAmount((amount: DonationAmount) => ({ ...amount, value }));\n    };\n\n    const handleDonate = () => {\n        setStatus('loading');\n        onDonate({ data: { amount } });\n    };\n\n    const handleDecline = () => {\n        setStatus('ready');\n        onCancel({ data: { amount }, isValid });\n    };\n\n    useEffect(() => {\n        props.onChange({ data: { amount }, isValid });\n    }, [amount, isValid]);\n\n    if (status === 'error') {\n        return (\n            <div className=\"adyen-checkout__adyen-giving\">\n                <Img\n                    className=\"adyen-checkout__status__icon adyen-checkout__status__icon--error\"\n                    src={getImage({ imageFolder: 'components/' })('error')}\n                    alt={i18n.get('error.message.unknown')}\n                />\n                <div className=\"adyen-checkout__status__text\">{i18n.get('error.message.unknown')}</div>\n            </div>\n        );\n    }\n\n    if (status === 'success') {\n        return (\n            <div className=\"adyen-checkout__adyen-giving\">\n                <Img\n                    className=\"adyen-checkout__status__icon adyen-checkout__status__icon--success\"\n                    src={getImage({ imageFolder: 'components/' })('heart')}\n                    alt={i18n.get('thanksForYourSupport')}\n                />\n\n                <div className=\"adyen-checkout__status__text\">{i18n.get('thanksForYourSupport')}</div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"adyen-checkout__adyen-giving\">\n            <CampaignContent {...props} />\n\n            <div className=\"adyen-checkout__adyen-giving-actions\">\n                {termsAndConditionsUrl && <DisclaimerMessage message={i18n.get('donationTermsCondition')} urls={[termsAndConditionsUrl]} />}\n                {isRoundupDonation ? (\n                    <Roundup\n                        donationAmount={getRoundupAmountLabel(i18n, { maxRoundupAmount: donation.maxRoundupAmount, commercialTxAmount, currency })}\n                        originalPaymentAmount={getAmountLabel(i18n, { value: commercialTxAmount, currency })}\n                        status={status}\n                        onDonateButtonClicked={handleDonate}\n                    ></Roundup>\n                ) : (\n                    <FixedAmounts\n                        selectedAmount={amount.value}\n                        values={donation.values}\n                        currency={currency}\n                        status={status}\n                        onAmountSelected={handleAmountSelected}\n                        onDonateButtonClicked={handleDonate}\n                    ></FixedAmounts>\n                )}\n                {showCancelButton && (\n                    <Button\n                        classNameModifiers={['decline']}\n                        variant=\"ghost\"\n                        onClick={handleDecline}\n                        disabled={status === 'loading'}\n                        label={`${i18n.get('notNowButton')} ›`}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nDonationComponent.defaultProps = {\n    onCancel: () => {},\n    onChange: () => {},\n    onDonate: () => {},\n    donation: {},\n    showCancelButton: true\n};\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport DonationComponent from './components/DonationComponent';\nimport { TxVariants } from '../tx-variants';\nimport type { ICore } from '../../core/types';\nimport type { DonationConfiguration } from './types';\n\nclass DonationElement extends UIElement<DonationConfiguration> {\n    public static type = TxVariants.donation;\n\n    constructor(checkout: ICore, props?: DonationConfiguration) {\n        super(checkout, props);\n        this.donate = this.donate.bind(this);\n    }\n\n    public static defaultProps = {\n        onCancel: () => {},\n        onDonate: () => {}\n    };\n\n    /**\n     * Returns the component payment data ready to submit to the Checkout API\n     */\n    get data() {\n        return this.state.data;\n    }\n\n    /**\n     * Returns whether the component state is valid or not\n     */\n    get isValid() {\n        return this.state.isValid;\n    }\n\n    setState(newState) {\n        this.state = { ...this.state, ...newState };\n    }\n\n    donate() {\n        const { data, isValid } = this;\n        this.props.onDonate({ data, isValid }, this);\n    }\n\n    public handleRef = ref => {\n        this.componentRef = ref;\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {/*@ts-ignore ref*/}\n                <DonationComponent {...this.props} ref={this.handleRef} onChange={this.setState} onDonate={this.donate} />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default DonationElement;\n","import type { DropinConfiguration } from './types';\n\nconst props: DropinConfiguration = {\n    isDropin: true,\n    instantPaymentTypes: [],\n    paymentMethodComponents: [],\n    paymentMethodsConfiguration: {},\n    openFirstPaymentMethod: true,\n    openFirstStoredPaymentMethod: true,\n    showStoredPaymentMethods: true,\n    showPaymentMethods: true,\n    disableFinalAnimation: false\n};\n\nexport default props;\n","import { h } from 'preact';\nimport PaymentMethodIcon from './PaymentMethodIcon';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport useImage from '../../../../core/Context/useImage';\nimport './OrderPaymentMethods.scss';\nimport { Order, OrderStatus } from '../../../../types';\n\ntype OrderPaymentMethodsProps = {\n    order: Order;\n    orderStatus: OrderStatus;\n    onOrderCancel: (order) => void;\n    brandLogoConfiguration: any;\n};\n\nexport const OrderPaymentMethods = ({ order, orderStatus, onOrderCancel, brandLogoConfiguration }: OrderPaymentMethodsProps) => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n\n    return (\n        <div>\n            <ul className={'adyen-checkout__order-payment-methods-list'}>\n                {orderStatus?.paymentMethods?.map((orderPaymentMethod, index) => (\n                    <li key={`${orderPaymentMethod.type}-${index}`} className=\"adyen-checkout__order-payment-method\">\n                        <div className=\"adyen-checkout__order-payment-method__header\">\n                            <div className=\"adyen-checkout__payment-method__header__title\">\n                                <PaymentMethodIcon\n                                    altDescription={orderPaymentMethod.name}\n                                    type={orderPaymentMethod.type}\n                                    src={brandLogoConfiguration[orderPaymentMethod.type] || getImage()(orderPaymentMethod.type)}\n                                />\n                                {orderPaymentMethod.label ? `${orderPaymentMethod.label}` : `•••• ${orderPaymentMethod.lastFour}`}\n                            </div>\n\n                            {onOrderCancel && (\n                                <button\n                                    type=\"button\"\n                                    className=\"adyen-checkout__button adyen-checkout__button--inline adyen-checkout__button--link\"\n                                    onClick={() => {\n                                        onOrderCancel({ order });\n                                    }}\n                                >\n                                    {i18n.get('storedPaymentMethod.disable.button')}\n                                </button>\n                            )}\n                        </div>\n                        <div className=\"adyen-checkout__order-payment-method__details\">\n                            <div className=\"adyen-checkout__order-payment-method__deducted-amount\">\n                                <div className=\"adyen-checkout__order-payment-method__deducted-amount__label\">{i18n.get('deductedBalance')}</div>\n                                <div className=\"adyen-checkout__order-payment-method__deducted-amount__value\">\n                                    {i18n.amount(orderPaymentMethod.amount.value, orderPaymentMethod.amount.currency)}\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n\n            {orderStatus.remainingAmount && (\n                <div className=\"adyen-checkout__order-remaining-amount\">\n                    {i18n.get('partialPayment.warning')}{' '}\n                    <strong>{i18n.amount(orderStatus.remainingAmount.value, orderStatus.remainingAmount.currency)}</strong>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default OrderPaymentMethods;\n","import { Fragment, h } from 'preact';\nimport UIElement from '../../../internal/UIElement/UIElement';\nimport './InstantPaymentMethods.scss';\n\ninterface InstantPaymentMethodsProps {\n    paymentMethods: UIElement[];\n}\n\nfunction InstantPaymentMethods({ paymentMethods }: InstantPaymentMethodsProps) {\n    return (\n        <Fragment>\n            <ul className=\"adyen-checkout__instant-payment-methods-list\">\n                {paymentMethods.map(pm => (\n                    <li key={pm.type}>{pm.render()}</li>\n                ))}\n            </ul>\n        </Fragment>\n    );\n}\n\nexport default InstantPaymentMethods;\n","import { useEffect, useState } from 'preact/hooks';\nimport UIElement from '../../../internal/UIElement/UIElement';\n\ntype BrandLogoConfiguration = {\n    [key: string]: string;\n};\n\nexport function useBrandLogoConfiguration(paymentMethods: UIElement[]): BrandLogoConfiguration {\n    const [brandLogoConfiguration, setBrandLogoConfiguration] = useState<BrandLogoConfiguration>({});\n\n    useEffect(() => {\n        setBrandLogoConfiguration(\n            paymentMethods.reduce(\n                (accumulator, paymentMethod) => ({\n                    ...accumulator,\n                    ...(paymentMethod.props['brand'] && paymentMethod.icon && { [paymentMethod.props['brand']]: paymentMethod.icon })\n                }),\n                {}\n            )\n        );\n    }, [paymentMethods]);\n\n    return brandLogoConfiguration;\n}\n","import { h } from 'preact';\n\nconst PaymentMethodDetails = ({ paymentMethodComponent, isLoaded }) => {\n    if (paymentMethodComponent && isLoaded) {\n        return <div className={'adyen-checkout__payment-method__details__content'}>{paymentMethodComponent}</div>;\n    }\n\n    return null;\n};\n\nexport default PaymentMethodDetails;\n","import { h } from 'preact';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport classNames from 'classnames';\nimport './DisableOneClickConfirmation.scss';\n\nconst DisableOneClickConfirmation = ({ id, open, onDisable, onCancel }) => {\n    const { i18n } = useCoreContext();\n    return (\n        <div\n            id={id}\n            aria-hidden={!open}\n            className={classNames({\n                'adyen-checkout__payment-method__disable-confirmation': true,\n                'adyen-checkout__payment-method__disable-confirmation--open': open\n            })}\n        >\n            <div className=\"adyen-checkout__payment-method__disable-confirmation__content\">\n                {i18n.get('storedPaymentMethod.disable.confirmation')}\n                <div className=\"adyen-checkout__payment-method__disable-confirmation__buttons\">\n                    <button\n                        type=\"button\"\n                        className={classNames(\n                            'adyen-checkout__button',\n                            'adyen-checkout__payment-method__disable-confirmation__button',\n                            'adyen-checkout__payment-method__disable-confirmation__button--remove'\n                        )}\n                        disabled={!open}\n                        onClick={onDisable}\n                    >\n                        {i18n.get('storedPaymentMethod.disable.confirmButton')}\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={classNames(\n                            'adyen-checkout__button',\n                            'adyen-checkout__payment-method__disable-confirmation__button',\n                            'adyen-checkout__payment-method__disable-confirmation__button--cancel'\n                        )}\n                        disabled={!open}\n                        onClick={onCancel}\n                    >\n                        {i18n.get('storedPaymentMethod.disable.cancelButton')}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DisableOneClickConfirmation;\n","import { h } from 'preact';\nimport { BrandConfiguration } from '../../../../Card/types';\nimport PaymentMethodIcon from '../PaymentMethodIcon';\nimport { getFullBrandName } from '../../../../Card/components/CardInput/utils';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\n\nconst prepareVisibleBrands = (allowedBrands: Array<BrandConfiguration>) => {\n    const visibleBrands = allowedBrands.length <= 4 ? allowedBrands : allowedBrands.slice(0, 3);\n    return {\n        visibleBrands,\n        leftBrandsAmount: allowedBrands.length - visibleBrands.length\n    };\n};\n\ninterface PaymentMethodBrandsProps {\n    brands: Array<BrandConfiguration>;\n    excludedUIBrands?: Array<string>;\n    isPaymentMethodSelected: boolean;\n    keepBrandsVisible?: boolean;\n    showOtherInsteafOfNumber?: boolean;\n}\n\nconst PaymentMethodBrands = ({\n    brands,\n    excludedUIBrands = [],\n    isPaymentMethodSelected,\n    keepBrandsVisible = false,\n    showOtherInsteafOfNumber = false\n}: PaymentMethodBrandsProps) => {\n    const { i18n } = useCoreContext();\n\n    if (isPaymentMethodSelected && !keepBrandsVisible) {\n        return null;\n    }\n\n    const allowedBrands = brands.filter(brand => !excludedUIBrands?.includes(brand.name));\n    const { visibleBrands, leftBrandsAmount } = prepareVisibleBrands(allowedBrands);\n\n    return (\n        <span className=\"adyen-checkout__payment-method__brands\">\n            {visibleBrands.map(brand => (\n                <PaymentMethodIcon key={brand.name} altDescription={getFullBrandName(brand.name)} type={brand.name} src={brand.icon} />\n            ))}\n            {showOtherInsteafOfNumber ? (\n                <span className=\"adyen-checkout__payment-method__brand-number\">+ {i18n.get('paymentMethodBrand.other')}</span>\n            ) : (\n                leftBrandsAmount !== 0 && <span className=\"adyen-checkout__payment-method__brand-number\">+{leftBrandsAmount}</span>\n            )}\n        </span>\n    );\n};\n\nexport default PaymentMethodBrands;\n","import classNames from 'classnames';\nimport { h } from 'preact';\nimport './PaymentMethodName.scss';\n\nconst PaymentMethodName = ({ displayName, additionalInfo, isSelected }) => (\n    <span className={'adyen-checkout__payment-method__name_wrapper'}>\n        <span\n            className={classNames({\n                'adyen-checkout__payment-method__name': true,\n                'adyen-checkout__payment-method__name--selected': isSelected\n            })}\n        >\n            {displayName}\n        </span>\n\n        {additionalInfo && (\n            <span\n                className={classNames({\n                    'adyen-checkout__payment-method__additional-info': true,\n                    'adyen-checkout__payment-method__additional-info--selected': isSelected\n                })}\n            >\n                {additionalInfo}\n            </span>\n        )}\n    </span>\n);\n\nexport default PaymentMethodName;\n","import { Component, h } from 'preact';\nimport classNames from 'classnames';\nimport PaymentMethodDetails from '../PaymentMethodDetails';\nimport PaymentMethodIcon from '../PaymentMethodIcon';\nimport DisableOneClickConfirmation from '../DisableOneClickConfirmation';\nimport './PaymentMethodItem.scss';\nimport UIElement from '../../../../internal/UIElement/UIElement';\nimport PaymentMethodBrands from '../PaymentMethodBrands/PaymentMethodBrands';\nimport { BRAND_ICON_UI_EXCLUSION_LIST } from '../../../../internal/SecuredFields/lib/constants';\nimport PaymentMethodName from '../PaymentMethodName';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport ExpandButton from '../../../../internal/ExpandButton';\n\nexport interface PaymentMethodItemProps {\n    paymentMethod: UIElement;\n    isSelected?: boolean;\n    isLoaded?: boolean;\n    isLoading?: boolean;\n    isDisablingPaymentMethod: boolean;\n    showRemovePaymentMethodButton: boolean;\n    onDisableStoredPaymentMethod: (paymentMethod) => void;\n    onSelect: (paymentMethod: UIElement) => void;\n    standalone: boolean;\n    className?: string;\n    showRadioButton?: boolean;\n}\n\nclass PaymentMethodItem extends Component<PaymentMethodItemProps> {\n    public static defaultProps = {\n        paymentMethod: null,\n        isSelected: false,\n        isLoaded: false,\n        isLoading: false,\n        showDisableStoredPaymentMethodConfirmation: false,\n        showRadioButton: false\n    };\n\n    public state = {\n        showDisableStoredPaymentMethodConfirmation: false\n    };\n\n    public toggleDisableConfirmation = () => {\n        this.setState({ showDisableStoredPaymentMethodConfirmation: !this.state.showDisableStoredPaymentMethodConfirmation });\n    };\n\n    public onDisableStoredPaymentMethod = () => {\n        this.props.onDisableStoredPaymentMethod(this.props.paymentMethod);\n        this.toggleDisableConfirmation();\n    };\n\n    private handleOnListItemClick = (): void => {\n        const { onSelect, paymentMethod } = this.props;\n        onSelect(paymentMethod);\n    };\n\n    // @ts-ignore need to refine the type for paymentMethod\n    render({ paymentMethod, isSelected, isDisablingPaymentMethod, isLoaded, isLoading, standalone, showRadioButton }) {\n        const { i18n } = useCoreContext();\n\n        if (!paymentMethod) {\n            return null;\n        }\n\n        const isCard = paymentMethod.props.type === 'card' || paymentMethod.props.type === 'scheme';\n\n        const paymentMethodClassnames = classNames({\n            'adyen-checkout__payment-method': true,\n            [`adyen-checkout__payment-method--${paymentMethod.props.type}`]: true,\n            ...(isCard && { [`adyen-checkout__payment-method--${paymentMethod.props.fundingSource ?? 'credit'}`]: true }),\n            'adyen-checkout__payment-method--selected': isSelected,\n            'adyen-checkout__payment-method--loading': isLoading,\n            'adyen-checkout__payment-method--disabling': isDisablingPaymentMethod,\n            'adyen-checkout__payment-method--confirming': this.state.showDisableStoredPaymentMethodConfirmation,\n            'adyen-checkout__payment-method--standalone': standalone,\n            [paymentMethod._id]: true,\n            [this.props.className]: true\n        });\n\n        const showRemovePaymentMethodButton = this.props.showRemovePaymentMethodButton && paymentMethod.props.oneClick && isSelected;\n        const disableConfirmationId = `remove-${paymentMethod._id}`;\n        const containerId = `container-${paymentMethod._id}`;\n        const buttonId = `button-${paymentMethod._id}`;\n\n        const showBrands = !paymentMethod.props.oneClick && paymentMethod.brands && paymentMethod.brands.length > 0;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n            <div key={paymentMethod._id} className={paymentMethodClassnames} onClick={this.handleOnListItemClick}>\n                <div className=\"adyen-checkout__payment-method__header\">\n                    <ExpandButton buttonId={buttonId} showRadioButton={showRadioButton} isSelected={isSelected} expandContentId={containerId}>\n                        <PaymentMethodIcon\n                            // Only add alt attribute to storedPaymentMethods (to avoid SR reading the PM name twice)\n                            {...(paymentMethod.props.oneClick && { altDescription: paymentMethod.props.name })}\n                            type={paymentMethod.type}\n                            src={paymentMethod.icon}\n                        />\n\n                        <PaymentMethodName\n                            displayName={paymentMethod.displayName}\n                            isSelected={isSelected}\n                            additionalInfo={paymentMethod.additionalInfo}\n                        />\n                    </ExpandButton>\n\n                    {showRemovePaymentMethodButton && (\n                        <button\n                            type=\"button\"\n                            className=\"adyen-checkout__button adyen-checkout__button--inline adyen-checkout__button--link\"\n                            onClick={this.toggleDisableConfirmation}\n                            aria-expanded={this.state.showDisableStoredPaymentMethodConfirmation}\n                            aria-controls={disableConfirmationId}\n                        >\n                            {i18n.get('storedPaymentMethod.disable.button')}\n                        </button>\n                    )}\n\n                    {showBrands && (\n                        <PaymentMethodBrands\n                            showOtherInsteafOfNumber={paymentMethod.props.showOtherInsteafOfNumber}\n                            keepBrandsVisible={paymentMethod.props.keepBrandsVisible}\n                            brands={paymentMethod.brands}\n                            excludedUIBrands={BRAND_ICON_UI_EXCLUSION_LIST}\n                            isPaymentMethodSelected={isSelected}\n                        />\n                    )}\n                </div>\n\n                <div className=\"adyen-checkout-pm-details-wrapper\" aria-hidden={!isSelected}>\n                    <div className=\"adyen-checkout__payment-method__details\" id={containerId}>\n                        {showRemovePaymentMethodButton && (\n                            <DisableOneClickConfirmation\n                                id={disableConfirmationId}\n                                open={this.state.showDisableStoredPaymentMethodConfirmation}\n                                onDisable={this.onDisableStoredPaymentMethod}\n                                onCancel={this.toggleDisableConfirmation}\n                            />\n                        )}\n\n                        <PaymentMethodDetails paymentMethodComponent={paymentMethod.render()} isLoaded={isLoaded} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PaymentMethodItem;\n","import { h } from 'preact';\nimport PaymentMethodItem from './PaymentMethodItem/PaymentMethodItem';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { useMemo } from 'preact/hooks';\nimport uuid from '../../../../utils/uuid';\nimport classNames from 'classnames';\nimport UIElement from '../../../internal/UIElement';\n\nexport interface PaymentMethodsContainerProps {\n    label: string;\n    classNameModifiers?: string[];\n    paymentMethods: UIElement[];\n    activePaymentMethod?: UIElement;\n    /**\n     * Map that keeps track of which Payment methods (UIElements) already got rendered in the UI\n     */\n    cachedPaymentMethods: Record<string, boolean>;\n    showRemovePaymentMethodButton?: boolean;\n    onSelect?: (paymentMethod: UIElement) => void;\n    onDisableStoredPaymentMethod?: (storedPaymentMethod) => void;\n    isDisablingPaymentMethod?: boolean;\n    isLoading: boolean;\n    showRadioButton?: boolean;\n}\n\nfunction PaymentMethodsContainer({\n    label,\n    classNameModifiers = [],\n    paymentMethods = [],\n    activePaymentMethod = null,\n    cachedPaymentMethods = {},\n    isLoading = false,\n    isDisablingPaymentMethod = false,\n    showRemovePaymentMethodButton,\n    onDisableStoredPaymentMethod = () => {},\n    onSelect,\n    showRadioButton\n}: Readonly<PaymentMethodsContainerProps>) {\n    const { i18n } = useCoreContext();\n    const selectListId: string = useMemo(() => `select-${uuid()}`, []);\n    const paymentMethodListClassnames = classNames([\n        'adyen-checkout__payment-methods-list',\n        { 'adyen-checkout__payment-methods-list--loading': isLoading },\n        ...classNameModifiers.map(m => `adyen-checkout__payment-methods-list--${m}`)\n    ]);\n\n    return (\n        <div className=\"adyen-checkout-payment-methods-container\">\n            {!!label.length && (\n                <label htmlFor={selectListId} className=\"adyen-checkout-payment-methods-list-label\">\n                    {label}\n                </label>\n            )}\n            <div\n                id={selectListId}\n                className={paymentMethodListClassnames}\n                role=\"radiogroup\"\n                aria-label={i18n.get('paymentMethodsList.aria.label')}\n                required\n            >\n                {paymentMethods.map((paymentMethod, index, paymentMethodsCollection) => {\n                    const isSelected = activePaymentMethod && activePaymentMethod._id === paymentMethod._id;\n                    const isLoaded = paymentMethod._id in cachedPaymentMethods;\n                    const isNextOneSelected =\n                        activePaymentMethod &&\n                        paymentMethodsCollection[index + 1] &&\n                        activePaymentMethod._id === paymentMethodsCollection[index + 1]._id;\n\n                    return (\n                        <PaymentMethodItem\n                            className={classNames({ 'adyen-checkout__payment-method--next-selected': isNextOneSelected })}\n                            standalone={paymentMethods.length === 1}\n                            paymentMethod={paymentMethod}\n                            isSelected={isSelected}\n                            isDisablingPaymentMethod={isSelected && isDisablingPaymentMethod}\n                            isLoaded={isLoaded}\n                            isLoading={isLoading}\n                            onSelect={onSelect}\n                            key={paymentMethod._id}\n                            showRemovePaymentMethodButton={showRemovePaymentMethodButton}\n                            showRadioButton={showRadioButton}\n                            onDisableStoredPaymentMethod={onDisableStoredPaymentMethod}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default PaymentMethodsContainer;\n","import { Fragment, h } from 'preact';\nimport getProp from '../../../../utils/getProp';\nimport UIElement from '../../../internal/UIElement/UIElement';\nimport { Order, OrderStatus } from '../../../../types/global-types';\nimport OrderPaymentMethods from './OrderPaymentMethods';\nimport InstantPaymentMethods from './InstantPaymentMethods';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport { useBrandLogoConfiguration } from './useBrandLogoConfiguration';\nimport PaymentMethodsContainer, { PaymentMethodsContainerProps } from './PaymentMethodsContainer';\nimport { useEffect } from 'preact/hooks';\n\ninterface PaymentMethodListProps extends Omit<PaymentMethodsContainerProps, 'label' | 'classNameModifiers'> {\n    instantPaymentMethods?: UIElement[];\n    storedPaymentMethods?: UIElement[];\n    openFirstStoredPaymentMethod?: boolean;\n    openFirstPaymentMethod?: boolean;\n    openPaymentMethod?: {\n        type: string;\n    };\n    order?: Order;\n    orderStatus?: OrderStatus;\n    onOrderCancel?: (order) => void;\n}\n\nconst PaymentMethodList = ({\n    paymentMethods = [], // Non-stored payments\n    instantPaymentMethods = [],\n    storedPaymentMethods = [],\n    openFirstStoredPaymentMethod,\n    openFirstPaymentMethod,\n    openPaymentMethod,\n    order,\n    orderStatus = null,\n    onOrderCancel,\n    onSelect = () => {},\n    ...rest\n}: PaymentMethodListProps) => {\n    const { i18n } = useCoreContext();\n    const brandLogoConfiguration = useBrandLogoConfiguration(paymentMethods);\n    const hasInstantPaymentMethods = instantPaymentMethods.length > 0;\n    const hasStoredPaymentMethods = storedPaymentMethods.length > 0;\n    const pmListLabel = hasInstantPaymentMethods || hasStoredPaymentMethods ? i18n.get('paymentMethodsList.otherPayments.label') : '';\n\n    useEffect(() => {\n        if (openPaymentMethod?.type) {\n            const paymentMethod = paymentMethods.find(paymentMethod => paymentMethod.type === openPaymentMethod?.type);\n            if (!paymentMethod) {\n                console.warn(`Drop-in: payment method type \"${openPaymentMethod?.type}\" not found`);\n            } else {\n                onSelect(paymentMethod);\n                return;\n            }\n        }\n\n        // Open first PaymentMethodItem\n        const firstStoredPayment = storedPaymentMethods[0];\n        const firstNonStoredPayment = paymentMethods[0];\n\n        if (firstStoredPayment || firstNonStoredPayment) {\n            const shouldOpenFirstStored = openFirstStoredPaymentMethod && getProp(firstStoredPayment, 'props.oneClick') === true;\n            if (shouldOpenFirstStored) {\n                onSelect(firstStoredPayment);\n                return;\n            }\n\n            if (openFirstPaymentMethod) {\n                onSelect(firstNonStoredPayment);\n            }\n        }\n    }, [storedPaymentMethods, paymentMethods, openFirstStoredPaymentMethod, openFirstPaymentMethod, openPaymentMethod]);\n\n    return (\n        <Fragment>\n            {orderStatus && (\n                <OrderPaymentMethods\n                    order={order}\n                    orderStatus={orderStatus}\n                    onOrderCancel={onOrderCancel}\n                    brandLogoConfiguration={brandLogoConfiguration}\n                />\n            )}\n\n            {hasInstantPaymentMethods && <InstantPaymentMethods paymentMethods={instantPaymentMethods} />}\n\n            {hasStoredPaymentMethods && (\n                <PaymentMethodsContainer\n                    {...rest}\n                    label={i18n.get('paymentMethodsList.storedPayments.label')}\n                    classNameModifiers={['storedPayments']}\n                    paymentMethods={storedPaymentMethods}\n                    onSelect={onSelect}\n                ></PaymentMethodsContainer>\n            )}\n\n            {!!paymentMethods.length && (\n                <PaymentMethodsContainer\n                    {...rest}\n                    label={pmListLabel}\n                    classNameModifiers={['otherPayments']}\n                    paymentMethods={paymentMethods}\n                    onSelect={onSelect}\n                ></PaymentMethodsContainer>\n            )}\n        </Fragment>\n    );\n};\n\nexport default PaymentMethodList;\n","import Success from './Success';\nimport Error from './Error';\nimport './Status.scss';\n\nexport default {\n    Success,\n    Error\n};\n","import { h } from 'preact';\n\nimport Img from '../../../internal/Img';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport useImage from '../../../../core/Context/useImage';\nimport { useA11yReporter } from '../../../../core/Errors/useA11yReporter';\n\nconst Success = ({ message }) => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const status = i18n.get(message || 'creditCard.success');\n    useA11yReporter(status);\n    return (\n        <div className=\"adyen-checkout__status adyen-checkout__status--success\">\n            <Img\n                height=\"88\"\n                className=\"adyen-checkout__status__icon\"\n                src={getImage({ extension: 'gif', imageFolder: 'components/' })('success')}\n                alt={i18n.get(message || 'creditCard.success')}\n            />\n            <span className=\"adyen-checkout__status__text\">{status}</span>\n        </div>\n    );\n};\n\nexport default Success;\n","import { h } from 'preact';\n\nimport Img from '../../../internal/Img';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport useImage from '../../../../core/Context/useImage';\nimport { useA11yReporter } from '../../../../core/Errors/useA11yReporter';\n\nconst Error = ({ message }) => {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const status = i18n.get(message || 'error.message.unknown');\n    useA11yReporter(status);\n\n    return (\n        <div className=\"adyen-checkout__status adyen-checkout__status--error\">\n            <Img\n                className=\"adyen-checkout__status__icon\"\n                src={getImage({ extension: 'gif', imageFolder: 'components/' })('error')}\n                alt={i18n.get(message || 'error.message.unknown')}\n                height=\"88\"\n            />\n            <span className=\"adyen-checkout__status__text\">{status}</span>\n        </div>\n    );\n};\n\nexport default Error;\n","import { Component, h } from 'preact';\nimport PaymentMethodList from './PaymentMethod/PaymentMethodList';\nimport Status from './status';\nimport getOrderStatus from '../../../core/Services/order-status';\nimport { DropinComponentProps, DropinComponentState, DropinStatusProps, onOrderCancelData } from '../types';\nimport './DropinComponent.scss';\nimport { UIElementStatus } from '../../internal/UIElement/types';\nimport { sanitizeOrder } from '../../internal/UIElement/utils';\nimport { PaymentAmount } from '../../../types/global-types';\nimport { ANALYTICS_RENDERED_STR } from '../../../core/Analytics/constants';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport UIElement from '../../internal/UIElement';\n\nexport class DropinComponent extends Component<DropinComponentProps, DropinComponentState> {\n    public state: DropinComponentState = {\n        elements: [],\n        instantPaymentElements: [],\n        storedPaymentElements: [],\n        orderStatus: null,\n        isDisabling: false,\n        status: { type: 'loading', props: undefined },\n        activePaymentMethod: null,\n        cachedPaymentMethods: {}\n    };\n\n    componentDidMount() {\n        this.prepareDropinData();\n    }\n\n    public prepareDropinData = () => {\n        const { order, clientKey, loadingContext } = this.props;\n        const [storedElementsPromises, elementsPromises, instantPaymentsPromises] = this.props.onCreateElements();\n        const orderStatusPromise = order ? getOrderStatus({ clientKey, loadingContext }, order) : null;\n\n        void Promise.all([storedElementsPromises, elementsPromises, instantPaymentsPromises, orderStatusPromise]).then(\n            ([storedPaymentElements, elements, instantPaymentElements, orderStatus]) => {\n                this.setState({ instantPaymentElements, elements, storedPaymentElements, orderStatus });\n                this.setStatus('ready');\n\n                this.props.modules?.analytics.sendAnalytics('dropin', {\n                    type: ANALYTICS_RENDERED_STR,\n                    configData: this.analyticConfigData\n                });\n            }\n        );\n\n        this.onOrderCancel = this.getOnOrderCancel();\n    };\n\n    get analyticConfigData() {\n        return {\n            openFirstStoredPaymentMethod: this.props.openFirstStoredPaymentMethod,\n            showStoredPaymentMethods: this.props.showStoredPaymentMethods\n        };\n    }\n\n    public setStatus = (status: UIElementStatus, props: DropinStatusProps = {}) => {\n        this.setState({ status: { type: status, props } });\n    };\n\n    private setActivePaymentMethod = (paymentMethod: UIElement): void => {\n        if (paymentMethod === this.state.activePaymentMethod) {\n            return;\n        }\n\n        this.setState(prevState => ({\n            activePaymentMethod: paymentMethod,\n            cachedPaymentMethods: { ...prevState.cachedPaymentMethods, [paymentMethod._id]: true }\n        }));\n\n        if (this.state.cachedPaymentMethods[paymentMethod._id]) {\n            paymentMethod.activate();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.status.type !== this.state.status.type && this.state.activePaymentMethod) {\n            this.state.activePaymentMethod.setStatus(this.state.status.type);\n        }\n\n        if (this.state.status.type === 'ready' && prevState.status.type !== 'ready' && this.props.onReady) {\n            this.props.onReady();\n        }\n    }\n\n    private handleOnSelectPaymentMethod = paymentMethod => {\n        const { activePaymentMethod } = this.state;\n\n        this.setActivePaymentMethod(paymentMethod);\n\n        // onSelect event\n        if ((activePaymentMethod && activePaymentMethod._id !== paymentMethod._id) || !activePaymentMethod) {\n            this.props.onSelect?.(paymentMethod);\n\n            paymentMethod.submitAnalytics({ type: ANALYTICS_RENDERED_STR });\n        }\n    };\n\n    private handleDisableStoredPaymentMethod = storedPaymentMethod => {\n        this.setState({ isDisabling: true });\n\n        new Promise((resolve, reject) => this.props.onDisableStoredPaymentMethod(storedPaymentMethod.props.storedPaymentMethodId, resolve, reject))\n            .then(() => {\n                this.setState(prevState => ({\n                    storedPaymentElements: prevState.storedPaymentElements.filter(pm => pm._id !== storedPaymentMethod._id)\n                }));\n                this.setState({ isDisabling: false });\n            })\n            .catch(() => {\n                this.setState({ isDisabling: false });\n            });\n    };\n\n    closeActivePaymentMethod() {\n        this.setState({ activePaymentMethod: null });\n    }\n\n    /**\n     * getOnOrderCancel decides which onOrderCancel logic should be used, manual or sessions\n     */\n    private getOnOrderCancel = () => {\n        if (this.props.onOrderCancel) {\n            return (data: onOrderCancelData) => {\n                const order = sanitizeOrder(data.order);\n                new Promise<{ amount: PaymentAmount }>((resolve, reject) => {\n                    this.props.onOrderCancel({ order }, { resolve, reject });\n                })\n                    .then(({ amount }) => this.props.elementRef.handleAdvanceFlowPaymentMethodsUpdate(null, amount))\n                    .catch(error => {\n                        throw new AdyenCheckoutError('NETWORK_ERROR', error);\n                    });\n            };\n        }\n        if (this.props.session) {\n            return (data: onOrderCancelData) =>\n                this.props.session\n                    .cancelOrder(data)\n                    .then(() => this.props.core.update({ order: null }))\n                    .catch(error => {\n                        console.error(error);\n                        this.setStatus(error?.message || 'error');\n                    });\n        }\n        return null;\n    };\n\n    private onOrderCancel: (data: onOrderCancelData) => void;\n\n    render(props, { elements, instantPaymentElements, storedPaymentElements, status, activePaymentMethod, cachedPaymentMethods }) {\n        const isLoading = status.type === 'loading';\n        const isRedirecting = status.type === 'redirect';\n        const hasPaymentMethodsToBeDisplayed = elements?.length || instantPaymentElements?.length || storedPaymentElements?.length;\n\n        switch (status.type) {\n            case 'success':\n                return <Status.Success message={props?.amount?.value === 0 ? 'resultMessages.preauthorized' : status.props?.message} />;\n\n            case 'error':\n                return <Status.Error message={status.props?.message} />;\n\n            case 'custom':\n                return status.props?.component?.render();\n\n            default:\n                return (\n                    <div className={`adyen-checkout__dropin adyen-checkout__dropin--${status.type}`}>\n                        {isRedirecting && status.props.component && status.props.component.render()}\n                        {isLoading && status.props && status.props.component && status.props.component.render()}\n                        {!!hasPaymentMethodsToBeDisplayed && (\n                            <PaymentMethodList\n                                isLoading={isLoading || isRedirecting}\n                                isDisablingPaymentMethod={this.state.isDisabling}\n                                paymentMethods={elements}\n                                instantPaymentMethods={instantPaymentElements}\n                                storedPaymentMethods={storedPaymentElements}\n                                activePaymentMethod={activePaymentMethod}\n                                cachedPaymentMethods={cachedPaymentMethods}\n                                order={this.props.order}\n                                orderStatus={this.state.orderStatus}\n                                onOrderCancel={this.onOrderCancel}\n                                onSelect={this.handleOnSelectPaymentMethod}\n                                openPaymentMethod={this.props.openPaymentMethod}\n                                openFirstPaymentMethod={this.props.openFirstPaymentMethod}\n                                openFirstStoredPaymentMethod={this.props.openFirstStoredPaymentMethod}\n                                onDisableStoredPaymentMethod={this.handleDisableStoredPaymentMethod}\n                                showRemovePaymentMethodButton={this.props.showRemovePaymentMethodButton}\n                                showRadioButton={this.props.showRadioButton}\n                            />\n                        )}\n                    </div>\n                );\n        }\n    }\n}\n\nexport default DropinComponent;\n","import { httpPost } from './http';\nimport { OrderStatus } from '../../types/global-types';\n\n/**\n */\nfunction orderStatus(config, order): Promise<OrderStatus> {\n    const options = { path: `v1/order/status?clientKey=${config.clientKey}`, loadingContext: config.loadingContext };\n\n    return httpPost(options, { orderData: order.orderData });\n}\n\nexport default orderStatus;\n","import promiseTimeout from '../../../utils/promiseTimeout';\nimport type { PaymentMethod, StoredPaymentMethod, UIElement } from '../../../types';\n\nexport const UNSUPPORTED_PAYMENT_METHODS = ['androidpay', 'samsungpay', 'clicktopay'];\n\n/**\n * Filter out payment methods that are not supported by Drop-in\n * @param paymentMethod - Payment method object from /paymentMethods response\n */\nexport const filterUnsupportedPaymentMethod = (paymentMethod: PaymentMethod | StoredPaymentMethod) =>\n    !UNSUPPORTED_PAYMENT_METHODS.includes(paymentMethod.type);\n\n// filter payment methods that we support (that are in the paymentMethods/index dictionary)\nexport const filterPresent = paymentMethod => !!paymentMethod;\n\n// filter payment methods that are available to the user\nexport const filterAvailable = (elements: UIElement[]) => {\n    const elementIsAvailablePromises = elements.map(element => {\n        const { promise } = promiseTimeout(5000, element.isAvailable(), {});\n        return promise;\n    });\n\n    return Promise.allSettled(elementIsAvailablePromises).then(promiseResults => {\n        return elements.filter((element, i) => promiseResults[i].status === 'fulfilled');\n    });\n};\n\nexport const optionallyFilterUpiSubTxVariants = (paymentMethods: Array<PaymentMethod | StoredPaymentMethod>) => {\n    const hasUpiParent = paymentMethods.some(pm => pm?.type === 'upi');\n    // If we don't get the 'upi' parent, we render multiple upi components\n    if (!hasUpiParent) return paymentMethods;\n\n    // If we get the 'upi' parent, we remove upi sub tx_variant components\n    const UPI_SUB_TX_VARIANTS = ['upi_qr', 'upi_collect', 'upi_intent'];\n    return paymentMethods.filter(pm => !UPI_SUB_TX_VARIANTS.includes(pm?.type));\n};\n","import { TxVariants } from './tx-variants';\n\n/**\n * Maps each payment type with the string name of its Component element.\n *\n * It is used to give nicer error messages when creating components using Drop-in.\n * Example: paymentMethods response contains blik, but Blik component is not configured. So it warns that 'Blik' must be imported and added to the Drop-in configuration.\n */\nconst ComponentsNameMap = {\n    /** internal */\n    [TxVariants.address]: 'Address',\n    [TxVariants.bankTransfer_IBAN]: 'BankTransfer',\n    [TxVariants.donation]: 'Donation',\n    [TxVariants.personal_details]: 'PersonalDetails',\n    /** internal */\n\n    /** Card */\n    [TxVariants.bcmc]: 'Bancontact',\n    [TxVariants.card]: 'Card',\n    [TxVariants.scheme]: 'Card',\n    [TxVariants.storedCard]: 'Card',\n    [TxVariants.customCard]: 'CustomCard',\n    /** Card */\n\n    /** Direct debit */\n    [TxVariants.ach]: 'Ach',\n    [TxVariants.directdebit_GB]: 'BacsDirectDebit',\n    [TxVariants.sepadirectdebit]: 'SepaDirectDebit',\n    /** Direct debit */\n\n    /** Open Invoice */\n    [TxVariants.affirm]: 'Affirm',\n    [TxVariants.afterpay]: 'AfterPay',\n    [TxVariants.afterpay_default]: 'AfterPay',\n    [TxVariants.afterpay_b2b]: 'AfterPayB2B',\n    [TxVariants.atome]: 'Atome',\n    [TxVariants.facilypay_3x]: 'FacilyPay3x',\n    [TxVariants.facilypay_4x]: 'FacilyPay4x',\n    [TxVariants.facilypay_6x]: 'FacilyPay6x',\n    [TxVariants.facilypay_10x]: 'FacilyPay10x',\n    [TxVariants.facilypay_12x]: 'FacilyPay12x',\n    [TxVariants.ratepay]: 'RatePay',\n    [TxVariants.ratepay_directdebit]: 'RatePayDirectDebit',\n    [TxVariants.riverty]: 'Riverty',\n    /** Open Invoice */\n\n    /** Wallets */\n    [TxVariants.amazonpay]: 'AmazonPay',\n    [TxVariants.applepay]: 'ApplePay',\n    [TxVariants.cashapp]: 'CashAppPay',\n    [TxVariants.clicktopay]: 'ClickToPay',\n    [TxVariants.googlepay]: 'GooglePay',\n    [TxVariants.paypal]: 'PayPal',\n    [TxVariants.paywithgoogle]: 'GooglePay',\n    /** Wallets */\n\n    /** Voucher */\n    [TxVariants.boletobancario]: 'Boleto',\n    [TxVariants.boletobancario_itau]: 'Boleto',\n    [TxVariants.boletobancario_santander]: 'Boleto',\n    [TxVariants.doku]: 'Doku',\n    [TxVariants.doku_alfamart]: 'Doku',\n    [TxVariants.doku_permata_lite_atm]: 'Doku',\n    [TxVariants.doku_indomaret]: 'Doku',\n    [TxVariants.doku_atm_mandiri_va]: 'Doku',\n    [TxVariants.doku_sinarmas_va]: 'Doku',\n    [TxVariants.doku_mandiri_va]: 'Doku',\n    [TxVariants.doku_cimb_va]: 'Doku',\n    [TxVariants.doku_danamon_va]: 'Doku',\n    [TxVariants.doku_bri_va]: 'Doku',\n    [TxVariants.doku_bni_va]: 'Doku',\n    [TxVariants.doku_bca_va]: 'Doku',\n    [TxVariants.doku_wallet]: 'Doku',\n    [TxVariants.oxxo]: 'Oxxo',\n    [TxVariants.primeiropay_boleto]: 'Boleto',\n    /** Voucher */\n\n    /** issuerList */\n    [TxVariants.billdesk_online]: 'BillDeskOnline',\n    [TxVariants.billdesk_wallet]: 'BillDeskWallet',\n    [TxVariants.dotpay]: 'Dotpay',\n    [TxVariants.eps]: 'Eps',\n    [TxVariants.molpay_ebanking_fpx_MY]: 'MolPayEBankingMY',\n    [TxVariants.molpay_ebanking_TH]: 'MolPayEBankingTH',\n    [TxVariants.molpay_ebanking_VN]: 'MolPayEBankingVN',\n    [TxVariants.onlineBanking_CZ]: 'OnlineBankingCZ',\n    [TxVariants.onlinebanking_IN]: 'OnlineBankingIN', // NOTE: the txVariant does have a lowercase \"b\"\n    [TxVariants.onlineBanking_PL]: 'OnlineBankingPL',\n    [TxVariants.onlineBanking_SK]: 'OnlineBankingSK',\n    [TxVariants.paybybank]: 'PayByBank',\n    [TxVariants.payu_IN_cashcard]: 'PayuCashcard',\n    [TxVariants.payu_IN_nb]: 'PayuNetBanking',\n    [TxVariants.wallet_IN]: 'WalletINElement',\n    /** issuerList */\n\n    /** Dragonpay */\n    [TxVariants.dragonpay_ebanking]: 'Dragonpay',\n    [TxVariants.dragonpay_otc_banking]: 'Dragonpay',\n    [TxVariants.dragonpay_otc_non_banking]: 'Dragonpay',\n    [TxVariants.dragonpay_otc_philippines]: 'Dragonpay',\n    /** Dragonpay */\n\n    /** Econtext */\n    [TxVariants.econtext_atm]: 'Econtext',\n    [TxVariants.econtext_online]: 'Econtext',\n    [TxVariants.econtext_seven_eleven]: 'Econtext',\n    [TxVariants.econtext_stores]: 'Econtext',\n    /** Econtext */\n\n    /** Redirect */\n    [TxVariants.giropay]: 'Giropay',\n    [TxVariants.multibanco]: 'Multibanco',\n    [TxVariants.redirect]: 'Redirect',\n    [TxVariants.twint]: 'Twint',\n    [TxVariants.vipps]: 'Vipps',\n    [TxVariants.trustly]: 'Trustly',\n    [TxVariants.paybybank_AIS_DD]: 'PayByBankUS',\n    /** Redirect */\n\n    /** Klarna */\n    [TxVariants.klarna]: 'Klarna',\n    [TxVariants.klarna_account]: 'Klarna',\n    [TxVariants.klarna_paynow]: 'Klarna',\n    [TxVariants.klarna_b2b]: 'Klarna',\n    /** Klarna */\n\n    /** QRLoader */\n    [TxVariants.bcmc_mobile]: 'BcmcMobile',\n    [TxVariants.bcmc_mobile_QR]: 'BcmcMobile',\n    [TxVariants.pix]: 'Pix',\n    [TxVariants.swish]: 'Swish',\n    [TxVariants.wechatpay]: 'WeChat',\n    [TxVariants.wechatpayQR]: 'WeChat',\n    [TxVariants.promptpay]: 'PromptPay',\n    [TxVariants.paynow]: 'PayNow',\n    [TxVariants.duitnow]: 'DuitNow',\n    /** QRLoader */\n\n    /** Await */\n    [TxVariants.blik]: 'Blik',\n    [TxVariants.mbway]: 'MBWay',\n    [TxVariants.ancv]: 'ANCV',\n    [TxVariants.upi]: 'UPI', // also QR\n    [TxVariants.upi_qr]: 'UPI', // also QR\n    [TxVariants.upi_collect]: 'UPI', // also QR\n    [TxVariants.upi_intent]: 'UPI',\n    /** Await */\n\n    /** Giftcard */\n    [TxVariants.giftcard]: 'Giftcard',\n    [TxVariants.mealVoucher_FR_natixis]: 'MealVoucherFR',\n    [TxVariants.mealVoucher_FR_sodexo]: 'MealVoucherFR',\n    [TxVariants.mealVoucher_FR_groupeup]: 'MealVoucherFR'\n    /** Giftcard */\n};\n\n/**\n * Returns the Component name based on the payment type\n * @param paymentType\n */\nfunction getComponentNameOfPaymentType(paymentType: string): string {\n    return ComponentsNameMap[paymentType];\n}\n\nexport default getComponentNameOfPaymentType;\n","import { filterUnsupportedPaymentMethod, filterPresent, filterAvailable, optionallyFilterUpiSubTxVariants } from './filters';\nimport { getComponentConfiguration } from './getComponentConfiguration';\nimport getComponentNameOfPaymentType from '../../components-name-map';\nimport UIElement from '../../internal/UIElement';\nimport type { PaymentMethod, StoredPaymentMethod } from '../../../types/global-types';\nimport type { PaymentMethodsConfiguration } from '../types';\nimport type { ICore } from '../../../core/types';\n\n/**\n * Returns a filtered (available) list of component Elements\n *\n * @param paymentMethods - Array of PaymentMethod objects from the /paymentMethods response\n * @param paymentMethodsConfiguration - Dropin paymentMethodsConfiguration object\n * @param commonProps - High level props to be passed through to every component\n * @param core - Reference to the checkout core object\n */\nconst createElements = (\n    paymentMethods: PaymentMethod[] | StoredPaymentMethod[],\n    paymentMethodsConfiguration: PaymentMethodsConfiguration,\n    commonProps,\n    core: ICore\n): Promise<UIElement[]> => {\n    const elements = optionallyFilterUpiSubTxVariants(paymentMethods)\n        .filter(filterUnsupportedPaymentMethod)\n        .map(paymentMethod => {\n            const isStoredPaymentMethod = 'isStoredPaymentMethod' in paymentMethod && paymentMethod.isStoredPaymentMethod;\n            const paymentMethodConfigurationProps = getComponentConfiguration(paymentMethod.type, paymentMethodsConfiguration, isStoredPaymentMethod);\n            const PaymentMethodElement = core.getComponent(paymentMethod.type);\n\n            if (!PaymentMethodElement) {\n                console.warn(\n                    `\\nDropin: You support the payment method '${\n                        paymentMethod.type\n                    }' but this component has not been configured. Make sure to import the Class  '${getComponentNameOfPaymentType(\n                        paymentMethod.type\n                    )}' and then pass it in the Dropin's 'paymentMethodComponents' config property if you wish to offer this payment method.`\n                );\n                return null;\n            }\n\n            const elementProps = { ...paymentMethod, ...commonProps, ...paymentMethodConfigurationProps };\n\n            return new PaymentMethodElement(core, elementProps);\n        })\n        .filter(filterPresent);\n\n    return filterAvailable(elements);\n};\n\nexport default createElements;\n","import { PaymentMethodsConfiguration } from '../types';\n\nexport const getComponentConfiguration = (type: string, paymentMethodsConfiguration: PaymentMethodsConfiguration = {}, isStoredCard = false) => {\n    const pmType = type === 'scheme' ? 'card' : type;\n\n    if (pmType === 'card' && isStoredCard) {\n        return paymentMethodsConfiguration['storedCard'] || {};\n    }\n\n    return paymentMethodsConfiguration[pmType] || {};\n};\n","import createElements from './createElements';\nimport UIElement from '../../internal/UIElement';\nimport type { StoredPaymentMethod } from '../../../types/global-types';\nimport type { ICore } from '../../../core/types';\nimport type { PaymentMethodsConfiguration } from '../types';\n\n/**\n * Returns a filtered (available) list of oneClick paymentMethod Elements\n *\n * @param paymentMethods - Array of PaymentMethod objects from the /paymentMethods response\n * @param paymentMethodsConfiguration - Dropin paymentMethodsConfiguration object\n * @param commonProps - High level props to be passed through to every component\n * @param core - Reference to the checkout core object\n */\nconst createStoredElements = (\n    paymentMethods: StoredPaymentMethod[] = [],\n    paymentMethodsConfiguration: PaymentMethodsConfiguration,\n    commonProps,\n    core: ICore\n): Promise<UIElement[]> => createElements(paymentMethods, paymentMethodsConfiguration, { ...commonProps, oneClick: true }, core);\n\nexport default createStoredElements;\n","import UIElement from '../../internal/UIElement';\nimport createElements from './createElements';\nimport type { PaymentMethod } from '../../../types/global-types';\nimport type { ICore } from '../../../core/types';\nimport type { PaymentMethodsConfiguration } from '../types';\n\n/**\n *  Returns a filtered (available) list of InstantPaymentMethods Elements\n *\n * @param instantPaymentMethods - Array of PaymentMethod objects from the /paymentMethods response\n * @param paymentMethodsConfiguration - Dropin paymentMethodsConfiguration object\n * @param commonProps - High level props to be passed through to every component\n * @param core - Reference to the checkout core object\n */\nconst createInstantPaymentElements = (\n    instantPaymentMethods: PaymentMethod[] = [],\n    paymentMethodsConfiguration: PaymentMethodsConfiguration,\n    commonProps,\n    core: ICore\n): Promise<UIElement[]> => {\n    if (instantPaymentMethods.length) {\n        return createElements(\n            instantPaymentMethods,\n            paymentMethodsConfiguration,\n            { ...commonProps, isInstantPayment: true, showPayButton: true },\n            core\n        );\n    }\n    return Promise.resolve([]);\n};\n\nexport default createInstantPaymentElements;\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport defaultProps from './defaultProps';\nimport DropinComponent from '../../components/Dropin/components/DropinComponent';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { getCommonProps } from './components/utils';\nimport { createElements, createStoredElements } from './elements';\nimport createInstantPaymentElements from './elements/createInstantPaymentElements';\nimport { hasOwnProperty } from '../../utils/hasOwnProperty';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport splitPaymentMethods from './elements/splitPaymentMethods';\nimport { TxVariants } from '../tx-variants';\n\nimport type { DropinConfiguration, InstantPaymentTypes, PaymentMethodsConfiguration } from './types';\nimport type { PaymentAction, PaymentResponseData } from '../../types/global-types';\nimport type { ICore } from '../../core/types';\nimport type { IDropin } from './types';\n\nconst SUPPORTED_INSTANT_PAYMENTS = ['paywithgoogle', 'googlepay', 'applepay'];\n\nclass DropinElement extends UIElement<DropinConfiguration> implements IDropin {\n    public static type = TxVariants.dropin;\n\n    protected static defaultProps = defaultProps;\n\n    public dropinRef = null;\n\n    private paymentMethodsConfiguration: PaymentMethodsConfiguration;\n    /**\n     * Reference to the component created from `handleAction` (Ex.: ThreeDS2Challenge)\n     */\n    public componentFromAction?: UIElement;\n\n    constructor(checkout: ICore, props?: DropinConfiguration) {\n        super(checkout, props);\n        this.submit = this.submit.bind(this);\n        this.handleAction = this.handleAction.bind(this);\n\n        this.props.paymentMethodComponents.forEach(PaymentMethod => this.core.register(PaymentMethod));\n        this.paymentMethodsConfiguration = this.props.paymentMethodsConfiguration || {};\n    }\n\n    protected override storeElementRefOnCore() {\n        this.core.storeElementReference(this);\n    }\n\n    formatProps(props) {\n        return {\n            type: 'dropin', // for analytics\n            ...super.formatProps(props),\n            instantPaymentTypes: Array.from<InstantPaymentTypes>(new Set(props.instantPaymentTypes)).filter(value =>\n                SUPPORTED_INSTANT_PAYMENTS.includes(value)\n            )\n        };\n    }\n\n    get isValid() {\n        return !!this.dropinRef && !!this.dropinRef.state.activePaymentMethod && !!this.dropinRef.state.activePaymentMethod.isValid;\n    }\n\n    showValidation() {\n        if (this.dropinRef.state.activePaymentMethod) {\n            this.dropinRef.state.activePaymentMethod.showValidation();\n        }\n\n        return this;\n    }\n\n    public setStatus(status, props = {}): this {\n        this.dropinRef?.setStatus(status, props);\n        return this;\n    }\n\n    get activePaymentMethod() {\n        if (!this.dropinRef?.state && !this.dropinRef?.state.activePaymentMethod) {\n            return null;\n        }\n\n        return this.dropinRef.state.activePaymentMethod;\n    }\n\n    get data() {\n        if (!this.activePaymentMethod) {\n            return null;\n        }\n\n        return this.dropinRef.state.activePaymentMethod.data;\n    }\n\n    public displayFinalAnimation(type: 'success' | 'error') {\n        if (this.props.disableFinalAnimation) return;\n\n        this.dropinRef.setStatus(type);\n    }\n\n    /**\n     * Calls the onSubmit event with the state of the activePaymentMethod\n     */\n    public override submit(): void {\n        if (!this.activePaymentMethod) {\n            throw new Error('No active payment method.');\n        }\n\n        if (!this.activePaymentMethod.isValid) {\n            this.activePaymentMethod.showValidation();\n        }\n\n        if (this.activePaymentMethod.isInstantPayment) {\n            this.closeActivePaymentMethod();\n        }\n\n        this.activePaymentMethod.submit();\n    }\n\n    /**\n     * Creates the Drop-in elements\n     */\n    private handleCreate = () => {\n        const { paymentMethodsConfiguration, showStoredPaymentMethods, showPaymentMethods, instantPaymentTypes } = this.props;\n\n        const { paymentMethods, storedPaymentMethods, instantPaymentMethods } = splitPaymentMethods(\n            this.core.paymentMethodsResponse,\n            instantPaymentTypes\n        );\n\n        const commonProps = getCommonProps({ ...this.props, elementRef: this.elementRef });\n\n        const storedElements = showStoredPaymentMethods\n            ? createStoredElements(storedPaymentMethods, paymentMethodsConfiguration, commonProps, this.core)\n            : [];\n        const elements = showPaymentMethods ? createElements(paymentMethods, paymentMethodsConfiguration, commonProps, this.core) : [];\n        const instantPaymentElements = createInstantPaymentElements(instantPaymentMethods, paymentMethodsConfiguration, commonProps, this.core);\n\n        return [storedElements, elements, instantPaymentElements];\n    };\n\n    public handleAction(action: PaymentAction, props = {}): this | null {\n        if (!action || !action.type) {\n            if (hasOwnProperty(action, 'action') && hasOwnProperty(action, 'resultCode')) {\n                throw new Error(\n                    'handleAction::Invalid Action - the passed action object itself has an \"action\" property and ' +\n                        'a \"resultCode\": have you passed in the whole response object by mistake?'\n                );\n            }\n            throw new Error('handleAction::Invalid Action - the passed action object does not have a \"type\" property');\n        }\n\n        if (action.type !== 'redirect' && this.activePaymentMethod?.updateWithAction) {\n            return this.activePaymentMethod.updateWithAction(action);\n        }\n\n        if (this.elementRef instanceof DropinElement) {\n            props = {\n                ...this.elementRef.activePaymentMethod?.props,\n                ...props\n            };\n        }\n\n        const paymentAction: UIElement = this.core.createFromAction(action, {\n            ...props,\n            elementRef: this.elementRef, // maintain elementRef for 3DS2 flow\n            onAdditionalDetails: this.handleAdditionalDetails,\n            isDropin: true\n        });\n\n        if (paymentAction) {\n            this.setStatus(paymentAction.props.statusType, { component: paymentAction });\n            this.componentFromAction = paymentAction;\n            return this;\n        }\n\n        return null;\n    }\n\n    /**\n     * handleOrder is implemented so we don't trigger a callback like in the components\n     * @param response - PaymentResponse\n     */\n    protected handleOrder = ({ order }: PaymentResponseData): void => {\n        void this.updateParent({ order });\n    };\n\n    closeActivePaymentMethod() {\n        this.dropinRef.closeActivePaymentMethod();\n    }\n\n    protected handleKeyPress(e: h.JSX.TargetedKeyboardEvent<HTMLInputElement> | KeyboardEvent) {\n        if (e.key === 'Enter' || e.code === 'Enter') {\n            // If the active element has role=\"radio\", we're on a header in the PMList, in which case we don't want to validate the form, or, prevent the default behaviour\n            const isPMHeader = document?.activeElement?.getAttribute('role') === 'radio';\n            if (isPMHeader) {\n                return;\n            }\n            super.handleKeyPress(e);\n        }\n    }\n\n    protected onEnterKeyPressed(activeElement: Element, component: UIElement) {\n        // We want to have a ref to the activePM, if we can; not a ref to the Dropin\n        const pmComponent = this.activePaymentMethod ?? component;\n        this.activePaymentMethod?.onEnterKeyPressed(activeElement, pmComponent);\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                    <DropinComponent\n                        {...this.props}\n                        core={this.core}\n                        elementRef={this.elementRef}\n                        onCreateElements={this.handleCreate}\n                        ref={dropinRef => {\n                            this.dropinRef = dropinRef;\n                        }}\n                    />\n                </SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n\nexport default DropinElement;\n","import { InstantPaymentTypes } from '../types';\nimport PaymentMethods from '../../../core/ProcessResponse/PaymentMethods';\n\nfunction splitPaymentMethods(paymentMethods: PaymentMethods, instantPaymentTypes: InstantPaymentTypes[]) {\n    return {\n        instantPaymentMethods: paymentMethods.paymentMethods.filter(({ type }) => instantPaymentTypes.includes(type as InstantPaymentTypes)),\n        paymentMethods: paymentMethods.paymentMethods.filter(({ type }) => !instantPaymentTypes.includes(type as InstantPaymentTypes)),\n        storedPaymentMethods: paymentMethods.storedPaymentMethods\n    };\n}\n\nexport default splitPaymentMethods;\n","export function getCommonProps(props) {\n    return {\n        beforeSubmit: props.beforeSubmit,\n        onSubmit: props.onSubmit,\n        elementRef: props.elementRef,\n        showPayButton: props.showPayButton,\n        isDropin: true\n    };\n}\n","import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport PersonalDetails from '../internal/PersonalDetails';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { TxVariants } from '../tx-variants';\nimport FormInstruction from '../internal/FormInstruction';\nimport { UIElementProps } from '../internal/UIElement/types';\n\ninterface PersonalDetailsConfiguration extends UIElementProps {}\n\nexport class PersonalDetailsElement extends UIElement<PersonalDetailsConfiguration> {\n    public static type = TxVariants.personal_details;\n\n    get data() {\n        return this.state.data;\n    }\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <FormInstruction />\n                <PersonalDetails\n                    setComponentRef={this.setComponentRef}\n                    {...this.props}\n                    onChange={this.setState}\n                    {...(process.env.NODE_ENV !== 'production' && { payButton: this.payButton })}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default PersonalDetailsElement;\n","import { getTranslation } from './utils';\nimport { getLocalisedAmount } from '../utils/amount-util';\nimport AdyenCheckoutError from '../core/Errors/AdyenCheckoutError';\nimport type { CustomTranslations, LanguageOptions, Translations } from './types';\n\nexport class Language {\n    public readonly locale: string;\n    public readonly languageCode: string;\n\n    private readonly translations: Translations;\n    private readonly customTranslations: CustomTranslations;\n\n    public readonly timeFormatOptions: Intl.DateTimeFormatOptions = {\n        hour: 'numeric',\n        minute: 'numeric'\n    };\n    public readonly timeAndDateFormatOptions: Intl.DateTimeFormatOptions = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        ...this.timeFormatOptions\n    };\n    public readonly timeAndDateFormatter: Intl.DateTimeFormat;\n\n    constructor(props: LanguageOptions) {\n        const { locale, translations, customTranslations } = props;\n\n        if (!locale) {\n            throw new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'Language: \"locale\" property is not defined');\n        }\n\n        this.locale = locale;\n        this.languageCode = this.locale.split('-')[0];\n        this.customTranslations = customTranslations || {};\n\n        this.timeAndDateFormatter = Intl.DateTimeFormat(this.locale, this.timeAndDateFormatOptions);\n\n        this.translations = {\n            ...translations,\n            ...(!!this.customTranslations[this.locale] && this.customTranslations[this.locale])\n        };\n    }\n\n    /**\n     * Returns a translated string from a key in the current {@link Language.locale}\n     * @param key - Translation key\n     * @param options - Translation options\n     * @returns Translated string\n     */\n    public get(key: string, options?): string {\n        const translation = getTranslation(this.translations, key, options);\n        if (translation !== null) {\n            return translation;\n        }\n\n        return key;\n    }\n\n    /**\n     * Returns a localized string for an amount\n     * @param amount - Amount to be converted\n     * @param currencyCode - Currency code of the amount\n     * @param options - Options for String.prototype.toLocaleString\n     */\n    public amount(amount: number, currencyCode: string, options?: object): string {\n        return getLocalisedAmount(amount, this.locale, currencyCode, options);\n    }\n\n    /**\n     * Returns a localized string for a date\n     * @param date - Date to be localized\n     * @param options - Options for {@link Date.toLocaleDateString}\n     */\n    public date(date: string, options: object = {}) {\n        if (date === undefined) return '';\n        const dateOptions: Intl.DateTimeFormatOptions = { year: 'numeric', month: '2-digit', day: '2-digit', ...options };\n        return new Date(date).toLocaleDateString(this.locale, dateOptions);\n    }\n\n    /**\n     * Returns a localized string for a date and time\n     * @param date - Date to be localized\n     */\n    public dateTime(date: string) {\n        if (date === undefined) return '';\n        return this.timeAndDateFormatter.format(new Date(date));\n    }\n}\n\nexport default Language;\n","export const RISK_DATA_VERSION = '1.0.0';\nexport const DF_VERSION = '1.0.0';\n\nexport const DEVICE_FINGERPRINT = 'deviceFingerprint';\nexport const DF_TIMEOUT = 20000;\n\nexport const FAILED_DFP_RESOLVE_OBJECT_TIMEOUT = {\n    result: {\n        type: DEVICE_FINGERPRINT,\n        value: 'df-timedOut'\n    },\n    errorCode: 'timeout'\n};\n\nexport const ERRORS = {\n    TIME_OUT: 'timeout',\n    WRONG_ORIGIN: 'wrongOrigin',\n    WRONG_DATA_TYPE: 'wrongDataType',\n    MISSING_PROPERTY: 'missingProperty',\n    UNKNOWN: 'unknownError'\n};\n\nexport const ERROR_MESSAGES = {\n    timeout: 'iframe loading timed out',\n    wrongOrigin: 'Result did not come from the expected origin',\n    wrongDataType: 'Result data was not of the expected type',\n    missingProperty: 'Result data did not contain the expected properties',\n    unknownError: 'An unknown error occurred'\n};\n","import { Component, h } from 'preact';\nimport Iframe from '../../../../components/internal/IFrame';\nimport promiseTimeout from '../../../../utils/promiseTimeout';\nimport { DEVICE_FINGERPRINT, DF_TIMEOUT, FAILED_DFP_RESOLVE_OBJECT_TIMEOUT } from '../../constants';\nimport getProcessMessageHandler from '../../../../utils/get-process-message-handler';\nimport { getOrigin } from '../../../../utils/getOrigin';\nimport { GetDeviceFingerprintProps } from './types';\n\nconst iframeName = 'dfIframe';\nconst allowProperties = 'geolocation; microphone; camera;';\n\nclass GetDeviceFingerprint extends Component<GetDeviceFingerprintProps> {\n    public postMessageDomain;\n    public processMessageHandler;\n    public deviceFingerPrintPromise;\n\n    constructor(props) {\n        super(props);\n\n        this.postMessageDomain = getOrigin(this.props.loadingContext) || this.props.loadingContext;\n    }\n\n    getDfpPromise(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            /**\n             * Listen for postMessage responses from the notification url\n             */\n            this.processMessageHandler = getProcessMessageHandler(this.postMessageDomain, resolve, reject, DEVICE_FINGERPRINT);\n\n            window.addEventListener('message', this.processMessageHandler);\n        });\n    }\n\n    componentDidMount() {\n        // Get device fingerprint\n        this.deviceFingerPrintPromise = promiseTimeout(DF_TIMEOUT, this.getDfpPromise(), FAILED_DFP_RESOLVE_OBJECT_TIMEOUT);\n        this.deviceFingerPrintPromise.promise\n            .then(resolveObject => {\n                this.props.onCompleteFingerprint(resolveObject);\n                window.removeEventListener('message', this.processMessageHandler);\n            })\n            .catch(rejectObject => {\n                this.props.onErrorFingerprint(rejectObject);\n                window.removeEventListener('message', this.processMessageHandler);\n            });\n    }\n\n    render({ dfpURL }) {\n        return (\n            <div className=\"adyen-checkout-risk__device-fingerprint\">\n                <Iframe name={iframeName} src={dfpURL} allow={allowProperties} title=\"devicefingerprinting iframe\" />\n            </div>\n        );\n    }\n}\n\nexport default GetDeviceFingerprint;\n","import { Component, h } from 'preact';\nimport GetDeviceFingerprint from './GetDeviceFingerprint';\nimport handleErrorCode from './utils';\nimport { DF_VERSION } from '../../constants';\nimport { DeviceFingerprintProps, DeviceFingerprintState } from './types';\n\nclass DeviceFingerprint extends Component<DeviceFingerprintProps, DeviceFingerprintState> {\n    constructor(props) {\n        super(props);\n\n        if (props.clientKey) {\n            this.state = {\n                status: 'retrievingFingerPrint',\n                dfpURL: `${this.props.loadingContext}assets/html/${props.clientKey}/dfp.${DF_VERSION}.html`\n            };\n        }\n    }\n\n    public static defaultProps = {\n        onComplete: () => {},\n        onError: () => {}\n    };\n\n    setStatusComplete(fingerprintResult) {\n        this.setState({ status: 'complete' }, () => {\n            this.props.onComplete(fingerprintResult);\n        });\n    }\n\n    render({ loadingContext }, { dfpURL }) {\n        if (this.state.status === 'retrievingFingerPrint') {\n            return (\n                <div className=\"adyen-checkout-risk__device-fingerprint--wrapper\" style={{ position: 'absolute', width: 0, height: 0 }}>\n                    <GetDeviceFingerprint\n                        loadingContext={loadingContext}\n                        dfpURL={dfpURL}\n                        onCompleteFingerprint={fingerprintResult => {\n                            this.setStatusComplete(fingerprintResult);\n                        }}\n                        onErrorFingerprint={fingerprintError => {\n                            this.props.onError(handleErrorCode(fingerprintError.errorCode));\n                            this.setStatusComplete(fingerprintError.result);\n                        }}\n                    />\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nexport default DeviceFingerprint;\n","import { ERRORS, ERROR_MESSAGES, DEVICE_FINGERPRINT } from '../../constants';\n\nconst handleErrorCode = errorCode => ({\n    errorCode,\n    message: ERROR_MESSAGES[errorCode] || ERROR_MESSAGES[ERRORS.UNKNOWN],\n    type: DEVICE_FINGERPRINT\n});\n\nexport default handleErrorCode;\n","import { h } from 'preact';\nimport BaseElement from '../../components/internal/BaseElement/BaseElement';\nimport DeviceFingerprint from './components/DeviceFingerprint';\nimport base64 from '../../utils/base64';\nimport { RISK_DATA_VERSION, DEVICE_FINGERPRINT } from './constants';\nimport { BaseElementProps } from '../../components/internal/BaseElement/types';\nimport type { ICore } from '../types';\n\nexport interface RiskModuleOptions {\n    enabled: boolean;\n    onComplete?: (data) => void;\n    onError?: (error) => void;\n    node?: string;\n}\n\ninterface RiskModuleProps extends BaseElementProps {\n    risk: RiskModuleOptions;\n    loadingContext: string;\n}\n\nexport type RiskData = string | boolean;\n\nexport default class RiskElement extends BaseElement<RiskModuleProps> {\n    public static type = 'risk';\n    public static defaultProps = {\n        risk: {\n            enabled: true,\n            onComplete: () => {},\n            onError: () => {},\n            node: 'body'\n        }\n    };\n\n    private nodeRiskContainer = null;\n\n    constructor(checkout: ICore, props?) {\n        super(checkout, props);\n\n        // Populate state with null values\n        const riskElements = {\n            [DEVICE_FINGERPRINT]: null\n        };\n\n        this.setState({ data: riskElements });\n\n        if (this.props.risk.enabled === true) {\n            if (document.querySelector(this.props.risk.node)) {\n                this.nodeRiskContainer = document.createElement('div');\n                document.querySelector(this.props.risk.node).appendChild(this.nodeRiskContainer);\n                this.mount(this.nodeRiskContainer);\n            } else {\n                this.onError({ message: 'RiskModule node was not found' });\n            }\n        }\n    }\n\n    formatProps(props) {\n        return {\n            ...props,\n            risk: {\n                ...RiskElement.defaultProps.risk,\n                ...props.risk\n            }\n        };\n    }\n\n    public onComplete = result => {\n        const data = { ...this.state.data, [result.type]: result.value, persistentCookie: result.persistentCookie, components: result.components };\n        this.setState({ data, isValid: true });\n        this.props.risk.onComplete(this.data);\n        this.cleanUp();\n    };\n\n    public onError = error => {\n        this.props.risk.onError(error);\n        this.cleanUp();\n    };\n\n    get isValid() {\n        return this.state.isValid;\n    }\n\n    get data(): any {\n        if (this.isValid) {\n            const dataObj = { version: RISK_DATA_VERSION, ...this.state.data };\n            return base64.encode(JSON.stringify(dataObj));\n        }\n\n        return false;\n    }\n\n    public get enabled() {\n        return this.props.risk.enabled;\n    }\n\n    public cleanUp = () => {\n        if (this.nodeRiskContainer && this.nodeRiskContainer.parentNode) this.nodeRiskContainer.parentNode.removeChild(this.nodeRiskContainer);\n    };\n\n    componentWillUnmount() {\n        this.cleanUp();\n    }\n\n    render() {\n        return <DeviceFingerprint {...this.props} loadingContext={this.props.loadingContext} onComplete={this.onComplete} onError={this.onError} />;\n    }\n}\n","export function filterAllowedPaymentMethods(pm) {\n    return !this.length || this.indexOf(pm.type) > -1;\n}\n\nexport function filterRemovedPaymentMethods(pm) {\n    return !this.length || this.indexOf(pm.type) < 0;\n}\n\nexport function filterEcomStoredPaymentMethods(pm) {\n    return !!pm && !!pm.supportedShopperInteractions && pm.supportedShopperInteractions.includes('Ecommerce');\n}\n\nconst supportedStoredPaymentMethods = ['scheme', 'blik', 'twint', 'ach', 'cashapp', 'paybybank_AIS_DD'];\n\nexport function filterSupportedStoredPaymentMethods(pm) {\n    return !!pm && !!pm.type && supportedStoredPaymentMethods.includes(pm.type);\n}\n","import { PaymentMethod, PaymentMethodsResponse, StoredPaymentMethod } from '../../../types/global-types';\nimport {\n    filterAllowedPaymentMethods,\n    filterEcomStoredPaymentMethods,\n    filterRemovedPaymentMethods,\n    filterSupportedStoredPaymentMethods\n} from './filters';\n\nconst processStoredPaymentMethod = (pm): StoredPaymentMethod => ({\n    ...pm,\n    storedPaymentMethodId: pm.id,\n    isStoredPaymentMethod: true\n});\n\nexport const processPaymentMethods = (paymentMethods: PaymentMethod[], { allowPaymentMethods = [], removePaymentMethods = [] }): PaymentMethod[] => {\n    if (!paymentMethods) return [];\n\n    return paymentMethods.filter(filterAllowedPaymentMethods, allowPaymentMethods).filter(filterRemovedPaymentMethods, removePaymentMethods);\n};\n\nexport const processStoredPaymentMethods = (\n    storedPaymentMethods: StoredPaymentMethod[],\n    { allowPaymentMethods = [], removePaymentMethods = [] }\n): StoredPaymentMethod[] => {\n    if (!storedPaymentMethods) return [];\n\n    return storedPaymentMethods\n        .filter(filterSupportedStoredPaymentMethods) // only display supported stored payment methods\n        .filter(filterAllowedPaymentMethods, allowPaymentMethods)\n        .filter(filterRemovedPaymentMethods, removePaymentMethods)\n        .filter(filterEcomStoredPaymentMethods) // Only accept Ecommerce shopper interactions\n        .map(processStoredPaymentMethod);\n};\n\nexport const checkPaymentMethodsResponse = (paymentMethodsResponse: PaymentMethodsResponse) => {\n    if (typeof paymentMethodsResponse === 'string') {\n        throw new Error(\n            'paymentMethodsResponse was provided but of an incorrect type (should be an object but a string was provided).' +\n                'Try JSON.parse(\"{...}\") your paymentMethodsResponse.'\n        );\n    }\n\n    if (paymentMethodsResponse instanceof Array) {\n        throw new Error(\n            'paymentMethodsResponse was provided but of an incorrect type (should be an object but an array was provided).' +\n                'Please check you are passing the whole response.'\n        );\n    }\n\n    if (paymentMethodsResponse && !paymentMethodsResponse?.paymentMethods?.length && !paymentMethodsResponse?.storedPaymentMethods?.length) {\n        console.warn('paymentMethodsResponse was provided but no payment methods were found.');\n    }\n};\n","import { PaymentMethod, PaymentMethodsResponse, StoredPaymentMethod } from '../../../types/global-types';\nimport { checkPaymentMethodsResponse, processPaymentMethods, processStoredPaymentMethods } from './utils';\n\nclass PaymentMethods {\n    public paymentMethods: PaymentMethod[] = [];\n    public storedPaymentMethods: StoredPaymentMethod[] = [];\n\n    constructor(response: PaymentMethodsResponse, options = {}) {\n        checkPaymentMethodsResponse(response);\n\n        this.paymentMethods = response ? processPaymentMethods(response.paymentMethods, options) : [];\n        this.storedPaymentMethods = response ? processStoredPaymentMethods(response.storedPaymentMethods, options) : [];\n    }\n\n    private mapCreatedComponentType(pmType: string): string {\n        // Components created as 'card' need to be matched with paymentMethod response objects with type 'scheme'\n        return pmType === 'card' ? 'scheme' : pmType;\n    }\n\n    has(paymentMethod: string): boolean {\n        return Boolean(this.paymentMethods.find(pm => pm.type === this.mapCreatedComponentType(paymentMethod)));\n    }\n\n    find(paymentMethod: string): PaymentMethod {\n        return this.paymentMethods.find(pm => pm.type === this.mapCreatedComponentType(paymentMethod));\n    }\n}\n\nexport default PaymentMethods;\n","import { get3DS2FlowProps } from '../../../components/ThreeDS2/components/utils';\nimport uuid from '../../../utils/uuid';\nimport UIElement from '../../../components/internal/UIElement';\nimport type { PaymentAction } from '../../../types/global-types';\nimport type { IRegistry } from '../../core.registry';\nimport type { ICore } from '../../types';\n\nconst createComponent = (core: ICore, registry: IRegistry, componentType, props): UIElement => {\n    const Element = registry.getComponent(componentType);\n\n    if (!Element) {\n        throw Error(`Action Element of type ${componentType} not found in the registry`);\n    }\n\n    return new Element(core, { ...props, id: `${componentType}-${uuid()}` });\n};\n\nconst getActionHandler = statusType => {\n    return (core: ICore, registry: IRegistry, action: PaymentAction, props) => {\n        const config = {\n            ...props,\n            ...action,\n            onComplete: props.onAdditionalDetails,\n            onError: props.onError,\n            statusType,\n            originalAction: action\n        };\n\n        return createComponent(core, registry, action.paymentMethodType, config);\n    };\n};\n\nconst actionTypes = {\n    redirect: (core: ICore, registry, action: PaymentAction, props) => {\n        const config = {\n            ...props,\n            ...action,\n            statusType: 'redirect',\n            originalAction: action\n        };\n\n        return createComponent(core, registry, 'redirect', config);\n    },\n\n    threeDS2: (core: ICore, registry, action: PaymentAction, props) => {\n        const componentType = action.subtype === 'fingerprint' ? 'threeDS2DeviceFingerprint' : 'threeDS2Challenge';\n\n        /**\n         * NOTE: the isMDFlow prop comes from the options object, added within the MDFlow when it calls createFromAction(action, options) to initiate a 3DS2 component\n         * It replaces the useOriginalFlow config prop that the MDFlow used to pass when directly initiating the threeDS2Fingerprint or threeDS2Challenge components\n         */\n        const paymentData = action.subtype === 'fingerprint' || props.isMDFlow ? action.paymentData : action.authorisationToken;\n\n        const config = {\n            // Props common to both flows\n            core: core,\n            token: action.token,\n            paymentData,\n            onActionHandled: props.onActionHandled,\n            onComplete: props.isMDFlow ? props.onComplete : props.onAdditionalDetails,\n            onError: props.onError,\n            isDropin: !!props.isDropin,\n            loadingContext: props.loadingContext,\n            clientKey: props.clientKey,\n            paymentMethodType: props.paymentMethodType,\n            challengeWindowSize: props.challengeWindowSize, // always pass challengeWindowSize in case it's been set directly in the handleAction config object\n            isMDFlow: props.isMDFlow,\n            modules: {\n                analytics: props.modules?.analytics,\n                resources: props.modules?.resources\n            },\n\n            // Props unique to a particular flow\n            ...get3DS2FlowProps(action.subtype, props)\n        };\n\n        return createComponent(core, registry, componentType, config);\n    },\n\n    voucher: getActionHandler('custom'),\n    qrCode: getActionHandler('custom'),\n    await: getActionHandler('custom'),\n    bankTransfer: getActionHandler('custom'),\n    sdk: getActionHandler('custom')\n} as const;\n\nexport default actionTypes;\n","class NonPersistentStorage {\n    private storage;\n\n    constructor() {\n        this.storage = {};\n    }\n\n    get length() {\n        return Object.keys(this.storage).length;\n    }\n\n    key(index) {\n        return Object.keys(this.storage)[index];\n    }\n    getItem(keyName) {\n        return this.storage[keyName] || null;\n    }\n    setItem(keyName, keyValue) {\n        return (this.storage[keyName] = keyValue);\n    }\n    removeItem(keyName) {\n        delete this.storage[keyName];\n    }\n    clear() {\n        this.storage = {};\n    }\n}\n\nclass Storage<T> {\n    private readonly prefix = 'adyen-checkout__';\n    private readonly key: string;\n    private storage: globalThis.Storage | NonPersistentStorage;\n\n    constructor(key: string, storageType: 'sessionStorage' | 'localStorage') {\n        try {\n            this.storage = storageType ? window[storageType] : window.localStorage;\n            if (!this.storage) {\n                throw new Error('storage does not exist');\n            }\n        } catch (e) {\n            this.storage = new NonPersistentStorage();\n        }\n        this.key = this.prefix + key;\n    }\n\n    public get(): T {\n        try {\n            return JSON.parse(this.storage.getItem(this.key));\n        } catch (err) {\n            return null;\n        }\n    }\n\n    public set(value: T) {\n        this.storage.setItem(this.key, JSON.stringify(value));\n    }\n\n    public remove() {\n        this.storage.removeItem(this.key);\n    }\n\n    public clear() {\n        this.storage.clear();\n    }\n\n    public keyByIndex(index) {\n        return this.storage.key(index);\n    }\n\n    get length() {\n        return this.storage.length;\n    }\n}\n\nexport default Storage;\n","import { httpPost } from '../http';\nimport Storage from '../../../utils/Storage';\nimport { CheckoutAttemptIdSession, CollectIdEvent, CollectIdProps, TelemetryEvent } from './types';\n\nexport const FAILURE_MSG =\n    'WARNING: Failed to retrieve \"checkoutAttemptId\". Consequently, analytics will not be available for this payment. The payment process, however, will not be affected.';\n\n/**\n * If the checkout attempt ID was stored more than fifteen minutes ago, then we should request a new ID.\n * More here: COWEB-1099\n */\nfunction confirmSessionDurationIsMaxFifteenMinutes(checkoutAttemptIdSession: CheckoutAttemptIdSession): boolean {\n    if (!checkoutAttemptIdSession?.id) return false;\n\n    const fifteenMinInMs = 1000 * 60 * 15;\n    const fifteenMinAgoTimestamp = Date.now() - fifteenMinInMs;\n    return checkoutAttemptIdSession.timestamp > fifteenMinAgoTimestamp;\n}\n\n/**\n * Send an event to Adyen with some basic telemetry info and receive a checkoutAttemptId in response\n * @param config - object containing values needed to calculate the url for the request; and also some that need to be serialized and included in the body of request\n * @returns a function returning a promise containing the response of the call (an object containing a checkoutAttemptId property)\n */\n// const collectId = ({ analyticsContext, clientKey, locale, amount }: CollectIdProps) => { // TODO - amount will be supported in the future\nconst collectId = ({ analyticsContext, clientKey, locale, analyticsPath, bundleType }: CollectIdProps) => {\n    let promise;\n\n    const options = {\n        errorLevel: 'fatal' as const, // ensure our catch block is called\n        loadingContext: analyticsContext,\n        path: `${analyticsPath}?clientKey=${clientKey}`\n    };\n\n    return (event: CollectIdEvent): Promise<string> => {\n        const telemetryEvent: TelemetryEvent = {\n            // amount,  // TODO will be supported in the future\n            version: process.env.VERSION,\n            // The data team want both platform & channel properties:\n            channel: 'Web',\n            platform: 'Web',\n            buildType: bundleType,\n            locale,\n            referrer: window.location.href,\n            screenWidth: window.screen.width,\n            ...event\n        };\n\n        if (promise) return promise; // Prevents multiple standalone components on the same page from making multiple calls to collect a checkoutAttemptId\n        if (!clientKey) return Promise.reject('no-client-key');\n\n        const storage = new Storage<CheckoutAttemptIdSession>('checkout-attempt-id', 'sessionStorage');\n        const checkoutAttemptIdSession = storage.get();\n\n        // In some cases, e.g. where the merchant has redirected the shopper and then returned them to checkout, we still have a valid checkoutAttemptId\n        // so there is no need for the re-initialised Checkout to generate another one\n        if (confirmSessionDurationIsMaxFifteenMinutes(checkoutAttemptIdSession)) {\n            return Promise.resolve(checkoutAttemptIdSession.id);\n        }\n\n        promise = httpPost(options, telemetryEvent)\n            .then(conversion => {\n                if (conversion?.checkoutAttemptId) {\n                    storage.set({ id: conversion.checkoutAttemptId, timestamp: Date.now() });\n                    return conversion.checkoutAttemptId;\n                }\n                return undefined;\n            })\n            .catch(() => {\n                return Promise.reject(FAILURE_MSG);\n            });\n\n        return promise;\n    };\n};\n\nexport default collectId;\n","import { HttpOptions, httpPost } from '../Services/http';\nimport { AnalyticsObject, EventQueueProps } from './types';\n\ninterface CAActions {\n    channel: 'Web';\n    platform: 'Web';\n    info: AnalyticsObject[];\n    errors: AnalyticsObject[];\n    logs: AnalyticsObject[];\n}\n\nexport interface EventsQueueModule {\n    add: (t: string, o: AnalyticsObject) => void;\n    run: (id: string) => Promise<any>;\n    getQueue: () => CAActions;\n}\n\nconst EventsQueue = ({ analyticsContext, clientKey, analyticsPath }: EventQueueProps): EventsQueueModule => {\n    const caActions: CAActions = {\n        channel: 'Web',\n        platform: 'Web',\n        info: [],\n        errors: [],\n        logs: []\n    };\n\n    const runQueue = (checkoutAttemptId: string): Promise<any> => {\n        if (!caActions.info.length && !caActions.logs.length && !caActions.errors.length) {\n            return Promise.resolve(null);\n        }\n\n        const options: HttpOptions = {\n            errorLevel: 'silent' as const,\n            loadingContext: analyticsContext,\n            path: `${analyticsPath}/${checkoutAttemptId}?clientKey=${clientKey}`\n        };\n\n        return httpPost(options, caActions)\n            .then(() => {\n                // Succeed, silently\n                return undefined;\n            })\n            .catch(() => {\n                // Caught, silently, at http level. We do not expect this catch block to ever fire, but... just in case...\n                console.debug('### EventsQueue:::: send has failed');\n            });\n    };\n\n    return {\n        add: (type, actionObj) => {\n            caActions[type].push(actionObj);\n        },\n\n        run: (checkoutAttemptId: string) => {\n            const promise = runQueue(checkoutAttemptId);\n\n            caActions.info = [];\n            caActions.errors = [];\n            caActions.logs = [];\n\n            return promise;\n        },\n\n        // Expose getter for testing purposes\n        getQueue: () => caActions\n    };\n};\n\nexport default EventsQueue;\n","import { AnalyticsObject, CreateAnalyticsObject, CardConfigData, AnalyticsData } from './types';\nimport { ANALYTICS_ACTION_STR, ANALYTICS_VALIDATION_ERROR_STR, errorCodeMapping, ALLOWED_ANALYTICS_DATA } from './constants';\nimport uuid from '../../utils/uuid';\nimport { digitsOnlyFormatter } from '../../utils/Formatters/formatters';\nimport { ERROR_FIELD_REQUIRED, ERROR_INVALID_FORMAT_EXPECTS } from '../Errors/constants';\nimport { DEFAULT_CHALLENGE_WINDOW_SIZE, THREEDS2_FULL } from '../../components/ThreeDS2/constants';\nimport { CardConfiguration } from '../../components/Card/types';\nimport CardInputDefaultProps from '../../components/Card/components/CardInput/defaultProps';\nimport { DEFAULT_CARD_GROUP_TYPES } from '../../components/internal/SecuredFields/lib/constants';\nimport { notFalsy } from '../../utils/commonUtils';\n\nconst MAX_LENGTH = 128;\nexport const getUTCTimestamp = () => Date.now();\n\n/**\n * All objects for the /checkoutanalytics endpoint have base props:\n *  \"timestamp\" & \"component\"\n *\n * Error objects have, in addition to the base props:\n *  \"code\", \"errorType\" & \"message\"\n *\n * Log objects have, in addition to the base props:\n *  \"message\" & \"type\" &\n *    \"subtype\" (e.g. when an action is handled)\n *\n * Info objects have, in addition to the base props:\n *   \"type\" & \"target\" &\n *     \"isStoredPaymentMethod\" & \"brand\" (when a storedCard is \"selected\"), or,\n *     \"validationErrorCode\" & \"validationErrorMessage\" (when the event is describing a validation error)\n *\n *  All objects can also have a \"metadata\" object of key-value pairs\n */\nexport const createAnalyticsObject = (aObj: CreateAnalyticsObject): AnalyticsObject => ({\n    timestamp: String(getUTCTimestamp()),\n    component: aObj.component,\n    id: uuid(),\n    /** ERROR */\n    ...(aObj.event === 'error' && { code: aObj.code, errorType: aObj.errorType, message: aObj.message }), // error event\n    /** LOG */\n    ...(aObj.event === 'log' && { type: aObj.type, message: aObj.message }), // log event\n    ...(aObj.event === 'log' && (aObj.type === ANALYTICS_ACTION_STR || aObj.type === THREEDS2_FULL) && { subType: aObj.subtype }), // only added if we have a log event of Action type or ThreeDS2\n    ...(aObj.event === 'log' && aObj.type === THREEDS2_FULL && { result: aObj.result }), // only added if we have a log event of ThreeDS2 type\n    /** INFO */\n    ...(aObj.event === 'info' && { type: aObj.type, target: aObj.target }), // info event\n    ...(aObj.event === 'info' && aObj.issuer && { issuer: aObj.issuer }), // relates to issuerLists\n    ...(aObj.event === 'info' && { isExpress: aObj.isExpress, expressPage: aObj.expressPage }), // relates to Plugins & detecting Express PMs\n    ...(aObj.event === 'info' && aObj.isStoredPaymentMethod && { isStoredPaymentMethod: aObj.isStoredPaymentMethod, brand: aObj.brand }), // only added if we have an info event about a storedPM\n    ...(aObj.event === 'info' &&\n        aObj.type === ANALYTICS_VALIDATION_ERROR_STR && {\n            validationErrorCode: mapErrorCodesForAnalytics(aObj.validationErrorCode, aObj.target),\n            validationErrorMessage: aObj.validationErrorMessage\n        }), // only added if we have an info event describing a validation error\n    ...(aObj.configData && { configData: aObj.configData }),\n    /** All */\n    ...(aObj.metadata && { metadata: aObj.metadata })\n});\n\nconst mapErrorCodesForAnalytics = (errorCode: string, target: string) => {\n    // Some of the more generic error codes required combination with target to retrieve a specific code\n    if (errorCode === ERROR_FIELD_REQUIRED || errorCode === ERROR_INVALID_FORMAT_EXPECTS) {\n        return errorCodeMapping[`${errorCode}.${target}`] ?? errorCode;\n    }\n\n    let errCode = errorCodeMapping[errorCode] ?? errorCode;\n\n    // If errCode isn't now a number - then we just need to remove any non-digits\n    // since the correct error code is already contained within the string e.g. securedField related errors\n    if (isNaN(Number(errCode))) {\n        errCode = digitsOnlyFormatter(errCode);\n    }\n\n    return errCode;\n};\n\nexport const processAnalyticsData = (analyticsData: AnalyticsData): AnalyticsData => {\n    return Object.keys(analyticsData).reduce((acc, prop) => {\n        if (ALLOWED_ANALYTICS_DATA.includes(prop)) acc[prop] = analyticsData[prop];\n        return acc;\n    }, {});\n};\n\nexport const getCardConfigData = (cardProps: CardConfiguration): CardConfigData => {\n    // Extract props from cardProps - mostly setting a default value, if prop not found\n    const {\n        autoFocus,\n        billingAddressAllowedCountries,\n        billingAddressMode,\n        billingAddressRequired,\n        billingAddressRequiredFields,\n        brands = DEFAULT_CARD_GROUP_TYPES,\n        brandsConfiguration,\n        challengeWindowSize = DEFAULT_CHALLENGE_WINDOW_SIZE,\n        configuration,\n        countryCode,\n        data,\n        disclaimerMessage,\n        disableIOSArrowKeys,\n        doBinLookup,\n        enableStoreDetails,\n        exposeExpiryDate,\n        forceCompat,\n        hasHolderName,\n        hideCVC,\n        holderNameRequired,\n        installmentOptions,\n        keypadFix,\n        legacyInputMode,\n        maskSecurityCode,\n        minimumExpiryDate,\n        name, // = 'none',\n        placeholders,\n        positionHolderNameOnTop,\n        showBrandIcon,\n        showInstallmentAmounts,\n        showPayButton = false, // hard coded default\n        styles,\n        onAllValid,\n        onBinLookup,\n        onBinValue,\n        onBlur,\n        onBrand,\n        onConfigSuccess,\n        onEnterKeyPressed,\n        onFieldValid,\n        onFocus,\n        onLoad\n    } = cardProps;\n\n    const dataString = JSON.stringify(CardInputDefaultProps.data);\n\n    const srPanelEnabled = cardProps.modules?.srPanel?.enabled;\n    const srPanelMoveFocus = cardProps.modules?.srPanel?.moveFocus;\n\n    const riskEnabled = cardProps.modules?.risk?.enabled;\n\n    const billingAddressModeValue = cardProps.onAddressLookup ? 'lookup' : billingAddressMode;\n\n    let showKCPType: 'none' | 'auto' | 'atStart' = 'none';\n    if (configuration?.koreanAuthenticationRequired === true) {\n        showKCPType = countryCode?.toLowerCase() === 'kr' ? 'atStart' : 'auto';\n    }\n\n    // @ts-ignore commenting out props until endpoint is ready\n    const configData: CardConfigData = {\n        autoFocus,\n        ...(billingAddressAllowedCountries?.length > 0 && {\n            billingAddressAllowedCountries: billingAddressAllowedCountries.toString().substring(0, MAX_LENGTH)\n        }),\n        billingAddressMode: billingAddressModeValue,\n        billingAddressRequired,\n        billingAddressRequiredFields: billingAddressRequiredFields?.toString()?.substring(0, MAX_LENGTH),\n        // Probably just for development - in real life we wouldn't expect the number of supported brands to push the endpoint limit on 128 chars\n        brands: brands?.toString()?.substring(0, MAX_LENGTH),\n        challengeWindowSize,\n        disableIOSArrowKeys,\n        doBinLookup,\n        enableStoreDetails,\n        exposeExpiryDate,\n        forceCompat,\n        hasBrandsConfiguration: notFalsy(brandsConfiguration),\n        hasData: data && JSON.stringify(cardProps.data) !== dataString,\n        hasDisclaimerMessage: !!disclaimerMessage,\n        hasHolderName,\n        hasInstallmentOptions: notFalsy(installmentOptions),\n        hasPlaceholders: notFalsy(placeholders), // has merchant defined placeholders\n        hasStylesConfigured: notFalsy(styles),\n        hideCVC,\n        holderNameRequired,\n        keypadFix,\n        legacyInputMode,\n        maskSecurityCode,\n        minimumExpiryDate: !!minimumExpiryDate, // Potentially, in the future, we can send the actual string value\n        name,\n        positionHolderNameOnTop,\n        riskEnabled,\n        showBrandIcon,\n        showInstallmentAmounts: !!showInstallmentAmounts,\n        showKCPType,\n        showPayButton,\n        socialSecurityNumberMode: configuration?.socialSecurityNumberMode,\n        srPanelEnabled,\n        srPanelMoveFocus,\n        /** callbacks */\n        // We need to detect if the merchant themselves has defined these, not if we've set them as a default\n        hasOnAllValid: onAllValid !== CardInputDefaultProps.onAllValid,\n        hasOnBinValue: onBinValue !== CardInputDefaultProps.onBinValue,\n        hasOnBlur: onBlur !== CardInputDefaultProps.onBlur,\n        hasOnBrand: onBrand !== CardInputDefaultProps.onBrand,\n        hasOnConfigSuccess: onConfigSuccess !== CardInputDefaultProps.onConfigSuccess,\n        hasOnFieldValid: onFieldValid !== CardInputDefaultProps.onFieldValid,\n        hasOnFocus: onFocus !== CardInputDefaultProps.onFocus,\n        hasOnLoad: onLoad !== CardInputDefaultProps.onLoad,\n        // Card level props\n        hasOnBinLookup: !!onBinLookup,\n        hasOnEnterKeyPressed: !!onEnterKeyPressed\n    };\n\n    return configData;\n};\n","import { AnalyticsModule } from '../../types/global-types';\nimport { ConfigData, CreateAnalyticsEventObject, SendAnalyticsObject } from './types';\nimport {\n    ANALYTICS_ACTION_STR,\n    ANALYTICS_CONFIGURED_STR,\n    ANALYTICS_DISPLAYED_STR,\n    ANALYTICS_DOWNLOAD_STR,\n    ANALYTICS_FOCUS_STR,\n    ANALYTICS_INPUT_STR,\n    ANALYTICS_RENDERED_STR,\n    ANALYTICS_SELECTED_STR,\n    ANALYTICS_SUBMIT_STR,\n    ANALYTICS_UNFOCUS_STR,\n    ANALYTICS_VALIDATION_ERROR_STR,\n    ANALYTICS_EXPRESS_PAGES_ARRAY,\n    ANALYTICS_EVENT\n} from './constants';\nimport { THREEDS2_ERROR, THREEDS2_FULL } from '../../components/ThreeDS2/constants';\nimport AdyenCheckoutError, { SDK_ERROR } from '../Errors/AdyenCheckoutError';\nimport { getCardConfigData } from './utils';\n\nexport const analyticsPreProcessor = (analyticsModule: AnalyticsModule) => {\n    // return function with an analyticsModule reference\n    return (component: string, analyticsObj: SendAnalyticsObject, uiElementProps = {} as any) => {\n        const { type, target } = analyticsObj;\n\n        if (!type) {\n            throw new AdyenCheckoutError(SDK_ERROR, 'You are trying to create an analytics event without a type');\n        }\n\n        switch (type) {\n            /**\n             * INFO\n             */\n            // Called from BaseElement (when component mounted) or, from DropinComponent (after mounting, when it has finished resolving all the PM promises)\n            // &/or, from DropinComponent when a PM is selected\n            // Only Drop-in sends the configData directly, if it happens the configData from the component(drop-in atm) will take over the internal configData below.\n            case ANALYTICS_RENDERED_STR: {\n                const { isStoredPaymentMethod, brand, configData: originalConfigData } = analyticsObj;\n\n                // Expected from Wallet PMs\n                const { isExpress, expressPage } = uiElementProps;\n\n                const hasExpressPage = expressPage && ANALYTICS_EXPRESS_PAGES_ARRAY.includes(expressPage);\n\n                const { type: componentType } = uiElementProps;\n                let configData: ConfigData = null;\n\n                if (componentType === 'scheme' || componentType === 'bcmc' || componentType === 'customcard') {\n                    // Expected from Card related PMs\n                    configData = getCardConfigData(uiElementProps);\n                }\n\n                const data = {\n                    component,\n                    type,\n                    ...(typeof isStoredPaymentMethod === 'boolean' && { isStoredPaymentMethod }), // if defined and a boolean...\n                    ...(brand && { brand }),\n                    ...(typeof isExpress === 'boolean' && { isExpress }),\n                    ...(isExpress === true && hasExpressPage && { expressPage }), // We only care about the expressPage value if isExpress is true\n                    ...(configData && { configData }),\n                    ...(originalConfigData && { configData: originalConfigData })\n                };\n\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.info,\n                    data\n                });\n\n                break;\n            }\n\n            case ANALYTICS_CONFIGURED_STR: {\n                const { isStoredPaymentMethod, brand } = analyticsObj;\n                const data = { component, type, isStoredPaymentMethod, brand };\n\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.info,\n                    data\n                });\n                break;\n            }\n\n            case ANALYTICS_FOCUS_STR:\n            case ANALYTICS_UNFOCUS_STR:\n            case ANALYTICS_DISPLAYED_STR: // issuerList\n            case ANALYTICS_INPUT_STR: // issuerList\n            case ANALYTICS_DOWNLOAD_STR: // QR codes\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.info,\n                    data: { component, type, target }\n                });\n                break;\n\n            // - ApplePay & GooglePay when instant PMs\n            // - issuerList buttons\n            case ANALYTICS_SELECTED_STR: {\n                const { issuer } = analyticsObj;\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.info,\n                    data: { component, type, target, issuer }\n                });\n                break;\n            }\n\n            case ANALYTICS_VALIDATION_ERROR_STR: {\n                const { validationErrorCode, validationErrorMessage } = analyticsObj;\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.info,\n                    data: { component, type, target, validationErrorCode, validationErrorMessage }\n                });\n                break;\n            }\n\n            /**\n             * LOGS\n             */\n            case ANALYTICS_SUBMIT_STR:\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.log,\n                    data: { component, type, message: 'Shopper clicked pay' }\n                });\n                break;\n\n            case ANALYTICS_ACTION_STR: {\n                const { subtype, message } = analyticsObj;\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.log,\n                    data: { component, type, subtype, message }\n                });\n                break;\n            }\n\n            // General 3DS2 log events: \"action handled\" (i.e. iframe loaded), data sent, process completed\n            case THREEDS2_FULL: {\n                const { message, metadata, subtype, result } = analyticsObj;\n\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.log,\n                    data: { component, type, message, metadata, subtype, result }\n                });\n                break;\n            }\n\n            /**\n             * ERRORS\n             */\n            case THREEDS2_ERROR:\n            case ANALYTICS_EVENT.error: {\n                const { message, code, errorType } = analyticsObj;\n                analyticsModule.createAnalyticsEvent({\n                    event: ANALYTICS_EVENT.error,\n                    data: { component, type, message, code, errorType }\n                });\n                break;\n            }\n\n            default: {\n                analyticsModule.createAnalyticsEvent(analyticsObj as CreateAnalyticsEventObject);\n            }\n        }\n    };\n};\n","import CollectId from '../Services/analytics/collect-id';\nimport EventsQueue, { EventsQueueModule } from './EventsQueue';\nimport { AnalyticsEvent, AnalyticsInitialEvent, AnalyticsObject, AnalyticsProps, CreateAnalyticsEventObject } from './types';\nimport { ANALYTIC_LEVEL, ANALYTICS_INFO_TIMER_INTERVAL, ANALYTICS_PATH, ANALYTICS_EVENT } from './constants';\nimport { debounce } from '../../utils/debounce';\nimport { AnalyticsModule } from '../../types/global-types';\nimport { createAnalyticsObject, processAnalyticsData } from './utils';\nimport { analyticsPreProcessor } from './analyticsPreProcessor';\n\nlet capturedCheckoutAttemptId = null;\nlet sendEventsTimerId = null;\n\nconst Analytics = ({ locale, clientKey, analytics, amount, analyticsContext, bundleType }: AnalyticsProps): AnalyticsModule => {\n    const defaultProps = {\n        enabled: true,\n        checkoutAttemptId: null,\n        analyticsData: {}\n    };\n\n    const props = { ...defaultProps, ...analytics };\n\n    const collectId = CollectId({ analyticsContext, clientKey, locale, amount, analyticsPath: ANALYTICS_PATH, bundleType });\n    const eventsQueue: EventsQueueModule = EventsQueue({ analyticsContext, clientKey, analyticsPath: ANALYTICS_PATH });\n\n    const sendAnalyticsEvents = () => {\n        if (capturedCheckoutAttemptId) {\n            return eventsQueue.run(capturedCheckoutAttemptId);\n        }\n        return Promise.resolve(null);\n    };\n\n    const addAnalyticsEvent = (type: AnalyticsEvent, obj: AnalyticsObject) => {\n        const arrayName = type === ANALYTICS_EVENT.info ? type : `${type}s`;\n        eventsQueue.add(`${arrayName}`, obj);\n\n        /**\n         * The logic is:\n         *  - info events are stored until a log or error comes along,\n         *  but, if after a set time, no other analytics event (log or error) has come along then we send the info events anyway\n         */\n        if (type === ANALYTICS_EVENT.info) {\n            clearTimeout(sendEventsTimerId);\n            sendEventsTimerId = setTimeout(() => void sendAnalyticsEvents(), ANALYTICS_INFO_TIMER_INTERVAL);\n        }\n\n        /**\n         * The logic is:\n         *  - errors and logs get sent straightaway\n         *  ...but... tests with the 3DS2 process show that many logs can happen almost at the same time (or you can have an error followed immediately by a log),\n         *  so instead of making several sequential api calls we see if we can \"batch\" them using debounce\n         */\n        if (type === ANALYTICS_EVENT.log || type === ANALYTICS_EVENT.error) {\n            clearTimeout(sendEventsTimerId); // clear any timer that might be about to dispatch the info events array\n\n            debounce(sendAnalyticsEvents)();\n        }\n    };\n\n    const anlModule: AnalyticsModule = {\n        /**\n         * Make \"setup\" call, to pass containerWidth, buildType, channel etc, and receive a checkoutAttemptId in return\n         * @param initialEvent -\n         */\n        setUp: async (initialEvent: AnalyticsInitialEvent) => {\n            const { payload, enabled } = props; // TODO what is payload, is it ever used?\n            const level = enabled ? ANALYTIC_LEVEL.all : ANALYTIC_LEVEL.initial;\n            const analyticsData = processAnalyticsData(props.analyticsData);\n            if (!capturedCheckoutAttemptId) {\n                try {\n                    capturedCheckoutAttemptId = await collectId({\n                        ...initialEvent,\n                        ...(payload && { ...payload }),\n                        ...(Object.keys(analyticsData).length && { ...analyticsData }),\n                        ...{ level }\n                    });\n                } catch (e: any) {\n                    console.warn(`Fetching checkoutAttemptId failed.${e ? ` Error=${e}` : ''}`);\n                }\n            }\n        },\n\n        getCheckoutAttemptId: (): string => capturedCheckoutAttemptId,\n\n        // Expose getter for testing purposes\n        getEventsQueue: () => eventsQueue,\n\n        createAnalyticsEvent: ({ event, data }: CreateAnalyticsEventObject): AnalyticsObject => {\n            if (!props.enabled) return;\n\n            const aObj: AnalyticsObject = createAnalyticsObject({\n                event,\n                ...data\n            });\n            // console.log('### Analytics::createAnalyticsEvent:: event=', event, ' aObj=', aObj);\n\n            addAnalyticsEvent(event, aObj);\n\n            return aObj;\n        },\n\n        getEnabled: () => props.enabled,\n\n        sendAnalytics: null\n    };\n\n    anlModule.sendAnalytics = props.enabled === true ? analyticsPreProcessor(anlModule) : () => {};\n\n    return anlModule;\n};\n\nexport default Analytics;\n","import { httpPost } from '../http';\nimport Session from '../../CheckoutSession';\nimport { CheckoutSessionPaymentResponse } from '../../CheckoutSession/types';\nimport { API_ERROR_CODE, API_VERSION } from './constants';\n\n/**\n */\nfunction makePayment(paymentRequest, session: Session): Promise<CheckoutSessionPaymentResponse> {\n    const path = `${API_VERSION}/sessions/${session.id}/payments?clientKey=${session.clientKey}`;\n    const data = {\n        sessionData: session.data,\n        ...paymentRequest\n    };\n\n    return httpPost({ loadingContext: session.loadingContext, path, errorLevel: 'fatal', errorCode: API_ERROR_CODE.makePayments }, data);\n}\n\nexport default makePayment;\n","import { httpPost } from '../http';\nimport Session from '../../CheckoutSession';\nimport { API_ERROR_CODE, API_VERSION } from './constants';\nimport { CheckoutSessionDetailsResponse } from '../../CheckoutSession/types';\n\n/**\n */\nfunction submitDetails(details, session: Session): Promise<CheckoutSessionDetailsResponse> {\n    const path = `${API_VERSION}/sessions/${session.id}/paymentDetails?clientKey=${session.clientKey}`;\n    const data = {\n        sessionData: session.data,\n        ...details\n    };\n\n    return httpPost({ loadingContext: session.loadingContext, path, errorLevel: 'fatal', errorCode: API_ERROR_CODE.submitPaymentDetails }, data);\n}\n\nexport default submitDetails;\n","import { httpPost } from '../http';\nimport Session from '../../CheckoutSession';\nimport { CheckoutSessionSetupResponse, SetupSessionOptions } from '../../CheckoutSession/types';\nimport { API_VERSION } from './constants';\n\nfunction setupSession(session: Session, options: SetupSessionOptions): Promise<CheckoutSessionSetupResponse> {\n    const path = `${API_VERSION}/sessions/${session.id}/setup?clientKey=${session.clientKey}`;\n    const data = {\n        browserInfo: options.browserInfo,\n        sessionData: session.data,\n        ...(options.order\n            ? {\n                  order: { orderData: options.order.orderData, pspReference: options.order.pspReference }\n              }\n            : {})\n    };\n\n    return httpPost<CheckoutSessionSetupResponse>(\n        {\n            loadingContext: session.loadingContext,\n            path,\n            errorLevel: 'fatal'\n        },\n        data\n    );\n}\n\nexport default setupSession;\n","import { httpPost } from '../http';\nimport Session from '../../CheckoutSession';\nimport { CheckoutSessionBalanceResponse } from '../../CheckoutSession/types';\nimport { API_VERSION } from './constants';\n\n/**\n */\nfunction checkBalance(paymentRequest, session: Session): Promise<CheckoutSessionBalanceResponse> {\n    const path = `${API_VERSION}/sessions/${session.id}/paymentMethodBalance?clientKey=${session.clientKey}`;\n    const data = {\n        sessionData: session.data,\n        ...paymentRequest\n    };\n\n    return httpPost({ loadingContext: session.loadingContext, path, errorLevel: 'fatal' }, data);\n}\n\nexport default checkBalance;\n","import { CheckoutSession } from './types';\nimport AdyenCheckoutError from '../Errors/AdyenCheckoutError';\n\nexport function sanitizeSession(session): Partial<CheckoutSession> {\n    if (!session || !session.id) {\n        throw new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'Invalid session');\n    }\n\n    const { shopperLocale, shopperEmail, telephoneNumber, id } = session;\n\n    return {\n        id,\n        ...(session.sessionData ? { sessionData: session.sessionData } : {}),\n        ...(shopperLocale && { shopperLocale }),\n        ...(shopperEmail && { shopperEmail }),\n        ...(telephoneNumber && { telephoneNumber })\n    };\n}\n","import makePayment from '../Services/sessions/make-payment';\nimport submitDetails from '../Services/sessions/submit-details';\nimport setupSession from '../Services/sessions/setup-session';\nimport checkBalance from '../Services/sessions/check-balance';\nimport Storage from '../../utils/Storage';\nimport createOrder from '../Services/sessions/create-order';\nimport { sanitizeSession } from './utils';\nimport {\n    CheckoutSession,\n    CheckoutSessionBalanceResponse,\n    CheckoutSessionDetailsResponse,\n    CheckoutSessionOrdersResponse,\n    CheckoutSessionPaymentResponse,\n    CheckoutSessionSetupResponse,\n    SessionConfiguration,\n    SetupSessionOptions\n} from './types';\nimport cancelOrder from '../Services/sessions/cancel-order';\nimport { onOrderCancelData } from '../../components/Dropin/types';\nimport type { AdditionalDetailsData } from '../types';\nimport collectBrowserInfo from '../../utils/browserInfo';\n\nclass Session {\n    private readonly session: CheckoutSession;\n    private readonly storage: Storage<CheckoutSession>;\n    public readonly clientKey: string;\n    public readonly loadingContext: string;\n    public configuration: SessionConfiguration;\n\n    constructor(rawSession: Partial<CheckoutSession>, clientKey: string, loadingContext: string) {\n        const session = sanitizeSession(rawSession) as CheckoutSession;\n\n        if (!clientKey) throw new Error('No clientKey available');\n        if (!loadingContext) throw new Error('No loadingContext available');\n\n        this.storage = new Storage('session', 'localStorage');\n        this.clientKey = clientKey;\n        this.loadingContext = loadingContext;\n        this.session = session;\n\n        if (!this.session.sessionData) {\n            this.session = this.getStoredSession();\n        } else {\n            this.storeSession();\n        }\n    }\n\n    get shopperLocale() {\n        return this.session.shopperLocale;\n    }\n\n    get id() {\n        return this.session.id;\n    }\n\n    get data() {\n        return this.session.sessionData;\n    }\n\n    /**\n     * Updates the session.data with the latest data blob\n     */\n    private updateSessionData(latestData: string): void {\n        this.session.sessionData = latestData;\n        this.storeSession();\n    }\n\n    /**\n     * Fetches data from a session\n     */\n    setupSession(options: SetupSessionOptions): Promise<CheckoutSessionSetupResponse> {\n        const mergedOptions = { ...options, browserInfo: collectBrowserInfo() };\n        return setupSession(this, mergedOptions).then(response => {\n            if (response.configuration) {\n                this.configuration = { ...response.configuration };\n            }\n\n            if (response.sessionData) {\n                this.updateSessionData(response.sessionData);\n            }\n\n            return response;\n        });\n    }\n\n    /**\n     * Submits a session payment\n     */\n    submitPayment(data): Promise<CheckoutSessionPaymentResponse> {\n        return makePayment(data, this).then(response => {\n            if (response.sessionData) {\n                this.updateSessionData(response.sessionData);\n            }\n\n            return response;\n        });\n    }\n\n    /**\n     * Submits session payment additional details\n     */\n    submitDetails(data: AdditionalDetailsData['data']): Promise<CheckoutSessionDetailsResponse> {\n        return submitDetails(data, this).then(response => {\n            if (response.sessionData) {\n                this.updateSessionData(response.sessionData);\n            }\n\n            return response;\n        });\n    }\n\n    /**\n     * Checks the balance for a payment method\n     */\n    checkBalance(data): Promise<CheckoutSessionBalanceResponse> {\n        return checkBalance(data, this).then(response => {\n            if (response.sessionData) {\n                this.updateSessionData(response.sessionData);\n            }\n\n            return response;\n        });\n    }\n\n    /**\n     * Creates an order for the current session\n     */\n    createOrder(): Promise<CheckoutSessionOrdersResponse> {\n        return createOrder(this).then(response => {\n            if (response.sessionData) {\n                this.updateSessionData(response.sessionData);\n            }\n\n            return response;\n        });\n    }\n\n    /**\n     * Cancels an order for the current session\n     */\n    cancelOrder(data: onOrderCancelData): Promise<CheckoutSessionOrdersResponse> {\n        return cancelOrder(data.order, this).then(response => {\n            if (response.sessionData) {\n                this.updateSessionData(response.sessionData);\n            }\n\n            return response;\n        });\n    }\n\n    /**\n     * Gets the stored session but only if the current id and the stored id match\n     */\n    getStoredSession(): CheckoutSession {\n        const storedSession = this.storage.get();\n        return this.id === storedSession?.id ? storedSession : this.session;\n    }\n\n    /**\n     * Stores the session\n     */\n    storeSession(): void {\n        this.storage.set({ id: this.session.id, sessionData: this.session.sessionData });\n    }\n\n    /**\n     * Clears the stored session\n     */\n    removeStoredSession(): void {\n        this.storage.remove();\n    }\n}\n\nexport default Session;\n","import { httpPost } from '../http';\nimport Session from '../../CheckoutSession';\nimport { CheckoutSessionOrdersResponse } from '../../CheckoutSession/types';\nimport { API_ERROR_CODE, API_VERSION } from './constants';\n\n/**\n */\nfunction createOrder(session: Session): Promise<CheckoutSessionOrdersResponse> {\n    const path = `${API_VERSION}/sessions/${session.id}/orders?clientKey=${session.clientKey}`;\n    const data = {\n        sessionData: session.data\n    };\n\n    return httpPost({ loadingContext: session.loadingContext, path, errorLevel: 'fatal', errorCode: API_ERROR_CODE.createOrder }, data);\n}\n\nexport default createOrder;\n","import { httpPost } from '../http';\nimport Session from '../../CheckoutSession';\nimport { CheckoutSessionOrdersResponse } from '../../CheckoutSession/types';\nimport { API_VERSION } from './constants';\nimport { Order } from '../../../types/global-types';\n\n/**\n */\nfunction cancelOrder(order: Order, session: Session): Promise<CheckoutSessionOrdersResponse> {\n    const path = `${API_VERSION}/sessions/${session.id}/orders/cancel?clientKey=${session.clientKey}`;\n\n    const data = {\n        sessionData: session.data,\n        order: order\n    };\n\n    return httpPost({ loadingContext: session.loadingContext, path, errorLevel: 'fatal' }, data);\n}\n\nexport default cancelOrder;\n","import AdyenCheckoutError from '../Errors/AdyenCheckoutError';\n\nexport interface ImageOptions {\n    extension?: string;\n    imageFolder?: string;\n    resourceContext?: string;\n    name?: string;\n    parentFolder?: string;\n    size?: string;\n    subFolder?: string;\n    svgOptions?: string;\n    type?: string;\n}\n\nexport type GetImageFnType = (name) => string;\n\nexport class Resources {\n    private readonly resourceContext: string;\n\n    constructor(cdnContext: string) {\n        if (!cdnContext) {\n            throw new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'Resources module: \"environmentsUrls.cdn\" is not a valid URL');\n        }\n        this.resourceContext = cdnContext;\n    }\n\n    private returnImage = ({\n        name,\n        resourceContext,\n        imageFolder = '',\n        parentFolder = '',\n        extension,\n        size = '',\n        subFolder = ''\n    }: ImageOptions): string => `${resourceContext}images/${imageFolder}${subFolder}${parentFolder}${name}${size}.${extension}`;\n\n    private getImageUrl =\n        ({ resourceContext, extension = 'svg', ...options }: ImageOptions): GetImageFnType =>\n        (name: string): string => {\n            const imageOptions: ImageOptions = {\n                extension,\n                resourceContext,\n                imageFolder: 'logos/',\n                parentFolder: '',\n                name,\n                ...options\n            };\n\n            return this.returnImage(imageOptions);\n        };\n\n    public getImage(props = {} as ImageOptions) {\n        return this.getImageUrl({ ...props, resourceContext: this.resourceContext });\n    }\n}\n","import { h, Fragment } from 'preact';\nimport { useRef, useState } from 'preact/hooks';\nimport { SRMessagesProps } from './types';\n\n// An interface for the members exposed by SRMessages to its parent\nexport interface SRMessagesRef {\n    setMessages?: (who: string[]) => void;\n}\n\nexport function SRMessages({ setComponentRef }: SRMessagesProps) {\n    const messagesRef = useRef<SRMessagesRef>({});\n    // Just call once to create the object by which we expose the members expected by the parent comp\n    if (!Object.keys(messagesRef.current).length) {\n        setComponentRef?.(messagesRef.current);\n    }\n\n    const [messages, setMessages] = useState(null);\n\n    // Expose method expected by parent\n    messagesRef.current.setMessages = (msgs: string[]) => {\n        setMessages(msgs);\n    };\n\n    return messages ? (\n        <Fragment>\n            {messages.map(msg => {\n                return (\n                    <div key={msg} className=\"adyen-checkout-sr-panel__msg\" {...(process.env.NODE_ENV !== 'production' && { 'data-testid': msg })}>\n                        {msg}\n                    </div>\n                );\n            })}\n        </Fragment>\n    ) : null;\n}\n","import { h } from 'preact';\nimport './SRPanel.scss';\nimport { AriaAttributes, SRPanelProps } from './types';\nimport BaseElement from '../../components/internal/BaseElement/BaseElement';\nimport { SRMessages, SRMessagesRef } from './SRMessages';\nimport type { ICore } from '../types';\n\n/**\n * A panel meant to hold messages that will be read out by ScreenReaders on an aria-live=\"polite\" basis\n * Expects a string or string array of message to add to the panel to be read out\n * For testing purposes can be made visible\n */\nexport class SRPanel extends BaseElement<SRPanelProps> {\n    public static type = 'srPanel';\n\n    public static defaultProps: Partial<SRPanelProps> = {\n        enabled: true,\n        node: 'body',\n        showPanel: false,\n        id: 'ariaLiveSRPanel',\n        ariaAttributes: {\n            'aria-relevant': 'all',\n            'aria-live': 'polite',\n            'aria-atomic': 'true'\n        }\n    };\n\n    private readonly srPanelContainer = null;\n\n    private readonly id;\n    private readonly showPanel;\n    private readonly _enabled: boolean;\n    private readonly _moveFocus: boolean;\n\n    private componentRef: SRMessagesRef;\n\n    constructor(checkout: ICore, props?: SRPanelProps) {\n        super(checkout, props);\n\n        this.id = this.props.id;\n        this.showPanel = process.env.NODE_ENV !== 'production' ? this.props.showPanel : false;\n        this._enabled = false;\n        this._moveFocus = this.props.moveFocus ?? true;\n\n        if (this.props.enabled) {\n            this._enabled = true;\n\n            const panelParent = document.querySelector(this.props.node);\n\n            if (panelParent) {\n                const preExistingSRPanel = document.getElementById(this.id);\n                if (preExistingSRPanel) {\n                    panelParent.removeChild(preExistingSRPanel);\n                }\n\n                this.srPanelContainer = document.createElement('div');\n                this.srPanelContainer.className = 'sr-panel-holder';\n                this.srPanelContainer.id = this.id;\n\n                panelParent.appendChild(this.srPanelContainer);\n\n                this.mount(this.srPanelContainer);\n            } else {\n                throw new Error('Component could not mount. Root node was not found.');\n            }\n        }\n    }\n\n    public setComponentRef = ref => {\n        this.componentRef = ref;\n    };\n\n    public get enabled() {\n        return this._enabled;\n    }\n\n    public get moveFocus() {\n        return this._moveFocus;\n    }\n\n    public setAriaProps(ariaAttributes: AriaAttributes): void {\n        const firstPanel = document.querySelector('[class^=\"adyen-checkout-sr-panel\"]');\n        for (const [key, value] of Object.entries(ariaAttributes)) {\n            firstPanel.setAttribute(key, value);\n        }\n        this.props = { ...this.props, ariaAttributes: { ...this.props.ariaAttributes, ...ariaAttributes } };\n    }\n\n    // A method we can expose to allow comps to set messages in this panel\n    public setMessages = (messages: string[] | string): void => {\n        if (!this.props.enabled) return;\n\n        let panelMessages = null;\n        if (messages) {\n            // Ensure panelMessages is an array\n            panelMessages = Array.isArray(messages) ? messages : [messages];\n        }\n\n        this.componentRef.setMessages(panelMessages);\n    };\n\n    render() {\n        if (!this.props.enabled) return null;\n        return (\n            <div\n                className={this.showPanel ? 'adyen-checkout-sr-panel' : 'adyen-checkout-sr-panel--sr-only'}\n                role={'log'}\n                {...this.props.ariaAttributes}\n                {...(process.env.NODE_ENV !== 'production' && { 'data-testid': this.id })}\n            >\n                <SRMessages setComponentRef={this.setComponentRef} />\n            </div>\n        );\n    }\n}\n","import UIElement from '../components/internal/UIElement/UIElement';\nimport ThreeDS2Challenge from '../components/ThreeDS2/ThreeDS2Challenge';\nimport ThreeDS2DeviceFingerprint from '../components/ThreeDS2/ThreeDS2DeviceFingerprint';\nimport Redirect from '../components/Redirect';\nimport { TxVariants } from '../components/tx-variants';\nimport type { ICore } from './types';\n\nfunction assertClassHasType(Class: any): Class is typeof UIElement {\n    const hasValidType = typeof Class.type === 'string' && !!Class.type;\n    return hasValidType;\n}\n\nexport type NewableComponent = new (checkout: ICore, props?) => UIElement;\n\nexport interface IRegistry {\n    add(...items: NewableComponent[]): void;\n    getComponent(type: string): NewableComponent | undefined;\n}\n\nconst defaultComponents = {\n    [TxVariants.redirect]: Redirect,\n    [TxVariants.threeDS2Challenge]: ThreeDS2Challenge,\n    [TxVariants.threeDS2DeviceFingerprint]: ThreeDS2DeviceFingerprint\n};\n\nclass Registry implements IRegistry {\n    public componentsMap: Record<string, NewableComponent> = defaultComponents;\n\n    public supportedTxVariants: Set<string> = new Set(Object.values(TxVariants));\n\n    public add(...items: NewableComponent[]) {\n        this.componentsMap = {\n            ...this.componentsMap,\n            ...this.createComponentsMap(items)\n        };\n    }\n\n    public getComponent(type: string): NewableComponent | undefined {\n        const Component = this.componentsMap[type];\n        if (Component) {\n            return Component;\n        }\n\n        if (this.supportedTxVariants.has(type)) {\n            return;\n        }\n\n        return Redirect;\n    }\n\n    public createComponentsMap(components: NewableComponent[]) {\n        const componentsMap = components.reduce((memo, component) => {\n            const isValid = assertClassHasType(component);\n\n            if (!isValid) {\n                console.error('CoreRegistry: Attempt to register Class failed. The Class is not a valid UIElement');\n                return memo;\n            }\n            if (component.type === 'dropin') {\n                return memo;\n            }\n\n            const supportedTxVariants = [component.type, ...component.txVariants].filter(txVariant => txVariant);\n\n            supportedTxVariants.forEach(txVariant => {\n                memo = {\n                    ...memo,\n                    [txVariant]: component\n                };\n            });\n\n            return memo;\n        }, {});\n\n        return componentsMap;\n    }\n}\n\nexport default new Registry();\n","import type { CoreConfiguration } from './types';\n\nconst defaultProps: CoreConfiguration = {\n    exposeLibraryMetadata: true,\n    showPayButton: true\n};\n\nexport { defaultProps };\n","const API_ENVIRONMENTS = {\n    test: 'https://checkoutshopper-test.adyen.com/checkoutshopper/',\n    live: 'https://checkoutshopper-live.adyen.com/checkoutshopper/',\n    'live-us': 'https://checkoutshopper-live-us.adyen.com/checkoutshopper/',\n    'live-au': 'https://checkoutshopper-live-au.adyen.com/checkoutshopper/',\n    'live-apse': 'https://checkoutshopper-live-apse.adyen.com/checkoutshopper/',\n    'live-in': 'https://checkoutshopper-live-in.adyen.com/checkoutshopper/',\n    fallback: 'https://checkoutshopper-live.adyen.com/checkoutshopper/'\n};\n\nconst CDN_ENVIRONMENTS = {\n    test: 'https://checkoutshopper-test.cdn.adyen.com/checkoutshopper/',\n    live: 'https://checkoutshopper-live.cdn.adyen.com/checkoutshopper/',\n    'live-us': 'https://checkoutshopper-live-us.cdn.adyen.com/checkoutshopper/',\n    'live-au': 'https://checkoutshopper-live-au.cdn.adyen.com/checkoutshopper/',\n    'live-apse': 'https://checkoutshopper-live-apse.cdn.adyen.com/checkoutshopper/',\n    'live-in': 'https://checkoutshopper-live-in.cdn.adyen.com/checkoutshopper/',\n    fallback: 'https://checkoutshopper-live.cdn.adyen.com/checkoutshopper/'\n};\n\nconst ANALYTICS_ENVIRONMENTS = {\n    test: 'https://checkoutanalytics-test.adyen.com/checkoutanalytics/',\n    live: 'https://checkoutanalytics-live.adyen.com/checkoutanalytics/',\n    'live-us': 'https://checkoutanalytics-live-us.adyen.com/checkoutanalytics/',\n    'live-au': 'https://checkoutanalytics-live-au.adyen.com/checkoutanalytics/',\n    'live-apse': 'https://checkoutanalytics-live-apse.adyen.com/checkoutanalytics/',\n    'live-in': 'https://checkoutanalytics-live-in.adyen.com/checkoutanalytics/',\n    fallback: 'https://checkoutanalytics-live.adyen.com/checkoutanalytics/'\n};\n\nexport { API_ENVIRONMENTS, CDN_ENVIRONMENTS, ANALYTICS_ENVIRONMENTS };\n","import { ANALYTICS_ENVIRONMENTS, API_ENVIRONMENTS, CDN_ENVIRONMENTS } from './constants';\nimport type { CoreConfiguration } from '../types';\n\nconst getUrlFromMap = (env: CoreConfiguration['environment'], environmentMap: Record<string, string>, environmentUrl?: string): string => {\n    if (environmentUrl) {\n        return environmentUrl;\n    }\n    return environmentMap[env?.toLowerCase()] || environmentMap.fallback;\n};\n\nexport const resolveEnvironments = (environment: CoreConfiguration['environment'], environmentsUrls?: CoreConfiguration['_environmentUrls']) => {\n    const apiUrl = getUrlFromMap(environment, API_ENVIRONMENTS, environmentsUrls?.api);\n    const analyticsUrl = getUrlFromMap(environment, ANALYTICS_ENVIRONMENTS, environmentsUrls?.analytics);\n    const cdnImagesUrl = getUrlFromMap(environment, CDN_ENVIRONMENTS, environmentsUrls?.cdn?.images);\n    const cdnTranslationsUrl =\n        process.env.NODE_ENV === 'development' ? '/' : getUrlFromMap(environment, CDN_ENVIRONMENTS, environmentsUrls?.cdn?.translations);\n\n    return {\n        apiUrl,\n        analyticsUrl,\n        cdnImagesUrl,\n        cdnTranslationsUrl\n    };\n};\n","import Language from '../language';\nimport UIElement from '../components/internal/UIElement/UIElement';\nimport RiskModule from './RiskModule';\nimport PaymentMethods from './ProcessResponse/PaymentMethods';\nimport getComponentForAction from './ProcessResponse/PaymentAction';\nimport Analytics from './Analytics';\nimport { assertConfigurationPropertiesAreValid, processGlobalOptions } from './utils';\nimport Session from './CheckoutSession';\nimport { hasOwnProperty } from '../utils/hasOwnProperty';\nimport { Resources } from './Context/Resources';\nimport { SRPanel } from './Errors/SRPanel';\nimport registry, { NewableComponent } from './core.registry';\nimport { cleanupFinalResult, sanitizeResponse, verifyPaymentDidNotFail } from '../components/internal/UIElement/utils';\nimport AdyenCheckoutError, { IMPLEMENTATION_ERROR } from './Errors/AdyenCheckoutError';\nimport { ANALYTICS_ACTION_STR } from './Analytics/constants';\nimport { THREEDS2_FULL } from '../components/ThreeDS2/constants';\nimport { DEFAULT_LOCALE } from '../language/constants';\nimport getTranslations from './Services/get-translations';\nimport { defaultProps } from './core.defaultProps';\nimport { formatCustomTranslations, formatLocale } from '../language/utils';\nimport { resolveEnvironments } from './Environment';\n\nimport type { AnalyticsModule, PaymentAction, PaymentResponseData } from '../types/global-types';\nimport type { CoreConfiguration, ICore, AdditionalDetailsData } from './types';\nimport type { Translations } from '../language/types';\nimport type { UIElementProps } from '../components/internal/UIElement/types';\n\nclass Core implements ICore {\n    public session?: Session;\n    public paymentMethodsResponse: PaymentMethods;\n    public modules: Readonly<{\n        risk: RiskModule;\n        analytics: AnalyticsModule;\n        resources: Resources;\n        i18n: Language;\n        srPanel: SRPanel;\n    }>;\n    public options: CoreConfiguration;\n\n    public analyticsContext: string;\n    public loadingContext: string;\n    public cdnImagesUrl: string;\n    public cdnTranslationsUrl: string;\n\n    private components: UIElement[] = [];\n\n    public static readonly metadata = {\n        version: process.env.VERSION,\n        bundleType: process.env.BUNDLE_TYPE\n    };\n\n    public static registry = registry;\n\n    public static setBundleType(type: string): void {\n        Core.metadata.bundleType = type;\n    }\n\n    public static register(...items: NewableComponent[]) {\n        registry.add(...items);\n    }\n\n    /**\n     * Used internally by the PaymentMethod components to auto-register themselves\n     * @internal\n     */\n    public register(...items: NewableComponent[]) {\n        registry.add(...items);\n    }\n\n    public getComponent(txVariant: string) {\n        return registry.getComponent(txVariant);\n    }\n\n    constructor(props: CoreConfiguration) {\n        assertConfigurationPropertiesAreValid(props);\n\n        this.createFromAction = this.createFromAction.bind(this);\n\n        this.setOptions({ ...defaultProps, ...props });\n\n        const { apiUrl, analyticsUrl, cdnImagesUrl, cdnTranslationsUrl } = resolveEnvironments(\n            this.options.environment,\n            this.options._environmentUrls\n        );\n\n        this.loadingContext = apiUrl;\n        this.analyticsContext = analyticsUrl;\n        this.cdnImagesUrl = cdnImagesUrl;\n        this.cdnTranslationsUrl = cdnTranslationsUrl;\n\n        this.session = this.options.session && new Session(this.options.session, this.options.clientKey, this.loadingContext);\n\n        const clientKeyType = this.options.clientKey?.substring(0, 4);\n        if ((clientKeyType === 'test' || clientKeyType === 'live') && !this.loadingContext.includes(clientKeyType)) {\n            throw new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                `Error: you are using a ${clientKeyType} clientKey against the ${this.options._environmentUrls?.api || this.options.environment} environment`\n            );\n        }\n        if (clientKeyType === 'pub.') {\n            console.debug(\n                `The value you are passing as your \"clientKey\" looks like an originKey (${this.options.clientKey?.substring(0, 12)}..). Although this is supported it is not the recommended way to integrate. To generate a clientKey, see the documentation (https://docs.adyen.com/development-resources/client-side-authentication/migrate-from-origin-key-to-client-key/) for more details.`\n            );\n        }\n\n        if (this.options.exposeLibraryMetadata) {\n            window['AdyenWebMetadata'] = Core.metadata;\n        }\n    }\n\n    public async initialize(): Promise<this> {\n        await this.initializeCore();\n        this.validateCoreConfiguration();\n        await this.createCoreModules();\n        return this;\n    }\n\n    private async initializeCore(): Promise<this> {\n        if (this.session) {\n            return this.session\n                .setupSession(this.options)\n                .then(sessionResponse => {\n                    const { amount, shopperLocale, countryCode, paymentMethods, ...rest } = sessionResponse;\n\n                    this.setOptions({\n                        ...rest,\n                        amount: this.options.order ? this.options.order.remainingAmount : amount,\n                        locale: this.options.locale || shopperLocale,\n                        countryCode: this.options.countryCode || countryCode\n                    });\n\n                    this.createPaymentMethodsList(paymentMethods);\n\n                    return this;\n                })\n                .catch(error => {\n                    if (this.options.onError) this.options.onError(error);\n                    return Promise.reject(error);\n                });\n        }\n\n        this.createPaymentMethodsList();\n        return Promise.resolve(this);\n    }\n\n    private async fetchLocaleTranslations(): Promise<Translations> {\n        try {\n            return await getTranslations(this.cdnTranslationsUrl, Core.metadata.version, this.options.locale);\n        } catch (error: unknown) {\n            if (error instanceof AdyenCheckoutError) this.options.onError?.(error);\n            else this.options.onError?.(new AdyenCheckoutError('ERROR', 'Failed to fetch translation', { cause: error }));\n        }\n    }\n\n    private validateCoreConfiguration(): void {\n        // @ts-ignore This property does not exist, although merchants might be using when migrating from v5 to v6\n        if (this.options.paymentMethodsConfiguration) {\n            console.warn('WARNING:  \"paymentMethodsConfiguration\" is supported only by Drop-in.');\n        }\n\n        if (!this.options.countryCode) {\n            throw new AdyenCheckoutError(IMPLEMENTATION_ERROR, 'You must specify a countryCode when initializing checkout.');\n        }\n\n        if (!this.options.locale) {\n            this.setOptions({ locale: DEFAULT_LOCALE });\n        }\n\n        this.options.locale = formatLocale(this.options.locale);\n        this.options.translations = formatCustomTranslations(this.options.translations);\n    }\n\n    /**\n     * Method used when handling redirects. It submits details using 'onAdditionalDetails' or the Sessions flow if available.\n     *\n     * @public\n     * @see {https://docs.adyen.com/online-payments/build-your-integration/?platform=Web&integration=Components&version=5.55.1#handle-the-redirect}\n     * @param details - Details object containing the redirectResult\n     */\n    public submitDetails(details: AdditionalDetailsData['data']): void {\n        let promise = null;\n\n        if (this.options.onAdditionalDetails) {\n            promise = new Promise((resolve, reject) => {\n                this.options.onAdditionalDetails({ data: details }, undefined, { resolve, reject });\n            });\n        }\n\n        if (this.session) {\n            promise = this.session.submitDetails(details).catch(error => {\n                this.options.onError?.(error);\n                return Promise.reject(error);\n            });\n        }\n\n        if (!promise) {\n            this.options.onError?.(\n                new AdyenCheckoutError(\n                    'IMPLEMENTATION_ERROR',\n                    'It can not submit the details. The callback \"onAdditionalDetails\" or the Session is not setup correctly.'\n                )\n            );\n            return;\n        }\n\n        promise\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then((response: PaymentResponseData) => {\n                cleanupFinalResult(response);\n                this.options.onPaymentCompleted?.(response);\n            })\n            .catch((response: PaymentResponseData) => {\n                cleanupFinalResult(response);\n                this.options.onPaymentFailed?.(response);\n            });\n    }\n\n    /**\n     * Instantiates a new element component ready to be mounted from an action object\n     *\n     * @param action - action defining the component with the component data\n     * @param options - options that will be merged to the global Checkout props\n     * @returns new UIElement\n     */\n    public createFromAction(action: PaymentAction, options = {}): UIElement {\n        if (!action || !action.type) {\n            if (hasOwnProperty(action, 'action') && hasOwnProperty(action, 'resultCode')) {\n                throw new Error(\n                    'createFromAction::Invalid Action - the passed action object itself has an \"action\" property and ' +\n                        'a \"resultCode\": have you passed in the whole response object by mistake?'\n                );\n            }\n            throw new Error('createFromAction::Invalid Action - the passed action object does not have a \"type\" property');\n        }\n\n        if (action.type) {\n            // 'threeDS2' OR 'qrCode', 'voucher', 'redirect', 'await', 'bankTransfer`\n            const component = action.type === THREEDS2_FULL ? `${action.type}${action.subtype}` : action.paymentMethodType;\n\n            this.modules.analytics.sendAnalytics(component, {\n                type: ANALYTICS_ACTION_STR,\n                subtype: action.type,\n                message: `${component} action was handled by the SDK`\n            });\n\n            const props = {\n                ...this.getCorePropsForComponent(),\n                ...options\n            };\n\n            return getComponentForAction(this, registry, action, props);\n        }\n\n        return this.handleCreateError();\n    }\n\n    /**\n     * Updates global configurations, resets the internal state and remounts each element.\n     *\n     * @param options - props to update\n     * @returns this - the element instance\n     */\n    public update = (options: Partial<CoreConfiguration> = {}): Promise<this> => {\n        this.setOptions(options);\n\n        return this.initialize().then(() => {\n            this.components.forEach(component => {\n                // We update only with the new options that have been received\n                const newProps: Partial<UIElementProps> = {\n                    ...options,\n                    ...(this.session && { session: this.session })\n                };\n                component.update(newProps);\n            });\n            return this;\n        });\n    };\n\n    /**\n     * Remove the reference of a component\n     * @param component - reference to the component to be removed\n     * @returns this - the element instance\n     * // TODO: Do we need this?\n     */\n    public remove = (component): this => {\n        this.components = this.components.filter(c => c._id !== component._id);\n        component.unmount();\n\n        return this;\n    };\n\n    /**\n     * @internal\n     * Create or update the config object passed when AdyenCheckout is initialised (environment, clientKey, etc...)\n     */\n    private setOptions = (options: CoreConfiguration): void => {\n        this.options = {\n            ...this.options,\n            ...options,\n            locale: options?.locale || this.options?.locale\n        };\n    };\n\n    /**\n     * @internal\n     * @returns props for a new UIElement\n     */\n    public getCorePropsForComponent(): any {\n        const globalOptions = processGlobalOptions(this.options);\n\n        return {\n            ...globalOptions,\n            core: this,\n            i18n: this.modules.i18n,\n            modules: this.modules,\n            session: this.session,\n            loadingContext: this.loadingContext,\n            cdnContext: this.cdnImagesUrl,\n            createFromAction: this.createFromAction\n        };\n    }\n\n    public storeElementReference(element: UIElement) {\n        if (element) {\n            this.components.push(element);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    private handleCreateError(paymentMethod?): never {\n        const paymentMethodName = paymentMethod?.name ?? 'The passed payment method';\n        const errorMessage = paymentMethod\n            ? `${paymentMethodName} is not a valid Checkout Component. What was passed as a txVariant was: ${JSON.stringify(\n                  paymentMethod\n              )}. Check if this payment method is configured in the Backoffice or if the txVariant is a valid one`\n            : 'No Payment Method component was passed';\n\n        throw new Error(errorMessage);\n    }\n\n    private createPaymentMethodsList(paymentMethodsResponse?: PaymentMethods): void {\n        this.paymentMethodsResponse = new PaymentMethods(this.options.paymentMethodsResponse || paymentMethodsResponse, this.options);\n    }\n\n    private async createCoreModules(): Promise<void> {\n        if (this.modules) {\n            if (process.env.NODE_ENV === 'development') {\n                console.warn('Core: Core modules are already created.');\n            }\n            return;\n        }\n\n        const translations = await this.fetchLocaleTranslations();\n\n        this.modules = Object.freeze({\n            risk: new RiskModule(this, { ...this.options, loadingContext: this.loadingContext }),\n            analytics: Analytics({\n                loadingContext: this.loadingContext,\n                analyticsContext: this.analyticsContext,\n                clientKey: this.options.clientKey,\n                locale: this.options.locale,\n                analytics: this.options.analytics,\n                amount: this.options.amount,\n                bundleType: Core.metadata.bundleType\n            }),\n            resources: new Resources(this.cdnImagesUrl),\n            i18n: new Language({\n                locale: this.options.locale,\n                translations,\n                customTranslations: this.options.translations\n            }),\n            srPanel: new SRPanel(this, { ...this.options.srConfig })\n        });\n    }\n}\n\nexport default Core;\n","import { httpGet } from './http';\nimport type { Translations } from '../../language/types';\n\nexport default async function getTranslations(cdnTranslationsUrl: string, adyenWebVersion: string, locale: string): Promise<Translations> {\n    try {\n        return await httpGet({\n            loadingContext: cdnTranslationsUrl,\n            errorLevel: 'fatal',\n            errorMessage: `Translations: Failed to fetch translations for locale \"${locale}\"`,\n            path: `sdk/${adyenWebVersion}/translations/${locale}.json`\n        });\n    } catch (error) {\n        return await httpGet({\n            loadingContext: cdnTranslationsUrl,\n            errorLevel: 'fatal',\n            errorMessage: `Translations: Couldn't fetch translation for locale \"${locale}\" nor the fallback translation \"en-US\"`,\n            path: `sdk/${adyenWebVersion}/translations/en-US.json`\n        });\n    }\n}\n","export const DEFAULT_LOCALE = 'en-US';\n","import actionTypes from './actionTypes';\nimport type { PaymentAction } from '../../../types/global-types';\nimport type { IRegistry } from '../../core.registry';\nimport type { ICore } from '../../types';\nimport UIElement from '../../../components/internal/UIElement';\n\nexport function getComponentForAction(core: ICore, registry: IRegistry, action: PaymentAction, props = {}): UIElement {\n    const nextAction = actionTypes[action.type];\n\n    if (nextAction && typeof nextAction === 'function') {\n        return nextAction(core, registry, action, props);\n    }\n\n    throw new Error('Invalid Action');\n}\n\nexport default getComponentForAction;\n","import { GENERIC_OPTIONS } from './config';\nimport type { CoreConfiguration } from './types';\n\n/**\n * Filter properties in a global configuration object from an allow list (GENERIC_OPTIONS)\n * @param globalOptions -\n * @returns any\n */\nexport function processGlobalOptions(globalOptions) {\n    return Object.keys(globalOptions).reduce((r, e) => {\n        if (GENERIC_OPTIONS.includes(e)) r[e] = globalOptions[e];\n        return r;\n    }, {});\n}\n\n/**\n * Validates that there is no unknown property as part of the CoreConfiguration.\n * The validator makes sure to throw a lint error in case a property is added to CoreConfiguration, but it is not added here\n *\n * @param props - AdyenCheckout props\n */\nexport function assertConfigurationPropertiesAreValid(propsSetByMerchant: CoreConfiguration): void {\n    /** Helper that creates a function that validates the array contain ALL CoreConfiguration properties in it */\n    function createConfigurationKeysValidator<T>() {\n        const arrayOfAll =\n            <T>() =>\n            <U extends T[]>(array: U & ([T] extends [U[number]] ? unknown : 'Invalid')) =>\n                array;\n        const arrayWithAllKeys = arrayOfAll<T>();\n        return arrayWithAllKeys;\n    }\n\n    const validator = createConfigurationKeysValidator<keyof CoreConfiguration>();\n    const possibleFields = validator([\n        'session',\n        'environment',\n        '_environmentUrls',\n        'showPayButton',\n        'clientKey',\n        'locale',\n        'translations',\n        'paymentMethodsResponse',\n        'amount',\n        'secondaryAmount',\n        'countryCode',\n        'allowPaymentMethods',\n        'removePaymentMethods',\n        'srConfig',\n        'analytics',\n        'risk',\n        'order',\n        'exposeLibraryMetadata',\n        'beforeRedirect',\n        'beforeSubmit',\n        'onPaymentCompleted',\n        'onPaymentFailed',\n        'onSubmit',\n        'onAdditionalDetails',\n        'onActionHandled',\n        'onChange',\n        'onError',\n        'onBalanceCheck',\n        'onOrderRequest',\n        'onPaymentMethodsRequest',\n        'onOrderCancel',\n        'onOrderUpdated',\n        'loadingContext',\n        'onEnterKeyPressed'\n    ]);\n\n    Object.keys(propsSetByMerchant).forEach((prop: keyof CoreConfiguration) => {\n        if (!possibleFields.includes(prop)) {\n            console.warn(\n                `AdyenCheckout - Configuration property \"${prop}\" is not a valid AdyenCheckout property. If it is a payment method configuration, make sure to pass it directly to the Component. If you are using Drop-in, make sure to pass it to \"paymentMethodsConfiguration\" object`\n            );\n        }\n    });\n}\n","import Core from './core';\nimport { UIElement } from '../types';\nimport type { CoreConfiguration, ICore } from './types';\n\nasync function AdyenCheckout(props: CoreConfiguration): Promise<Core> {\n    const checkout = new Core(props);\n    return await checkout.initialize();\n}\n\nAdyenCheckout.register = (...items: (new (checkout: ICore, props) => UIElement)[]) => {\n    Core.register(...items);\n};\n\n/**\n * Function used by the 'auto' package to insert its bundle type information in the Core.\n * We can't inject its bundle type when bundling with Rollup (as done with the other bundle types), since 'auto' uses ES-LEGACY bundle type under the hood.\n */\nAdyenCheckout.setBundleType = (type: string) => {\n    Core.setBundleType(type);\n};\n\nexport { AdyenCheckout };\n"],"names":["n","l","u","i","o","r","f","e","c","s","a","h","p","v","y","Array","isArray","d","w","parentNode","removeChild","_","t","arguments","length","children","call","defaultProps","g","type","props","key","ref","__k","__","__b","__e","__d","__c","constructor","__v","__i","__u","vnode","k","b","this","context","x","C","base","M","push","P","__r","debounceRendering","sort","shift","__P","O","__n","namespaceURI","j","S","$","N","contains","I","nextSibling","String","L","V","insertBefore","nodeType","H","some","T","setProperty","test","A","style","cssText","replace","toLowerCase","slice","addEventListener","removeEventListener","removeAttribute","setAttribute","F","event","m","prototype","render","contextType","value","__E","q","sub","state","__h","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","indexOf","z","diffed","localName","document","createTextNode","createElementNS","is","data","childNodes","attributes","name","__html","innerHTML","current","unmount","componentWillUnmount","B","firstChild","G","Consumer","Provider","splice","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","bind","resolve","setTimeout","__H","D","__N","filter","every","__m","requestAnimationFrame","clearTimeout","cancelAnimationFrame","ENCRYPTED_CARD_NUMBER","ENCRYPTED_EXPIRY_DATE","ENCRYPTED_EXPIRY_MONTH","ENCRYPTED_EXPIRY_YEAR","ENCRYPTED_SECURITY_CODE","ENCRYPTED_PWD_FIELD","ENCRYPTED_BANK_ACCNT_NUMBER_FIELD","ENCRYPTED_BANK_LOCATION_FIELD","ENCRYPTED_SECURITY_CODE_3_DIGITS","ENCRYPTED_SECURITY_CODE_4_DIGITS","GIFT_CARD","DEFAULT_CARD_GROUP_TYPES","NON_CREDIT_CARD_TYPE_SECURED_FIELDS","CREDIT_CARD_SF_FIELDS","OTHER_SF_FIELDS","ALL_SECURED_FIELDS","concat","DEDICATED_CARD_COMPONENTS","REQUIRED","OPTIONAL","HIDDEN","CVC_POLICY_REQUIRED","CVC_POLICY_OPTIONAL","CVC_POLICY_HIDDEN","DATE_POLICY_REQUIRED","DATE_POLICY_OPTIONAL","DATE_POLICY_HIDDEN","DATA_ENCRYPTED_FIELD_ATTR","DATA_INFO","DATA_UID","BRAND_ICON_UI_EXCLUSION_LIST","BRAND_READABLE_NAME_MAP","visa","mc","amex","discover","cup","jcb","diners","maestro","bcmc","bijcard","SF_FIELDS_MAP","getProp","object","path","split","reduce","xs","undefined","ARIA_ERROR_SUFFIX","ARIA_CONTEXT_SUFFIX","ERROR_ACTION_FOCUS_FIELD","ERROR_ACTION_BLUR_SCENARIO","ERROR_FIELD_REQUIRED","ERROR_FIELD_INVALID","ERROR_INVALID_FORMAT_EXPECTS","CREDITCARD_HOLDER_NAME_INVALID","CREDITCARD_TAX_NUMBER_INVALID","BOLETO_SOCIAL_SECURITY_NUMBER_INVALID","ErrorCodePrefixes","SF_ErrorCodes","EMPTY_FIELD_ERROR_MESSAGES","validFieldsReducer","acc","cur","getErrorReducer","numDateFields","field","val","valid","mapDateFields","fieldNames","isFieldOfType","fieldIsValid","fieldName","errors","policyType","policyOptional","policyHidden","skipOptionalFields","includes","AbstractCSF","setupObj","_define_property","callbacks","config","validateForm","handleBrandFromBinLookup","callbacksHandler","configHandler","createCardSecuredFields","createNonCardSecuredFields","createSecuredFields","destroySecuredFields","handleIOSTouchEvents","destroyTouchendListener","destroyTouchstartListener","handleBinValue","handleEncryption","handleFocus","handleIframeConfigFeedback","handleValidation","handleSFShiftTab","handleShiftTab","isConfigured","postMessageToAllIframes","processAutoComplete","processBrand","sendBrandToCardSF","sendExpiryDatePolicyToSF","setFocusOnFrame","setupSecuredField","touchendListener","touchstartListener","hasGenuineTouchEvents","encryptedAttrName","hasRedundantCVCField","isSingleBrandedCard","securityCode","obj","objToString","Object","toString","prop","existy","truthy","isObjectLike","falsy","Number","isNaN","isString","keys","notFalsy","pick","args","myArgs","from","map","res","_object_spread","reject","vkeys","error","window","console","info","log","warn","handleConfig","cardGroupTypes","loadingContext","logger","str","charAt","isCreditCardType","iframeUIConfig","autoFocus","showWarnings","trimTrailingSeparator","keypadFix","legacyInputMode","minimumExpiryDate","sfLogAtStart","_b$dl","sfBundleType","btoa","location","origin","bundleType","forceCompat","TextEncoder","iframeSrc","clientKey","noop","configureCallbacks","callbacksObj","onLoad","onConfigSuccess","onFieldValid","onAllValid","onBrand","onError","onFocus","onBinValue","onAutoComplete","onAdditionalSFConfig","onAdditionalSFRemoved","onTouchstartIOS","onKeyPressed","makeCallbackObj","fieldType","encryptedFieldName","uuid","isValid","txVariant","rootNode","uid","hasOwnProperty","processErrors","pFeedbackObj","securedField","callbackFn","dataObj","isError","hasError","errorType","callbackObjectsArr","cvcPolicy","securedFields","isEncrypted","isExpiryDateField","sepExpiryDateNames","encryptedType","totalFields","callbackObj","makeCallbackObjectsValidation","endDigits","len","postMessageToIframe","pDataObj","pIframeObj","pLoadingContext","dataObjStr","JSON","stringify","postMessage","getIframeContentWin","csfState","iframeContentWindow","encryptedObjArr","encryptedObj","encryptedBlob","blob","makeCallbackObjectsEncryption","code","numKey","issuerBin","expiryDate","select","root","selector","array","querySelectorAll","selectOne","querySelector","getAttribute","node","attribute","CardType","cards","cardType","startingRules","permittedLengths","pattern","expiryDatePolicy","pBrand","card","Error","__NO_BRAND","on","callback","useCapture","off","objectsDeepEqual","xType","partial","fn","args2","apply","AbstractSecuredField","sfConfig","holderEl","iframeRef","loadToConfigTimeout","_isValid","_iframeContentWindow","_numKey","_isEncrypted","_hasError","_errorType","_cvcPolicy","_expiryDatePolicy","_iframeOnLoadListener","_postMessageListener","onIframeLoadedCallback","onConfigCallback","onEncryptionCallback","onValidationCallback","onFocusCallback","onBinValueCallback","onTouchstartCallback","onShiftTabCallback","onAutoCompleteCallback","onKeyPressedCallback","addErrorTranslationsToObject","originalObj","i18n","nuObj","errorCodeIdentifier","fieldTypeToErrorCodeIdentifier","values","get","getTranslatedErrors","getErrorMessageFromCode","errorCode","codeMap","errMsg","entries","CC_NUM","CC_DAT","CC_MTH","CC_YR","CC_CVC","KCP_PWD","ACH_NUM","ACH_LOC","setSRMessagesFromErrors","fieldTypeMappingFn","SRPanelRef","isValidating","layout","countrySpecificLabels","currentErrorsSortedByLayout","sortedErrors","errObj","TREAT_AS_SF_ERROR","ERROR_MSG_IS_OBJECT","errorMessage","errorMsg","translationKey","errorI18n","mappedLabel","countrySpecificFormat","translationObject","format","label","sortErrorsByLayout","errorMsgArr","setMessages","fieldListArr","action","fieldToFocus","enhanceErrorObjectKeys","errorObj","keyPrefix","enhancedObj","addContextTranslationsToObject","contextualTexts","translation","processAriaConfig","showContextuaElement","iframeTitle","lang","locale","enhancedAriaFieldConfigObj","_object_spread_props","SecuredField","init","placeholders","showContextualElement","processedAriaConfig","ariaConfig","_placeholders_SF_FIELDS_MAP_fieldType","_placeholders_SF_FIELDS_MAP_fieldType1","_placeholders_securityCodeThreeDigits","_placeholders_securityCodeFourDigits","_placeholders_SF_FIELDS_MAP_fieldType2","securityCodeThreeDigits","securityCodeFourDigits","processPlaceholders","iframeEl","src","title","policy","createElement","classList","add","trim","noIframeElContent","appendChild","createIframe","iframe","contentWindow","iframeOnLoadListener","iframeOnLoadListenerFn","postMessageListener","postMessageListenerFn","configObj","pShowWarnings","isCheckoutUrl","adyenDomain","substring","lastCharIndex","originCheckPassed","feedbackObj","parse","isWebpackPostMsg","isChromeVoxPostMsg","destroy","removeAllChildren","isOptionalOrHidden","onIframeLoaded","onEncryption","onValidation","onConfig","onTouchstart","onShiftTab","pSetupObj","super","configVarsFromSetUpObj","crypto","Math","random","ranNum","Uint32Array","getRandomValues","generateRandomNumber","NETWORK_ERROR","IMPLEMENTATION_ERROR","API_ERROR","ERROR","SDK_ERROR","AdyenCheckoutError","message","options","cause","errorTypes","isValidType","async","catch","brand","cvcText","pItem","hasSeparateDateFields","sfInitObj","extraFieldData","maskSecurityCode","exposeExpiryDate","disableIOSArrowKeys","shouldDisableIOSArrowKeys","implementationType","sf","iframeCount","numIframes","failReason","originalNumIframes","iframesLoaded","fieldClick","rest","CANCEL","SCRIPT_ERROR","__IS_ANDROID","navigator","userAgent","__IS_IE","ua","msie","parseInt","rv","edge","isIE","__IS_IOS","__IS_FIREFOX","__IS_SAFARI","targetEl","target","HTMLInputElement","HTMLTextAreaElement","caretPos","pNode","selectionStart","adjFlag","setSelectionRange","focus","nuInput","width","height","opacity","fontSize","registerFieldForIos","HTMLSpanElement","_this_callbacks_onTouchstartIOS","_this_callbacks","checkoutTouchEvent","handleTouchend","bodyEl","cursor","getPreviousTabbableNonSFElement","passedFieldType","getPrevious","matchEl","allPotentialTabEls","actualTabEls","potentialTabEl","tabIndex","isValidTabEl","bounds","getBoundingClientRect","hasDimensions","matchElIndex","arr","testFn","getIndexThruTest","tabEl","getPreviousTabbableEl","handleTab","shiftTabObj","additionalField","shiftTabACH","shiftTabGiftCard","isKCP","shiftTabKCP","shiftTabCreditCard","pAdditionalField","blur","brandObj","expiryDateObj","binLookupResponse","resetObj","isGenericCard","binBrandObj","supportedBrands","passedBrand","showExpiryDate","showSocialSecurityNumber","cardObj","enableLuhnCheck","panLength","csfConfig","pFieldType","doLog","focusData","objKeys","pKey","checkForBrandChange","storedBrand","csfProps","csfCallbacks","newBrandObj","newBrand","treatAsGenericCard","brandInfoObj","ACFeedbackObj","dateValArr","acMonthVal","year","acYearVal","acDateVal","autoComplete","focusString","currentFocusObject","iframeConfigCount","additionalIframeConfigured","iframesConfigured","pSecuredFields","securedFieldKeys","checkFormIsValid","validityHasChanged","allValid","binValue","encryptedBin","notConfiguredWarning","CSF","createReturnObject","updateStyles","pStyleObject","styleObject","isValidated","externalValidation","hasUnsupportedCard","unsupportedCard","brandsFromBinLookup","addSecuredField","removeSecuredField","additionalIframeRemoved","setKCPStatus","sfIsOptionalOrHidden","thisObj","initCSF","isGenericCardType","findRootNode","pRootNode","getCardImageUrl","resources","imageOptions","extension","getImage","fieldTypeToSnakeCase","ENCRYPTED","fieldIsInError","numCharsObj","errorsObj","handlers","cbObj","numCharsInField","numChars","handleOnAllValid","status","detectedUnsupportedBrands","isSfpValid","onChange","handleOnAutoComplete","autoCompleteName","handleOnFieldValid","fieldObj","prevState","handleOnLoad","csfLoadFailTimeout","csfConfigFailTimeout","csfConfigFailTimeoutMS","handleOnConfigSuccess","handleOnBrand","cardInfo","cvcFieldInError","dateFieldInError","monthFieldInError","yearFieldInError","_this_props_brandsConfiguration_cardInfo_brand","_this_props_brandsConfiguration_cardInfo_brand_icon","brandImageUrl","brandsConfiguration","icon","handleOnError","handleOnNoDataRequired","handleOnTouchstartIOS","_this_props_disableIOSArrowKeys","_this_props","handleKeyPressed","_this_props_handleKeyPress","kb","KeyboardEvent","bubbles","cancelable","handleKeyPress","SecuredFieldsProvider","Component","setRootNode","fields","match","initializeCSF","checkForKCPFields","csf","_this_props_placeholders","csfSetupObj","brands","sfStyles","styles","hasKoreanFields","csfLoadFailTimeoutMS","needsKoreanFields","koreanAuthenticationRequired","issuingCountryCode","countryCode","setRemovedFieldState","setAddedFieldState","handleUnsupportedCard","detectedBrands","setFocusOn","frame","stylesObj","showValidation","getErrorObject","mapErrorsToValidationRuleResult","processBinLookupResponse","resetObject","mustResetDedicatedBrand","input","stateObj","AddressModeOptions","CardInputDefaultProps","setComponentRef","billingAddressAllowedCountries","billingAddressMode","full","billingAddressRequired","billingAddressRequiredFields","configuration","socialSecurityNumberMode","billingAddress","enableStoreDetails","hasHolderName","holderNameRequired","hasCVC","hideCVC","installmentOptions","positionHolderNameOnTop","showBrandIcon","showInstallmentAmounts","isPayButtonPrimaryVariant","onBlur","cleanCPFCNPJ","formatCPFCNPJ","cleanValue","formattedValue","g1","g2","g3","g4","g5","maskCNPJ","maskCPF","ssn","getMaxLengthByFieldAndCountry","formattingRules","country","ignoreIfFormatterExists","formatterFn","maxLength","maxlength","MAX_LENGTH","isEmpty","SPECIAL_CHARS","getFormattingRegEx","specChars","flags","RegExp","cardInputFormatters","socialSecurityNumber","cardInputValidationRules","modes","validate","validateSSN","taxNumber","holderName","default","containsExcludedBrand","brandsArr","excludedBrands","cloneBrandsArr","item","removeExcludedBrand","mainBrand1","mainBrand2","clonedBrands","reverse","extensions","refs","states","hasPanLengthRef","sfp","dualBrandSelectElements","setDualBrandSelectElements","setSelectedBrandValue","setIssuingCountryCode","processBinLookup","isReset","issuingCode","brandToReset","hasExcludedBrand","switcherObj","brandObjArr","leadBrand","subBrand","id","brandObject","selectedBrandValue","createCardVariantSwitcher","handleDualBrandSelection","Event","ValidationRuleResult","isValidatingForm","shouldValidate","rule","mode","ValidationResult","validationResults","result","Boolean","getError","find","getAllErrors","results","Validator","setRules","newRules","rules","getRulesFor","_this_rules_field","fieldRules","validationRulesResult","omitKeys","omit","addKeys","initialValue","defaultData","pendingData","schema","processField","fieldProblems","getProcessedState","fieldKey","validationResult","formData","useForm","formatters","validator","useMemo","fieldContext","formatter","isFormatterObject","dispatch","useReducer","formValue","selectedSchema","validationSchema","validation","oldValue","mergedState","defaultState","removedSchemaFields","newSchemaFields","local","formValidation","getReducer","triggerValidation","useCallback","setErrors","setValid","setData","mergeData","setSchema","mergeForm","setFieldProblems","useEffect","handleChangeFor","getTargetValue","HOLDER_NAME","SSN_FIELD","CREDIT_CARD","CREDIT_CARD_NAME_TOP","CREDIT_CARD_NAME_BOTTOM","KCP_FIELDS","KCP_CARD","KCP_CARD_NAME_TOP","KCP_CARD_NAME_BOTTOM","SSN_CARD","SSN_CARD_NAME_TOP","SSN_CARD_NAME_BOTTOM","FALLBACK_VALUE","ADDRESS_SCHEMA","STREET","HOUSE_NUMBER_OR_NAME","POSTAL_CODE","CITY","STATE_OR_PROVINCE","COUNTRY","FIRST_NAME","LAST_NAME","ADDRESS_SPECIFICATIONS","AU","hasDataset","labels","optionalFields","BR","CA","GB","US","PARTIAL_ADDRESS_SCHEMA","COUNTRIES_WITH_CUSTOM_SPECIFICATION","mapFieldKey","handlePartialAddressMode","addressMode","getFullBrandName","Specifications","countryHasDataset","_this_specifications_country","_this_specifications","specifications","countryHasOptionalField","_this_specifications_country_optionalFields","getAddressSchemaForCountry","getAddressLabelsForCountry","getOptionalFieldsForCountry","_this_specifications_default","getKeyForField","_this_specifications_country_labels","_this_specifications_default_labels","_this_specifications1","getPlaceholderKeyForField","_this_specifications_country_placeholders","_this_specifications_default_placeholders","getAddressSchemaForCountryFlat","flat","element","hasOwn","classNames","classes","arg","appendClass","parseValue","newClass","module","exports","Spinner","inline","size","div","data-testid","className","LoadingWrapper","wrapperClass","position","CVCHint","frontCVC","fieldLabel","span","svg","viewBox","fill","xmlns","aria-hidden","aria-describedby","role","rect","rx","stroke","CoreContext","createContext","CoreProvider","toChildArray","useCoreContext","useContext","useImage","Icon","alt","iconUrl","imageFolder","img","cx","idCounter","Date","now","getUniqueId","prefix","PREFIX","Field","classNameModifiers","dir","disabled","readOnly","helper","inputWrapperModifiers","isLoading","labelEndAdornment","onFieldBlur","onFocusField","showValidIcon","useLabelElement","showErrorElement","contextualText","filled","propsFilled","focused","propsFocused","contextVisibleToScreenReader","renderAlternativeToLabel","contextVisibleToSR","showError","showContext","uniqueId","useRef","setFocused","useState","setFilled","onFocusHandler","onBlurHandler","renderLabelOrAlternativeContents","Fragment","data-id","renderInputRelatedElements","errorElem","contextualElem","child","cloneElement","isInvalid","LabelOrAlternative","isSecuredField","defaultWrapperProps","onClick","htmlFor","DataSfSpan","encryptedFieldType","alternativeLabelContent","CVC","fieldClassnames","cvcClassnames","InputBase","_param","setRef","_object_without_properties","autoCorrect","readonly","spellCheck","handleInput","onInput","onKeyPress","handleKeyUp","onKeyUp","handleBlur","trimOnBlur","inputClassNames","newProps","addContextualElement","aria-required","required","aria-invalid","InputText","StoredCardFields","focusedElement","lastFour","expiryMonth","expiryYear","ariaLabel","isAmex","cvcContextualText","aria-label","encryptedSecurityCode","Fieldset","fieldset","legend","RadioGroup","items","uniqueIdBase","lastIndexOf","checked","Img","backgroundUrl","showOnError","loaded","setLoaded","imageRef","handleLoad","modifier","image","Image","onload","complete","SelectButtonElement","filterable","toggleButtonRef","strippedProps","button","ariaDescribedBy","SelectButton","active","selected","inputText","showList","displayText","selectedOptionName","placeholder","displayInputText","onClickHandler","preventDefault","activeElement","filterInputRef","toggleList","currentSelectedItemId","onKeyDown","onButtonKeyDown","allowIdOnButton","aria-autocomplete","aria-controls","selectListId","aria-expanded","aria-owns","aria-activedescendant","secondaryText","SelectListItem","li","aria-disabled","aria-selected","data-disabled","data-value","onSelect","onMouseEnter","onHover","SelectList","filteredItems","ul","selectListRef","uuidv4","arrowDown","arrowUp","enter","escape","space","tab","simulateFocusScroll","parent","parentComputedStyle","getComputedStyle","parentBorderTopWidth","getPropertyValue","overTop","offsetTop","scrollTop","overBottom","clientHeight","Select","selectedValue","disableTextFilter","clearOnSelect","blurOnClose","onListToggle","selectContainerRef","textFilter","setTextFilter","setShowList","setInputText","activeOption","setActiveOption","selectedOption","scrollToItem","nextElement","getElementById","closeList","openList","extractItemFromEvent","currentTarget","listItem","handleSelect","valueToEmit","HTMLElement","handleNavigationKeys","possibleNextIndex","findIndex","nextIndex","nextItem","setNextActive","setPreviousActive","handleClickOutside","composedPath","shiftKey","Installments","amount","installmentAmount","setInstallmentAmount","preselectedValue","radioBtnValue","setRadioBtnValue","hasRadioButtonUI","plans","onSelectInstallment","selectedInstallments","onRadioSelect","selectedBtn","installmentItemsMapper","translationObj","divider","count","times","partialValue","currency","plan","isValidHttpUrl","string","allowHttp","url","URL","protocol","formatLocale","localeParam","languageCode","fullLocale","toUpperCase","join","replaceTranslationValues","interpolateElement","renderFunctions","matches","floor","term","index","indexInFunctionArray","DisclaimerMessage","urls","LabelOnlyDisclaimerMessage","messageIsStr","validUrls","href","rel","StoredCardFieldsWrapper","sfpState","hasInstallments","handleInstallments","showAmountsInInstallments","disclaimerMessage","linkText","link","BrandIcon","imageName","imageUrl","hasLoaded","setHasLoaded","DualBrandingIcon","dataValue","notSelected","CardNumber","dualBrandingElements","dualBrandingChangeHandler","dualBrandingSelected","ExpirationDate","AvailableBrands","activeBrand","CardFields","brandsIcons","allowedBrands","encryptedCardNumber","encryptedExpiryMonth","encryptedExpiryYear","encryptedExpiryDate","InputTelephone","KCPAuthentication","taxNumberLabel","onFieldFocusAnalytics","onFieldBlurAnalytics","minLength","encryptedPasswordState","SocialSecurityNumberBrazil","autocorrect","spellcheck","Checkbox","StoreDetails","storeDetails","setValue","FullName","firstName","lastName","br","ReadOnlyAddress","street","houseNumberOrName","city","postalCode","stateOrProvince","createFormatByDigits","digits","specialCharsRegEx","formattingFn","trimStart","trimValWithOneSpace","addressFormatters","countrySpecificFormatters","specificRule","AT","BE","BG","nuVal","CH","CY","CZ","DE","DK","EE","ES","FI","FR","GR","HR","HU","IE","IS","IT","LI","LT","LU","LV","MC","MT","MY","NL","NZ","NO","PL","PT","RO","SI","SE","SG","SK","JP","createPatternByDigits","validatePostalCode","validatorRules","postalCodePatterns","GE","getPartialAddressValidationRules","validationRules","getAddressValidationRules","addressValidationRules","selectedCountry","FALLBACK_CONTEXT","GENERIC_OPTIONS","DEFAULT_HTTP_TIMEOUT","http","AbortSignal","headers","errorLevel","method","timeout","request","cache","credentials","Accept","redirect","referrerPolicy","signal","body","fetch","response","json","ok","isAdyenApiErrorResponse","handleFetchError","level","httpGet","httpPost","getDataset","StateField","onDropdownChange","setStates","useLayoutEffect","newStates","formatCountries","countries","allowedCountries","applyMapper","CountryField","setCountries","setReadOnly","newCountries","FieldContainer","isOptional","labelKey","optionalLabel","getErrorMessage","debounce","ms","timeoutId","AddressSearch","onAddressLookup","onAddressSelected","onManualAddress","externalErrorMessage","hideManualButton","addressSearchDebounceMs","formattedData","setFormattedData","originalData","setOriginalData","setErrorMessage","handlePromiseReject","reason","onTextInput","inputValue","searchArray","debounceInputHandler","fullData","Address","requiredFields","visibility","iOSFocusedField","addressRef","requiredFieldsSchema","hasSelectedAddress","setHasSelectedAddress","useManualAddress","setUseManualAddress","searchErrorMessage","setSearchErrorMessage","showAddressSearch","ignoreCountryChange","setIgnoreCountryChange","showAddressFields","setSearchData","selectedAddress","newStateData","propKey","providedValue","enabledFields","newData","stateFieldIsRequired","countryHasStatesDataset","addressShouldHaveState","processedData","isRequired","newValue","getComponent","addressSchema","CardHolderName","autocomplete","CardFieldsWrapper","formErrors","formValid","showKCP","showBrazilianSSN","handleOnStoreDetails","handleAddress","setAddressRef","partialAddressSchema","billingAddressValidationRules","showStoreDetailsCheckbox","cardHolderField","encryptedPassword","setFocusOnNonSF","nameVal","getArrayDifferences","currentArray","previousArray","comparisonKey","difference","compKey","id1","id2","FormInstruction","SRPanelContext","srPanel","setSRMessagesFromObjects","setSRMessagesFromStrings","clearSRPanel","shouldMoveFocusSR","useSRPanelContext","usePrevious","useSRPanelForCardInputErrors","retrieveLayout","setSRMessages","sortedErrorList","setSortedErrorList","previousSortedErrors","mergedErrors","extractedAddressErrors","errorsForPanel","srPanelResp","setFocusOnFirstField","latestErrorMsg","latestSRError","ERROR_MSG_UNSUPPORTED_CARD_ENTERED","ERROR_MSG_CARD_TOO_OLD","ERROR_MSG_CARD_TOO_FAR_IN_FUTURE","ERROR_MSG_CARD_EXPIRES_TOO_SOON","CardInput","billingAddressRef","cardInputRef","isAutoJumping","setStatus","setFocusedElement","setIsSfpValid","setExpiryDatePolicy","setCvcPolicy","storedPaymentMethodId","showBillingAddress","none","partialAddressCountry","storePaymentMethod","setStorePaymentMethod","setBillingAddress","setShowSocialSecurityNumber","setSocialSecurityNumber","installments","setInstallments","setIOSFocusedField","internallyDetectedBrand","setInternallyDetectedBrand","setFormData","setFormValid","setFormErrors","fundingSource","isKorea","who","getFocusHandler","countrySpecificSchemas","hasRequiredHolderName","countrySpecificSchemasFlat","countryBasedAddressLayout","getLayout","handleTouchstartIOS","elementType","address","getAddressHandler","doPanAutoJump","panIndex","elem","subsequentFields","getAutoJumpHandler","CIExtensions","newSchema","addressHasErrors","newErrors","errorItem","aObj","onValidationErrorAnalytics","holderNameValid","sfpValid","addressValid","koreanAuthentication","socialSecurityNumberValid","sfStateErrorsObj","FieldToRender","extractPropsForSFP","sfState","eventDetails","acHolderName","extractPropsForCardFields","showPayButton","payButton","variant","collectBrowserInfo","colorDepth","javaEnabled","screenHeight","screenWidth","acceptHeader","language","timeZoneOffset","getTimezoneOffset","currentRequestId","doBinLookup","requestId","mappedResponse","paymentMethodVariants","paymentMethodVariant","supported","onBinLookup","supportedBrandsRaw","SrciError","source","scheme","schemeError","errorFromCardSchemeSdk","Script","dataAttributes","isScriptLoadCalled","script","load","errorEvent","remove","scriptContainer","assign","dataset","AbstractSrcInitiator","loadSdkScript","isSdkIsAvailableOnWindow","scriptElement","sdkUrl","assignSdkReference","removeSdkScript","checkout","params","schemeSdk","schemeName","unbindAppInstance","isRecognized","initiateIdentityValidation","getSrcProfile","idTokens","customSdkConfiguration","IdentityTypeMap","email","telephoneNumber","isFulfilled","isRejected","sdkMap","vAdapters","VisaSRCI","srciTransactionId","sdkProps","dpaLocale","dpaPresentationName","dpaTransactionOptions","payloadTypeIndicator","customInputData","checkoutOrchestrator","dpaData","getVisaSetttings","err","identityLookup","identityValue","consumerIdentity","completeIdentityValidation","otp","environment","customSdkConfig","SRCSDK_MASTERCARD","paymentOptions","dynamicDataType","consumerNameRequested","confirmPayment","getMastercardSettings","identityType","validationData","SrcSdkLoader","schemes","sdks","customConfig","SchemeSdkClass","getSchemeSdk","loadScriptPromises","sdk","allSettled","loadScriptResponses","sdksLoaded","SchemeNames","ShopperCard","descriptorName","isDcfPopupEmbedded","confirmCardIsExpired","panExpirationYear","panExpirationMonth","currentMonth","currentYear","getMonth","getFullYear","maskedCard","srcCorrelationId","dateOfCardLastUsed","dateOfCardCreated","panLastFour","srcDigitalCardId","artUri","tokenId","isExpired","digitalCardData","CTP_IFRAME_NAME","createShopperMaskedCardsData","memo","srcProfile","profiles","profile","maskedCards","sortCardByLastTimeUsed","card1","card2","getTime","sortCardByLastTimeCreated","splitAvailableAndExpiredCards","expiredCards","availableCards","splitUnusedAndUsedCards","usedCards","unusedCards","isSrciError","TimeoutError","setCorrelationId","correlationId","isTimeoutTriggeredBySchemeSdk","executeWithTimeout","asyncFn","timer","race","seconds","CtpState","ClickToPayService","shopperAccountFound","sdkLoader","updateStoreCookiesConsent","shouldStore","storeCookies","initialize","initiateSdks","recognized","verifyIfShopperIsRecognized","getShopperProfile","shopperIdentity","isEnrolled","verifyIfShopperIsEnrolled","handleTimeout","subscribeOnStateChange","stateSubscriber","startIdentityValidation","validationSchemeSdk","maskedValidationChannel","identityValidationData","maskedShopperContact","selectedNetwork","finishIdentityValidation","otpCode","validationToken","idToken","checkoutSdk","checkoutResponse","windowRef","frames","complianceSettings","complianceResources","complianceType","uri","dcfActionCode","srciCheckoutResponse","srcScheme","srcTokenReference","srcCheckoutPayload","createCheckoutPayloadBasedOnScheme","logout","logoutPromises","all","shopperCards","shopperEmail","lookupPromises","consumerPresent","setSdkForPerformingShopperIdentityValidation","_this_stateSubscriber","_this_onTimeout","timeoutError","VISA_SDK","buildClientProfile","schemesConfig","srciDpaId","onTimeout","srcProfilesPromises","srcProfilesResponses","profilesWithScheme","promiseResult","srcProfiles","createShopperCardsList","promises","initPromises","cfg","createClickToPayService","clickToPayConfiguration","createSchemesInitConfiguration","createShopperIdentityObject","schemeNames","srcSdkLoader","merchantDisplayName","visaSrciDpaId","visaSrcInitiatorId","mcDpaId","mcSrcClientId","srcInitiatorId","ClickToPayContext","onSubmit","onSetStatus","onReady","isStandaloneComponent","isCtpPrimaryPaymentMethod","isStoringCookies","setIsCtpPrimaryPaymentMethod","logoutShopper","ctpState","otpMaskedContact","otpNetwork","ClickToPayProvider","clickToPayService","setClickToPayRef","ctpService","setCtpState","NotAvailable","clickToPayRef","isOnReadyInvoked","otpValue","useClickToPayContext","Button","completed","buttonIcon","modifiers","buttonClasses","buttonStates","loading","buttonText","delay","_this_props_onKeyDown","otpValidationRules","CtPResendOtpLink","onResendCode","counter","setCounter","showConfirmation","setShowConfirmation","handleResendCodeClick","classnames","CtPOneTimePasswordInput","disableOtpAutoFocus","resendOtpError","setResendOtpError","otpInputHandlersRef","validateInput","inputRef","isOtpFielDirty","setIsOtpFieldDirty","onSetInputHandlers","handleOnResendOtp","handleOnResendOtpError","handleOnKeyPress","onPressEnter","isValidatingOtp","CtPBrand","ctpImageUrl","pipeImageUrl","useModal","modalElement","isOpen","isDismissible","focusFirst","focusAfterClose","onClose","rootElement","shouldTrap","firstFocusableEl","setFirstFocusableEl","focusableEl","lastFocusableEl","trapFocus","keyCode","useTrapFocus","closeModal","closeOnPressingEscape","Modal","labelledBy","describedBy","modalContainerRef","aria-labelledby","aria-modal","onCloseModal","idGenerator","CtPInfoModal","focusFirstElement","h1","CtPInfo","isInfoModalOpen","setIsInfoModalOpen","buttonRef","handleOnClose","ariaHidden","CtPLogoutLink","Ready","OneTimePassword","CtPSection","onEnterKeyPress","Title","endAdornment","Text","CtPSaveCookiesCheckbox","setIsChecked","isTextTruncated","setIsTextTruncated","matchMedia","handleOnChange","newChecked","CtPOneTimePassword","onDisplayCardComponent","setOtp","setIsValid","setIsValidatingOtp","setErrorCode","otpInputHandlers","setOtpInputHandlers","isAccountLocked","setIsAccountLocked","onSetOtpInputHandlers","onChangeOtpInput","onSubmitPassword","handleButtonKeyDown","subtitleParts","hideResendOtpButton","CtPSingleCard","amountLabel","currencyDisplay","payAmountLabel","SecondaryButtonLabel","PayButton","secondaryAmount","isZeroAuth","defaultLabel","secondaryLabel","convertedSecondaryAmount","secondaryAmountLabel","isMobile","CtPCardsList","cardSelected","onChangeCard","Iframe","iframeOnLoad","attachEvent","detachEvent","minWidth","minHeight","allow","validClassNameModifiers","frameBorder","referrerpolicy","min-width","min-height","getErrorLabel","errorLabel","getPayButtonLabel","checkoutCard","maskedData","CtPCards","setCheckoutCard","isEveryCardExpired","isShopperCheckingOutWithCtp","setIsShopperCheckingOutWithCtp","doCheckout","payload","handleOnChangeCard","displayNetworkDcf","displayCardCheckoutView","handlePayButtonKeyDown","CtPLoader","loginValidationRules","shopperLogin","InputEmail","autoCapitalize","CtPLoginInput","loginInputHandlersRef","isLoginInputDirty","setIsLoginInputDirty","CtPLogin","setShopperLogin","isLoggingIn","setIsLoggingIn","loginInputHandlers","setLoginInputHandlers","onSetLoginInputHandlers","handleOnLoginChange","handleOnLoginButtonClick","ClickToPayComponent","Login","ShopperIdentified","sendOneTimePassword","handleEnterKeyPress","stopPropagation","Loading","ContentSeparator","ClickToPayHolder","isCardInputVisible","setIsCardInputVisible","areFieldsNotSet","handleOnShowCardButtonClick","ClickToPayWrapper","SRPanelProvider","moveFocus","strs","TxVariants","ANALYTICS_PATH","ANALYTICS_EVENT","ANALYTICS_ERROR_TYPE","ANALYTICS_ERROR_CODE","ANALYTICS_ACTION_STR","ANALYTICS_SUBMIT_STR","ANALYTICS_SELECTED_STR","ANALYTICS_RENDERED_STR","ANALYTICS_DISPLAYED_STR","ANALYTICS_INPUT_STR","ANALYTICS_DOWNLOAD_STR","ANALYTICS_VALIDATION_ERROR_STR","ANALYTICS_FOCUS_STR","ANALYTICS_UNFOCUS_STR","ANALYTICS_CONFIGURED_STR","ANALYTICS_INSTANT_PAYMENT_BUTTON","ANALYTICS_LIST","Analytics3DS2Errors","Analytics3DS2Events","errorCodeMapping","ANALYTICS_EXPRESS_PAGES_ARRAY","ALLOWED_ANALYTICS_DATA","ANALYTIC_LEVEL","BaseElement","buildElementProps","componentProps","formatProps","formatData","setUpAnalytics","setUpAnalyticsObj","submitAnalytics","analyticsObj","newState","clientData","checkoutAttemptId","order","componentData","paymentMethod","riskData","orderData","pspReference","clientStateDataIndicator","activate","mount","domNode","setupAnalytics","_node","_this_constructor_analyticsType","_component","modules","analytics","containerWidth","offsetWidth","component","isDropin","flavor","update","core","_id","isCoreInstance","createFromAction","assertIsCoreInstance","ALLOWED_PROPERTIES","sanitizeResponse","removedProperties","sanitizedObject","cleanupFinalResult","paymentResponse","donationToken","verifyPaymentDidNotFail","resultCode","assertIsDropin","activePaymentMethod","closeActivePaymentMethod","CancelError","UIElement","finalProps","getCorePropsForComponent","isStoredPaymentMethod","paymentMethodsResponse","openFirstPaymentMethod","openFirstStoredPaymentMethod","getRegulatoryDefaults","storeElementRefOnCore","storeElementReference","isAvailable","componentRef","setElementStatus","_this_elementRef","elementRef","_this_componentRef","_this_props_onChange","_this_props_session","sessionId","session","setUp","uiElementProps","sendAnalytics","submit","makePaymentsCall","handleResponse","handleFailedResult","submitUsingAdvancedFlow","beforeSubmitEvent","beforeSubmit","submitUsingSessionsFlow","handleError","submitPayment","onComplete","handleAdditionalDetails","makeAdditionalDetailsCall","onAdditionalDetails","submitAdditionalDetailsUsingSessionsFlow","submitDetails","handleAction","paymentAction","onActionHandled","actionHandledObj","_this_props_onActionHandled","originalAction","remainingAmount","handleOrder","handleSuccessResult","onEnterKeyPressed","updateParent","paymentMethodType","_this_props_icon","displayName","_this_core_paymentMethodsResponse_paymentMethods","_this_core_paymentMethodsResponse","paymentMethodFromResponse","paymentMethods","pm","accessibleName","additionalInfo","handleAdvanceFlowPaymentMethodsUpdate","onPaymentMethodsRequest","_this_props_onOrderUpdated","onOrderUpdated","_this_props_onPaymentFailed","displayFinalAnimation","onPaymentFailed","_this_props_onPaymentCompleted","onPaymentCompleted","register","txVariants","CardElement","_this_clickToPayRef","_this_core_options_session","_this_core_options","_this_core_options_session1","_this_core_options1","storedCardID","isEcommerceStoredCard","supportedShopperInteractions","cardBrand","_this_props_holderName","storePaymentMethodPayload","browserInfo","_this_props_onBinLookup","_this_props_storedPaymentMethodId","_this_props_amount","renderCardInput","isCardPrimaryInput","handleClickToPaySubmit","_this_clickToPayService","_this_props_onBrand","_this_props_onConfigSuccess","_this_props_onFocus","_this_props_onFocus1","_this_props1","_this_props_onBlur","_this_props_onBlur1","validationErrorCode","validationErrorMessage","triggerBinLookUp","isStoredCard","_disableClickToPay","showFormInstruction","BancontactElement","CustomCardInput","SFExtensions","mappedErrors","_this_props_onValidationError","validationErrors","onValidationError","CustomCard","customCard","sfBrand","_this_props_brandsConfiguration_item_brand","_this_props_brandsConfiguration_item_brand_icon","_this_props_onEnterKeyPressed","analyticsType","ThreeDS2Form","formEl","onFormSubmit","inputName","form","display","getProcessMessageHandler","domain","expectedType","parseErrorObj","originalEvent","comment","extraInfo","eventDataRaw","debug","THREEDS2_FINGERPRINT","THREEDS2_FINGERPRINT_ERROR","THREEDS2_FINGERPRINT_SUBMIT","THREEDS2_CHALLENGE","THREEDS2_CHALLENGE_ERROR","THREEDS2_ERROR","THREEDS2_FULL","THREEDS2_NUM","MISSING_TOKEN_IN_ACTION_MSG","DEFAULT_CHALLENGE_WINDOW_SIZE","TIMEOUT","CHALLENGE_TIMEOUT_REJECT_OBJECT","transStatus","FAILED_METHOD_STATUS_RESOLVE_OBJECT_TIMEOUT","threeDSCompInd","CHALLENGE_WINDOW_SIZES","getOrigin","exec","separator","host","port","base64","decode","pData","isBase64","success","decodeURIComponent","atob","charCodeAt","encode","pDataStr","isErrorObject","decodeAndParseToken","token","decodedToken","encodeObject","validateChallengeWindowSize","sizeStr","sizeString","createFingerprintResolveData","dataKey","resultObj","paymentData","createOldFingerprintResolveData","details","createChallengeResolveData","authorisationToken","createOldChallengeResolveData","encodeBase64URL","dataStr","base64url","fingerprintFlowPropsDropin","fingerprintFlowProps","promiseTimeout","promise","timeOutObject","promiseTimer","cancel","iframeName","DoChallenge3DS2","get3DS2ChallengePromise","processMessageHandler","postMessageDomain","challengePromise","resolveObject","onCompleteChallenge","rejectObject","onErrorChallenge","acsURL","cReqData","iframeSizeArr","base64URLencodedData","challengeWindowSize","iframeCallback","componentType","actionDescription","jsonStr","PrepareChallenge3DS2","challengeData","process","_this_props__environmentUrls_api","_this_props__environmentUrls","shouldAllowHttpDomains","_environmentUrls","api","setError","errorInfo","TOKEN_IS_MISSING_ACSURL","errorCodeObject","onSubmitAnalytics","acsTransID","messageVersion","threeDSServerTransID","TOKEN_IS_MISSING_OTHER_PROPS","ACTION_IS_MISSING_TOKEN","TOKEN_DECODE_OR_PARSING_FAILED","setStatusComplete","isMDFlow","analyticsObject","finalResObject","errorTypeAndCode","THREEDS2_TIMEOUT","NO_TRANSSTATUS","subtype","CHALLENGE_COMPLETED","errorInfoObj","isFatal","challenge","errorDescription","CHALLENGE_RESOLVED_WITHOUT_RESULT_PROP","timeoutObject","msg","CHALLENGE_DATA_SENT","decodedChallengeToken","threeDSNotificationURL","notificationURLOrigin","messageType","prepareChallengeData","ThreeDS2Challenge","dataTypeForError","ACTION_IS_MISSING_PAYMENT_DATA","PrepareChallenge","rtnObj","CHALLENGE_IFRAME_LOADED","threeDS2Challenge","DoFingerprint3DS2","get3DS2MethodPromise","fingerPrintPromise","onCompleteFingerprint","onErrorFingerprint","threeDSMethodURL","showSpinner","threeDSMethodNotificationURL","PrepareFingerprint3DS2","fingerPrintData","TOKEN_IS_MISSING_THREEDSMETHODURL","hasValid3DSMethodNotificationURL","hasValidPostMessageDomain","hasTransServerID","FINGERPRINT_COMPLETED","fingerprint","FINGERPRINT_DATA_SENT","notificationURL","decodedFingerPrintToken","threeDSMethodUrl","receivedNotificationURL","prepareFingerPrintData","API_VERSION","API_ERROR_CODE","callSubmit3DS2Fingerprint","resData","analyticsErrorObject","NO_DETAILS_FOR_FRICTIONLESS_OR_REFUSED","NO_ACTION_FOR_CHALLENGE","_this_props_elementRef","actionHandler","NO_COMPONENT_FOR_ACTION","ThreeDS2DeviceFingerprint","PrepareFingerprint","FINGERPRINT_IFRAME_LOADED","threeDS2Fingerprint","AchSFInput","dataInfo","encryptedIdStr","data-info","AchSecuredFields","encryptedBankAccountNumber","encryptedBankLocationId","defaultStyles","validateHolderName","AchInput","holderNameIsValid","bankAccountType","handleHolderName","handleBankAccountType","achRef","tempHolderName","isFocused","RedirectButton","newStatus","AchElement","_this_state_data","recurringPayment","ownerName","bankAccountNumber","ConsentCheckbox","consentCheckbox","ach","digitsOnlyFormatter","checkDateInputSupport","formatDate","date","day","month","substr","unformatDate","phoneNumberRule","validationRule","isPhoneValid","emailRule","isEmailValid","dateOfBirthRule","rawValue","ageDiff","isDateOfBirthValid","bankAccountNumberRegEx","bankLocationIdRegEx","bacsValidationRules","bankLocationId","amountConsentCheckbox","accountConsentCheckbox","bacsFormatters","errorKey","shouldBuildErrorMessage","ENTER_STATE","CONFIRM_STATE","BacsInput","copyToClipboard","copyInput","text","textArea","createInput","range","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","execCommand","Voucher","voucherDetails","issuerImageUrl","introduction","instructionsUrl","surcharge","reference","barcode","downloadUrl","copyBtn","downloadButtonText","extractCommonPropsForVoucher","introKey","totalAmount","BacsResult","BacsElement","_this_state_data1","_this_state_data2","_this_state_data3","directdebit_GB","AD","structure","example","AE","AL","AZ","BA","BH","CR","DO","FO","GI","GL","GT","IL","KW","KZ","LB","LC","MD","ME","MK","MR","MU","PK","PS","RS","SA","SM","ST","TL","TN","TR","VG","XK","AO","BF","BI","BJ","CI","CM","CV","DZ","IR","JO","MG","ML","MZ","QA","SN","UA","formatIban","iban","electronicFormat","regex","block","repeats","parseStructure","getCountryCode","electronicFormatIban","ValidationStatus","isValidIBAN","preparedIban","ibanInput","Z","iso13616Prepare","isValidISO","remainder","iso7064Mod97_10","ibanRegex","checkIbanStructure","checkIbanStatus","countrySpecification","getIbanCountrySpecification","isValidHolder","ibanHolderNameErrorObj","ibanErrorObj","IbanInput","validationStatus","holderStatus","holderErr","holder","handleHolderInput","handleIbanBlur","ibanNumber","handleIbanInput","cb","previousIban","newCursorPosition","editLength","isAddition","isMaskChar","ibanValue","initialCursor","getNextCursorPosition","currentIban","SepaElement","sepadirectdebit","ReadOnlyCompanyDetails","registrationNumber","companyDetailsValidationRules","ERROR_MSG_INCOMPLETE_FIELD","getFormattedData","company","COMPANY_DETAILS_SCHEMA","CompanyDetails","namePrefix","companyDetailsRef","generateFieldName","eventHandler","pop","inputEventHandler","ReadOnlyPersonalDetails","personalDetailsValidationRules","gender","dateOfBirth","shopperName","InputDate","PERSONAL_DETAILS_SCHEMA","PersonalDetails","personalDetailsRef","isDateInputSupported","fieldsetsSchema","getInitialActiveFieldsets","isVisible","isDeliveryAddress","billingAddressIsHidden","fieldsetData","isPrefilled","refKey","splitKey","hasSplitKey","addressKey","mapFieldKeyAddress","setFocusOnField","pdHolder","actualFieldToFocus","consentCBErrorObj","OpenInvoice","openInvoiceRef","initialActiveFieldsets","activeFieldsets","setActiveFieldsets","fieldsetsRefs","hasConsentCheckbox","consentCheckboxLabel","isStandAloneButton","showSeparateDeliveryAddressCheckbox","deliveryAddress","billingAddressSpecifications","deliveryAddressSpecifications","deliveryAddressSpecification","DELIVERY_ADDRESS_PREFIX","BILLING_ADDRESS_PREFIX","companyDetails","extractedCompanyDetailsErrors","personalDetails","extractedPersonalDetailsErrors","bankAccount","extractedBankAccountErrors","extractedBillingAddressErrors","extractedDeliveryAddressErrors","remainingErrors","enhancedBillingAddressErrors","enhancedDeliveryAddressErrors","companyDetailsLayout","personalDetailsReqFields","personalDetailsRequiredFields","personalDetailLayout","bankAccountLayout","billingAddressLayoutEnhanced","deliveryAddressLayoutEnhanced","fullLayout","countrySpecificLabels_billing","countrySpecificLabels_delivery","useSRPanelForOpenInvoiceErrors","fieldsetsAreValid","consentCheckboxValid","getActiveFieldsData","handleFieldset","prevData","prevValid","prevErrors","billingAddressSpecification","prevActiveFields","deliveryAddressRequiredFields","OpenInvoiceContainer","ALLOWED_COUNTRIES","Affirm","ConsentCheckboxLabel","translationString","textBeforeLink","textAfterLink","affirm","rivertyConsentUrlMap","be","en","fr","nl","getConsentUrl","urlMap","consentLink","AfterPay","afterpay_default","afterpay","AfterPayB2B","afterpay_b2b","ATOME_ADDRESS_SPECIFICATION","ATOME_SUPPORTED_COUNTRIES","BILLING_ADDRESS_SPECIFICATION","Atome","atome","FacilyPay3x","facilypay_3x","FacilyPay4x","facilypay_4x","FacilyPay6x","facilypay_6x","FacilyPay10x","facilypay_10x","FacilyPay12x","facilypay_12x","RatePay","ratepay","RatePayDirectDebit","ratepay_directdebit","allowedBillingCountries","allowedDeliveryCountries","termsAndConditionsUrlMap","at","de","ch","privacyPolicyUrlMap","Riverty","tocURL","privacyURL","riverty","AMAZONPAY_SIGN_STRING_ENDPOINT","AMAZONPAY_UPDATE_CHECKOUT_SESSION_ENDPOINT","AMAZONPAY_URL_EU","AMAZONPAY_URL_US","FALLBACK_LOCALE_EU","FALLBACK_LOCALE_US","LEDGER_CURRENCIES_PER_REGION","EU","UK","SUPPORTED_LOCALES_EU","SUPPORTED_LOCALES_US","CURRENCY_DECIMALS","IDR","JPY","KRW","VND","BYR","CVE","DJF","GHC","GNF","KMF","PYG","RWF","UGX","VUV","XAF","XOF","XPF","MRO","BHD","IQD","JOD","KWD","OMR","LYD","TND","currencyMinorUnitsConfig","RSD","minimumFractionDigits","AFN","ALL","IRR","LAK","LBP","MMK","SOS","SYP","YER","getDecimalAmount","currencyCode","getDivider","getCheckoutLocale","region","supportedLocales","getSupportedLocales","checkoutLocale","getFallbackLocale","getDesignCode","design","getPayloadJSON","addressDetails","cancelUrl","checkoutMode","deliverySpecifications","returnUrl","merchantMetadata","chargePermissionType","recurringMetadata","storeId","isPayNow","getChargeAmount","webCheckoutDetails","checkoutResultReturnUrl","checkoutReviewReturnUrl","checkoutCancelUrl","paymentDetails","chargeAmount","paymentIntent","presentmentCurrency","totalOrderAmount","getCheckoutDetails","AmazonPayButton","amazonRef","signature","setSignature","payloadJSON","settings","buttonColor","checkoutLanguage","ledgerCurrency","merchantId","productType","placement","sandbox","getAmazonPaySettings","handleOnClick","initCheckout","checkoutSessionConfig","publicKeyId","Pay","createCheckoutSessionConfig","stringToSign","getAmazonSignature","renderButton","renderAmazonPayButton","ChangePaymentDetailsButton","amazonCheckoutSessionId","changeActionOptions","changeAction","bindChangeAction","OrderButton","createOrder","updateAmazonCheckoutSession","checkoutSessionId","SignOutButton","onSignOut","signout","AmazonPayComponent","amazonPayButtonRef","orderButtonRef","getSubmitFunction","amazon","showSignOutButton","showOrderButton","showChangePaymentDetailsButton","isExpress","AmazonPayElement","getShopperDetails","getDeliveryAddress","handleDeclineFlow","getDeclineFlowUrl","declineFlowUrl","amazonComponentSubmit","amazonpay","ApplePayButton","buttonType","ApplePayService","begin","onvalidatemerchant","onValidateMerchant","validationURL","completeMerchantValidation","abort","onpaymentauthorized","onPaymentAuthorized","completePayment","onpaymentmethodselected","onPaymentMethodSelected","paymentMethodUpdate","completePaymentMethodSelection","onshippingcontactselected","onShippingContactSelected","shippingContactUpdate","completeShippingContactSelection","onshippingmethodselected","onShippingMethodSelected","shippingMethodUpdate","completeShippingMethodSelection","oncancel","onCancel","paymentRequest","ApplePaySession","version","preparePaymentRequest","companyName","formattedAmount","formatAmount","total","totalPriceLabel","totalPriceStatus","lineItems","shippingMethods","shippingType","recurringPaymentRequest","merchantCapabilities","supportedCountries","supportedNetworks","requiredShippingContactFields","requiredBillingContactFields","billingContact","shippingContact","applicationData","formatApplePayContactToAdyenAddressFormat","paymentContact","locality","addressLines","administrativeArea","givenName","familyName","ApplePayElement","latestVersion","versions","supportsVersion","resolveSupportedVersion","brandMapping","elodebit","elo","interac","electron","girocard","cartebancaire","eftpos_australia","accumulator","mapBrands","merchantName","applePayToken","startSession","validateMerchant","payment","authorizedEvent","handleAuthorization","collectOrderTrackingDetailsIfNeeded","orderDetails","STATUS_SUCCESS","applePayError","STATUS_FAILURE","responseWithError","onAuthorized","onOrderTrackingRequest","hostname","domainName","initiative","merchantIdentifier","decodedData","canMakePayments","isInstantPayment","applepay","CashAppPayEvents","CashAppComponent","cashAppService","onChangeStoreDetails","onAuthorize","cashAppRef","subscriptions","initializeCashAppSdk","subscribeToEvent","CustomerDismissed","CustomerRequestDeclined","restart","CustomerRequestApproved","customerProfile","grants","cashAppPaymentData","customerId","cashtag","cashTag","grantId","onFile","onFileGrantId","CustomerRequestFailed","unsubscribeFn","aria-live","aria-busy","CashAppService","hasOneTimePayment","hasOnFilePayment","store","clientId","cashApp","pay","useCashAppButtonUi","manage","shape","startAuthorization","eventType","createCustomerRequest","referenceId","scopeId","redirectURL","customerRequest","actions","CashAppSdkLoader","CashApp","CashAppPay","shopperWantsToStore","storePaymentMethodSetByMerchant","includeStorePaymentMethod","_this_resources","handleOnChangeStoreDetails","handleAuthorize","_this_props_configuration","_this_props_configuration1","onClickPromiseRejected","storePayment","cashapp","ClickToPayElement","Idle","ctpConfiguration","clicktopay","config$3","getTransactionInfo","formattedPrice","totalPrice","transactionInfo","initiatePaymentRequest","apiVersion","apiVersionMinor","merchantInfo","merchantOrigin","authJwt","allowedPaymentMethods","tokenizationSpecification","parameters","gateway","gatewayMerchantId","allowedAuthMethods","allowedCardNetworks","assuranceDetailsRequired","allowPrepaidCards","allowCreditCards","billingAddressParameters","emailRequired","shippingAddressRequired","shippingAddressParameters","shippingOptionRequired","shippingOptionParameters","callbackIntents","formatGooglePayContactToAdyenAddressFormat","address1","address2","address3","GooglePayService","getGooglePaymentsClient","google","payments","PaymentsClient","isReadyToPay","paymentsClient","client","existingPaymentMethodRequired","isReadyToPayRequest","prefetchPaymentData","paymentDataRequest","initiatePayment","loadPaymentData","paymentDataCallbacks","googlePayEnvironment","env","resolveEnvironment","GooglePayButton","googlePayWrapperRef","buttonRadius","buttonLocale","buttonSizeMode","buttonRootNode","createButton","googlePayButton","GooglePay","twoLetterLocale","getGooglePayLocale","googlePayCardNetwork","googlePayToken","googlePayError","paymentMethodPresent","googlePay","statusCode","paymentMethodData","shippingAddress","tokenizationData","cardNetwork","transactionState","fallbackMessage","intent","prefetch","onPaymentDataChanged","googlepay","paywithgoogle","SUPPORTED_COLORS_FOR_CREDIT","SUPPORTED_LOCALES","getStyle","PaypalButtons","onInit","onApprove","onShippingAddressChange","onShippingOptionsChange","isProcessingPayment","paypalRef","isTokenize","paypalButtonRef","creditButtonRef","payLaterButtonRef","venmoButtonRef","createBillingAgreement","Buttons","isEligible","PAYPAL","CREDIT","PAYLATER","VENMO","FUNDING","blockPayPalCreditButton","blockPayPalPayLaterButton","blockPayPalVenmoButton","isProcessingPaymentWithoutReviewPage","commit","getPaypalSettings","vault","enableMessages","shopperLocale","formattedLocale","supportedLocale","getSupportedLocale","isTestEnvironment","components","PaypalComponent","onScriptLoadFailure","handleOnApprove","handlePaypalLoad","handlePaypalLoadFailure","getPaypalUrl","cspNonce","nonce","paypal","ERRORS","formatPaypalOrderContactToAdyenFormat","addressPart1","addressPart2","getStreet","address_line_1","address_line_2","admin_area_1","admin_area_2","postal_code","country_code","full_name","PaypalElement","intentFromConfig","displayContinueToReviewPageButton","userAction","updatePaymentData","handleResolve","handleReject","handleSubmit","handleOnShippingAddressChange","handleOnShippingOptionsChange","updateWithAction","sdkData","paypalOrder","payer","purchase_units","shipping","boletoValidationRules","ERROR_MSG_INVALID_FIELD","boletoFormatters","SendCopyToEmail","sendCopyToEmail","setSendCopyToEmail","onToggle","BrazilPersonalDetail","BoletoInput","showingEmail","setShowingEmail","personalDetailsRequired","boletoRef","billingAddressValid","buttonModifiers","showEmailAddress","BoletoVoucherResult","expiresAt","barcodeUrl","BoletoElement","handleRef","DokuInput","dokuRef","boletobancario","boletobancario_itau","boletobancario_santander","primeiropay_boleto","DokuVoucherResult","DokuElement","doku","doku_alfamart","doku_permata_lite_atm","doku_indomaret","doku_atm_mandiri_va","doku_sinarmas_va","doku_mandiri_va","doku_cimb_va","doku_danamon_va","doku_bri_va","doku_bni_va","doku_bca_va","doku_wallet","OxxoVoucherResult","alternativeReference","merchantReference","OxxoElement","IssuerButton","aria-pressed","oxxo","IssuerButtonGroup","selectedIssuerId","handleClick","defineProperty","issuer","payButtonLabel","issuerName","IssuerList","highlightedIds","inputType","setInputType","handleInputChange","issuerObj","handleListToggle","debounceSearchAnalytics","handleSearch","highlightedItems","termsAndConditions","getIssuerImageUrl","parentFolder","IssuerListContainer","issuers","_this_state","showPaymentMethodItemImages","highlightedIssuers","showImage","getIssuerIcon","BillDeskOnlineElement","billdesk_online","BillDeskWalletElement","billdesk_wallet","DotpayElement","dotpay","EPSElement","eps","MolPayEBankingMYElement","molpay_ebanking_fpx_MY","MolPayEBankingTHElement","molpay_ebanking_TH","MolPayEbankingVNElement","molpay_ebanking_VN","OnlineBankingCZElement","onlineBanking_CZ","OnlineBankingINElement","onlinebanking_IN","OnlineBankingPL","onlineBanking_PL","disclaimerUrlsMap","regulation","obligation","OnlineBankingSKElement","onlineBanking_SK","OnlineBankingFI","PayByBank","paybybank","PayuNetCashcardElement","payu_IN_cashcard","PayuNetBankingElement","payu_IN_nb","WalletINElement","DragonpayInput","isIssuerRequired","DragonpayVoucherResult","dateTime","wallet_IN","DragonpayElement","detail","dragonpay","dragonpay_ebanking","dragonpay_otc_banking","dragonpay_otc_non_banking","dragonpay_otc_philippines","econtextValidationRules","EcontextInput","econtextRef","EcontextVoucherResult","maskedTelephoneNumber","collectionInstitutionNumber","EcontextElement","econtext","econtext_atm","econtext_online","econtext_seven_eleven","econtext_stores","detectInIframeInSameOrigin","RedirectShopper","dispatchEvent","beforeRedirect","postForm","redirectFromTopWhenInIframe","top","onRedirectError","RedirectElement","handleRedirectError","GiropayElement","giropay","MultibancoVoucherResult","entity","MultibancoElement","multibanco","TwintElement","twint","VippsElement","vipps","TrustlyElement","trustly","PayByBankUS","keepBrandsVisible","showOtherInsteafOfNumber","paybybank_AIS_DD","KLARNA_WIDGET_URL","KlarnaWidget","widgetInitializationTime","klarnaWidgetRef","initializeKlarnaWidget","Klarna","Payments","client_token","container","payment_method_category","show_form","onLoaded","authorizeKlarna","authorize","approved","authorization_token","klarnaAsyncCallback","KlarnaContainer","setWidgetInitializationTime","setAction","klarnaRef","reinitializeWidget","KlarnaPayments","useKlarnaWidget","klarna","klarna_account","klarna_paynow","klarna_b2b","zeroPad","strValue","repeat","getTimeDifference","startTime","endTime","diff","percentage","start","end","round","getProgressPercentage","minutes","CountdownA11yReporter","time","minutesLeft","secondsLeft","timeLeft","LONG_TIMEOUT","setInterval","MID_TIMEOUT","SHORT_TIMEOUT","tearDown","clearInterval","setAriaProps","ariaAttributes","setSrMessages","getSrMessages","srInterval","TRANSLATION_KEY","fns","useCountdownA11yReporter","reporter","calculateStartAndEndTime","minutesFromNow","secondsFromNow","nowTime","Countdown","onTick","onCompleted","startAndEndTime","setTime","interval","checkPaymentStatus","processCompleteResponse","processResponse","useA11yReporter","statusMessage","QRLoader","statusInterval","pollStatus","performance","checkStatus","brandLogo","brandName","countdownTime","expired","_this_props_introduction","_this_props_instructions","qrCodeImage","qrCodeData","finalState","timeToPayString","timeToPay","qrSubtitleRef","useAutoFocus","redirectIntroduction","redirectToApp","buttonLabel","onTimeUp","instructions","responseTime","previous","timePassed","newDelay","throttleTime","throttledInterval","buttonStatus","QRLoaderContainer","renderQRCode","BCMCMobileElement","bcmc_mobile","bcmc_mobile_QR","pixValidationRules","pixFormatters","PixInput","dataProps","formSchema","PixElement","pix","SwishElement","swish","WeChatPayElement","wechatpayQR","wechatpay","PromptPayElement","promptpay","TimelineWrapper","Timeline","ol","isTabletWidthOrSmaller","useIsMobile","isMobileScreenSize","setIsMobileScreenSize","handleWindowResize","PayNowIntroduction","PayNowInstructions","PayNowElement","paynow","DuitNowElement","duitnow","PayMeInstructions","PayMeIntroduction","PayMeElement","defaultDelay","defaultCountdown","BlikInput","blikCode","inputMode","Await","setCompleted","setExpired","setLoading","hasCalledActionHandled","setHasCalledActionHandled","setDelay","setPercentage","setTimePassed","hasAdjustedTime","setHasAdjustedTime","storedTimeout","setStoredTimeout","throttleInterval","shouldRedirectAutomatically","actualTimePassed","messageText","awaitText","showCountdownTimer","config$2","BlikElement","blik","portugueseRegex","defaultRegex","phoneValidationRules","phoneNumber","testRegex","phonePrefix","phoneFormatters","PhoneInput","showPrefix","showNumber","getPhoneFieldError","propsField","phoneNumberKey","MBWayInput","phoneInputRef","loadingStatus","prefixLoadingStatus","phonePrefixes","setLoadingStatus","setPhonePrefixes","mappedCountries","usePhonePrefixes","phoneLabel","phoneNumberErrorKey","config$1","MBWayElement","mbway","vpaValidationRules","virtualPaymentAddress","VpaInput","vpaInputHandlersRef","A11Y","ButtonId","VPA","QR","INTENT","AreaId","SegmentedControl","htmlProps","paymentMethodsWithoutBorder","PaymentMethodIcon","altDescription","ExpandButton","buttonId","showRadioButton","isSelected","expandContentId","aria-checked","UPIIntentAppItem","app","imgSrc","containerId","handleAppSelected","UPIIntentAppList","apps","selectedAppId","onAppSelect","onVpaInputChange","showUpiCollectInput","imgName","UPIComponent","defaultMode","onUpdateMode","setMode","vpa","setVpa","vpaInputHandlers","setVpaInputHandlers","selectedApp","setSelectedApp","segmentedControlOptions","intentOption","vpaOption","qrOption","shouldShowUpiIntent","positionOfQrOption","useUpiSegmentedControlOptions","onSetVpaInputHandlers","onChangeUpiMode","newMode","handleAppSelect","handleVpaInputChange","UPI","hasIntentApps","fallbackDefaultMode","allowedModes","upiCollectApp","upi_collect","upi_intent","paymentType","appId","_this_state_data_app","selectedMode","upi_qr","renderContent","encodeURIComponent","upi","ancvValidationRules","beneficiaryId","ANCVInput","ANCVElement","onOrderRequest","stateOrder","Alert","GiftcardResult","balance","transactionLimit","transactionAmount","remainingBalance","GiftcardNumberField","getCardErrorMessage","GiftcardPinField","Giftcard","hasEnoughBalance","fieldsLayoutComponent","pinRequired","setBalance","expiryDateRequired","GiftcardElement","_this_props_brandsConfiguration_this_props_brand","balanceCheck","onBalanceCheck","GiftcardComponent","handleBalanceCheck","checkBalance","handleOnRequiringConfirmation","onRequiringConfirmation","giftcard","MealVoucherExpiryField","MealVoucherFields","pinFieldProps","MealVoucherFRElement","mealVoucher_FR","mealVoucher_FR_natixis","mealVoucher_FR_sodexo","mealVoucher_FR_groupeup","AddressElement","BankTransferResult","beneficiary","bic","BankTransferInput","BankTransferElement","CampaignInfo","logoUrl","nonprofitName","causeName","bannerUrl","backgroundImage","CampaignContent","nonprofitDescription","nonprofitUrl","bankTransfer_IBAN","ButtonGroup","getRoundupAmount","maxRoundupAmount","commercialTxAmount","getAmountLabel","getRoundupAmountLabel","FixedAmounts","selectedAmount","onAmountSelected","onDonateButtonClicked","Roundup","donationAmount","originalPaymentAmount","DonationComponent","donation","onDonate","showCancelButton","termsAndConditionsUrl","isRoundupDonation","setAmount","handleDonate","DonationElement","donate","OrderPaymentMethods","orderStatus","onOrderCancel","brandLogoConfiguration","orderPaymentMethod","strong","InstantPaymentMethods","useBrandLogoConfiguration","setBrandLogoConfiguration","PaymentMethodDetails","paymentMethodComponent","isLoaded","DisableOneClickConfirmation","open","onDisable","PaymentMethodBrands","excludedUIBrands","isPaymentMethodSelected","visibleBrands","leftBrandsAmount","prepareVisibleBrands","PaymentMethodName","PaymentMethodItem","isDisablingPaymentMethod","standalone","isCard","paymentMethodClassnames","showDisableStoredPaymentMethodConfirmation","showRemovePaymentMethodButton","oneClick","disableConfirmationId","showBrands","handleOnListItemClick","toggleDisableConfirmation","onDisableStoredPaymentMethod","PaymentMethodsContainer","cachedPaymentMethods","paymentMethodListClassnames","paymentMethodsCollection","isNextOneSelected","PaymentMethodList","instantPaymentMethods","storedPaymentMethods","openPaymentMethod","hasInstantPaymentMethods","hasStoredPaymentMethods","pmListLabel","firstStoredPayment","firstNonStoredPayment","Status","DropinComponent","prepareDropinData","analyticConfigData","showStoredPaymentMethods","prevProps","elements","instantPaymentElements","storedPaymentElements","isRedirecting","hasPaymentMethodsToBeDisplayed","isDisabling","handleOnSelectPaymentMethod","handleDisableStoredPaymentMethod","storedElementsPromises","elementsPromises","instantPaymentsPromises","onCreateElements","orderStatusPromise","getOrderStatus","_this_props_modules","configData","getOnOrderCancel","setActivePaymentMethod","_this_props_onSelect","storedPaymentMethod","sanitizeOrder","cancelOrder","UNSUPPORTED_PAYMENT_METHODS","filterUnsupportedPaymentMethod","filterPresent","ComponentsNameMap","personal_details","storedCard","ancv","createElements","paymentMethodsConfiguration","commonProps","UPI_SUB_TX_VARIANTS","optionallyFilterUpiSubTxVariants","paymentMethodConfigurationProps","pmType","getComponentConfiguration","PaymentMethodElement","elementProps","elementIsAvailablePromises","promiseResults","filterAvailable","createStoredElements","createInstantPaymentElements","SUPPORTED_INSTANT_PAYMENTS","DropinElement","instantPaymentTypes","Set","dropinRef","_this_dropinRef","_this_dropinRef1","disableFinalAnimation","_this_activePaymentMethod","_this_elementRef_activePaymentMethod","statusType","componentFromAction","_this_activePaymentMethod1","pmComponent","handleCreate","showPaymentMethods","splitPaymentMethods","getCommonProps","paymentMethodComponents","PaymentMethod","dropin","PersonalDetailsElement","Language","translations","keyPlural","keyForCount","getTranslation","stringAmount","decimalAmount","modifiedOptions","localeOptions","toLocaleString","getLocalisedAmount","dateOptions","toLocaleDateString","timeAndDateFormatter","customTranslations","timeFormatOptions","hour","minute","timeAndDateFormatOptions","Intl","DateTimeFormat","DEVICE_FINGERPRINT","FAILED_DFP_RESOLVE_OBJECT_TIMEOUT","ERROR_MESSAGES","wrongOrigin","wrongDataType","missingProperty","unknownError","GetDeviceFingerprint","getDfpPromise","deviceFingerPrintPromise","dfpURL","DeviceFingerprint","fingerprintResult","fingerprintError","RiskElement","risk","enabled","cleanUp","nodeRiskContainer","persistentCookie","riskElements","filterAllowedPaymentMethods","filterRemovedPaymentMethods","filterEcomStoredPaymentMethods","supportedStoredPaymentMethods","filterSupportedStoredPaymentMethods","processStoredPaymentMethod","PaymentMethods","mapCreatedComponentType","has","checkPaymentMethodsResponse","allowPaymentMethods","removePaymentMethods","processPaymentMethods","processStoredPaymentMethods","createComponent","registry","Element","getActionHandler","actionTypes","threeDS2","actionSubtype","get3DS2FlowProps","voucher","qrCode","await","bankTransfer","NonPersistentStorage","storage","getItem","keyName","setItem","keyValue","removeItem","clear","Storage","set","keyByIndex","storageType","localStorage","collectId","analyticsContext","analyticsPath","telemetryEvent","channel","platform","buildType","referrer","screen","checkoutAttemptIdSession","fifteenMinAgoTimestamp","timestamp","confirmSessionDurationIsMaxFifteenMinutes","conversion","EventsQueue","caActions","logs","actionObj","run","runQueue","getQueue","mapErrorCodesForAnalytics","errCode","analyticsPreProcessor","analyticsModule","originalConfigData","expressPage","hasExpressPage","cardProps","dataString","srPanelEnabled","srPanelMoveFocus","riskEnabled","billingAddressModeValue","showKCPType","hasBrandsConfiguration","hasData","hasDisclaimerMessage","hasInstallmentOptions","hasPlaceholders","hasStylesConfigured","hasOnAllValid","hasOnBinValue","hasOnBlur","hasOnBrand","hasOnConfigSuccess","hasOnFieldValid","hasOnFocus","hasOnLoad","hasOnBinLookup","hasOnEnterKeyPressed","getCardConfigData","createAnalyticsEvent","metadata","capturedCheckoutAttemptId","sendEventsTimerId","Analytics","analyticsData","CollectId","eventsQueue","sendAnalyticsEvents","anlModule","initialEvent","processAnalyticsData","getCheckoutAttemptId","getEventsQueue","subType","createAnalyticsObject","arrayName","ANALYTICS_INFO_TIMER_INTERVAL","addAnalyticsEvent","getEnabled","makePayment","sessionData","setupSession","sanitizeSession","Session","updateSessionData","latestData","storeSession","getStoredSession","storedSession","removeStoredSession","rawSession","Resources","getImageUrl","resourceContext","cdnContext","returnImage","subFolder","SRMessages","messagesRef","messages","msgs","SRPanel","_enabled","_moveFocus","firstPanel","showPanel","_this_props_moveFocus","srPanelContainer","panelMessages","panelParent","preExistingSRPanel","defaultComponents","Redirect","threeDS2DeviceFingerprint","componentsMap","createComponentsMap","supportedTxVariants","Class","exposeLibraryMetadata","API_ENVIRONMENTS","live","fallback","CDN_ENVIRONMENTS","ANALYTICS_ENVIRONMENTS","getUrlFromMap","environmentMap","environmentUrl","Core","setBundleType","initializeCore","validateCoreConfiguration","createCoreModules","sessionResponse","setOptions","createPaymentMethodsList","fetchLocaleTranslations","cdnTranslationsUrl","adyenWebVersion","getTranslations","_this_options_onError","_this_options","_this_options_onError1","_this_options1","customTranslationLocaleKey","formatCustomTranslations","_this_options_onPaymentCompleted","_this_options_onPaymentFailed","nextAction","getComponentForAction","handleCreateError","globalOptions","processGlobalOptions","cdnImagesUrl","paymentMethodName","freeze","RiskModule","srConfig","_this_options_clientKey","propsSetByMerchant","possibleFields","assertConfigurationPropertiesAreValid","apiUrl","analyticsUrl","environmentsUrls","cdn","images","clientKeyType","_this_options__environmentUrls","_this_options_clientKey1","AdyenCheckout"],"mappings":"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","x_google_ignoreList":[0,1,76]}